{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/acp/acp.component.html","webpack:///./src/app/acp/acp.component.scss","webpack:///./src/app/acp/acp.component.ts","webpack:///./src/app/acp/log-management/logACP.component.html","webpack:///./src/app/acp/log-management/logACP.component.scss","webpack:///./src/app/acp/log-management/logACP.component.ts","webpack:///./src/app/acp/policy-management/policy-acp.component.html","webpack:///./src/app/acp/policy-management/policy-acp.component.scss","webpack:///./src/app/acp/policy-management/policy-acp.component.ts","webpack:///./src/app/acp/user-management/user-acp.component.html","webpack:///./src/app/acp/user-management/user-acp.component.scss","webpack:///./src/app/acp/user-management/user-acp.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/custom-validation.ts","webpack:///./src/app/models/backend/dataprivacyelementbackend.ts","webpack:///./src/app/models/backend/platform.ts","webpack:///./src/app/models/database/dashboard.ts","webpack:///./src/app/models/database/project.ts","webpack:///./src/app/models/database/sheet.ts","webpack:///./src/app/models/frontend/barchartwidget.ts","webpack:///./src/app/models/frontend/bubbleChartDeviceEntity.ts","webpack:///./src/app/models/frontend/bubblechartwidget.ts","webpack:///./src/app/models/frontend/chartDeviceEntity.ts","webpack:///./src/app/models/frontend/chartwidget.ts","webpack:///./src/app/models/frontend/dashboard.ts","webpack:///./src/app/models/frontend/deviceEntity.ts","webpack:///./src/app/models/frontend/devicecontrolwidget.ts","webpack:///./src/app/models/frontend/doughnutchartwidget.ts","webpack:///./src/app/models/frontend/fieldvalue.ts","webpack:///./src/app/models/frontend/historyanomalywidget.ts","webpack:///./src/app/models/frontend/linechartwidget.ts","webpack:///./src/app/models/frontend/polarareachartwidget.ts","webpack:///./src/app/models/frontend/project.ts","webpack:///./src/app/models/frontend/realtimeanomalywidget.ts","webpack:///./src/app/models/frontend/rule_module/condition.ts","webpack:///./src/app/models/frontend/rule_module/datanotification.ts","webpack:///./src/app/models/frontend/rule_module/rule.ts","webpack:///./src/app/models/frontend/rule_module/ruleaction.ts","webpack:///./src/app/models/frontend/rule_module/trigger.ts","webpack:///./src/app/models/frontend/rule_module/triggergroup.ts","webpack:///./src/app/models/frontend/rule_module/weekdays.ts","webpack:///./src/app/models/frontend/rulemanagementwidget.ts","webpack:///./src/app/models/frontend/rulenotificationwidget.ts","webpack:///./src/app/models/frontend/rulesharingwidget.ts","webpack:///./src/app/models/frontend/sheet.ts","webpack:///./src/app/models/frontend/sliderwidget.ts","webpack:///./src/app/models/frontend/statewidget.ts","webpack:///./src/app/models/frontend/togglewidget.ts","webpack:///./src/app/models/frontend/user.ts","webpack:///./src/app/models/frontend/valueviewwidget.ts","webpack:///./src/app/models/frontend/widget.ts","webpack:///./src/app/models/shared.module.ts","webpack:///./src/app/services/acp.service.ts","webpack:///./src/app/services/anomalymanager.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/app/services/database.service.ts","webpack:///./src/app/services/dataprivacymanager.service.ts","webpack:///./src/app/services/devicemanager.service.ts","webpack:///./src/app/services/project.service.ts","webpack:///./src/app/services/rulemanager.service.ts","webpack:///./src/app/services/session.service.ts","webpack:///./src/app/services/usermanager.service.ts","webpack:///./src/app/services/visualmanager.service.ts","webpack:///./src/app/skeleton/dashboard/dashboard.component.css","webpack:///./src/app/skeleton/dashboard/dashboard.component.html","webpack:///./src/app/skeleton/dashboard/dashboard.component.ts","webpack:///./src/app/skeleton/dashboard/rules/actions-schema.ts","webpack:///./src/app/skeleton/dashboard/rules/creation/action-combine/action-combine.component.css","webpack:///./src/app/skeleton/dashboard/rules/creation/action-combine/action-combine.component.html","webpack:///./src/app/skeleton/dashboard/rules/creation/action-combine/action-combine.component.ts","webpack:///./src/app/skeleton/dashboard/rules/creation/action/action.component.css","webpack:///./src/app/skeleton/dashboard/rules/creation/action/action.component.html","webpack:///./src/app/skeleton/dashboard/rules/creation/action/action.component.ts","webpack:///./src/app/skeleton/dashboard/rules/creation/rule-creation.component.css","webpack:///./src/app/skeleton/dashboard/rules/creation/rule-creation.component.html","webpack:///./src/app/skeleton/dashboard/rules/creation/rule-creation.component.ts","webpack:///./src/app/skeleton/dashboard/rules/creation/trigger-combine/trigger-combine.component.css","webpack:///./src/app/skeleton/dashboard/rules/creation/trigger-combine/trigger-combine.component.html","webpack:///./src/app/skeleton/dashboard/rules/creation/trigger-combine/trigger-combine.component.ts","webpack:///./src/app/skeleton/dashboard/rules/creation/trigger/trigger.component.css","webpack:///./src/app/skeleton/dashboard/rules/creation/trigger/trigger.component.html","webpack:///./src/app/skeleton/dashboard/rules/creation/trigger/trigger.component.ts","webpack:///./src/app/skeleton/dashboard/rules/management/management.component.css","webpack:///./src/app/skeleton/dashboard/rules/management/management.component.html","webpack:///./src/app/skeleton/dashboard/rules/management/management.component.ts","webpack:///./src/app/skeleton/dashboard/rules/notification/notification.component.css","webpack:///./src/app/skeleton/dashboard/rules/notification/notification.component.html","webpack:///./src/app/skeleton/dashboard/rules/notification/notification.component.ts","webpack:///./src/app/skeleton/dashboard/rules/notify-message/notify-message.component.css","webpack:///./src/app/skeleton/dashboard/rules/notify-message/notify-message.component.html","webpack:///./src/app/skeleton/dashboard/rules/notify-message/notify-message.component.ts","webpack:///./src/app/skeleton/dashboard/rules/pipes/select-item.pipe.ts","webpack:///./src/app/skeleton/dashboard/rules/pipes/selected-trigger.pipe.ts","webpack:///./src/app/skeleton/dashboard/rules/service/platform-device-management.service.ts","webpack:///./src/app/skeleton/dashboard/rules/service/rule-creation.service.ts","webpack:///./src/app/skeleton/dashboard/rules/service/rule-management.service.ts","webpack:///./src/app/skeleton/dashboard/rules/service/rule-notification.service.ts","webpack:///./src/app/skeleton/dashboard/rules/service/search-device.service.ts","webpack:///./src/app/skeleton/dashboard/rules/sharing/sharing.component.css","webpack:///./src/app/skeleton/dashboard/rules/sharing/sharing.component.html","webpack:///./src/app/skeleton/dashboard/rules/sharing/sharing.component.ts","webpack:///./src/app/skeleton/dashboard/rules/triggers-schema.ts","webpack:///./src/app/skeleton/dashboard/sheet-content/sheet-content.component.css","webpack:///./src/app/skeleton/dashboard/sheet-content/sheet-content.component.html","webpack:///./src/app/skeleton/dashboard/sheet-content/sheet-content.component.ts","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/anomaly/history-anomaly/history-anomaly.component.css","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/anomaly/history-anomaly/history-anomaly.component.html","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/anomaly/history-anomaly/history-anomaly.component.ts","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/anomaly/realtime-anomaly/realtime-anomaly.component.css","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/anomaly/realtime-anomaly/realtime-anomaly.component.html","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/anomaly/realtime-anomaly/realtime-anomaly.component.ts","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/devices/control/slider/slider-control-device.component.css","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/devices/control/slider/slider-control-device.component.html","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/devices/control/slider/slider-control-device.component.ts","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/devices/control/state/state-control-device.component.css","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/devices/control/state/state-control-device.component.html","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/devices/control/state/state-control-device.component.ts","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/devices/control/toggle/toggle-control-device.component.css","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/devices/control/toggle/toggle-control-device.component.html","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/devices/control/toggle/toggle-control-device.component.ts","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/devices/management/add-device/add-device.component.css","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/devices/management/add-device/add-device.component.html","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/devices/management/add-device/add-device.component.ts","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/devices/management/delete-device/delete-device.component.css","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/devices/management/delete-device/delete-device.component.html","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/devices/management/delete-device/delete-device.component.ts","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/visualization/chart-visualization/BarChart/bar-chart-visualization.component.css","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/visualization/chart-visualization/BarChart/bar-chart-visualization.component.html","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/visualization/chart-visualization/BarChart/bar-chart-visualization.component.ts","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/visualization/chart-visualization/BubbleChart/bubble-chart-visualization.component.css","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/visualization/chart-visualization/BubbleChart/bubble-chart-visualization.component.html","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/visualization/chart-visualization/BubbleChart/bubble-chart-visualization.component.ts","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/visualization/chart-visualization/LineChart/line-chart-visualization.component.css","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/visualization/chart-visualization/LineChart/line-chart-visualization.component.html","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/visualization/chart-visualization/LineChart/line-chart-visualization.component.ts","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/visualization/chart-visualization/doughnut-chart/doughnut-chart.component.css","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/visualization/chart-visualization/doughnut-chart/doughnut-chart.component.html","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/visualization/chart-visualization/doughnut-chart/doughnut-chart.component.ts","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/visualization/chart-visualization/polar-area-chart-visualization/polar-area-chart-visualization.component.css","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/visualization/chart-visualization/polar-area-chart-visualization/polar-area-chart-visualization.component.html","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/visualization/chart-visualization/polar-area-chart-visualization/polar-area-chart-visualization.component.ts","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/visualization/value-visualization/realtime/realtime-value-visualization.component.css","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/visualization/value-visualization/realtime/realtime-value-visualization.component.html","webpack:///./src/app/skeleton/dashboard/sheet-content/widgets/visualization/value-visualization/realtime/realtime-value-visualization.component.ts","webpack:///./src/app/skeleton/dashboard/sidebar-content/sidebar-content.component.css","webpack:///./src/app/skeleton/dashboard/sidebar-content/sidebar-content.component.html","webpack:///./src/app/skeleton/dashboard/sidebar-content/sidebar-content.component.ts","webpack:///./src/app/skeleton/main-menu.component.css","webpack:///./src/app/skeleton/main-menu.component.html","webpack:///./src/app/skeleton/main-menu.component.ts","webpack:///./src/app/skeleton/platform-settings/platform-settings.component.css","webpack:///./src/app/skeleton/platform-settings/platform-settings.component.html","webpack:///./src/app/skeleton/platform-settings/platform-settings.component.ts","webpack:///./src/app/skeleton/project-sharing/project-sharing.component.css","webpack:///./src/app/skeleton/project-sharing/project-sharing.component.html","webpack:///./src/app/skeleton/project-sharing/project-sharing.component.ts","webpack:///./src/app/skeleton/skeleton-routing.module.ts","webpack:///./src/app/skeleton/skeleton.module.ts","webpack:///./src/app/skeleton/unauthorized/unauthorized.component.css","webpack:///./src/app/skeleton/unauthorized/unauthorized.component.html","webpack:///./src/app/skeleton/unauthorized/unauthorized.component.ts","webpack:///./src/app/skeleton/user-profile/user-privacy-settings/user-privacy-settings.component.css","webpack:///./src/app/skeleton/user-profile/user-privacy-settings/user-privacy-settings.component.html","webpack:///./src/app/skeleton/user-profile/user-privacy-settings/user-privacy-settings.component.ts","webpack:///./src/app/skeleton/user-profile/user-settings/user-settings.component.css","webpack:///./src/app/skeleton/user-profile/user-settings/user-settings.component.html","webpack:///./src/app/skeleton/user-profile/user-settings/user-settings.component.ts","webpack:///./src/app/user-management/confirm/confirm.component.html","webpack:///./src/app/user-management/confirm/confirm.component.scss","webpack:///./src/app/user-management/confirm/confirm.component.ts","webpack:///./src/app/user-management/create-user/create-user.component.html","webpack:///./src/app/user-management/create-user/create-user.component.scss","webpack:///./src/app/user-management/create-user/create-user.component.ts","webpack:///./src/app/user-management/forgot-password/forgot-password.component.html","webpack:///./src/app/user-management/forgot-password/forgot-password.component.scss","webpack:///./src/app/user-management/forgot-password/forgot-password.component.ts","webpack:///./src/app/user-management/home/home.component.html","webpack:///./src/app/user-management/home/home.component.scss","webpack:///./src/app/user-management/home/home.component.ts","webpack:///./src/app/user-management/imprint/imprint.component.html","webpack:///./src/app/user-management/imprint/imprint.component.scss","webpack:///./src/app/user-management/imprint/imprint.component.ts","webpack:///./src/app/user-management/login/login.component.html","webpack:///./src/app/user-management/login/login.component.scss","webpack:///./src/app/user-management/login/login.component.ts","webpack:///./src/app/user-management/privacyPolicy/privacyPolicy.component.html","webpack:///./src/app/user-management/privacyPolicy/privacyPolicy.component.scss","webpack:///./src/app/user-management/privacyPolicy/privacyPolicy.component.ts","webpack:///./src/app/user-management/reset-password/reset-password.component.html","webpack:///./src/app/user-management/reset-password/reset-password.component.scss","webpack:///./src/app/user-management/reset-password/reset-password.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappingsgBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6E;;;;;;;;;;;ACpRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,sFAAsF,cAAc,iBAAiB,yBAAyB,6EAA6E,2SAA2S,eAAe,0I;;;;;;;;;;;ACArhB,qCAAqC,gBAAgB,iBAAiB,+EAA+E,2BAA2B,EAAE,eAAe,0BAA0B,uBAAuB,gBAAgB,iBAAiB,WAAW,cAAc,YAAY,aAAa,qBAAqB,wBAAwB,qBAAqB,sBAAsB,yCAAyC,kBAAkB,wBAAwB,2CAA2C,iBAAiB,EAAE,mBAAmB,4BAA4B,EAAE,0BAA0B,gBAAgB,2BAA2B,iBAAiB,mCAAmC,uBAAuB,EAAE,2BAA2B,gBAAgB,uBAAuB,iBAAiB,0BAA0B,EAAE,uBAAuB,4BAA4B,EAAE,uBAAuB,4BAA4B,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/0B;AAGlD;AAED;AACM;AACV;AAgBpE;IAKE,sBAAoB,MAAc,EAAU,wBAAkD,EAAU,gBAAkC,EAAU,KAAqB;QAArJ,WAAM,GAAN,MAAM,CAAQ;QAAU,6BAAwB,GAAxB,wBAAwB,CAA0B;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAFjK,uBAAkB,GAAG,EAAE,CAAC;IAGhC,CAAC;IAED,+BAAQ,GAAR;QACD,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,YAAY,EAAE,CAAC;IACnB,CAAC;IAED;;;;;OAKG;IACK,6BAAM,GAAd;QACD,OAAO;YACL,KAAK,EAAE,MAAM;YACb,OAAO,EAAE,iBAAiB;YAC1B,MAAM,EAAE,YAAY;YACpB,OAAO,EAAE;gBACJ,IAAI,CAAC,YAAY,EAAE,EAAE,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE;aACxD;YACJ,WAAW,EAAE,oFAAgB;SAC9B;IACA,CAAC;IAED;;;;OAIG;IACK,mCAAY,GAApB;QACE,OAAO;YACR,KAAK,EAAE,UAAU;YACjB,OAAO,EAAE,UAAU;YACnB,MAAM,EAAE,iBAAiB;SAC1B;IACA,CAAC;IAED;;;;;OAKG;IACK,kCAAW,GAAnB;QACE,OAAO;YACR,KAAK,EAAE,SAAS;YAChB,OAAO,EAAE,SAAS;YAClB,MAAM,EAAE,YAAY;YACpB,SAAS,EAAE,KAAK;SACjB;IACA,CAAC;IAED;;;;OAIG;IACK,8BAAO,GAAf;QACE,OAAO;YACR,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,UAAU;YACnB,MAAM,EAAE,YAAY;SACrB;IACA,CAAC;IAED;;;;;OAKG;IACK,+BAAQ,GAAhB;QACD,OAAO;YACL,KAAK,EAAE,QAAQ;YACf,OAAO,EAAE,mBAAmB;YAC5B,MAAM,EAAE,mBAAmB;YAC3B,UAAU,EAAE,KAAK;YACjB,OAAO,EAAE;gBACJ,IAAI,CAAC,cAAc,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,YAAY,EAAE,EAAE,IAAI,CAAC,YAAY,EAAE,EAAE,IAAI,CAAC,cAAc,EAAE;aACzG;YACJ,WAAW,EAAE,0FAAkB;SAChC;IACA,CAAC;IAED;;;;OAIG;IACK,qCAAc,GAAtB;QACE,OAAO;YACR,KAAK,EAAE,UAAU;YACjB,OAAO,EAAE,UAAU;YACnB,MAAM,EAAE,iBAAiB;SAC1B;IACA,CAAC;IAED;;;;OAIG;IACK,gCAAS,GAAjB;QACE,OAAO;YACR,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,aAAa;YACtB,MAAM,EAAE,YAAY;SACrB;IACA,CAAC;IAED;;;;OAIG;IACK,mCAAY,GAApB;QACE,OAAO;YACR,KAAK,EAAE,QAAQ;YACf,OAAO,EAAE,QAAQ;YACjB,MAAM,EAAE,iBAAiB;SAC1B;IACA,CAAC;IAED;;;;OAIG;IACK,mCAAY,GAApB;QACE,OAAO;YACR,KAAK,EAAE,QAAQ;YACf,OAAO,EAAE,QAAQ;YACjB,MAAM,EAAE,mBAAmB;SAC5B;IACA,CAAC;IAED;;;;;OAKG;IACK,qCAAc,GAAtB;QACE,OAAO;YACR,KAAK,EAAE,UAAU;YACjB,OAAO,EAAE,mBAAmB;YAC5B,MAAM,EAAE,eAAe;YACvB,UAAU,EAAE,IAAI;YAChB,SAAS,EAAE,KAAK;SACjB;IACA,CAAC;IAED;;;;;OAKG;IACK,4BAAK,GAAb;QACE,OAAO;YACL,KAAK,EAAE,MAAM;YACb,OAAO,EAAE,MAAM;YAClB,MAAM,EAAE,gBAAgB;YACrB,WAAW,EAAG,gFAAe;SAC9B;IACH,CAAC;IAED;;;OAGG;IACK,kCAAW,GAAnB;QACD,IAAI,UAAU,GAAG,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC7C,KAAK,IAAI,QAAQ,IAAI,UAAU,EAAE;YAC/B,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;gBACnC,IAAM,MAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;gBAC9B,IAAI,OAAM,CAAC,MAAI,CAAC,KAAK,QAAQ,EAAE;oBACvB,MAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBAC5B,IAAI,CAAC,kBAAkB,CAAC,MAAI,CAAC,GAAG,CAAC,GAAG,MAAI,CAAC;iBAC1C;aACC;SACF;QAED,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,EAAE,CAAC;QAC1B,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,kBAAkB,EAAE;YACpC,IAAI,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;YAE3C,kBAAkB;YAClB,IAAI,CAAC,OAAO,GAAG,CAAC,UAAS,GAAG;gBAC3B,OAAO;oBACR,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;oBACxB,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,GAAG,GAAG,GAAG,WAAW,CAAC,CAAC;gBACnD,CAAC;YACF,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEnB,oCAAoC;YACjC,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE;gBACtB,KAAkB,UAAU,EAAV,SAAI,CAAC,KAAK,EAAV,cAAU,EAAV,IAAU,EAAE;oBAAzB,IAAI,KAAK;oBACf,KAAK,CAAC,OAAO,GAAI,CAAC,UAAS,GAAG,EAAE,QAAQ;wBACzC,OAAO;4BACR,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,QAAQ,CAAC,CAAC;wBACtD,CAAC;oBACA,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC/B;aACC;YAEJ,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACjC;IACA,CAAC;IAEO,mCAAY,GAApB;QACD,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IACpB,CAAC;IAED;;;;OAIG;IACK,kCAAW,GAAnB,UAAoB,GAAU;QAC/B,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAE7F,IAAI,QAAQ,IAAI,IAAI,EAAE;YACpB,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,QAAQ,CAAC;YACrC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;SAClC;IACA,CAAC;IAED;;;;OAIG;IACK,kCAAW,GAAnB,UAAoB,GAAU;QAC5B,OAAO,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;IACtC,CAAC;IAED;;;;OAIG;IACK,oCAAa,GAArB,UAAsB,GAAU;QACjC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAEjC,IAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC;QAClD,IAAI,SAAS,IAAI,IAAI,EAAE;YACrB,IAAM,OAAO,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;YACjF,IAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;SACxD;IACA,CAAC;IAhQuB;QAAvB,+DAAS,CAAC,WAAW,CAAC;;mDAAW;IACU;QAA3C,+DAAS,CAAC,KAAK,EAAE,EAAC,IAAI,EAAE,8DAAgB,EAAC,CAAC;kCAAM,8DAAgB;6CAAC;IAFvD,YAAY;QAdxB,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;;;YAGnB,aAAa,EAAE,+DAAiB,CAAC,IAAI;SACtC,CAAC;QAEF;;;;;UAKE;;yCAO4B,sDAAM,EAAoC,sEAAwB,EAA4B,8DAAgB,EAAiB,8DAAc;OAL9J,YAAY,CAmQxB;IAAD,mBAAC;CAAA;AAnQwB;;;;;;;;;;;;ACvBzB,6XAA6X,YAAY,+JAA+J,sCAAsC,+PAA+P,yTAAyT,gBAAgB,uF;;;;;;;;;;;ACAtpC,6BAA6B,iBAAiB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;ACAqB;AAGd;AAWvD;IAWE,yBAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAP1C,SAAI,GAAS,SAAS,CAAC;QACvB,SAAI,GAAS,SAAS,CAAC;QACvB,SAAI,GAAW,EAAE,CAAC;QAER,SAAI,GAAmB,EAAE,CAAC;QACpC,SAAI,GAAW,EAAE,CAAC;IAIlB,CAAC;IAED,kCAAQ,GAAR;QAEE,IAAI,CAAC,IAAI,GAAG;YACV,EAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,eAAe,EAAC;YACxC,EAAC,KAAK,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAC;YACvC,EAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAC;YACnC,EAAC,KAAK,EAAE,UAAU,EAAE,MAAM,EAAE,iBAAiB,EAAC;YAC9C,EAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAC;YACnC,EAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,iBAAiB,EAAC;YAC5C,EAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAC;SACpC,CAAC;QAEF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IAED;;;;OAIG;IACH,kCAAQ,GAAR,UAAS,EAAiB;QACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,EAAE,CAAC,KAAK,KAAK,SAAS;YACxB,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS;YACvB,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAEtB,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YAC/F,IAAI,CAAC,uBAAuB,CAAC,EAAE,CAAC,CAAC;SAClC;aAAK,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACnG,IAAI,CAAC,+BAA+B,CAAC,EAAE,CAAC,CAAC;SAC1C;;YACC,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC;IAC9B,CAAC;IAED;;;;OAIG;IACH,0CAAgB,GAAhB,UAAiB,EAAiB;QAAlC,iBAcC;QAbC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,gBAAM;YACzD,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC;YACnB,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gBACb,QAAQ,EAAE,SAAS;gBACnB,OAAO,EAAE,0BAA0B;aACpC,CAAC,CAAC;YACH,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,EAAE,aAAG;YACJ,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gBACb,QAAQ,EAAE,OAAO;gBACjB,OAAO,EAAE,QAAQ;aAClB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,iDAAuB,GAAvB,UAAwB,EAAiB;QAAzC,iBAcC;QAbC,IAAI,CAAC,UAAU,CAAC,sBAAsB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,gBAAM;YAChH,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC;YACnB,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gBACb,QAAQ,EAAE,SAAS;gBACnB,OAAO,EAAE,0BAA0B;aACpC,CAAC,CAAC;YACH,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,EAAE,aAAG;YACJ,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gBACb,QAAQ,EAAE,OAAO;gBACjB,OAAO,EAAE,QAAQ;aAClB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,yDAA+B,GAA/B,UAAgC,EAAiB;QAAjD,iBAeC;QAdC,IAAI,CAAC,UAAU,CAAC,8BAA8B,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,gBAAM;YACnI,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC;YACnB,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gBACb,QAAQ,EAAE,SAAS;gBACnB,OAAO,EAAE,0BAA0B;aACpC,CAAC,CAAC;YACH,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,EAAE,aAAG;YACJ,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gBACb,QAAQ,EAAE,OAAO;gBACjB,OAAO,EAAE,QAAQ;gBACjB,MAAM,EAAE,0BAA0B;aACnC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAhHU,eAAe;QAR3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;YAGtB,aAAa,EAAE,+DAAiB,CAAC,IAAI;YACrC,SAAS,EAAE,CAAC,gEAAU,CAAC;SACxB,CAAC;yCAagC,gEAAU;OAX/B,eAAe,CAkH3B;IAAD,sBAAC;CAAA;AAlH2B;;;;;;;;;;;;ACd5B,oQAAoQ,4HAA4H,sBAAsB,QAAQ,sNAAsN,mBAAmB,yBAAyB,uDAAuD,iCAAiC,iFAAiF,mBAAmB,+CAA+C,6MAA6M,sBAAsB,UAAU,uJAAuJ,mBAAmB,gDAAgD,mCAAmC,mGAAmG,yBAAyB,2BAA2B,0FAA0F,2BAA2B,+IAA+I,mBAAmB,oLAAoL,mBAAmB,8KAA8K,mLAAmL,cAAc,gCAAgC,4BAA4B,+VAA+V,8CAA8C,0DAA0D,+CAA+C,uIAAuI,mBAAmB,8KAA8K,mBAAmB,wKAAwK,yKAAyK,cAAc,gCAAgC,4BAA4B,kcAAkc,oYAAoY,aAAa,cAAc,kBAAkB,yFAAyF,mBAAmB,cAAc,gCAAgC,4BAA4B,4kBAA4kB,6CAA6C,eAAe,2OAA2O,eAAe,y1BAAy1B,4/BAA4/B,mBAAmB,sHAAsH,mBAAmB,8MAA8M,mBAAmB,+MAA+M,mBAAmB,ovBAAovB,mBAAmB,oIAAoI,mBAAmB,wBAAwB,owBAAowB,+YAA+Y,aAAa,cAAc,kBAAkB,yFAAyF,mBAAmB,cAAc,gCAAgC,4BAA4B,spBAAspB,6CAA6C,eAAe,2OAA2O,eAAe,y1BAAy1B,+L;;;;;;;;;;;ACAjjY,4BAA4B,iBAAiB,sBAAsB,EAAE,kBAAkB,qBAAqB,EAAE,iBAAiB,iBAAiB,sBAAsB,EAAE,wBAAwB,0BAA0B,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjG;AACtD;AAGI;AAGM;AAEU;AACnC;AAUtD;IAsBE,4BAAoB,mBAAwC,EAAU,KAAqB,EAAU,EAAe,EAAU,IAAgB;QAA1H,wBAAmB,GAAnB,mBAAmB,CAAqB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,OAAE,GAAF,EAAE,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAY;QAfpI,gBAAW,GAAmB,EAAE,CAAC;IAgB3C,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAkCC;QAjCF,IAAI,CAAC,QAAQ,GAAG,CAAC,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;QAC9E,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,uBAAuB,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QAE1B,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtB,2EAA2E;QAC3E,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAC3B,UAAC,SAAS;YACL,IAAI,GAAG,GAAG,KAAI,CAAC,cAAc,EAAE,CAAC;YAChC,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;gBAC7B,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;gBACjB,KAAuB,UAAa,EAAb,UAAI,CAAC,QAAQ,EAAb,cAAa,EAAb,IAAa;oBAA/B,IAAI,UAAU;oBAAmB,KAAI,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;iBAAA;gBAC5F,IAAI,KAAI,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE;oBACrB,IAAI,QAAQ,GAAG,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;oBACjF,IAAI,KAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE;wBACvB,KAAI,CAAC,QAAQ,CAAC,OAAd,KAAI,EAAc,KAAI,CAAC,SAAS,EAAE;wBACrC,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;qBAClB;oBACJ,KAAI,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;iBACzC;qBAAM;oBACL,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC;wBACvB,QAAQ,EAAE,OAAO;wBACjB,OAAO,EAAE,OAAO;wBAChB,MAAM,EAAE,kBAAkB,GAAG,GAAG,GAAG,mBAAmB;qBACpD,CAAC,CAAC;iBACJ;aACF;QACG,CAAC,CACL,CAAC;IACD,CAAC;IAED,sEAAsE;IACtE;;;;OAIG;IACK,iCAAI,GAAZ,UAAa,GAAe;QAAf,8BAAe;QAAE,cAAO;aAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;YAAP,6BAAO;;QACnC,GAAG,GAAG,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,GAAG,KAAK,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;YAAE,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,cAAc,GAAG,GAAG,CAAC,CAAC;IAClF,CAAC;IAED;;OAEG;IACO,mCAAM,GAAhB;QACE,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IAED;;OAEG;IACO,2CAAc,GAAxB;QACD,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC;QACvC,IAAI,GAAG,IAAI,IAAI;YAAE,GAAG,GAAG,EAAE,CAAC;QACvB,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,8BAA8B;QAE1D,OAAO,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IAED;;;OAGG;IACO,gDAAmB,GAA7B;QAAA,iBAqBC;QApBF,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAE5B,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,gBAAM;YACtD,MAAM,CAAC,OAAO,CAAC,UAAU,GAAG;gBAC1B,IAAI,IAAI,GAAG,IAAI,mGAAyB,CAAC,GAAG,CAAC,CAAC;gBAC3C,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;gBAC5C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;YAChC,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC;YAEd,KAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,gBAAM;gBACnD,MAAM,CAAC,OAAO,CAAC,UAAU,GAAG;oBAE5B,IAAI,IAAI,GAAG,IAAI,mGAAyB,CAAC,GAAG,CAAC,CAAC;oBAC9C,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;oBACtC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAErD,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACF,CAAC;IAED,4EAA4E;IACpE,+CAAkB,GAA1B;QACE,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAED;;;;;OAKG;IACK,8CAAiB,GAAzB,UAA0B,SAAgB;QAC3C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEpB,IAAI,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;QAC7C,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;YAChC,GAAG,EAAE,IAAI,CAAC,EAAE;YACZ,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,YAAY,EAAE,IAAI,CAAC,YAAY;YAC5B,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,kBAAkB,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM;YAC5C,iBAAiB,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK;YAC1C,kBAAkB,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM;YAC5C,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,UAAU,EAAE,IAAI,CAAC,UAAU;SAC5B,CAAC,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACK,8CAAiB,GAAzB,UAA0B,SAAgB;QAA1C,iBASC;QARF,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,gBAAM;YACrD,KAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;gBACnC,QAAQ,EAAE,EAAE;gBACT,UAAU,EAAE,EAAE;gBACX,aAAa,EAAE,KAAI,CAAC,4BAA4B,CAAC,MAAM,CAAC;aACzD,CAAC,CAAC;QACR,CAAC,CAAC,CAAC;IACF,CAAC;IAED;;;;;OAKG;IACK,8CAAiB,GAAzB,UAA0B,SAAgB;QAA1C,iBAuBC;QAtBC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;YAClC,OAAO,EAAE,oDAAoD;YAC1D,MAAM,EAAE;gBACZ,KAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,gBAAM;oBACxD,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC;wBACd,QAAQ,EAAE,SAAS;wBACnB,OAAO,EAAE,8BAA8B;wBACvC,MAAM,EAAE,KAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,KAAK;qBAChD,CAAC,CAAC;oBACT,IAAI,KAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE;wBAC7C,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,CAAC;wBAC5C,OAAO,KAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;qBAC1C;oBACD,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACxB,CAAC,EAAE,aAAG;oBACJ,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC;wBACd,QAAQ,EAAE,OAAO;wBACjB,OAAO,EAAE,QAAQ;qBAClB,CAAC,CAAC;gBACX,CAAC,CAAC,CAAC;YACC,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,uEAAuE;IACvE;;OAEG;IACK,wCAAW,GAAnB;QACE,IAAI,YAAY,GAAG,EAAE,CAAC;QACzB,YAAY,CAAC,IAAI,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QACnE,YAAY,CAAC,WAAW,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QAC1E,YAAY,CAAC,cAAc,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QAC7E,YAAY,CAAC,OAAO,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QACtE,YAAY,CAAC,oBAAoB,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QACnF,YAAY,CAAC,mBAAmB,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QAClF,YAAY,CAAC,oBAAoB,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QACnF,YAAY,CAAC,WAAW,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QAC1E,YAAY,CAAC,OAAO,CAAC,GAAG,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QACxE,YAAY,CAAC,iBAAiB,CAAC,GAAG,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QAClF,YAAY,CAAC,YAAY,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QAC3E,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;IACjD,CAAC;IAEO,0CAAa,GAArB;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED;;;;OAIG;IACK,kDAAqB,GAA7B,UAA8B,IAAI;QAAlC,iBA+BC;QA9BC,IAAM,cAAc,GAAG;YACxB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,YAAY,EAAE;gBACf,MAAM,EAAE,IAAI,CAAC,kBAAkB;gBAC/B,KAAK,EAAE,IAAI,CAAC,iBAAiB;gBAC7B,MAAM,EAAE,IAAI,CAAC,kBAAkB;aAC7B;YACD,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,KAAK,EAAE,IAAI,CAAC,KAAK;YACd,SAAS,EAAE,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS;SACvD,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC5D,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC;gBAChB,QAAQ,EAAE,SAAS;gBACnB,OAAO,EAAE,4BAA4B;gBACrC,MAAM,EAAE,cAAc,CAAC,KAAK;aAC7B,CAAC,CAAC;YACT,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACrB,CAAC,EAAE,aAAG;YACJ,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC;gBACjB,QAAQ,EAAE,OAAO;gBACjB,OAAO,EAAE,QAAQ;aAClB,CAAC,CAAC;QACL,CAAC,CACL,CAAC;IACD,CAAC;IAED,0EAA0E;IAC1E;;OAEG;IACK,2CAAc,GAAtB;QAAA,iBA+CC;QA9CC,IAAI,CAAC,gBAAgB,GAAG;YACzB,EAAC,KAAK,EAAC,UAAU,EAAE,KAAK,EAAC,IAAI,EAAC;YAC3B,EAAC,KAAK,EAAC,WAAW,EAAE,KAAK,EAAC,IAAI,EAAC;SACnC,CAAC;QAEC,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,YAAY,CAAC,aAAa,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QAC/E,YAAY,CAAC,uBAAuB,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QACtF,YAAY,CAAC,UAAU,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QACzE,YAAY,CAAC,YAAY,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrH,YAAY,CAAC,eAAe,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QAC3E,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAExD,IAAI,CAAC,gBAAgB,GAAG;YAClB,EAAC,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,SAAS,EAAC;SAC/C,CAAC;QAEL,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,gBAAM;YAC/C,MAAM,CAAC,OAAO,CAAC,UAAU,aAAa;gBACjC,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC;gBAClE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE,aAAa,CAAC,EAAE,EAAC,CAAC,CAAC;YAChF,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC;QAChB,CAAC,CAAC,CAAC;QAEN,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,qBAAqB,CAAC,YAAY,CAAC,SAAS,CAAC,aAAG;YAC9E,IAAI,GAAG,KAAK,SAAS;gBAAE,OAAO;YAC9B,IAAI,GAAG,KAAK,SAAS,EAAE;gBAClB,KAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,SAAS,CAAC,oBAAU;oBACpD,KAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;wBACzC,QAAQ,EAAE,EAAE;wBACZ,UAAU,EAAE,EAAE;wBACd,aAAa,EAAE,KAAI,CAAC,4BAA4B,CAAC,UAAU,CAAC;qBACpD,CAAC,CAAC;oBACH,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;gBAC7B,CAAC,CAAC,CAAC;aACD;iBAAM;gBACL,KAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;oBACnC,QAAQ,EAAE,KAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC,EAAE;oBAC9C,UAAU,EAAE,KAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC,IAAI;oBAClD,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC;iBACnE,CAAC,CAAC;gBACT,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;aACnB;YAEE,KAAI,CAAC,wBAAwB,EAAE,CAAC;QACrC,CAAC,CAAC,CAAC;IACF,CAAC;IAEO,6CAAgB,GAAxB,UAAyB,gBAAuB;QAC9C,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;IACtC,CAAC;IAEO,yCAAY,GAApB,UAAqB,KAAS;QAAT,iCAAS;QAC5B,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;IAC7F,CAAC;IAEO,qDAAwB,GAAhC,UAAiC,KAAY;QAAZ,oCAAY;QAC3C,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,qBAAqB,CAAC,UAAU,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;IAC7H,CAAC;IAED;;;;OAIG;IACK,wDAA2B,GAAnC,UAAoC,IAAI;QAAxC,iBA0BC;QAzBF,IAAI,aAAa,GAAG;YAClB,EAAE,EAAE,IAAI,CAAC,QAAQ,KAAK,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ;YACjD,OAAO,EAAE,IAAI,CAAC,aAAa;YAC3B,WAAW,EAAE,EAAE;YACf,IAAI,EAAE,IAAI,CAAC,UAAU;YACrB,YAAY,EAAE,IAAI,IAAI,EAAE;SACzB,CAAC;QACF,IAAI;YACC,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YAC7D,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,EAAE,EAAE,aAAa,CAAC,CAAC,SAAS,CAAC,gBAAM;gBAC7E,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC;oBACjB,QAAQ,EAAE,SAAS;oBACnB,OAAO,EAAE,CAAC,aAAa,CAAC,EAAE,KAAK,MAAM,CAAC,CAAC,CAAC,2BAA2B,CAAC,CAAC,CAAC,6BAA6B,CAAC;oBACpG,MAAM,EAAE,aAAa,CAAC,IAAI;iBAC3B,CAAC,CAAC;gBACN,KAAI,CAAC,cAAc,EAAE,CAAC;gBACzB,KAAI,CAAC,YAAY,EAAE,CAAC;YACnB,CAAC,EAAE,aAAG;YACN,CAAC,CAAC,CAAC;SACD;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;gBACpB,QAAQ,EAAE,OAAO;gBACjB,OAAO,EAAE,QAAQ;aAClB,CAAC,CAAC;SACJ;IACH,CAAC;IAED;;;;OAIG;IACK,6CAAgB,GAAxB,UAAyB,QAAe;QACzC,IAAI,CAAC,2BAA2B,CAAC;YAC/B,QAAQ,EAAE,EAAE;YACZ,UAAU,EAAE,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC,IAAI,GAAG,OAAO;YACjE,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC;SAC9E,CAAC,CAAC;IACF,CAAC;IAED;;;;OAIG;IACK,gDAAmB,GAA3B,UAA4B,QAAe;QAA3C,iBA0BC;QAzBC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;YAClC,OAAO,EAAE,oDAAoD;YAC1D,MAAM,EAAE;gBACZ,KAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,gBAAM;oBACtD,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC;wBACd,QAAQ,EAAE,SAAS;wBACnB,OAAO,EAAE,8BAA8B;wBACvC,MAAM,EAAE,QAAQ;qBACjB,CAAC,CAAC;oBACT,KAAK,IAAI,CAAC,IAAI,KAAI,CAAC,gBAAgB,EAAE;wBACtC,IAAI,OAAO,GAAG,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;wBACvC,IAAI,OAAO,CAAC,KAAK,KAAK,QAAQ,EAAE;4BAC9B,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;4BACnC,MAAM;yBACP;qBACC;oBACD,KAAI,CAAC,YAAY,EAAE,CAAC;gBACtB,CAAC,EAAE,aAAG;oBACJ,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC;wBACd,QAAQ,EAAE,OAAO;wBACjB,OAAO,EAAE,QAAQ;qBAClB,CAAC,CAAC;gBACX,CAAC,CAAC,CAAC;YACC,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACK,yDAA4B,GAApC,UAAqC,UAAU;QAChD,IAAI,MAAM,GAAG,GAAG,CAAC;QACjB,KAA2B,UAAU,EAAV,yBAAU,EAAV,wBAAU,EAAV,IAAU,EAAE;YAAlC,IAAI,cAAc;YACrB,MAAM,IAAI,GAAG,GAAG,cAAc,CAAC,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,GAAG,GAAG,CAAC;SACjF;QACD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC;QAC3C,MAAM,IAAI,GAAG,CAAC;QACd,OAAO,MAAM,CAAC;IACb,CAAC;IAGD,0EAA0E;IAC1E;;OAEG;IACK,2CAAc,GAAtB;QAAA,iBAoBC;QAnBF,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAE3B,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,YAAY,CAAC,uBAAuB,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QACtF,YAAY,CAAC,UAAU,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QACzE,YAAY,CAAC,YAAY,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrH,YAAY,CAAC,eAAe,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QAC9E,YAAY,CAAC,MAAM,CAAC,GAAG,IAAI,0DAAW,CAAC,SAAS,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QACzE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAExD,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,gBAAM;YAC/C,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;gBACzB,KAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;aACtD;YACD,MAAM,CAAC,OAAO,CAAC,UAAU,aAAa;gBACjC,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC;gBAClE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE,aAAa,CAAC,EAAE,EAAC,CAAC,CAAC;YAChF,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,6CAAgB,GAAxB;QACE,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAEO,qDAAwB,GAAhC,UAAiC,KAAY;QAAZ,oCAAY;QAC3C,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,qBAAqB,CAAC,UAAU,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;IAC7H,CAAC;IAED;;;;OAIG;IACK,wDAA2B,GAAnC,UAAoC,IAAI;QAAxC,iBAmBC;QAlBC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;YAClC,OAAO,EAAE,oDAAoD;YAC1D,MAAM,EAAE;gBACZ,KAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,gBAAM;oBACnF,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC;wBACd,QAAQ,EAAE,SAAS;wBACnB,OAAO,EAAE,YAAY;wBACrB,MAAM,EAAE,uCAAuC;qBAChD,CAAC,CAAC;oBACT,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACxB,CAAC,EAAE,aAAG;oBACJ,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC;wBACd,QAAQ,EAAE,OAAO;wBACjB,OAAO,EAAE,QAAQ;qBAClB,CAAC,CAAC;gBACX,CAAC,CAAC,CAAC;YACC,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,0EAA0E;IAC1E;;OAEG;IACK,2CAAc,GAAtB;QACD,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,YAAY,CAAC,KAAK,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QACjE,YAAY,CAAC,IAAI,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QACtE,YAAY,CAAC,WAAW,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QAC1E,YAAY,CAAC,cAAc,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QAC7E,YAAY,CAAC,OAAO,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QACtE,YAAY,CAAC,oBAAoB,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QACnF,YAAY,CAAC,mBAAmB,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QAClF,YAAY,CAAC,oBAAoB,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QACnF,YAAY,CAAC,WAAW,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QAC1E,YAAY,CAAC,OAAO,CAAC,GAAG,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QACxE,YAAY,CAAC,iBAAiB,CAAC,GAAG,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QAClF,YAAY,CAAC,YAAY,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QACxE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;IACvD,CAAC;IAEO,6CAAgB,GAAxB;IAEA,CAAC;IACD;;;;OAIG;IACK,gDAAmB,GAA3B,UAA4B,IAAI;QAAhC,iBAiCC;QAhCC,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC;QAE5B,IAAM,cAAc,GAAG;YACrB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,YAAY,EAAE;gBACf,MAAM,EAAE,IAAI,CAAC,kBAAkB;gBAC/B,KAAK,EAAE,IAAI,CAAC,iBAAiB;gBAC7B,MAAM,EAAE,IAAI,CAAC,kBAAkB;aAC7B;YACD,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,KAAK,EAAE,IAAI,CAAC,KAAK;YACd,SAAS,EAAE,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS;SACvD,CAAC;QAEL,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC,SAAS,CAAC,gBAAM;YACrE,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC;gBACpB,QAAQ,EAAE,SAAS;gBACnB,OAAO,EAAE,8BAA8B;gBACvC,MAAM,EAAE,cAAc,CAAC,KAAK;aAC7B,CAAC,CAAC;YACN,KAAI,CAAC,cAAc,EAAE,CAAC;YACnB,KAAI,CAAC,MAAM,EAAE,CAAC;QACnB,CAAC,EAAE,aAAG;YACJ,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC;gBACjB,QAAQ,EAAE,OAAO;gBACjB,OAAO,EAAE,QAAQ;aAClB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IA5hBsB;QAAtB,+DAAS,CAAC,UAAU,CAAC;;wDAAU;IACd;QAAjB,+DAAS,CAAC,KAAK,CAAC;;mDAAK;IACD;QAApB,+DAAS,CAAC,QAAQ,CAAC;;sDAAQ;IACP;QAApB,+DAAS,CAAC,QAAQ,CAAC;;sDAAQ;IACL;QAAtB,+DAAS,CAAC,UAAU,CAAC;;wDAAU;IACX;QAApB,+DAAS,CAAC,QAAQ,CAAC;;sDAAQ;IANjB,kBAAkB;QAR9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;YAG1B,aAAa,EAAE,+DAAiB,CAAC,IAAI;YACrC,SAAS,EAAE,CAAC,+DAAmB,EAAE,gEAAU,CAAC;SAC7C,CAAC;yCAwByC,+DAAmB,EAAiB,8DAAc,EAAc,0DAAW,EAAgB,gEAAU;OAtBnI,kBAAkB,CA8hB9B;IAAD,yBAAC;CAAA;AA9hB8B;;;;;;;;;;;;ACpB/B,oQAAoQ,sBAAsB,aAAa,iMAAiM,mBAAmB,wBAAwB,uDAAuD,eAAe,6JAA6J,aAAa,4PAA4P,WAAW,2HAA2H,YAAY,+HAA+H,gBAAgB,8HAA8H,eAAe,oKAAoK,mBAAmB,6KAA6K,wLAAwL,idAAid,mBAAmB,wBAAwB,cAAc,uKAAuK,YAAY,mBAAmB,mvBAAmvB,YAAY,mBAAmB,geAAge,YAAY,mBAAmB,0eAA0e,YAAY,mBAAmB,gfAAgf,YAAY,mBAAmB,wfAAwf,YAAY,mBAAmB,6VAA6V,mdAAmd,mBAAmB,wBAAwB,cAAc,s3GAAs3G,qH;;;;;;;;;;;ACAxrT,4BAA4B,iBAAiB,sBAAsB,EAAE,sBAAsB,qBAAqB,qBAAqB,iBAAiB,iBAAiB,sBAAsB,EAAE,gBAAgB,qBAAqB,EAAE,iBAAiB,iBAAiB,sBAAsB,EAAE,wBAAwB,0BAA0B,EAAE,kBAAkB,gCAAgC,EAAE,kBAAkB,gCAAgC,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjU;AAC1C;AAGR;AAGM;AAEf;AACnC;AAC2B;AACI;AACR;AACJ;AACL;AAMW;AAUtD;IAiBE,0BAAoB,mBAAwC,EAAU,KAAqB,EAAU,eAAgC,EAAU,EAAe,EAAU,IAAgB;QAApK,wBAAmB,GAAnB,mBAAmB,CAAqB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,OAAE,GAAF,EAAE,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAY;QAb9K,aAAQ,GAAmB,EAAE,CAAC;QAM9B,kBAAa,GAAG,WAAW,CAAC;QAC9B,gBAAW,GAAG,SAAS,CAAC;QAKhC,iBAAY,GAAG,0CAA0C,CAAC;IAE1D,CAAC;IAED,mCAAQ,GAAR;QAAA,iBA+BC;QA9BF,IAAI,CAAC,QAAQ,GAAG,CAAC,UAAU,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;QAC9C,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAEhB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,yEAAyE;QACzE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAC3B,UAAC,SAAS;YACL,IAAI,GAAG,GAAG,KAAI,CAAC,cAAc,EAAE,CAAC;YAChC,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE;gBAC3B,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;gBACjB,KAAuB,UAAa,EAAb,UAAI,CAAC,QAAQ,EAAb,cAAa,EAAb,IAAa;oBAA/B,IAAI,UAAU;oBAAmB,KAAI,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;iBAAA;gBAC5F,IAAI,KAAI,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE;oBACrB,IAAI,QAAQ,GAAG,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;oBACjF,IAAI,KAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE;wBACvB,KAAI,CAAC,QAAQ,CAAC,OAAd,KAAI,EAAc,KAAI,CAAC,SAAS,EAAE;wBACrC,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;qBAClB;oBACJ,KAAI,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;iBACzC;qBAAM;oBACR,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;wBACjB,QAAQ,EAAE,OAAO;wBACjB,OAAO,EAAE,OAAO;wBAChB,MAAM,EAAE,kBAAkB,GAAG,GAAG,GAAG,mBAAmB;qBACpD,CAAC,CAAC;iBACJ;aACF;QACG,CAAC,CACL,CAAC;IACD,CAAC;IAED,sEAAsE;IACtE;;;;OAIG;IACK,+BAAI,GAAZ,UAAa,GAAe;QAAf,8BAAe;QAAE,cAAO;aAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;YAAP,6BAAO;;QACnC,GAAG,GAAG,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,GAAG,KAAK,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;YAAE,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,GAAG,GAAG,CAAC,CAAC;IAChF,CAAC;IAED;;OAEG;IACO,iCAAM,GAAhB;QACE,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IAED;;;;OAIG;IACO,yCAAc,GAAxB;QACD,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC;QACvC,IAAI,GAAG,IAAI,IAAI;YAAE,GAAG,GAAG,EAAE,CAAC;QACvB,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,8BAA8B;QAE1D,OAAO,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IAES,kCAAO,GAAjB,UAAkB,MAAa;QAC7B,KAAiB,UAAU,EAAV,SAAI,CAAC,KAAK,EAAV,cAAU,EAAV,IAAU,EAAE;YAAxB,IAAI,IAAI;YACX,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM;gBAAE,OAAO,IAAI,CAAC;SAC5C;QACD,OAAO,IAAI,CAAC;IACX,CAAC;IAED,4EAA4E;IACpE,6CAAkB,GAA1B;QAAA,iBAKC;QAJC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACrC,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QAE1B,CAAC,CAAC,CAAC;IACF,CAAC;IAED;;;;;OAKG;IACK,4CAAiB,GAAzB,UAA0B,MAAc;QACzC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEpB,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAChC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;YAC7B,EAAE,EAAE,IAAI,CAAC,MAAM;YACZ,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YAC1B,SAAS,EAAE,IAAI,CAAC,SAAS;SACvB,CAAC,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACK,mDAAwB,GAAhC,UAAiC,MAAc;QAA/C,iBAmBC;QAlBF,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;YAC/B,OAAO,EAAE,oDAAoD;YAC1D,MAAM,EAAE;gBACZ,KAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,gBAAM;oBAClD,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;wBACX,QAAQ,EAAE,SAAS;wBACnB,OAAO,EAAE,YAAY;wBACrB,MAAM,EAAE,KAAK;qBACd,CAAC,CAAC;oBACT,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACxB,CAAC,EAAE,aAAG;oBACJ,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;wBACX,QAAQ,EAAE,OAAO;wBACjB,OAAO,EAAE,QAAQ;qBAClB,CAAC,CAAC;gBACX,CAAC,CAAC,CAAC;YACC,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACK,4CAAiB,GAAzB,UAA0B,MAAc;QAAxC,iBAoBC;QAnBF,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;YAC/B,OAAO,EAAE,oDAAoD;YAC1D,MAAM,EAAE;gBACZ,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,gBAAM;oBAC3C,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;wBACX,QAAQ,EAAE,SAAS;wBACnB,OAAO,EAAE,YAAY;wBACrB,MAAM,EAAE,mBAAmB;qBAC5B,CAAC,CAAC;oBACT,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC;oBACzC,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACxB,CAAC,EAAE,aAAG;oBACJ,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;wBACX,QAAQ,EAAE,OAAO;wBACjB,OAAO,EAAE,QAAQ;qBAClB,CAAC,CAAC;gBACX,CAAC,CAAC,CAAC;YACC,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAGD,0EAA0E;IAClE,yCAAc,GAAtB;QACD,IAAI,YAAY,GAAG,EAAE,CAAC;QACnB,YAAY,CAAC,IAAI,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAC,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QAC/F,YAAY,CAAC,UAAU,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnH,YAAY,CAAC,MAAM,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;QAChE,YAAY,CAAC,OAAO,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9H,YAAY,CAAC,WAAW,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9I,YAAY,CAAC,UAAU,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7I,YAAY,CAAC,WAAW,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAC,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QAChG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAErD,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAC,CAAC,CAAC;QAClD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,WAAW,EAAC,CAAC,CAAC;IAC3D,CAAC;IAEO,2CAAgB,GAAxB;IAEA,CAAC;IAED;;;;OAIG;IACK,2CAAgB,GAAxB,UAAyB,IAAI;QAA7B,iBA6BC;QA5BF,IAAI,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;QAEnD,IAAI,IAAI,GAAG;YACT,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAC1B,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,eAAe,EAAE,EAAE;YACnB,SAAS,EAAE,IAAI,CAAC,SAAS;SAC1B,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC9C,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;gBACjB,QAAQ,EAAE,SAAS;gBACnB,OAAO,EAAE,uBAAuB;gBAChC,MAAM,EAAE,IAAI,CAAC,QAAQ;aACtB,CAAC,CAAC;YACN,KAAI,CAAC,cAAc,EAAE,CAAC;YACnB,KAAI,CAAC,MAAM,EAAE,CAAC;QACnB,CAAC,EAAE,aAAG;YACJ,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;gBACd,QAAQ,EAAE,OAAO;gBACjB,OAAO,EAAE,QAAQ;aAClB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uEAAuE;IAC/D,sCAAW,GAAnB;QACD,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,YAAY,CAAC,UAAU,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnH,YAAY,CAAC,UAAU,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnH,YAAY,CAAC,MAAM,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;QAChE,YAAY,CAAC,OAAO,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9H,YAAY,CAAC,WAAW,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9I,YAAY,CAAC,UAAU,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7I,YAAY,CAAC,WAAW,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAC,EAAE,yDAAU,CAAC,aAAa,CAAC,CAAC;QACnG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;IACjD,CAAC;IAEO,wCAAa,GAArB;IAEA,CAAC;IAED;;;;OAIG;IACK,4CAAiB,GAAzB,UAA0B,IAAI;QAA9B,iBA0EC;QAzEF,IAAI,IAAI,GAAG;YACT,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAC1B,MAAM,EAAE,EAAE;YACV,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,eAAe,EAAE,EAAE;YACnB,SAAS,EAAE,IAAI,CAAC,SAAS;SAC1B,CAAC;QACC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,gBAAM;YAChC,yBAAyB;YACzB,IAAM,OAAO,GAAG,8CAAM,EAAE,CAAC;YACzB,IAAM,WAAW,GAAG,8CAAM,EAAE,CAAC;YAC7B,IAAM,SAAS,GAAG,8CAAM,EAAE,CAAC;YAC3B,IAAM,UAAU,GAAY,IAAI,8DAAO,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;YAChE,IAAM,cAAc,GAAgB,IAAI,sEAAW,CAAC,WAAW,EAAE,aAAa,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;YAE3F,KAAI,CAAC,eAAe,CAAC,cAAc,CAAC,KAAI,CAAC,eAAe,CAAC,eAAe,EAAE,IAAI,0DAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;iBACxH,SAAS,CAAC,oBAAU;gBACjB,KAAI,CAAC,eAAe,CAAC,cAAc,CAAC,KAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,IAAI,kEAAS,CAAC,SAAS,EAAE,WAAW,EAAE,OAAO,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC;qBACxI,SAAS,CAAC,gBAAM;gBACf,CAAC,EACC,aAAG;gBACL,CAAC,CAAC,CAAC;gBAEP,KAAI,CAAC,eAAe,CAAC,cAAc,CAAC,KAAI,CAAC,eAAe,CAAC,oBAAoB,EAAE,cAAc,CAAC;qBAC3F,SAAS,CAAC,gBAAM;gBACf,CAAC,EACC,aAAG;gBACL,CAAC,CAAC,CAAC;gBAGP,KAAI,CAAC,eAAe,CAAC,cAAc,CAAC,KAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,UAAU,CAAC;qBACpF,SAAS,CAAC,gBAAM;gBACf,CAAC,EACC,aAAG;gBACL,CAAC,CAAC,CAAC;gBAEP,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;oBACjB,QAAQ,EAAE,SAAS;oBACnB,OAAO,EAAE,SAAS;oBAClB,MAAM,EAAE,sBAAsB;iBAC/B,CAAC,CAAC;gBACH,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACxB,CAAC,EACD,aAAG;gBACD,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;oBACjB,QAAQ,EAAE,OAAO;oBACjB,OAAO,EAAE,OAAO;oBAChB,MAAM,EAAE,iFAAiF;iBAC1F,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACT,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,MAAM,KAAK,2DAAQ,EAAE;gBAE1B,IAAI;gBACJ,IAAG,GAAG,CAAC,UAAU,EAAE,CAAC,MAAM,CAAC,8BAA8B,CAAC,EAAE;oBAC3D,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,sCAAsC,EAAC,CAAC,CAAC;iBAC9G;;oBAEC,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,8BAA8B,EAAC,CAAC,CAAC;aAExG;iBAAM;gBACL,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;oBACjB,QAAQ,EAAE,OAAO;oBACjB,OAAO,EAAE,OAAO;oBAChB,MAAM,EAAE,gFAAgF;iBACzF,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACX,CAAC;IAzUsB;QAAtB,+DAAS,CAAC,UAAU,CAAC;;sDAAU;IACX;QAApB,+DAAS,CAAC,QAAQ,CAAC;;oDAAQ;IACV;QAAjB,+DAAS,CAAC,KAAK,CAAC;;iDAAK;IAHX,gBAAgB;QAR5B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;YAGxB,aAAa,EAAE,+DAAiB,CAAC,IAAI;YACrC,SAAS,EAAE,CAAC,+DAAmB,EAAE,iEAAU,CAAC;SAC7C,CAAC;yCAmByC,+DAAmB,EAAiB,8DAAc,EAA2B,0EAAe,EAAc,0DAAW,EAAgB,iEAAU;OAjB7K,gBAAgB,CA2U5B;IAAD,uBAAC;CAAA;AA3U4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BU;AACc;AAGK;AAC0C;AACH;AAEjG,KAAK;AAC4C;AACmB;AACmB;AAEvF,8IAA8I;AAE9I,IAAM,MAAM,GAAW;IACrB,KAAK,GAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kFAAa,EAAC;IACzC,EAAC,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,+DAAY,EAAC;IACtC,EAAC,IAAI,EAAE,WAAW,EAAE,YAAY,EAAE,cAAM,+EAAc,EAAd,CAAc,EAAC;IACvD,EAAC,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,+GAAsB,EAAC;IAC1D,EAAC,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,kHAAuB,EAAC;IAC5D,EAAC,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,mGAAqB,EAAC;CACzD,CAAC;AAQF;IAAA;IACA,CAAC;IADY,gBAAgB;QAN5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,SAAS,EAAE,EAAE;YACb,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OAEW,gBAAgB,CAC5B;IAAD,uBAAC;CAAA;AAD4B;;;;;;;;;;;;AC9B7B,sBAAsB,qBAAqB,gDAAgD,sBAAsB,KAAK,K;;;;;;;;;;;ACAtH,sJ;;;;;;;;;;;;;;;;;;;;;;;;;ACAgD;AACT;AAQvC;IACE,sBAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAElC,CAAC;IACD,+BAAQ,GAAR;QACE,2DAA2D;QAC5D,6BAA6B;IAC9B,CAAC;IAPU,YAAY;QANxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAG4B,sDAAM;OADvB,YAAY,CAQxB;IAAD,mBAAC;CAAA;AARwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTzB,kBAAkB;AAC2D;AACrB;AACQ;AACzB;AACvC,sBAAsB;AACgC;AACF;AAEpD,iBAAiB;AACgC;AACyB;AACM;AACV;AAEzB;AAC2C;AACjB;AACb;AACA;AACmB;AAG7E,kBAAkB;AACgC;AACV;AACI;AACE;AACA;AACA;AACI;AACH;AACH;AACU;AACT;AACW;AACd;AACA;AACF;AACI;AACE;AACM;AACE;AACN;AACQ;AACV;AACQ;AACZ;AACY;AACQ;AAC9D,KAAK;AACiE;AAC2B;AACjD;AACE;AACA;AACkD;AACH;AAClB;AACQ;AAyEvF;IACE;IAAe,CAAC;IADL,SAAS;QAvErB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,4DAAY;gBACZ,uGAAmB;gBACtB,8GAAsB;gBACnB,+DAAY;gBACZ,wFAAgB;gBAChB,8FAAkB;gBAClB,oFAAe;gBAClB,mFAAa;gBACV,sFAAc;gBACjB,mHAAuB;gBACpB,gHAAsB;gBACzB,4FAAgB;gBACb,4FAAgB;gBAChB,oGAAqB;aACtB;YACD,OAAO,EAAE;gBACP,wEAAkB;gBAClB,sEAAiB;gBACjB,8DAAa;gBACb,oEAAgB;gBAChB,wDAAU;gBACV,kEAAe;gBACf,0DAAW;gBACX,0DAAW;gBACX,8DAAa;gBACb,sEAAiB;gBACjB,4DAAY;gBACZ,+DAAc;gBACd,kEAAe;gBACf,8DAAa;gBACb,8DAAa;gBACb,8DAAa;gBACb,4DAAY;gBACZ,wDAAU;gBACV,oEAAgB;gBAChB,uEAAa;gBACb,4FAAuB;gBACvB,0DAAW;gBACX,yEAAc;gBACd,0EAAmB;gBACnB,kEAAY,CAAC,OAAO,EAAE;gBACtB,kEAAmB;gBACnB,4DAAY;gBACZ,gEAAc;gBACd,wEAAkB;gBAClB,8DAAa;gBACb,sEAAiB;gBACjB,0DAAW;gBACd,8DAAa;gBACb,gEAAc;gBACd,gEAAc;gBACd,oEAAe;gBACZ,8EAAqB;aACtB;YACD,eAAe,EAAE;gBACf,wFAAgB;gBAChB,8FAAkB;gBAClB,oFAAe;gBACf,8GAAsB;gBACzB,sFAAc;gBACd,uGAAmB;gBAChB,mHAAuB;gBACvB,gHAAsB;gBACzB,4FAAgB;gBACb,4FAAgB;gBAChB,oGAAqB;aACtB;YACD,SAAS,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;;OACW,SAAS,CAGrB;IAAD,gBAAC;CAAA;AAHqB;;;;;;;;;;;;;ACjItB;AAAA;AAAA;AAAO,6BAA8B,gBAAwB;IAE3D,IAAI,WAAwB,CAAC;IAC7B,IAAI,YAAyB,CAAC;IAE9B,OAAO,4BAA4B,OAAoB;QAErD,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACnB,OAAO,IAAI,CAAC;SACb;QAED,8BAA8B;QAC9B,IAAI,CAAC,WAAW,EAAE;YAChB,WAAW,GAAG,OAAO,CAAC;YACtB,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAgB,CAAC;YACnE,IAAI,CAAC,YAAY,EAAE;gBACjB,MAAM,IAAI,KAAK,CAAC,mEAAmE,CAAC,CAAC;aACtF;YACD,YAAY,CAAC,YAAY,CAAC,SAAS,CAAC;gBAClC,WAAW,CAAC,sBAAsB,EAAE,CAAC;YACvC,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,YAAY,EAAE;YACjB,OAAO,IAAI,CAAC;SACb;QAED,IAAI,YAAY,CAAC,KAAK,KAAK,WAAW,CAAC,KAAK,EAAE;YAC5C,OAAO;gBACL,UAAU,EAAE,IAAI;aACjB,CAAC;SACH;QAED,OAAO,IAAI,CAAC;IAEd,CAAC;AACH,CAAC;AAEM,gCAAiC,gBAAwB;IAE9D,IAAI,WAAwB,CAAC;IAC7B,IAAI,YAAyB,CAAC;IAE9B,OAAO,+BAA+B,OAAoB;QAExD,IAAI,CAAC,OAAO,CAAC,MAAM,EAAC;YAClB,OAAO,IAAI,CAAC;SACb;QAED,4BAA4B;QAC5B,IAAI,CAAC,WAAW,EAAE;YAChB,WAAW,GAAG,OAAO,CAAC;YACtB,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAgB,CAAC;YACnE,IAAI,CAAC,YAAY,EAAE;gBACjB,MAAM,IAAI,KAAK,CAAC,sEAAsE,CAAC,CAAC;aACzF;YACD,YAAY,CAAC,YAAY,CAAC,SAAS,CAAC;gBAClC,WAAW,CAAC,sBAAsB,EAAE,CAAC;YACvC,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,YAAY,EAAE;YACjB,OAAO,IAAI,CAAC;SACb;QAED,IAAI,CAAE,CAAC,YAAY,CAAC,KAAK,KAAK,WAAW,CAAC,KAAK,CAAC,EAAE;YAChD,OAAO;gBACL,aAAa,EAAE,IAAI;aACpB,CAAC;SACH;QAED,OAAO,IAAI,CAAC;IACd,CAAC;AACH,CAAC;;;;;;;;;;;;;AC5ED;AAAA;AAAA;;GAEG;AA8DH;IAiBE,mCAAY,YAA0B;QAftC,WAAM,GAAW,EAAE,CAAC;QACpB,iBAAY,GAAW,EAAE,CAAC,CAAC,mCAAmC;QAC9D,cAAS,GAAW,EAAE,CAAC,CAAC,8EAA8E;QACtG,UAAK,GAAW,EAAE,CAAC;QACnB,iBAAY,GAAsB;YAChC,MAAM,EAAE,EAAE;YACb,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,EAAE;SACR,CAAC;QACF,aAAQ,GAAgC,EAAE,CAAC,CAAC,gCAAgC;QAC5E,oBAAe,GAAY,IAAI,CAAC;QAChC,eAAU,GAAY,KAAK,CAAC;QAC5B,UAAK,GAAY,KAAK,CAAC;QAIrB,IAAI,CAAC,EAAE,GAAG,YAAY,CAAC,EAAE,CAAC;QAC7B,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC;QAClC,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC;QAChC,IAAI,YAAY,CAAC,cAAc,CAAC,cAAc,CAAC;YAAE,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC,YAAY,CAAC;QAC/F,IAAI,YAAY,CAAC,cAAc,CAAC,WAAW,CAAC;YAAE,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC;QACtF,IAAI,YAAY,CAAC,YAAY,CAAC,cAAc,CAAC,QAAQ,CAAC;YAAE,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,YAAY,CAAC,YAAY,CAAC,MAAM,CAAC;QACpH,IAAI,YAAY,CAAC,YAAY,CAAC,cAAc,CAAC,OAAO,CAAC;YAAE,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC;QACjH,IAAI,YAAY,CAAC,YAAY,CAAC,cAAc,CAAC,QAAQ,CAAC;YAAE,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,YAAY,CAAC,YAAY,CAAC,MAAM,CAAC;QACpH,IAAI,YAAY,CAAC,cAAc,CAAC,iBAAiB,CAAC;YAAE,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC,eAAe,CAAC;QACxG,IAAI,YAAY,CAAC,cAAc,CAAC,YAAY,CAAC;YAAE,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC;QACzF,IAAI,YAAY,CAAC,cAAc,CAAC,OAAO,CAAC;YAAE,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC;QAC1E,IAAI,YAAY,CAAC,cAAc,CAAC,WAAW,CAAC;YAAE,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;IAC/F,CAAC;IAED,4CAAQ,GAAR,UAAS,KAAgC;QACvC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;IACH,gCAAC;AAAD,CAAC;;;;;;;;;;;;;;ACnGD;AAAA;AAAA;;;GAGG;AAEH;IAYE,kBAAY,IAAY,EAAE,EAAU,EAAE,IAAY,EAAE,QAAgB,EAAE,QAAgB,EAAE,UAAkB,EAAE,MAAc,EAAE,SAAiB,EAAE,kBAA0B;QACvK,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;IAC/C,CAAC;IACH,eAAC;AAAD,CAAC;;;;;;;;;;;;;;ACrBD;AAAA;AAAA;IAcE;;;;;OAKG;IACH,qBAAY,EAAU,EAAE,IAAY,EAAE,MAAqB;QACzD,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IACH,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACzBD;AAAA;AAAA;IAkBE;;;;;;OAMG;IACH,mBAAY,EAAU,EAAE,IAAY,EAAE,KAAa,EAAE,UAAyB;QAC5E,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IAEH,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;AChCD;AAAA;AAAA;IAeE;;;;;;OAMG;IACH,iBAAY,EAAU,EAAE,IAAY,EAAE,OAAsB;QAC1D,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IACH,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5ByC;AAI1C;IAAoC,kCAAW;IAU7C,wBAAY,EAAU,EAAE,IAAY,EAAE,cAAsB,EAAG,QAAsB,EAAE,WAAoB,EAC/F,IAAY,EAAE,cAAwC,EAAE,SAAiB,EAAE,SAAkB,EAAE,WAAoB,EACnH,eAA4B,EAAE,aAAwB,EAAE,WAAwB,EAChF,cAAuB,EAAE,SAAgB,EAAE,OAAc,EAAE,QAAiB;QAHxF,YAIE,kBAAM,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,SAAS,EAAE,cAAc,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,CAAC,SAKjJ;QAJC,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,KAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,KAAI,CAAC,aAAa,GAAG,aAAa,CAAC;;IACrC,CAAC;IAEH,qBAAC;AAAD,CAAC,CArBmC,wDAAW,GAqB9C;;AAED,IAAY,WAIX;AAJD,WAAY,WAAW;IACrB,8BAAe;IACf,8BAAe;IACf,8BAAe;AACjB,CAAC,EAJW,WAAW,KAAX,WAAW,QAItB;AACD,IAAY,SAGX;AAHD,WAAY,SAAS;IACnB,4BAAe;IACf,sCAAyB;AAC3B,CAAC,EAHW,SAAS,KAAT,SAAS,QAGpB;;;;;;;;;;;;;ACvCD;AAAA;AAAA;AAAA;IAYE,iCAAY,UAAkB,EAAE,KAAa,EAAE,KAAa,EAAE,CAAe,EAAE,CAAe,EAClF,CAAe,EAAE,QAAgB;QAZ7C,UAAK,GAAW,EAAE,CAAC;QACnB,UAAK,GAAW,EAAE,CAAC;QAYjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IACH,8BAAC;AAAD,CAAC;;AAID,IAAY,WAIX;AAJD,WAAY,WAAW;IACrB,8BAAe;IACf,8BAAe;IACf,8BAAe;AACjB,CAAC,EAJW,WAAW,KAAX,WAAW,QAItB;;;;;;;;;;;;;;;;;;;;;;;;;;AC9B+B;AAIhC;IAAuC,qCAAM;IAe3C,2BAAY,EAAU,EAAE,IAAY,EAAE,cAAsB,EAAG,QAAsB,EAAE,WAAoB,EAC/F,IAAY,EAAE,cAA8C,EAAE,SAAiB,EAC/E,SAAe,EAAE,OAAa,EAAC,SAAwB,EAAE,YAAoB;QAFzF,YAGE,kBAAM,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC,SAQ7D;QAxBD,oBAAc,GAAmC,EAAE,CAAC;QACpD,eAAS,GAAW,QAAQ,CAAC;QAgB3B,KAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC;;IAEnC,CAAC;IAEH,wBAAC;AAAD,CAAC,CA5BsC,8CAAM,GA4B5C;;;;;;;;;;;;;;;;;;;;;;;;;;;AClC2C;AAE5C;IAAwC,qCAAY;IAclD,2BAAY,QAAgB,EAAE,QAAgB,EAAE,QAAgB,EAAE,QAAiB,EAAE,QAAiB,EAAE,KAAa,EAAE,KAAa,EAAE,IAAY,EAAE,IAAY;QAAhK,YACE,kBAAM,QAAQ,EAAE,QAAQ,CAAC,SAQ1B;QAtBD,cAAQ,GAAW,EAAE,CAAC;QACtB,yEAAyE;QACzE,cAAQ,GAAY,IAAI,CAAC;QACzB,yDAAyD;QACzD,cAAQ,GAAY,IAAI,CAAC;QACzB,gBAAgB;QAChB,WAAK,GAAW,EAAE,CAAC;QACnB,gBAAgB;QAChB,WAAK,GAAW,EAAE,CAAC;QACnB,eAAe;QACf,UAAI,GAAW,EAAE,CAAC;QAClB,UAAI,GAAW,EAAE,CAAC;QAIhB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;IACnB,CAAC;IACH,wBAAC;AAAD,CAAC,CAxBuC,0DAAY,GAwBnD;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BD;;;GAGG;AAC+B;AAIlC;IAAiC,+BAAM;IAiBrC,qBAAY,EAAU,EAAE,IAAY,EAAE,cAAsB,EAAG,QAAsB,EAAE,WAAoB,EAAE,IAAY,EAAE,cAAwC,EACvJ,SAAiB,EAAC,SAAkB,EAAE,cAAuB,EAAE,SAAgB,EAAE,OAAc,EAAE,QAAiB;QAD9H,YAEE,kBAAM,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC,SAQ7D;QA1BD;;;WAGG;QACH,oBAAc,GAA6B,EAAE,CAAC;QAe5C,KAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,KAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;;IAC3B,CAAC;IACH,kBAAC;AAAD,CAAC,CA5BgC,8CAAM,GA4BtC;;;;;;;;;;;;;;AC7BD;AAAA;AAAA;IAcE;;;;;OAKG;IACH,mBAAY,EAAU,EAAE,IAAY,EAAE,MAAoB;QACxD,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IACH,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;AChCD;AAAA;AAAA;IAIE,sBAAY,QAAgB,EAAE,QAAgB;QAH9C,aAAQ,GAAS,EAAE,CAAC;QACpB,aAAQ,GAAS,EAAE,CAAC;QAGlB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IACH,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRD;;;;GAIG;AAC+B;AAGlC;IAA0C,uCAAM;IAuB9C,6BAAY,EAAU,EAAE,IAAY,EAAE,cAAsB,EAAE,QAAsB,EAAE,WAAoB,EAAE,IAAY,EAAE,QAAgB,EAAE,QAAgB,EAAE,eAAuB,EAAE,QAAgB,EAAE,IAAY;QAArN,YACE,kBAAM,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC,SAM7D;QALC,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,KAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;IACnB,CAAC;IACH,0BAAC;AAAD,CAAC,CA/ByC,8CAAM,GA+B/C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrC+B;AAEY;AAE5C;IAAyC,uCAAM;IAU7C,6BAAY,EAAU,EAAE,IAAY,EAAE,cAAsB,EAAG,QAAsB,EAAE,WAAoB,EAC/F,IAAY,EAAE,cAAgD,EAAE,SAAiB,EACjF,YAAoB,EAAE,YAAoB,EAAE,YAAoB,EAAE,SAAe,EAAE,OAAc;QAF7G,YAGE,kBAAM,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC,SAQ7D;QAPC,KAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC;;IACnC,CAAC;IAEH,0BAAC;AAAD,CAAC,CAvBwC,8CAAM,GAuB9C;;AAED;IAAgD,6CAAY;IAI1D,mCAAY,QAAgB,EAAE,QAAgB,EAAE,KAAa,EAAE,IAAY;QAA3E,YACE,kBAAM,QAAQ,EAAE,QAAQ,CAAC,SAG1B;QAFC,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;IACnB,CAAC;IACH,gCAAC;AAAD,CAAC,CAT+C,0DAAY,GAS3D;;;;;;;;;;;;;;ACxCD;AAAA;AAAA;;;GAGG;AACH;IAIE,oBAAY,KAAa,EAAE,KAAK;QAC9B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAEH,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbD;;;GAGG;AAC6B;AAKhC;IAA0C,wCAAM;IAgB9C,8BAAY,EAAU,EAAE,IAAY,EAAE,cAAsB,EAAE,QAAsB,EAAE,WAAoB,EAAE,IAAY,EAAE,cAAoC,EAClJ,SAAiB,EAAE,WAAwB,EAAE,SAAe,EAAE,OAAa,EAAE,QAAgB;QADzG,YAEE,kBAAM,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC,SAO7D;QANC,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,KAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;;IACjC,CAAC;IACH,2BAAC;AAAD,CAAC,CA1ByC,8CAAM,GA0B/C;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7ByC;AAG1C;IAAqC,mCAAW;IAU9C,yBAAY,EAAU,EAAE,IAAY,EAAE,cAAsB,EAAG,QAAsB,EAAE,WAAoB,EAC/F,IAAY,EAAE,cAAwC,EAAE,SAAiB,EAAE,SAAkB,EAAE,UAAmB,EAAE,WAAoB,EAAE,WAAwB,EAClK,cAAuB,EAAE,SAAgB,EAAE,OAAc,EAAE,QAAiB;QAFxF,YAGE,kBAAM,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,SAAS,EAAE,cAAc,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,CAAC,SAKjJ;QAJC,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC;;IAC/B,CAAC;IACH,sBAAC;AAAD,CAAC,CAnBoC,wDAAW,GAmB/C;;AAED;IAME,qBAAY,OAAe,EAAE,OAAe,EAAE,aAAsB,EAAE,aAAsB;QAC1F,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;IACrC,CAAC;IACH,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxC+B;AAIhC;IAA0C,wCAAM;IAW9C,8BAAY,EAAU,EAAE,IAAY,EAAE,cAAsB,EAAG,QAAsB,EAAE,WAAoB,EAC/F,IAAY,EAAE,cAA8C,EAAE,SAAiB,EAC/E,SAAe,EAAE,OAAa,EAAE,eAA4B,EAAE,UAAkB,EAAE,QAAgB,EAClG,YAAoB;QAHhC,YAIE,kBAAM,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC,SAS7D;QAtBD,oBAAc,GAAmC,EAAE,CAAC;QACpD,eAAS,GAAW,WAAW,CAAC;QAa9B,KAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,KAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC;;IACnC,CAAC;IAEH,2BAAC;AAAD,CAAC,CA1ByC,8CAAM,GA0B/C;;AAcD,IAAY,YAIX;AAJD,WAAY,YAAY;IACtB,6CAA6B;IAC7B,qCAAqB;IACrB,qCAAqB;AACvB,CAAC,EAJW,YAAY,KAAZ,YAAY,QAIvB;AAED,IAAY,UAmBX;AAnBD,WAAY,UAAU;IACpB,+BAAiB;IACjB,yCAA2B;IAC3B,mCAAqB;IACrB,mCAAqB;IACrB,+BAAiB;IACjB,qCAAuB;IACvB,2BAAa;IACb,6BAAe;IACf,2CAA6B;IAC7B,oCAAsB;IACtB,+BAAiB;IACjB,+BAAiB;IACjB,mCAAqB;IACrB,gDAAkC;IAClC,mCAAqB;IACrB,mCAAqB;IACrB,6BAAe;IACf,2BAAa;AACf,CAAC,EAnBW,UAAU,KAAV,UAAU,QAmBrB;AAED,IAAY,YAKX;AALD,WAAY,YAAY;IACtB,iCAAiB;IACjB,iCAAiB;IACjB,+BAAe;IACf,mCAAmB;AACrB,CAAC,EALW,YAAY,KAAZ,YAAY,QAKvB;AAED,IAAY,WAIX;AAJD,WAAY,WAAW;IACrB,8BAAe;IACf,8BAAe;IACf,8BAAe;AACjB,CAAC,EAJW,WAAW,KAAX,WAAW,QAItB;;;;;;;;;;;;;AC7ED;AAAA;AAAA;IAkBE;;;;;;OAMG;IACH,iBAAY,EAAU,EAAE,IAAY,EAAE,KAAa,EAAE,UAA4B;QAC/E,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IAEH,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClC+B;AAIhC;IAA2C,yCAAM;IAS/C,+BAAY,EAAU,EAAE,IAAY,EAAE,cAAsB,EAAE,QAAsB,EAAE,WAAoB,EAC9F,IAAY,EAAE,cAAoC,EAClD,SAAiB,EAAE,WAAwB,EAAE,cAAsB;QAF/E,YAGE,kBAAM,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC,SAK7D;QAJC,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,KAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,KAAI,CAAC,cAAc,GAAG,cAAc,CAAC;;IACvC,CAAC;IACH,4BAAC;AAAD,CAAC,CAlB0C,8CAAM,GAkBhD;;AAED;IAOE,uBAAY,QAAgB,EAAE,QAAgB,EAAE,KAAa,EAAE,IAAY,EAAE,IAAY;QACvF,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IACH,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;AC3CD;AAAA;AAAA;IAAA;QAEG,OAAE,GAAG,CAAC,CAAC;QACP,YAAO,GAAG,EAAE,CAAC;QACb,UAAK,GAAQ,EAAE,CAAC,CAAC,YAAY;QAC7B,SAAI,GAAG,EAAE,CAAC;QACV,iFAAiF;QACjF,SAAI,GAAkB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QACxE,aAAQ,GAAG,EAAE,CAAC;QACd,YAAO,GAAG,EAAE,CAAC;QACb,aAAQ,GAAG,EAAE,CAAC;QACd,qBAAgB,GAAG,EAAE,CAAC;QACtB,gBAAW,GAAG,CAAC,CAAC;QAChB,aAAQ,GAAG,EAAE,CAAC;QACd,oBAAe,GAAG,CAAC,CAAC;QACpB,UAAK,GAAG,EAAE,CAAC;QACX,sBAAiB,GAAG,EAAE,CAAC;QACvB,iBAAY,GAAG,EAAE,CAAC;QAClB,aAAQ,GAAG,KAAK,CAAC;QACjB,gBAAW,GAAG,EAAE,CAAC;QACjB,UAAK,GAAG,EAAE,CAAC;QACX,WAAM,GAAG,KAAK,CAAC;QACf,UAAK,GAAG,KAAK,CAAC;QACd,aAAQ,GAAG,EAAE,CAAC;QACd,UAAK,GAAG,EAAE,CAAC;IACd,CAAC;IAAD,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACzBD;AAAA;AAAA;IAAA;QACE,OAAE,GAAG,CAAC,CAAC;IAQT,CAAC;IAAD,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACPD;AAAA;AAAA,+EAA+E;AAC/E;IAAA;QAEE,OAAE,GAAG,CAAC,CAAC;QAOP,WAAM,GAAG,EAAE,CAAC;QACZ,eAAU,GAAG,EAAE,CAAC,CAAC,2BAA2B;QAC5C,cAAS,GAAG,EAAE,CAAC,CAAC,2BAA2B;IAc7C,CAAC;IAZC,0BAAW,GAAX,UAAY,IAAS;QACnB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACpC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACpC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAClC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IAC5B,CAAC;IACH,WAAC;AAAD,CAAC;;;;;;;;;;;;;;AC5BD;AAAA;AAAA;AAAwC;AAExC,mFAAmF;AACnF;IAAA;QAEE,OAAE,GAAG,CAAC,CAAC;QACP,2BAA2B;QAC3B,aAAQ,GAAG,8BAA8B,CAAC;QAC1C,2BAA2B;QAC3B,aAAQ,GAAG,8CAA8C,CAAC;QAC1D,cAAS,GAAc,IAAI,oDAAS,EAAE,CAAC;IACzC,CAAC;IAAD,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAwC;AAExC,oFAAoF;AACpF;IAAA;QAEE,OAAE,GAAG,CAAC,CAAC;QACP,SAAI,GAAG,EAAE,CAAC,CAAC,sDAAsD;QACjE,iBAAY,GAAG,EAAE,CAAC;QAClB,aAAQ,GAAG,EAAE,CAAC,CAAC,sDAAsD;QACrE,aAAQ,GAAG,EAAE,CAAC,CAAC,sDAAsD;QACrE,cAAS,GAAc,IAAI,oDAAS,EAAE,CAAC;IACzC,CAAC;IAAD,cAAC;AAAD,CAAC;;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAoC;AAEpC,yFAAyF;AACzF;IAAA;QAGE,SAAI,GAAG,cAAc,CAAC,CAAC,2BAA2B;QAClD,aAAQ,GAAG,EAAE,CAAC,CAAC,YAAY;QAC3B,cAAS,GAAG,CAAC,CAAC;QACd,eAAU,GAAG,CAAC,CAAC;QACf,YAAO,GAAY,IAAI,gDAAO,EAAE,CAAC;IAOnC,CAAC;IAHC,sCAAe,GAAf;QACE,OAAO,IAAI,CAAC;IACd,CAAC;IACH,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACjBD;AAAA;AAAO,IAAM,QAAQ,GAAG;IACtB;QACE,GAAG,EAAE,CAAC;QACN,KAAK,EAAE,KAAK;QACZ,KAAK,EAAE,QAAQ;KAChB,EAAE;QACD,GAAG,EAAE,CAAC;QACN,KAAK,EAAE,KAAK;QACZ,KAAK,EAAE,SAAS;KACjB,EAAE;QACD,GAAG,EAAE,CAAC;QACN,KAAK,EAAE,KAAK;QACZ,KAAK,EAAE,WAAW;KACnB,EAAE;QACD,GAAG,EAAE,CAAC;QACN,KAAK,EAAE,KAAK;QACZ,KAAK,EAAE,UAAU;KAClB,EAAE;QACD,GAAG,EAAE,CAAC;QACN,KAAK,EAAE,KAAK;QACZ,KAAK,EAAE,QAAQ;KAChB,EAAE;QACD,GAAG,EAAE,CAAC;QACN,KAAK,EAAE,KAAK;QACZ,KAAK,EAAE,UAAU;KAClB,EAAE;QACD,GAAG,EAAE,CAAC;QACN,KAAK,EAAE,KAAK;QACZ,KAAK,EAAE,QAAQ;KAChB;CACF,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;AC7B8B;AAEhC;IAA0C,wCAAM;IAE9C,8BAAY,EAAU,EAAE,IAAY,EAAE,cAAsB,EAAE,QAAsB,EAAE,WAAoB,EAC9F,IAAY;eACpB,kBAAM,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC;IAChE,CAAC;IAEH,2BAAC;AAAD,CAAC,CAPyC,8CAAM,GAO/C;;;;;;;;;;;;;;;;;;;;;;;;;;;ACT+B;AAEhC;IAA4C,0CAAM;IAEhD,gCAAY,EAAU,EAAE,IAAY,EAAE,cAAsB,EAAE,QAAsB,EAAE,WAAoB,EAC9F,IAAY;eACpB,kBAAM,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC;IAChE,CAAC;IAEH,6BAAC;AAAD,CAAC,CAP2C,8CAAM,GAOjD;;;;;;;;;;;;;;;;;;;;;;;;;;;ACT+B;AAEhC;IAAuC,qCAAM;IAE3C,2BAAY,EAAU,EAAE,IAAY,EAAE,cAAsB,EAAE,QAAsB,EAAE,WAAoB,EAC9F,IAAY;eACpB,kBAAM,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC;IAChE,CAAC;IAEH,wBAAC;AAAD,CAAC,CAPsC,8CAAM,GAO5C;;;;;;;;;;;;;;ACHD;AAAA;AAAA;IAeE;;;;;;OAMG;IACH,eAAY,EAAU,EAAE,IAAY,EAAE,OAAsB;QAC1D,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IACH,YAAC;AAAD,CAAC;;;;;;;;;;;;;;AClCD;AAAA;AAAA;AAAA;;;;GAIG;;;;;;;;;;;AAEyD;AAG5D;IAAmC,gCAAmB;IAcpD,sBAAY,EAAU,EAAE,IAAY,EAAE,cAAsB,EAAE,QAAsB,EAAE,WAAoB,EAC9F,IAAY,EAAE,QAAgB,EAC9B,QAAgB,EAAE,eAAuB,EAAE,QAAgB,EAAE,IAAY,EAAE,KAAa,EAAE,QAAgB,EAAE,QAAgB;QAFxI,YAGE,kBAAM,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,eAAe,EAAE,QAAQ,EAAE,IAAI,CAAC,SAKlH;QAJC,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;;IAE3B,CAAC;IAEH,mBAAC;AAAD,CAAC,CAxBkC,wEAAmB,GAwBrD;;;;;;;;;;;;;;ACjCD;AAAA;AAAA;AAAA;;;;GAIG;;;;;;;;;;;AAEyD;AAG5D;IAAkC,+BAAmB;IAOnD,qBAAY,EAAU,EAAE,IAAY,EAAE,cAAsB,EAAE,QAAsB,EAAE,WAAoB,EAC9F,IAAY,EAAE,QAAgB,EAC9B,QAAgB,EAAE,eAAuB,EAAE,QAAgB,EAAE,IAAY,EAAE,KAAa;QAFpG,YAGE,kBAAM,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,eAAe,EAAE,QAAQ,EAAE,IAAI,CAAC,SAElH;QADC,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;;IACrB,CAAC;IAEH,kBAAC;AAAD,CAAC,CAdiC,wEAAmB,GAcpD;;;;;;;;;;;;;;ACvBD;AAAA;AAAA;AAAA;;;;GAIG;;;;;;;;;;;AAEyD;AAG5D;IAAmC,gCAAmB;IAepD,sBAAY,EAAU,EAAE,IAAY,EAAE,cAAsB,EAAE,QAAsB,EAAE,WAAoB,EAC9F,IAAY,EAAE,QAAgB,EAC9B,QAAgB,EAAE,eAAuB,EAAE,QAAgB,EAAE,IAAY,EAAE,KAAc,EACzF,aAAqB,EAAE,cAAsB;QAHzD,YAIE,kBAAM,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,eAAe,EAAE,QAAQ,EAAE,IAAI,CAAC,SAIlH;QAHC,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,KAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,KAAI,CAAC,cAAc,GAAG,cAAc,CAAC;;IACvC,CAAC;IAEH,mBAAC;AAAD,CAAC,CAzBkC,wEAAmB,GAyBrD;;;;;;;;;;;;;;AClCD;AAAA;AAAA;;GAEG;AACH;IAQE,cAAY,EAAU,EAAE,IAAY,EAAE,SAAiB;QALvD;;WAEG;QACH,aAAQ,GAAkB,EAAE,CAAC;QAG3B,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAChC,CAAC;IAEH,WAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBD;;;;GAIG;AAC+B;AAGlC;IAAsC,mCAAM;IAc1C,yBAAY,EAAU,EAAE,IAAY,EAAE,cAAsB,EAAE,QAAsB,EAAE,WAAoB,EAAE,IAAY,EAAE,QAAgB,EAC9H,QAAgB,EAAE,QAAgB,EAAE,UAAkB,EAAE,eAAuB;QAD3F,YAEE,kBAAM,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC,SAM7D;QALC,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,KAAI,CAAC,eAAe,GAAG,eAAe,CAAC;;IACzC,CAAC;IACH,sBAAC;AAAD,CAAC,CAvBqC,8CAAM,GAuB3C;;AAED;;GAEG;AACH,IAAY,UAGX;AAHD,WAAY,UAAU;IACpB,+BAAiB;IACjB,+BAAiB;AACnB,CAAC,EAHW,UAAU,KAAV,UAAU,QAGrB;;;;;;;;;;;;;AChCD;AAAA;AAAA;AAAA;IASE,gBAAY,EAAU,EAAE,IAAY,EAAE,cAAsB,EAAE,QAAsB,EAAE,WAAoB,EAAE,IAAY;QACtH,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IACH,aAAC;AAAD,CAAC;;AAED;;GAEG;AACH,IAAY,UAoBX;AApBD,WAAY,UAAU;IACpB,yCAA2B;IAC3B,2CAA6B;IAC7B,yDAA2C;IAC3C,yDAA2C;IAC3C,gDAAkC;IAClC,wDAA0C;IAC1C,sDAAwC;IACxC,4DAA8C;IAC9C,gEAAkD;IAClD,kEAAoD;IACpD,gEAAkD;IAClD,mDAAqC;IACrC,iDAAmC;IACnC,2CAA6B;IAC7B,6DAA+C;IAC/C,iEAAmD;IACnD,6DAA+C;IAC/C,uDAAyC;IACzC,qDAAuC;AACzC,CAAC,EApBW,UAAU,KAAV,UAAU,QAoBrB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjD6D;AAGD;AACR;AACkB;AACJ;AACA;AACI;AACZ;AACc;AAEQ;AACpB;AAE7D;oEACoE;AAKpE;IAAA;IAQA,CAAC;qBARY,YAAY;IAChB,oBAAO,GAAd;QACE,OAAO;YACL,QAAQ,EAAE,cAAY;YACtB,SAAS,EAAE,CAAC,0EAAe,EAAE,kEAAW,EAAE,gFAAkB;gBAC1D,oFAAoB,EAAE,gFAAkB,EAAE,oFAAoB,EAAE,wEAAc,EAAC,sFAAqB,EAAG,8FAAyB,EAAE,yEAAc,CAAC;SACpJ,CAAC;IACJ,CAAC;;IAPU,YAAY;QAJxB,8DAAQ,CAAC;YACR,YAAY,EAAE,EAAE;YAChB,OAAO,EAAE,EAAE;SACZ,CAAC;OACW,YAAY,CAQxB;IAAD,mBAAC;CAAA;AARwB;;;;;;;;;;;;;ACrBzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;GAEG;;;;;;;;;;AAEkC;AACa;AACP;AACiB;AAG5D,IAAM,UAAU,GAAG,KAAG,qEAAW,CAAC,QAAQ,GAAG,qEAAW,CAAC,OAAO,GAAG,qEAAW,CAAC,WAAa,CAAC;AAC7F,IAAM,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;AAGjE,IAAM,eAAe,GAAM,UAAU,UAAO,CAAC;AAE7C,IAAM,IAAI,GAAU,eAAe,GAAG,OAAO,CAAC;AAC9C,IAAM,eAAe,GAAK,IAAI,GAAG,EAAE,CAAC;AACpC,IAAM,QAAQ,GAAO,IAAI,GAAG,MAAM,CAAC;AACnC,IAAM,YAAY,GAAM,IAAI,GAAG,MAAM,CAAC;AACtC,IAAM,WAAW,GAAM,SAAS,CAAC;AACjC,IAAM,mBAAmB,GAAI,gBAAgB,CAAC;AAC9C,IAAM,WAAW,GAAM,SAAS,CAAC;AAEjC,IAAM,OAAO,GAAU,eAAe,GAAG,UAAU,CAAC;AACpD,IAAM,kBAAkB,GAAM,OAAO,GAAG,EAAE,CAAC;AAC3C,IAAM,WAAW,GAAS,OAAO,GAAG,MAAM,CAAC;AAC3C,IAAM,eAAe,GAAS,OAAO,GAAG,MAAM,CAAC;AAC/C,IAAM,kBAAkB,GAAM,OAAO,GAAG,YAAY,CAAC;AACrD,IAAM,cAAc,GAAO,SAAS,CAAC;AACrC,IAAM,cAAc,GAAQ,SAAS,CAAC;AAEtC,IAAM,cAAc,GAAM,eAAe,GAAG,gBAAgB,CAAC;AAC7D,IAAM,sBAAsB,GAAG,cAAc,GAAG,MAAM,CAAC;AACvD,IAAM,qBAAqB,GAAI,SAAS,CAAC;AACzC,IAAM,qBAAqB,GAAI,SAAS,CAAC;AACzC,IAAM,qBAAqB,GAAI,UAAU,CAAC;AAE1C,IAAM,eAAe,GAAG,eAAe,GAAG,OAAO,CAAC;AAClD,IAAM,sBAAsB,GAAG,eAAe,GAAG,kBAAkB,CAAC;AACpE,IAAM,4BAA4B,GAAG,eAAe,GAAG,wBAAwB,CAAC;AAChF,IAAM,6BAA6B,GAAG,eAAe,GAAG,yBAAyB,CAAC;AAClF,IAAM,sCAAsC,GAAG,eAAe,GAAG,iCAAiC,CAAC;AAInG;IACE,oBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAED,mEAAmE;IACnE;;MAEE;IACF,4BAAO,GAAP,UAAQ,IAAI;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACxF,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IAC5C,CAAC;IAED;;MAEE;IACF,+BAAU,GAAV,UAAW,EAAU,EAAE,MAAM;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,WAAW,EAAE,MAAM,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACtG,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IAC5C,CAAC;IAED;;MAEE;IACF,4BAAO,GAAP,UAAQ,EAAU;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,GAAG,EAAE,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAChG,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACzC,CAAC;IAED;;MAEE;IACF,gCAAW,GAAX,UAAY,QAA4B;QAA5B,+CAA4B;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,GAAG,QAAQ,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACnG,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACzC,CAAC;IAED;;MAEE;IACF,sCAAiB,GAAjB,UAAkB,EAAU;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,mBAAmB,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC3G,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACzC,CAAC;IAED;;MAEE;IACF,+BAAU,GAAV,UAAW,EAAU;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,WAAW,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACnG,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACzC,CAAC;IAED,sEAAsE;IAEtE;;MAEE;IACF,sCAAiB,GAAjB,UAAkB,GAAG;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC1F,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IAC5C,CAAC;IAED;;MAEE;IACF,yCAAoB,GAApB,UAAqB,EAAU,EAAE,MAAM;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,GAAG,cAAc,EAAE,MAAM,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC5G,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IAC5C,CAAC;IAGD;;MAEE;IACF,sCAAiB,GAAjB,UAAkB,EAAU;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,kBAAkB,GAAG,EAAE,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACnG,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACzC,CAAC;IAED;;MAEE;IACF,0CAAqB,GAArB,UAAsB,QAA4B;QAA5B,+CAA4B;QAChD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,GAAG,QAAQ,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACtG,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACzC,CAAC;IAGD;;MAEE;IACF,yCAAoB,GAApB,UAAqB,EAAU;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,EAAE,GAAG,cAAc,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACzG,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACzC,CAAC;IAGD;;MAEE;IACF,6CAAwB,GAAxB,UAAyB,QAA4B;QAA5B,+CAA4B;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,kBAAkB,GAAG,QAAQ,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACzG,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACzC,CAAC;IAED,6EAA6E;IAE5E;;KAEC;IACF,wCAAmB,GAAnB,UAAoB,EAAU,EAAE,MAAM;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,EAAE,GAAG,qBAAqB,EAAE,MAAM,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC1H,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IAC5C,CAAC;IAED;;MAEE;IACF,yCAAoB,GAApB,UAAqB,QAA4B;QAA5B,+CAA4B;QAC/C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,sBAAsB,GAAG,QAAQ,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC7G,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACzC,CAAC;IAED;;MAEE;IACF,wCAAmB,GAAnB,UAAoB,EAAU;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,GAAG,EAAE,GAAG,qBAAqB,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACvH,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACzC,CAAC;IAED;;MAEE;IACF,wCAAmB,GAAnB,UAAoB,EAAU,EAAE,IAAY;QAC7C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,GAAG,EAAE,GAAG,qBAAqB,GAAG,IAAI,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC3H,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACzC,CAAC;IAED,mEAAmE;IAGnE,4BAAO,GAAP,UAAQ,MAAc,EAAE,IAAY;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,sBAAsB,GAAG,MAAM,GAAG,GAAG,GAAG,IAAI,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAC,CAAC;aAClG,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,2CAAsB,GAAtB,UAAuB,IAAU,EAAE,IAAU,EAAE,MAAc,EAAE,IAAY;QACzE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,6BAA6B,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,GAAG;cAC5F,MAAM,GAAG,GAAG,GAAG,IAAI,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAC,CAAC;aACxD,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,mDAA8B,GAA9B,UAA+B,IAAU,EAAE,IAAU,EAAE,QAAgB,EAAE,MAAc,EAAE,IAAY;QACnG,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,sCAAsC,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,GAAG,GAAG,QAAQ,GAAG,GAAG;cACtH,MAAM,GAAG,GAAG,GAAG,IAAI,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAC,CAAC;aACxD,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IA9JU,UAAU;QADtB,gEAAU,EAAE;yCAEe,+DAAU;OADzB,UAAU,CAgKtB;IAAD,iBAAC;CAAA;AAhKsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CY;AACa;AACP;AAGmB;AAG5D,IAAM,UAAU,GAAG,KAAG,qEAAW,CAAC,QAAQ,GAAG,qEAAW,CAAC,OAAO,GAAG,qEAAW,CAAC,WAAa,CAAC;AAC7F,IAAM,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;AAEjE,IAAM,iBAAiB,GAAM,UAAU,qBAAkB,CAAC;AAC1D,IAAM,OAAO,GAAG,6CAA6C,CAAC;AAC9D,IAAM,QAAQ,GAAG,kDAAkD,CAAC;AACpE,IAAM,UAAU,GAAG,gDAAgD,CAAC;AACpE,IAAM,YAAY,GAAG,wCAAwC,CAAC;AAC9D,IAAM,aAAa,GAAG,0BAA0B,CAAC;AAEjD,IAAM,MAAM,GAAG,YAAY,CAAC;AAC5B,IAAM,aAAa,GAAG,qBAAqB,CAAC;AAC5C,IAAM,KAAK,GAAG,aAAa,CAAC;AAC5B,IAAM,GAAG,GAAG,WAAW,CAAC;AACxB,IAAM,QAAQ,GAAG,YAAY,CAAC;AAC9B,IAAM,KAAK,GAAG,UAAU,CAAC;AACzB,IAAM,OAAO,GAAG,YAAY,CAAC;AAG7B;IAEE,+BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAED,sDAAsD;IACtD,2DAA2B,GAA3B,UAA4B,QAAgB,EAAE,QAAgB,EAAE,MAAc,EAAE,SAAiB,EAAE,iBAAyB,EAAE,QAAgB,EAAE,UAAkB;QAChK,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,iBAAiB,GAAG,MAAM,SAAI,SAAS,GAAG,YAAY,GAAG,QAAQ,GAAG,MAAM,GAAG,QAAQ,GAAG,aAAa,GAAG,iBAAiB,GAAG,OAAO,GAAG,QAAQ,GAAG,QAAQ,GAAG,UAAY,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACzP,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,sDAAsD;IACtD,6CAAa,GAAb,UAAc,QAAgB,EAAE,QAAgB,EAAE,MAAc,EAAE,SAAiB;QACjF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,iBAAiB,GAAG,MAAM,SAAI,SAAS,GAAG,aAAa,GAAG,QAAQ,GAAG,MAAM,GAAG,QAAU,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACzK,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAGD,+CAA+C;IAC/C,gEAAgC,GAAhC,UAAiC,QAAgB,EAAE,QAAgB,EAAE,MAAc,EAAE,SAAiB;QACpG,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,iBAAiB,GAAG,MAAM,SAAI,SAAS,GAAG,OAAO,GAAG,QAAQ,GAAG,MAAM,GAAG,QAAU,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACnK,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,wFAAwF;IACxF,+CAA+C;IAC/C,mEAAmC,GAAnC,UAAoC,QAAgB,EAAE,QAAgB,EAAE,MAAc,EAAE,SAAiB,EAAE,MAAc,EAAE,QAAgB;QACzI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,iBAAiB,GAAG,MAAM,SAAI,SAAS,GAAG,UAAU,GAAG,QAAQ,GAAG,MAAM,GAAG,QAAQ,GAAG,KAAK,GAAG,MAAM,GAAG,OAAO,GAAG,QAAU,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC5M,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,oCAAoC;IACpC,qEAAqC,GAArC,UAAsC,QAAgB,EAAE,QAAgB,EAAE,iBAAyB,EAAE,SAAiB,EAAE,OAAe,EAAE,UAAkB,EAAE,MAAc,EAAE,SAAiB;QAC5L,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,iBAAiB,GAAG,MAAM,SAAI,SAAS,GAAG,QAAQ,GAAG,QAAQ,GAAG,MAAM,GAAG,QAAQ,GAAG,aAAa,GAAG,iBAAiB,GAAG,KAAK,GAAG,SAAS,GAAG,GAAG,GAAG,OAAO,GAAG,QAAQ,GAAG,UAAY,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACpQ,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAnCU,qBAAqB;QADjC,gEAAU,EAAE;yCAGe,+DAAU;OAFzB,qBAAqB,CAuCjC;IAAD,4BAAC;CAAA;AAvCiC;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BO;AACJ;AACS;AAO9C;IA6CE;QA5CQ,eAAU,GAAG,IAAI,oDAAe,CAAO,SAAS,CAAC,CAAC;QAClD,kBAAa,GAAG,IAAI,oDAAe,CAAU,SAAS,CAAC,CAAC;QACxD,kBAAa,GAAG,IAAI,oDAAe,CAAS,SAAS,CAAC,CAAC;QACvD,cAAS,GAAG,IAAI,oDAAe,CAAS,SAAS,CAAC,CAAC;QACnD,kBAAa,GAAG,IAAI,oDAAe,CAAS,SAAS,CAAC,CAAC;QACvD,iBAAY,GAAG,IAAI,oDAAe,CAAuF,SAAS,CAAC,CAAC;QACpI,mBAAc,GAAG,IAAI,oDAAe,CAA6G,SAAS,CAAC,CAAC;QAC5J,gBAAW,GAAG,IAAI,oDAAe,CAAS,CAAC,CAAC,CAAC;QAC7C,oBAAe,GAAG,IAAI,oDAAe,CAAS,CAAC,CAAC,CAAC,CAAC;QAClD,UAAK,GAAG,IAAI,oDAAe,CAAS,SAAS,CAAC,CAAC;QAC/C,gBAAW,GAAG,IAAI,oDAAe,CAAS,SAAS,CAAC,CAAC;QACrD,gBAAW,GAAG,IAAI,oDAAe,CAAS,CAAC,CAAC,CAAC;QAC7C,cAAS,GAAG,IAAI,oDAAe,CAAS,SAAS,CAAC,CAAC;QACnD,cAAS,GAAG,IAAI,oDAAe,CAAS,CAAC,CAAC,CAAC;QAC3C,gBAAW,GAAG,IAAI,oDAAe,CAAS,CAAC,CAAC,CAAC;QAC7C,eAAU,GAAG,IAAI,oDAAe,CAAc,6DAAW,CAAC,IAAI,CAAC,CAAC;QAChE,sBAAiB,GAAG,IAAI,oDAAe,CAAgB,SAAS,CAAC,CAAC;QAE1E,sBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;QACnD,uBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;QACrD,2BAAsB,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;QAC7D,qBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;QACjD,iBAAY,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;QAC/C,uBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;QAErD,qBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;QACjD,iBAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;QAEzC,oBAAe,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;QACnD,sBAAiB,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;QAEvD;;WAEG;QACH,gBAAW,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;QAChD;;WAEG;QACH,aAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;QAC1C,uBAAkB,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;QACvD,mBAAc,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;QAC/C,gBAAW,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;QAChD,uBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IAGrD,CAAC;IAED,0CAAoB,GAApB,UAAqB,KAAa,EAAE,KAAa,EAAE,QAAgB,EAAE,QAAgB,EAAE,QAAgB;QACrG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAC,CAAC,CAAC;IACnH,CAAC;IAED,iDAA2B,GAA3B,UAA4B,KAAa,EAAE,KAAa,EAAE,YAAoB,EAAE,QAAgB,EAAE,QAAgB,EAAE,QAAgB;QAClI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE,YAAY,EAAG,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAC,CAAC,CAAC;IAClJ,CAAC;IAED,uCAAiB,GAAjB,UAAkB,OAAe;QAC/B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAED,0CAAoB,GAApB,UAAqB,OAAe;QAClC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC/B,CAAC;IAED,uCAAiB,GAAjB,UAAkB,OAAgB;QAChC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAED,oCAAc,GAAd,UAAe,OAAa;QAC1B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC;IAED,8CAAwB,GAAxB,UAAyB,OAAe;QACtC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAED,sCAAgB,GAAhB,UAAiB,OAAoB;QACnC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC;IAED,2CAAqB,GAArB,UAAsB,OAAe;QACnC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAGD,uCAAiB,GAAjB,UAAkB,OAAe;QAC/B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC;IAED,uCAAiB,GAAjB,UAAkB,OAAe;QAC/B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC;IAED,qCAAe,GAAf,UAAgB,OAAe;QAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC/B,CAAC;IAED,iCAAW,GAAX,UAAY,OAAe;QACzB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC3B,CAAC;IAED,6CAAuB,GAAvB,UAAwB,OAAsB;QAC5C,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACvC,CAAC;IAED,4CAAsB,GAAtB,UAAuB,KAAa,EAAE,KAAa,EAAE,YAAoB,EAAE,QAAgB,EAAE,QAAgB,EAAE,QAAgB;QAC7H,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE,YAAY,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAC,CAAC,CAAC;IACjJ,CAAC;IA3GU,WAAW;QAFvB,gEAAU,EAAE;QACb,qEAAqE;;;OACxD,WAAW,CA4GvB;IAAD,kBAAC;CAAA;AA5GuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTa;AAEa;AACP;AAEE;AAIe;AAG5D,IAAM,UAAU,GAAG,KAAG,qEAAW,CAAC,QAAQ,GAAG,qEAAW,CAAC,OAAO,GAAG,qEAAW,CAAC,WAAa,CAAC;AAC7F,IAAM,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;AACjE,IAAM,OAAO,GAAM,UAAU,eAAY,CAAC;AAC1C,IAAM,IAAI,GAAG,OAAO,CAAC;AACrB,IAAM,IAAI,GAAG,SAAS,CAAC;AACvB,IAAM,KAAK,GAAG,MAAM,CAAC;AAErB;;;GAGG;AAEH;IAQE,yBAAoB,WAAwB,EAAU,IAAgB;QAAlD,gBAAW,GAAX,WAAW,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAY;QAN7D,oBAAe,GAAG,OAAO,CAAC;QAC1B,uBAAkB,GAAG,UAAU,CAAC;QAChC,yBAAoB,GAAG,YAAY,CAAC;QACpC,sBAAiB,GAAG,QAAQ,CAAC;QAC7B,sBAAiB,GAAG,SAAS,CAAC;IAGvC,CAAC;IAGD,oGAAoG;IACpG,6FAA6F;IAE7F,wCAAc,GAAd,UAAe,UAAkB,EAAE,QAAa;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAG,OAAO,GAAG,UAAU,YAAS,EAAE,QAAQ,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACzH,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,qCAAW,GAAX,UAAY,UAAkB,EAAE,kBAA0B;QACxD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAG,OAAO,GAAG,UAAU,SAAI,kBAAoB,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC7H,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,sCAAY,GAAZ,UAAa,UAAkB,EAAE,mBAAkC;QACjE,IAAI,IAAI,GAAG,KAAG,OAAO,GAAG,UAAU,SAAM,CAAC;QACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,mBAAmB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnD,IAAI,CAAC,GAAG,CAAC,KAAK,mBAAmB,CAAC,MAAM,EAAE;gBACxC,IAAI,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;aAClC;iBAAM;gBACL,IAAI,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;aAC1C;SACF;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAClF,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,wCAAc,GAAd,UAAe,UAAkB,EAAE,kBAA0B,EAAE,UAAsB;QACnF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAG,OAAO,GAAG,UAAU,SAAI,kBAAkB,YAAS,EAAE,UAAU,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAChJ,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,6CAAmB,GAAnB,UAAoB,UAAkB,EAAE,kBAA0B,EAAE,UAAsB;QACxF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAG,OAAO,GAAG,UAAU,SAAI,kBAAkB,UAAO,EAAE,UAAU,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC9I,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,8CAAoB,GAApB,UAAqB,UAAkB,EAAE,kBAA0B,EAAE,UAAsB;QACzF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAG,OAAO,GAAG,UAAU,SAAI,kBAAkB,SAAM,EAAE,UAAU,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC7I,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,wCAAc,GAAd,UAAe,UAAkB,EAAE,kBAA0B;QAC3D,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAG,OAAO,GAAG,UAAU,SAAI,kBAAkB,YAAS,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACvI,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAzDU,eAAe;QAD3B,gEAAU,EAAE;yCASsB,yDAAW,EAAgB,+DAAU;OAR3D,eAAe,CA2D3B;IAAD,sBAAC;CAAA;AA3D2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBS;AACa;AACP;AACiB;AAE5D,IAAM,UAAU,GAAG,KAAG,qEAAW,CAAC,QAAQ,GAAG,qEAAW,CAAC,OAAO,GAAG,qEAAW,CAAC,WAAa,CAAC;AAC7F,IAAM,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;AAEjE,IAAM,iBAAiB,GAAM,UAAU,kBAAe,CAAC;AACvD,IAAM,YAAY,GAAS,OAAO,CAAC;AACnC,IAAM,iBAAiB,GAAI,MAAM,CAAC;AAClC,IAAM,kBAAkB,GAAG,SAAS,CAAC;AACrC,IAAM,cAAc,GAAO,iBAAiB,CAAC;AAC7C,IAAM,kBAAkB,GAAG,qBAAqB,CAAC;AACjD,IAAM,kBAAkB,GAAG,qBAAqB,CAAC;AACjD,IAAM,kBAAkB,GAAG,eAAe,CAAC;AAG3C;IACE,mCAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAED,qDAAiB,GAAjB,UAAkB,GAAG;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,EAAE,GAAG,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACzH,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,sDAAkB,GAAlB,UAAmB,GAAG;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,GAAG,kBAAkB,EAAE,GAAG,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACvH,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,sDAAkB,GAAlB,UAAmB,EAAU;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,GAAG,kBAAkB,GAAG,EAAE,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACzH,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,uDAAmB,GAAnB,UAAoB,EAAU,EAAE,QAAQ;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,GAAG,kBAAkB,GAAG,EAAE,GAAG,YAAY,EAAE,QAAQ,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAClJ,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,kDAAc,GAAd,UAAe,IAAiB;QAAjB,gCAAiB;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,GAAG,cAAc,GAAG,IAAI,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IAC5J,CAAC;IAED,8CAAU,GAAV,UAAW,EAAU;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,GAAG,EAAE,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IAC5I,CAAC;IAED,sDAAkB,GAAlB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,GAAG,kBAAkB,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IAC5J,CAAC;IAED,sDAAkB,GAAlB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,GAAG,kBAAkB,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IAC5J,CAAC;IAtCU,yBAAyB;QADrC,gEAAU,EAAE;yCAEe,+DAAU;OADzB,yBAAyB,CAuCrC;IAAD,gCAAC;CAAA;AAvCqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBH;AACa;AACP;AAEkB;AAE3D,IAAM,UAAU,GAAG,KAAG,qEAAW,CAAC,QAAQ,GAAG,qEAAW,CAAC,OAAO,GAAG,qEAAW,CAAC,WAAa,CAAC;AAC7F,+CAA+C;AAC/C,IAAM,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;AACjE,IAAM,gBAAgB,GAAM,UAAU,oBAAiB,CAAC;AACxD,IAAM,gBAAgB,GAAM,UAAU,aAAU,CAAC;AAEjD,IAAM,SAAS,GAAG,YAAY,CAAC;AAC/B,IAAM,YAAY,GAAG,iCAAiC,CAAC;AACvD,IAAM,YAAY,GAAG,iCAAiC,CAAC;AACvD,IAAM,aAAa,GAAG,gBAAgB,CAAC;AACvC,IAAM,uBAAuB,GAAG,0BAA0B,CAAC;AAC3D,IAAM,iBAAiB,GAAG,gCAAgC,CAAC;AAC3D,IAAM,aAAa,GAAG,kCAAkC,CAAC;AACzD,IAAM,cAAc,GAAG,uBAAuB,CAAC;AAC/C,IAAM,OAAO,GAAG,QAAQ,CAAC;AACzB,IAAM,kBAAkB,GAAG,+BAA+B,CAAC;AAC3D,IAAM,qBAAqB,GAAG,wBAAwB,CAAC;AACvD,IAAM,cAAc,GAAG,6BAA6B,CAAC;AACrD,IAAM,eAAe,GAAG,wBAAwB,CAAC;AACjD,IAAM,8BAA8B,GAAG,uCAAuC,CAAC;AAC/E,IAAM,eAAe,GAAG,kBAAkB,CAAC;AAC3C,IAAM,qBAAqB,GAAG,wBAAwB,CAAC;AACvD,IAAM,UAAU,GAAG,+BAA+B,CAAC;AACnD,IAAM,QAAQ,GAAG,iCAAiC;AAGlD;IAEE,8BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAED,8CAAe,GAAf,UAAgB,QAAkB;QAEhC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,gBAAgB,GAAG,QAAQ,CAAC,MAAM,SAAI,QAAQ,CAAC,SAAS,GAAG,eAAiB,EAAE,QAAQ,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACxK,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,6CAAc,GAAd,UAAe,EAAU,EAAE,MAAc,EAAE,SAAiB;QAE1D,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,gBAAgB,GAAG,MAAM,SAAI,SAAS,GAAG,cAAc,GAAG,EAAI,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAClJ,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,iDAAkB,GAAlB,UAAmB,MAAc,EAAE,SAAiB;QAClD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,gBAAgB,GAAG,MAAM,SAAI,SAAS,GAAG,qBAAuB,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACjJ,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,8CAAe,GAAf,UAAgB,MAAc,EAAE,SAAS;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,gBAAgB,GAAG,MAAM,SAAI,SAAS,GAAG,eAAiB,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC3I,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,iDAAkB,GAAlB,UAAmB,QAAgB,EAAE,IAAY,EAAE,QAAgB,EAAE,gBAAwB,EAAE,MAAc,EAAE,SAAS;QACtH,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,gBAAgB,GAAG,MAAM,SAAI,SAAS,gCAA2B,QAAQ,cAAS,IAAI,kBAAa,QAAQ,gBAAW,gBAAkB,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACzN,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,wCAAS,GAAT,UAAU,IAAY,EAAE,UAAkB,EAAE,UAAyB,EAAE,YAAoB,EAAE,IAAmB,EAAE,QAAgB,EACxH,MAAc,EAAE,SAAiB,EAAE,gBAAgB;QAC3D,IAAM,GAAG,GAAW,EAAC,IAAI,QAAE,UAAU,cAAE,UAAU,cAAE,YAAY,gBAAE,IAAI,QAAE,QAAQ,YAAE,gBAAgB,oBAAC,CAAC;QAEnG,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,gBAAgB,GAAG,MAAM,SAAI,SAAS,GAAG,SAAW,EAAE,GAAG,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC3I,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,4CAAa,GAAb,UAAc,MAAc,EAAE,SAAiB;QAC7C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,gBAAgB,GAAG,MAAM,SAAI,SAAS,GAAG,aAAe,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACzI,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,sDAAuB,GAAvB,UAAwB,UAAkB,EAAE,MAAc,EAAE,SAAiB;QAC3E,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,gBAAgB,GAAG,MAAM,SAAI,SAAS,GAAG,uBAAuB,oBAAe,UAAY,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC5K,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,+CAAgB,GAAhB,UAAiB,UAAkB,EAAE,MAAc,EAAE,SAAiB;QACpE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,gBAAgB,GAAG,MAAM,SAAI,SAAS,GAAG,kBAAkB,GAAG,UAAY,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC3J,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,4CAAa,GAAb,UAAc,EAAU,EAAE,MAAc,EAAE,SAAiB;QACzD,IAAM,KAAK,GAAW,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QAC7C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,gBAAgB,GAAG,MAAM,SAAI,SAAS,GAAG,aAAa,GAAG,KAAO,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACjJ,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,6DAA8B,GAA9B,UAA+B,MAAc;QAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAG,gBAAgB,GAAG,MAAM,IAAG,8BAAgC,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC7I,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,8CAAe,GAAf,UAAgB,MAAc,EAAE,SAAiB;QAC/C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,gBAAgB,oBAAiB,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAClH,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,gDAAiB,GAAjB,UAAkB,MAAc,EAAE,SAAiB;QACjD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,gBAAgB,mBAAgB,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACjH,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,kDAAmB,GAAnB,UAAoB,MAAc,EAAE,SAAiB;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,gBAAgB,qBAAkB,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACnH,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,gDAAiB,GAAjB,UAAkB,MAAc,EAAE,SAAiB;QACjD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,gBAAgB,GAAG,MAAM,SAAI,SAAS,uBAAoB,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC3I,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,qDAAsB,GAAtB,UAAuB,IAAY,EAAE,MAAc,EAAE,SAAiB;QACpE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,gBAAgB,GAAG,MAAM,SAAI,SAAS,GAAG,UAAU,GAAG,IAAM,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC7I,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,mDAAoB,GAApB,UAAqB,QAAgB,EAAE,MAAc,EAAE,SAAiB;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,gBAAgB,GAAG,MAAM,SAAI,SAAS,GAAG,QAAQ,GAAG,QAAU,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC/I,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAGD,2CAAY,GAAZ,UAAa,EAAU,EAAE,MAAc,EAAE,SAAiB;QACxD,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,gBAAgB,GAAG,MAAM,SAAI,SAAS,GAAG,YAAY,GAAG,EAAI,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAChJ,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,2CAAY,GAAZ,UAAa,EAAU,EAAE,MAAc,EAAE,SAAiB;QACxD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,gBAAgB,GAAG,MAAM,SAAI,SAAS,GAAG,YAAY,GAAG,EAAI,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC7I,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,gDAAiB,GAAjB,UAAkB,MAAc,EAAE,SAAiB,EAAE,QAAgB,EAAE,QAAgB,EAAG,UAAkB;QAE1G,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,gBAAgB,GAAG,MAAM,SAAI,SAAS,SAAI,QAAQ,SAAI,QAAQ,GAAG,iBAAiB,GAAG,UAAY,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAClL,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,oDAAqB,GAArB,UAAsB,QAAgB,EAAE,QAAgB,EAAE,MAAc,EAAE,SAAiB;QACzF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,gBAAgB,GAAG,MAAM,SAAI,SAAS,GAAG,qBAAqB,kBAAa,QAAQ,kBAAa,QAAU,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC3L,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,4CAAa,GAAb,UAAc,QAAgB,EAAE,QAAgB,EAAE,IAAY,EAAE,MAAc,EAAE,SAAiB;QAC/F,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,gBAAgB,GAAG,MAAM,SAAI,SAAS,gCAA2B,QAAQ,kBAAa,QAAQ,cAAS,IAAM,EAAE,IAAI,EAAC,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACpM,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,8CAAe,GAAf,UAAgB,QAAgB,EAAE,UAAkB,EAAE,IAAY,EAAE,MAAc,EAAE,SAAiB;QACnG,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,gBAAgB,GAAG,MAAM,SAAI,SAAS,kCAA6B,UAAU,kBAAa,QAAQ,cAAS,IAAM,EAAE,IAAI,EAAC,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACxM,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IA9HU,oBAAoB;QADhC,gEAAU,EAAE;yCAGe,+DAAU;OAFzB,oBAAoB,CAgIhC;IAAD,2BAAC;CAAA;AAhIgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BQ;AAEE;AAEc;AAEN;AACM;AACI;AACR;AACJ;AACM;AACR;AAClB;AAEsB;AACZ;AACkB;AACI;AACU;AACV;AAC4B;AAC1B;AACF;AACM;AACmC;AAE/B;AAGA;AACQ;AACpB;AACkB;AACI;AACV;AAIuB;AACjB;AAC0B;AAGvG;IAME,wBACU,WAAwB,EAAU,eAAgC,EAClE,MAAc,EAAU,WAA+B,EACvD,aAAmC,EAAU,kBAA6C;QAHpG,iBAcC;QAbS,gBAAW,GAAX,WAAW,CAAa;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAClE,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAoB;QACvD,kBAAa,GAAb,aAAa,CAAsB;QAAU,uBAAkB,GAAlB,kBAAkB,CAA2B;QAElG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAC,IAAU,IAAK,YAAI,CAAC,IAAI,GAAG,IAAI,EAAhB,CAAgB,CAAC,CAAC;QACtE,IAAI,CAAC,WAAW,CAAC,WAAW;aACzB,SAAS,CAAC,UAAC,OAAgB,IAAK,YAAI,CAAC,OAAO,GAAG,OAAO,EAAtB,CAAsB,CAAC,CAAC;QAE3D,IAAI,CAAC,WAAW,CAAC,kBAAkB;aAChC,SAAS,CAAC,qBAAW,IAAI,YAAI,CAAC,kBAAkB,GAAG,WAAW,EAArC,CAAqC,CAAC,CAAC;QAEnE,IAAI,CAAC,WAAW,CAAC,cAAc;aAC5B,SAAS,CAAC,iBAAO,IAAI,YAAI,CAAC,cAAc,GAAG,OAAO,EAA7B,CAA6B,CAAC,CAAC;IACzD,CAAC;IAED;;;OAGG;IACI,uCAAc,GAArB,UAAsB,EAAU,EAAE,QAAiB;QAAnD,iBAuHC;QAtHC,IAAI,OAAgB,CAAC;QACrB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,EAAE,CAAC;aAC1E,SAAS,CAAC,UAAC,SAAoB;YAC5B,OAAO,GAAG,IAAI,gEAAO,CAAC,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACzE,KAA0B,UAAoB,EAApB,cAAS,CAAC,UAAU,EAApB,cAAoB,EAApB,IAAoB,EAAE;gBAA3C,IAAM,WAAW;gBACpB,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAI,CAAC,eAAe,CAAC,oBAAoB,EAAE,WAAW,CAAC;qBACrF,SAAS,CAAC,UAAC,WAAwB;oBAClC,IAAM,SAAS,GAAG,IAAI,oEAAS,CAAC,WAAW,CAAC,EAAE,EAAE,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;oBACtE,KAAsB,UAAkB,EAAlB,gBAAW,CAAC,MAAM,EAAlB,cAAkB,EAAlB,IAAkB,EAAE;wBAArC,IAAM,OAAO;wBAChB,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,OAAO,CAAC;6BAC9E,SAAS,CAAC,UAAC,OAAgB;4BAC1B,IAAM,KAAK,GAAG,IAAI,4DAAK,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;4BACtD,KAAuB,UAAe,EAAf,YAAO,CAAC,OAAO,EAAf,cAAe,EAAf,IAAe,EAAE;gCAAnC,IAAM,QAAQ;gCACjB,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,QAAQ,CAAC;qCAC/E,SAAS,CAAC,gBAAM;oCACf,mBAAmB;oCACnB,QAAQ,MAAM,CAAC,IAAI,EAAE;wCACnB,KAAK,kEAAU,CAAC,kBAAkB;4CAChC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,2FAAoB,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,QAAQ,EACxG,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;4CACpC,MAAM;wCACR,KAAK,kEAAU,CAAC,oBAAoB;4CAClC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,+FAAsB,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,QAAQ,EAC1G,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;4CACpC,MAAM;wCACR,KAAK,kEAAU,CAAC,qBAAqB;4CACnC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,qFAAiB,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,QAAQ,EACrG,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;4CACpC,MAAM;wCACR,KAAK,kEAAU,CAAC,mBAAmB;4CACjC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,2EAAY,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,QAAQ,EAChG,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,EACjE,MAAM,CAAC,eAAe,EAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,aAAa,EAAE,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;4CACpH,MAAM;wCACR,KAAK,kEAAU,CAAC,kBAAkB;4CAChC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,yEAAW,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,QAAQ,EAC/F,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,EACjE,MAAM,CAAC,eAAe,EAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;4CACvE,MAAM;wCACR,KAAK,kEAAU,CAAC,mBAAmB;4CACjC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,2EAAY,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,QAAQ,EAChG,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,EACjE,MAAM,CAAC,eAAe,EAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;4CACzG,MAAM;wCACR,KAAK,kEAAU,CAAC,sBAAsB;4CACpC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,iFAAe,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,QAAQ,EACnG,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,WAAW,EACrJ,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;4CAC7E,MAAM;wCACR,KAAK,kEAAU,CAAC,qBAAqB;4CACnC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,+EAAc,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,QAAQ,EAClG,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,EAC1F,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,eAAe,EAAE,MAAM,CAAC,aAAa,EAAE,MAAM,CAAC,WAAW,EACpF,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;4CAC7E,MAAM;wCACR,KAAK,kEAAU,CAAC,wBAAwB;4CACtC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,qFAAiB,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,QAAQ,EACrG,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,OAAO,EAC1G,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;4CAC1C,MAAM;wCACR,KAAK,kEAAU,CAAC,0BAA0B;4CACxC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,yFAAmB,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,QAAQ,EACvG,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,YAAY,EAC7F,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;4CAC/E,MAAM;wCACR,KAAK,kEAAU,CAAC,2BAA2B;4CACzC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,2FAAoB,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,QAAQ,EACxG,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,OAAO,EAC1G,MAAM,CAAC,eAAe,EAAE,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;4CACxF,MAAM;wCACR,KAAK,kEAAU,CAAC,0BAA0B;4CACxC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,iFAAe,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,cAAc,EAClF,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,EAClF,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC;4CAC/D,MAAM;wCACR,KAAK,kEAAU,CAAC,eAAe;4CAC7B,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,6FAAqB,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,QAAQ,EACzG,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;4CACxH,MAAM;wCACR,KAAK,kEAAU,CAAC,cAAc;4CAC5B,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,2FAAoB,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,QAAQ,EACxG,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,SAAS,EAC9G,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;4CACpC,MAAM;wCACR;4CACE,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,8DAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,cAAc,EACzE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;4CACrD,MAAM;qCACT;gCACH,CAAC,CAAC,CAAC;6BACN;4BACD,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;4BAC9B,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBAC/B,CAAC,CAAC,CAAC;qBACN;oBACD,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBACrC,CAAC,CAAC,CAAC;aACN;YACD,UAAU,CAAC;gBACT,KAAI,CAAC,WAAW,CAAC,wBAAwB,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBACpE,KAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,KAAI,CAAC,kBAAkB,EAAhC,CAAgC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBACnH,KAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;gBAC5C,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;gBAChC,KAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAE7D,IAAI,QAAQ,EAAE;oBACZ,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;oBACxC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;iBACrC;YACH,CAAC,EAAE,GAAG,CAAC,CAAC;QAEV,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aACxC;YACD,OAAO,CAAC,GAAG,CAAC,2CAA2C,EAAE,GAAG,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IACT,CAAC;IAEM,wCAAe,GAAtB;QAAA,iBAyDC;QAxDC,IAAM,QAAQ,GAAU,IAAI,4DAAK,CAAC,+CAAM,EAAE,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;QAC3D,IAAM,YAAY,GAAc,IAAI,oEAAS,CAAC,+CAAM,EAAE,EAAE,aAAa,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnF,IAAM,UAAU,GAAY,IAAI,gEAAO,CAAC,+CAAM,EAAE,EAAE,cAAW,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAE,EAAE,OAAO,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC;QAEvH,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,IAAI,8DAAO,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;aACrH,SAAS,CAAC,gBAAM;YACb,KAAI,CAAC,eAAe,CAAC,cAAc,CAAC,KAAI,CAAC,eAAe,CAAC,oBAAoB,EAAE,IAAI,sEAAW,CAAC,YAAY,CAAC,EAAE,EAAE,YAAY,CAAC,IAAI,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBAC7J,SAAS,CAAC,gBAAM;gBACb,KAAI,CAAC,eAAe,CAAC,cAAc,CAAC,KAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,IAAI,kEAAS,CAAC,UAAU,CAAC,EAAE,EAAE,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,KAAK,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;qBACzK,SAAS,CAAC,gBAAM;oBACb,KAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,KAAI,CAAC,eAAe,CAAC,eAAe,EAAE,KAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,sEAAU,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,CAAC,CAAC;yBACpI,SAAS,CAAC,gBAAM;wBACb,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;wBACvB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;wBAC1B,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAI,CAAC,eAAe,CAAC,eAAe,EAAE,KAAI,CAAC,IAAI,CAAC,EAAE,CAAC;6BACjF,SAAS,CAAC,UAAC,IAAU;4BAClB,KAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;4BACtC,KAAI,CAAC,WAAW,CAAC,wBAAwB,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;4BAC3D,KAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;4BACnD,KAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;4BAC/C,KAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;wBAC/D,CAAC,EACD,aAAG;4BACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gCAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;6BACxC;4BACD,OAAO,CAAC,GAAG,CAAC,6CAA6C,EAAE,GAAG,CAAC,CAAC;wBAClE,CAAC,CAAC,CAAC;oBACT,CAAC,EACD,aAAG;wBACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;4BAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;yBACxC;wBACD,OAAO,CAAC,GAAG,CAAC,sCAAsC,EAAE,GAAG,CAAC,CAAC;oBAC3D,CAAC,CAAC,CAAC;gBACT,CAAC,EACD,aAAG;oBACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;wBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;qBACxC;oBACD,OAAO,CAAC,GAAG,CAAC,sCAAsC,EAAE,GAAG,CAAC,CAAC;gBAC3D,CAAC,CAAC,CAAC;YACT,CAAC,EACD,aAAG;gBACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;oBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;iBACxC;gBACD,OAAO,CAAC,GAAG,CAAC,sCAAsC,EAAE,GAAG,CAAC,CAAC;YAC3D,CAAC,CAAC,CAAC;QACT,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aACxC;YACD,OAAO,CAAC,GAAG,CAAC,sCAAsC,EAAE,GAAG,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;IACT,CAAC;IAEM,sCAAa,GAApB;QAAA,iBAyDC;QAvDC,iEAAiE;QACjE,iEAAiE;QACjE,mKAAmK;QACnK,wDAAwD;QACxD,KAAsB,UAAuB,EAAvB,SAAI,CAAC,OAAO,CAAC,UAAU,EAAvB,cAAuB,EAAvB,IAAuB,EAAE;YAA1C,IAAI,SAAS;YAChB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;SACpC;QACD,2BAA2B;QAC3B,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAAC,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,sEAAU,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;aACvI,SAAS,CAAC,gBAAM;YACb,qCAAqC;YACrC,KAAI,CAAC,eAAe,CAAC,cAAc,CAAC,KAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC;iBAC1F,SAAS,CAAC,gBAAM;gBACf,sBAAsB;gBACpB,KAAI,CAAC,aAAa,CAAC,eAAe,CAAC,KAAI,CAAC,IAAI,CAAC,EAAE,EAAE,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC;qBAC9D,SAAS,CAAC,mBAAS;oBAChB,SAAS,CAAC,OAAO,CAAC,kBAAQ;wBACxB,KAAI,CAAC,aAAa,CAAC,cAAc,CAAC,QAAQ,CAAC,UAAU,EAAE,KAAI,CAAC,IAAI,CAAC,EAAE,EAAE,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,gBAAM;wBAEpG,CAAC,EACD,aAAG;4BACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gCAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;6BAAE;4BAC3C,OAAO,CAAC,GAAG,CAAC,oDAAoD,CAAC,CAAC;4BAClE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBACnB,CAAC,CAAC,CAAC;oBAEP,CAAC,CAAC,CAAC;gBACL,CAAC,EACD,eAAK;oBACH,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;wBACjF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;qBACxC;oBACD,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC;gBACjD,CAAC,CAAC,CAAC;gBACP,IAAI,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;oBACnC,KAAI,CAAC,eAAe,EAAE,CAAC;iBACxB;qBAAM;oBACL,KAAI,CAAC,WAAW,CAAC,cAAc,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;oBAC3C,KAAI,CAAC,cAAc,CAAC,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;iBACnD;YACH,CAAC,EACD,eAAK;gBACH,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;oBACjF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;iBACxC;gBACD,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC;YACjD,CAAC,CAAC,CAAC;QACT,CAAC,EACD,eAAK;YACH,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBACjF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aACxC;YACD,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACT,CAAC;IAEM,wCAAe,GAAtB,UAAuB,MAAc;QAArC,iBAkCC;QAjCC,mCAAmC;QACnC,KAAkB,UAAyD,EAAzD,SAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,MAAM,EAAf,CAAe,CAAC,CAAC,MAAM,EAAzD,cAAyD,EAAzD,IAAyD,EAAE;YAAxE,IAAI,KAAK;YACZ,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;SAC5B;QACD,mCAAmC;QACnC,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAAC,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,sEAAU,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;aACtI,SAAS,CAAC,gBAAM;YACb,uCAAuC;YACvC,KAAI,CAAC,eAAe,CAAC,cAAc,CAAC,KAAI,CAAC,eAAe,CAAC,oBAAoB,EAAE,MAAM,CAAC;iBACnF,SAAS,CAAC,gBAAM;gBACb,IAAM,KAAK,GAAG,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,MAAM,EAAf,CAAe,CAAC,CAAC;gBACtE,IAAI,KAAK,KAAK,SAAS,EAAE;oBACvB,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;oBACzC,KAAI,CAAC,WAAW,CAAC,wBAAwB,CAAC,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;oBACzE,KAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;oBAC/E,KAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,+CAAM,EAAE,CAAC,CAAC;iBAC9C;qBAAM;oBACL,OAAO,CAAC,GAAG,CAAC,+CAA+C,CAAC,CAAC;iBAC9D;YACH,CAAC,EACD,eAAK;gBACH,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;oBACjF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;iBACxC;gBACD,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC;YACjD,CAAC,CAAC,CAAC;QACT,CAAC,EACD,eAAK;YACH,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBACjF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aACxC;YACD,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACT,CAAC;IAEM,oCAAW,GAAlB,UAAmB,OAAe;QAAlC,iBA0CC;QAzCC,mDAAmD;QACnD,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,KAAI,CAAC,kBAAkB,EAAhC,CAAgC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,OAAO,EAAhB,CAAgB,CAAC,CAAC,OAAO,CAAC;QAC/H,IAAI,OAAO,IAAI,SAAS,EAAE;YACxB,KAAqB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,EAAE;gBAAzB,IAAM,MAAM;gBACf,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;aAC9B;SACF;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;SACrC;QACD,iCAAiC;QACjC,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAAC,IAAI,CAAC,eAAe,CAAC,oBAAoB,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,sEAAU,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;aAC7I,SAAS,CAAC,gBAAM;YACb,oCAAoC;YACpC,KAAI,CAAC,eAAe,CAAC,cAAc,CAAC,KAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,OAAO,CAAC;iBACjF,SAAS,CAAC,gBAAM;gBACb,IAAM,KAAK,GAAG,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,KAAI,CAAC,kBAAkB,EAAhC,CAAgC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,OAAO,EAAhB,CAAgB,CAAC,CAAC;gBAC1H,IAAI,KAAK,KAAK,SAAS,EAAE;oBACvB,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,KAAI,CAAC,kBAAkB,EAAhC,CAAgC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;oBAC5F,IAAI,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,KAAI,CAAC,kBAAkB,EAAhC,CAAgC,CAAC,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;wBAC3F,KAAI,CAAC,aAAa,EAAE,CAAC;qBACtB;oBACD,KAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;oBAC/E,KAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,+CAAM,EAAE,CAAC,CAAC;oBAC7C,KAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;iBAClD;qBAAM;oBACL,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;iBACtD;YACH,CAAC,EACD,eAAK;gBACH,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;oBACjF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;iBACxC;gBACD,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;YAC7C,CAAC,CAAC,CAAC;QACT,CAAC,EACD,eAAK;YACH,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBACjF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aACxC;YACD,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACT,CAAC;IAED;;;OAGG;IACI,sCAAa,GAApB;QAAA,iBA0BC;QAzBC,IAAM,CAAC,GAAc,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,KAAI,CAAC,kBAAkB,EAAhC,CAAgC,CAAC,CAAC;QACzF,IAAI,CAAC,KAAK,SAAS,EAAE;YACnB,IAAM,UAAQ,GAAU,IAAI,4DAAK,CAAC,+CAAM,EAAE,EAAE,YAAS,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAE,EAAE,EAAE,CAAC,CAAC;YAChF,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,IAAI,8DAAO,CAAC,UAAQ,CAAC,EAAE,EAAE,UAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;iBACrH,SAAS,CAAC,gBAAM;gBACb,KAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,KAAI,CAAC,eAAe,CAAC,oBAAoB,EAAE,KAAI,CAAC,kBAAkB,EAAE,IAAI,sEAAU,CAAC,QAAQ,EAAE,UAAQ,CAAC,EAAE,CAAC,CAAC;qBAChJ,SAAS,CAAC,gBAAM;oBACb,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,UAAQ,CAAC,CAAC;gBAC1B,CAAC,EACD,aAAG;oBACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;wBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;qBACxC;oBACD,OAAO,CAAC,GAAG,CAAC,sCAAsC,EAAE,GAAG,CAAC,CAAC;gBAC3D,CAAC,CAAC,CAAC;YACT,CAAC,EACD,aAAG;gBACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;oBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;iBACxC;gBACD,OAAO,CAAC,GAAG,CAAC,sCAAsC,EAAE,GAAG,CAAC,CAAC;YAC3D,CAAC,CAAC,CAAC;SACR;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,sDAAsD,CAAC,CAAC;SACrE;IACH,CAAC;IAED;;;OAGG;IACI,qCAAY,GAAnB,UAAoB,EAAU;QAA9B,iBAiCC;QAhCC,IAAM,CAAC,GAAU,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,KAAI,CAAC,kBAAkB,EAAhC,CAAgC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,KAAI,CAAC,cAAc,EAA5B,CAA4B,CAAC,CAAC;QACpI,IAAI,CAAC,KAAK,SAAS,EAAE;YACnB,oCAAoC;YACpC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,gBAAM;gBAC5F,qCAAqC;gBACrC,KAAI,CAAC,eAAe,CAAC,oBAAoB,CAAC,KAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,KAAI,CAAC,cAAc,EAAE,IAAI,sEAAU,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;qBAClI,SAAS,CAAC,gBAAM;oBACb,4CAA4C;oBAC5C,IAAM,KAAK,GAAG,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,KAAI,CAAC,kBAAkB,EAAhC,CAAgC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,WAAC;wBAC7F,QAAC,CAAC,EAAE,KAAK,KAAI,CAAC,cAAc;oBAA5B,CAA4B,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,EAAE,EAAX,CAAW,CAAC,CAAC;oBACpE,IAAI,KAAK,KAAK,SAAS,EAAE;wBACvB,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,KAAI,CAAC,kBAAkB,EAAhC,CAAgC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,WAAC;4BAC/E,QAAC,CAAC,EAAE,KAAK,KAAI,CAAC,cAAc;wBAA5B,CAA4B,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;qBAC1D;oBACD,KAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;gBACnD,CAAC,EACD,aAAG;oBACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;wBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;qBACxC;oBACD,OAAO,CAAC,GAAG,CAAC,sCAAsC,EAAE,GAAG,CAAC,CAAC;gBAC3D,CAAC,CAAC,CAAC;YACT,CAAC,EACD,aAAG;gBACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;oBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;iBACxC;gBACD,OAAO,CAAC,GAAG,CAAC,sCAAsC,EAAE,GAAG,CAAC,CAAC;YAC3D,CAAC,CAAC,CAAC;SACN;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,sDAAsD,CAAC,CAAC;SACrE;IACH,CAAC;IAED,2DAA2D;IAC3D,mCAAmC;IAC5B,uCAAc,GAArB,UAAsB,UAAkB;QAAxC,iBAmHC;QAlHC,IAAI,MAAM,CAAC;QAEX,IAAM,CAAC,GAAU,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,KAAI,CAAC,kBAAkB,EAAhC,CAAgC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,KAAI,CAAC,cAAc,EAA5B,CAA4B,CAAC,CAAC;QACpI,IAAM,OAAO,GAAG,EAAE,CAAC;QACnB,IAAM,eAAe,GAAG,EAAE,CAAC;QAC3B,IAAM,qBAAqB,GAAG,QAAQ,CAAC;QACvC,IAAM,oBAAoB,GAAG,OAAO,CAAC;QACrC,IAAM,WAAW,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,KAAK,SAAS,EAAE;YACnB,QAAQ,UAAU,EAAE;gBAClB,KAAK,kEAAU,CAAC,kBAAkB;oBAChC,MAAM,GAAG,IAAI,2FAAoB,CAAC,+CAAM,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAC/F,IAAI,EAAE,UAAU,CAAC,CAAC;oBACpB,MAAM;gBACR,KAAK,kEAAU,CAAC,oBAAoB;oBAClC,MAAM,GAAG,IAAI,+FAAsB,CAAC,+CAAM,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EACjG,IAAI,EAAE,UAAU,CAAC,CAAC;oBACpB,MAAM;gBACR,KAAK,kEAAU,CAAC,qBAAqB;oBACnC,MAAM,GAAG,IAAI,qFAAiB,CAAC,+CAAM,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAC5F,IAAI,EAAE,UAAU,CAAC,CAAC;oBACpB,MAAM;gBACR,KAAK,kEAAU,CAAC,mBAAmB;oBACjC,MAAM,GAAG,IAAI,2EAAY,CAAC,+CAAM,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EACvF,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,oBAAoB,EAC5D,eAAe,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;oBACjD,MAAM;gBACR,KAAK,kEAAU,CAAC,kBAAkB;oBAChC,MAAM,GAAG,IAAI,yEAAW,CAAC,+CAAM,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EACtF,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,oBAAoB,EAC5D,eAAe,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;oBACzC,MAAM;gBACR,KAAK,kEAAU,CAAC,mBAAmB;oBACjC,MAAM,GAAG,IAAI,2EAAY,CAAC,+CAAM,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EACvF,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,oBAAoB,EAAE,eAAe,EAAE,SAAS,EACxF,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;oBACd,MAAM;gBACR,KAAK,kEAAU,CAAC,sBAAsB;oBACpC,MAAM,GAAG,IAAI,iFAAe,CAAC,+CAAM,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAC1F,IAAI,EAAE,UAAU,EAAE,CAAC,IAAI,qFAAiB,CAAC,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,EAC5D,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,6EAAW,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,EACnG,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;oBACnC,MAAM;gBACR,KAAK,kEAAU,CAAC,qBAAqB;oBACnC,MAAM,GAAG,IAAI,+EAAc,CAAC,+CAAM,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EACzF,IAAI,EAAE,UAAU,EAAE,CAAC,IAAI,qFAAiB,CAAC,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,EAC5D,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,4EAAW,CAAC,GAAG,EAAE,0EAAS,CAAC,KAAK,EACrF,IAAI,6EAAW,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,EACxC,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;oBAC/B,MAAM;gBACR,KAAK,kEAAU,CAAC,wBAAwB;oBACtC,MAAM,GAAG,IAAI,qFAAiB,CAAC,+CAAM,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAC5F,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;oBACpE,MAAM;gBACR,KAAK,kEAAU,CAAC,2BAA2B;oBACzC,MAAM,GAAG,IAAI,2FAAoB,CAAC,+CAAM,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAC/F,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE,WAAW,EAAE,SAAS,EAAE,SAAS,EACvD,4EAAW,CAAC,GAAG,EAAE,iFAAU,CAAC,MAAM,EAAE,mFAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;oBACrE,MAAM;gBACR,KAAK,kEAAU,CAAC,0BAA0B;oBACxC,MAAM,GAAG,IAAI,yFAAmB,CAAC,+CAAM,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAC9F,IAAI,EAAE,UAAU,EAAE,CAAC,IAAI,+FAAyB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAChG,MAAM,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;oBAChC,MAAM;gBACR,KAAK,kEAAU,CAAC,0BAA0B;oBACxC,MAAM,GAAG,IAAI,iFAAe,CAAC,+CAAM,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,IAAI,EAAE,UAAU,EAC5G,OAAO,EAAE,OAAO,EAAE,eAAe,EAAE,EAAE,EAAE,qBAAqB,CAAC,CAAC;oBAChE,MAAM;gBACR,KAAK,kEAAU,CAAC,eAAe;oBAC7B,MAAM,GAAG,IAAI,6FAAqB,CAAC,+CAAM,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAChG,IAAI,EAAE,UAAU,EAAE,CAAC,IAAI,qFAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACjD,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,6EAAW,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC/D,MAAM;gBACR,KAAK,kEAAU,CAAC,cAAc;oBAC5B,MAAM,GAAG,IAAI,2FAAoB,CAAC,+CAAM,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAC/F,IAAI,EAAE,UAAU,EAAE,CAAC,IAAI,qFAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACjD,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,6EAAW,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,SAAS,EACnE,SAAS,EAAE,KAAK,CAAC,CAAC;oBACpB,MAAM;gBACR,uBAAuB;gBACvB;oBACE,MAAM,GAAG,IAAI,8DAAM,CAAC,+CAAM,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EACjF,IAAI,EAAE,UAAU,CAAC,CAAC;oBACpB,MAAM;aACT;YACD,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;YAEhC,oCAAoC;YACpC,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,sEAAU,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,gBAAM;gBACxJ,qCAAqC;gBACrC,KAAI,CAAC,eAAe,CAAC,cAAc,CAAC,KAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,MAAM,CAAC;qBAChF,SAAS,CAAC,gBAAM;oBACb,uCAAuC;oBACvC,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,KAAI,CAAC,cAAc,CAAC,CAAC;oBAC5C,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,KAAI,CAAC,kBAAkB,EAAhC,CAAgC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,KAAI,CAAC,cAAc,EAA5B,CAA4B,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACxI,KAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;oBACjD,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,KAAI,CAAC,OAAO,CAAC,CAAC;gBACvC,CAAC,EACD,aAAG;oBACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;wBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;qBACxC;oBACD,OAAO,CAAC,GAAG,CAAC,sCAAsC,EAAE,GAAG,CAAC,CAAC;gBAC3D,CAAC,CAAC,CAAC;YACT,CAAC,EACD,aAAG;gBACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;oBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;iBACxC;gBACD,OAAO,CAAC,GAAG,CAAC,sCAAsC,EAAE,GAAG,CAAC,CAAC;YAC3D,CAAC,CAAC,CAAC;SACN;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,sDAAsD,CAAC,CAAC;SACrE;IACH,CAAC;IAED;;;;OAIG;IACO,oCAAW,GAArB,UAAsB,UAAkB;QACtC,QAAQ,UAAU,EAAE;YAClB,KAAK,kEAAU,CAAC,SAAS;gBACvB,OAAO,EAAC,WAAW,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC;YAC5E,KAAK,kEAAU,CAAC,YAAY,CAAC;YAC7B,KAAK,kEAAU,CAAC,mBAAmB,CAAC;YACpC,KAAK,kEAAU,CAAC,kBAAkB;gBAChC,OAAO,EAAC,WAAW,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC;YAC3E,KAAK,kEAAU,CAAC,mBAAmB;gBACjC,OAAO,EAAC,WAAW,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC;YAC3E,KAAK,kEAAU,CAAC,sBAAsB,CAAC;YACvC,KAAK,kEAAU,CAAC,qBAAqB,CAAC;YACtC,KAAK,kEAAU,CAAC,0BAA0B,CAAC;YAC3C,KAAK,kEAAU,CAAC,2BAA2B,CAAC;YAC5C,KAAK,kEAAU,CAAC,wBAAwB;gBACtC,OAAO,EAAC,WAAW,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC;YAC5E,KAAK,kEAAU,CAAC,cAAc,CAAC;YAC/B,KAAK,kEAAU,CAAC,eAAe;gBAC7B,OAAO,EAAC,WAAW,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC;YAC5E,KAAK,kEAAU,CAAC,0BAA0B;gBACxC,OAAO,EAAC,WAAW,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC;YAC1E,KAAK,kEAAU,CAAC,kBAAkB,CAAC;YACnC,KAAK,kEAAU,CAAC,oBAAoB;gBAClC,OAAO,EAAC,WAAW,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC;YAC3E,KAAK,kEAAU,CAAC,qBAAqB;gBACnC,OAAO,EAAC,WAAW,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC;YAC5E,qHAAqH;YACrH,uBAAuB;YACvB;gBACE,OAAO,EAAC,WAAW,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC;SAC7E;IAEH,CAAC;IA5jBU,cAAc;QAD1B,gEAAU,EAAE;yCAQY,yDAAW,EAA2B,kEAAe;YAC1D,uDAAM,EAAuB,wEAAkB;YACxC,4EAAoB,EAA8B,sFAAyB;OATzF,cAAc,CA8jB1B;IAAD,qBAAC;CAAA;AA9jB0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CQ;AACa;AACP;AACA;AAKkB;AAG1C;AAI0B;AAEiB;AAG5D,IAAM,UAAU,GAAG,KAAG,qEAAW,CAAC,QAAQ,GAAG,qEAAW,CAAC,OAAO,GAAG,qEAAW,CAAC,WAAa,CAAC;AAC7F,IAAM,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;AAEjE,qCAAqC;AACrC,IAAM,cAAc,GAAM,UAAU,qBAAkB,CAAC;AACvD,IAAM,UAAU,GAAG,YAAY,CAAC;AAChC,IAAM,UAAU,GAAG,aAAa,CAAC;AACjC,IAAM,UAAU,GAAG,aAAa,CAAC;AACjC,IAAM,IAAI,GAAG,aAAa,CAAC;AAC3B,IAAM,QAAQ,GAAG,aAAa,CAAC;AAC/B,IAAM,UAAU,GAAG,mBAAmB,CAAC;AACvC,IAAM,QAAQ,GAAG,eAAe,CAAC;AACjC,IAAM,UAAU,GAAG,iBAAiB,CAAC;AACrC,IAAM,WAAW,GAAG,oBAAoB,CAAC;AACzC,IAAM,SAAS,GAAG,qBAAqB,CAAC;AACxC,IAAM,UAAU,GAAG,yBAAyB,CAAC;AAC7C,IAAM,cAAc,GAAG,oBAAoB,CAAC;AAC5C,IAAM,mBAAmB,GAAG,sBAAsB,CAAC;AACnD,IAAM,oBAAoB,GAAG,uBAAuB,CAAC;AACrD,IAAM,kBAAkB,GAAG,oBAAoB,CAAC;AAChD,IAAM,gBAAgB,GAAG,qBAAqB,CAAC;AAC/C,IAAM,kBAAkB,GAAG,qBAAqB,CAAC;AACjD,IAAM,mBAAmB,GAAG,sBAAsB,CAAC;AAGnD;IAIE,4BAAoB,IAAgB,EAChB,WAAwB,EACxB,MAAc;QAFlC,iBASC;QATmB,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QAChC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,WAAW,CAAC,WAAW;iBACzB,SAAS,CAAC,iBAAO;gBAChB,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACzB,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IAED,8CAAiB,GAAjB,UAAkB,MAAc,EAAE,WAAyB;QACzD,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,cAAc,GAAG,WAAW,SAAI,MAAQ,EAAE,WAAW,CAAC,eAAe,EAAE,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC1J,GAAG,CACF,UAAC,QAAsB;YACrB,OAAO,QAAQ,CAAC;QAClB,CAAC,CACF,CAAC;IACN,CAAC;IAED,8CAAiB,GAAjB,UAAkB,MAAc,EAAE,IAAY;QAA9C,iBAcC;QAbC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAG,cAAc,GAAG,cAAc,GAAG,IAAI,gBAAW,MAAQ,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC1I,GAAG,CACF,UAAC,QAA6B;YAE5B,OAAO,QAAQ,CAAC;QAClB,CAAC,EAAE,UAAC,GAAa;YACf,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aACxC;YACD,KAAK,CAAC,mFAAmF,CAAC,CAAC;YAC3F,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CAAC;IAET,CAAC;IAED,iDAAoB,GAApB,UAAqB,MAAc,EAAE,QAAgB,EAAE,QAA6B;QAApF,iBAcC;QAbC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAG,cAAc,GAAG,oBAAoB,GAAG,MAAM,SAAI,QAAU,EAAE,QAAQ,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACxJ,IAAI,CAAC,0DAAG,CACP,UAAC,QAAkB;YAEjB,OAAO,QAAQ,CAAC;QAClB,CAAC,EAAE,UAAC,GAAa;YACf,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aACxC;YACD,KAAK,CAAC,mFAAmF,CAAC,CAAC;YAC3F,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED,qCAAQ,GAAR,UAAS,MAAc,EAAE,SAAe;QAAxC,iBAaC;QAZC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAG,cAAc,GAAG,UAAU,SAAI,MAAQ,EAAE,SAAS,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACpI,IAAI,CAAC,0DAAG,CACP,UAAC,QAAkB;YAEjB,OAAO,QAAQ,CAAC;QAClB,CAAC,EAAE,UAAC,GAAa;YACf,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,KAAK,CAAC,mFAAmF,CAAC,CAAC;YAC3F,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED,6CAAgB,GAAhB,UAAiB,MAAc,EAAE,YAA8B;QAA/D,iBAaC;QAZC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAG,cAAc,GAAG,kBAAkB,SAAI,MAAQ,EAAE,YAAY,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC/I,IAAI,CAAC,0DAAG,CACP,UAAC,QAAkB;YAEjB,OAAO,QAAQ,CAAC;QAClB,CAAC,EAAC,UAAC,GAAa;YACd,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,KAAK,CAAC,mFAAmF,CAAC,CAAC;YAC3F,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED,uCAAU,GAAV,UAAW,MAAc,EAAE,QAAc;QAAzC,iBAiBC;QAhBC,IAAM,SAAS,GAAS,IAAI,sEAAI,EAAE,CAAC;QACnC,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAEhC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAG,cAAc,GAAG,UAAU,GAAG,MAAQ,EAAE,SAAS,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAClI,IAAI,CAAC,0DAAG,CACP,UAAC,QAAkB;YAEjB,OAAO,QAAQ,CAAC;QAClB,CAAC,EACD,UAAC,GAAa;YACZ,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,KAAK,CAAC,mFAAmF,CAAC,CAAC;YAC3F,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED,gDAAmB,GAAnB,UAAoB,MAAc,EAAE,aAAsC;QAA1E,iBAcC;QAbC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAG,cAAc,GAAG,mBAAmB,GAAG,MAAQ,EAAE,aAAa,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC/I,IAAI,CAAC,0DAAG,CACP,UAAC,QAAkB;YAEjB,OAAO,QAAQ,CAAC;QAClB,CAAC,EACD,UAAC,GAAa;YACZ,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,KAAK,CAAC,mFAAmF,CAAC,CAAC;YAC3F,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED,yCAAY,GAAZ,UAAa,MAAc,EAAE,SAAe;QAA5C,iBAcC;QAbC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAG,cAAc,GAAG,QAAQ,GAAG,SAAS,CAAC,EAAE,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAG,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACzK,IAAI,CAAC,0DAAG,CACP,UAAC,QAAkB;YAEjB,OAAO,QAAQ,CAAC;QAClB,CAAC,EACD,UAAC,GAAa;YACZ,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,KAAK,CAAC,mFAAmF,CAAC,CAAC;YAC3F,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED,2CAAc,GAAd,UAAe,MAAc,EAAE,SAAe;QAA9C,iBAcC;QAbC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAG,cAAc,GAAG,UAAU,GAAG,SAAS,CAAC,EAAE,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAE,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC1K,IAAI,CAAC,0DAAG,CACP,UAAC,QAAkB;YAEjB,OAAO,QAAQ,CAAC;QAClB,CAAC,EACD,UAAC,GAAa;YACZ,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,KAAK,CAAC,mFAAmF,CAAC,CAAC;YAC3F,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED,2CAAc,GAAd,UAAe,MAAc,EAAE,QAA6B;QAA5D,iBAcC;QAbC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,GAAG,mBAAmB,GAAG,MAAM,EAAE,QAAQ,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACrI,SAAS,CACR,UAAC,QAAkB;YACjB,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,QAAQ,CAAC,CAAC;YAEjD,OAAO,QAAQ,CAAC;QAClB,CAAC,EACD,UAAC,GAAa;YACZ,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,KAAK,CAAC,mFAAmF,CAAC,CAAC;YAC3F,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CAAC;IACT,CAAC;IAED,+CAAkB,GAAlB,UAAmB,MAAc,EAAE,IAAS;QAC1C,OAAO,aAAW,MAAM,oBAAe,IAAI,CAAC,UAAU,mBAAc,IAAI,CAAC,SAAW,CAAC;IACvF,CAAC;IAED,uCAAU,GAAV,UAAW,MAAc,EAAE,SAAe;QAA1C,iBAcC;QAbC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAG,cAAc,GAAG,UAAU,GAAG,SAAS,CAAC,EAAE,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,SAAS,CAAG,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC7K,IAAI,CAAC,0DAAG,CACP,UAAC,QAAkB;YAEjB,OAAO,QAAQ,CAAC;QAClB,CAAC,EACD,UAAC,GAAa;YACZ,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,KAAK,CAAC,mFAAmF,CAAC,CAAC;YAC3F,OAAO,EAAE,CAAC;QACZ,CAAC,CACF,CAAC,CAAC;IACP,CAAC;IAED,+CAAkB,GAAlB,UAAmB,MAAc,EAAE,YAA8B;QAAjE,iBAcC;QAbC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAG,cAAc,GAAG,kBAAkB,GAAG,MAAM,SAAI,YAAY,CAAC,EAAI,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACrJ,IAAI,CAAC,0DAAG,CACP,UAAC,QAAkB;YAEjB,OAAO,QAAQ,CAAC;QAClB,CAAC,EACD,UAAC,GAAa;YACZ,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,KAAK,CAAC,mFAAmF,CAAC,CAAC;YAC3F,OAAO,EAAE,CAAC;QACZ,CAAC,CACF,CAAC,CAAC;IACP,CAAC;IAED,sDAAyB,GAAzB,UAA0B,MAAc,EAAE,QAAgB;QAA1D,iBAcC;QAbC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAG,cAAc,GAAG,UAAU,SAAI,MAAM,kBAAa,QAAU,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC7I,IAAI,CAAC,0DAAG,CACP,UAAC,QAAkB;YAEjB,OAAO,QAAQ,CAAC;QAClB,CAAC,EACD,UAAC,GAAa;YACZ,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,KAAK,CAAC,mFAAmF,CAAC,CAAC;YAC3F,OAAO,EAAE,CAAC;QACZ,CAAC,CACF,CAAC,CAAC;IACP,CAAC;IAED,gDAAmB,GAAnB,UAAoB,MAAc;QAAlC,iBAcC;QAbC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAG,cAAc,GAAG,SAAS,SAAI,MAAM,mBAAc,IAAI,CAAC,OAAO,CAAC,EAAI,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACpJ,IAAI,CAAC,0DAAG,CACP,UAAC,QAAkB;YAEjB,OAAO,QAAQ,CAAC;QAClB,CAAC,EACD,UAAC,GAAa;YACZ,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,KAAK,CAAC,mFAAmF,CAAC,CAAC;YAC3F,OAAO,EAAE,CAAC;QACZ,CAAC,CACF,CAAC,CAAC;IACP,CAAC;IAED,wCAAW,GAAX,UAAY,MAAc;QAA1B,iBAeC;QAdC,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAG,cAAc,GAAG,QAAQ,SAAI,MAAM,mBAAc,IAAI,CAAC,OAAO,CAAC,EAAI,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACnJ,IAAI,CAAC,0DAAG,CACP,UAAC,QAAkB;YAEjB,OAAO,QAAQ,CAAC;QAClB,CAAC,EACD,UAAC,GAAa;YACZ,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,KAAK,CAAC,mFAAmF,CAAC,CAAC;YAC3F,OAAO,EAAE,CAAC;QACZ,CAAC,CACF,CAAC,CAAC;IACP,CAAC;IAED,gDAAmB,GAAnB,UAAoB,MAAc;QAAlC,iBAcC;QAbC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAG,cAAc,GAAG,gBAAgB,SAAI,MAAQ,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC9H,IAAI,CAAC,0DAAG,CACP,UAAC,QAAkB;YAEjB,OAAO,QAAQ,CAAC;QAClB,CAAC,EACD,UAAC,GAAa;YACV,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,KAAK,CAAC,mFAAmF,CAAC,CAAC;YAC3F,OAAO,EAAE,CAAC;QACZ,CAAC,CACJ,CAAC,CAAC;IACP,CAAC;IA7QU,kBAAkB;QAD9B,gEAAU,EAAE;yCAKe,+DAAU;YACH,yDAAW;YAChB,sDAAM;OANvB,kBAAkB,CA8Q9B;IAAD,yBAAC;CAAA;AA9Q8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CM;AACa;AACP;AAKiB;AAG5D,IAAM,UAAU,GAAG,KAAG,qEAAW,CAAC,QAAQ,GAAG,qEAAW,CAAC,OAAO,GAAG,qEAAW,CAAC,WAAa,CAAC;AAC7F,IAAM,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;AACjE,IAAM,qBAAqB,GAAM,UAAU,cAAW,CAAC;AACvD,IAAM,OAAO,GAAG,SAAS,CAAC;AAE1B;;;GAGG;AAEH;IAIE,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAED,uCAAc,GAAd;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAqB,EAAG,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACpG,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAVU,cAAc;QAD1B,gEAAU,EAAE;yCAKe,+DAAU;OAJzB,cAAc,CAY1B;IAAD,qBAAC;CAAA;AAZ0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBuB;AACP;AACN;AACwB;AAG7D,IAAM,UAAU,GAAG,KAAG,qEAAW,CAAC,QAAQ,GAAG,qEAAW,CAAC,OAAO,GAAG,qEAAW,CAAC,WAAa,CAAC;AAC7F,IAAM,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;AACjE,IAAM,cAAc,GAAM,UAAU,WAAQ,CAAC;AAC7C,IAAM,MAAM,GAAG,QAAQ,CAAC;AACxB,IAAM,GAAG,GAAG,MAAM,CAAC;AACnB,IAAM,UAAU,GAAG,SAAS,CAAC;AAC7B,IAAM,MAAM,GAAG,SAAS,CAAC;AACzB,IAAM,KAAK,GAAG,OAAO,CAAC;AACtB,IAAM,QAAQ,GAAG,kBAAkB,CAAC;AACpC,IAAM,YAAY,GAAG,eAAe,CAAC;AACrC,IAAM,aAAa,GAAG,gBAAgB,CAAC;AACvC,IAAM,WAAW,GAAG,cAAc,CAAC;AAEnC,IAAM,YAAY,GAAG,eAAe,CAAC;AACrC,IAAM,cAAc,GAAG,gBAAgB,CAAC;AACxC,IAAM,aAAa,GAAG,eAAe,CAAC;AACtC,IAAM,YAAY,GAAG,SAAS,CAAC;AAC/B,IAAM,WAAW,GAAG,aAAa,CAAC;AAElC;;GAEG;AAEH;IAEE,4BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAED,uCAAU,GAAV,UAAW,EAAU;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,GAAG,EAAE,GAAG,MAAM,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC1G,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,sCAAS,GAAT,UAAU,QAAgB,EAAE,QAAgB;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,cAAc,GAAG,KAAK,kBAAa,QAAQ,kBAAa,QAAU,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACnJ,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IACD,wCAAW,GAAX;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,GAAG,WAAW,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC1G,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,uCAAU,GAAV,UAAW,EAAU,EAAE,QAAgB;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,cAAc,GAAG,EAAE,GAAG,UAAU,kBAAa,QAAU,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC3I,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,yCAAY,GAAZ,UAAa,EAAU,EAAE,KAAa,EAAE,QAAgB;QACtD,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,cAAc,GAAG,EAAE,GAAG,QAAQ,kBAAa,QAAU,EAAG,KAAK,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC9I,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,6CAAgB,GAAhB,UAAiB,EAAU,EAAE,QAAgB,EAAE,WAAmB;QAChE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,cAAc,GAAG,EAAE,GAAG,YAAY,qBAAgB,WAAa,EAAE,QAAQ,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC1J,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,yCAAY,GAAZ,UAAa,EAAU,EAAE,QAAgB,EAAE,QAAgB;QACxD,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,cAAc,GAAG,EAAE,GAAG,YAAY,kBAAa,QAAU,EAAE,QAAQ,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACrJ,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,0CAAa,GAAb,UAAc,EAAU,EAAE,SAAiB,EAAE,QAAgB;QAC3D,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,cAAc,GAAG,EAAE,GAAG,aAAa,kBAAa,QAAU,EAAE,SAAS,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACtJ,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAEA,wCAAW,GAAX,UAAY,EAAU,EAAE,OAAe,EAAE,QAAgB;QACvD,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,cAAc,GAAG,EAAE,GAAG,WAAW,kBAAa,QAAU,EAAE,OAAO,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAClJ,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,uCAAU,GAAV,UAAW,IAAY,EAAE,QAAgB,EAAE,KAAa,EAAE,SAAiB,EAAE,QAAgB,EAAE,QAAgB,EAAE,eAA8B;QAC7I,IAAM,GAAG,GAAW,EAAC,IAAI,QAAE,QAAQ,YAAE,KAAK,SAAE,SAAS,aAAE,QAAQ,YAAE,QAAQ,YAAE,eAAe,mBAAC,CAAC;QAE5F,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,MAAM,EAAE,GAAG,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC3G,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,oCAAO,GAAP,UAAQ,EAAU;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,GAAG,EAAE,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACjG,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,iDAAoB,GAApB,UAAqB,KAAa;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,GAAG,cAAc,EAAE,KAAK,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACpH,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,0CAAa,GAAb,UAAc,QAAgB,EAAE,KAAa;QAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,cAAc,GAAG,aAAa,eAAU,KAAO,EAAE,QAAQ,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC1I,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,yCAAY,GAAZ,UAAa,KAAa;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,cAAc,GAAG,YAAY,eAAU,KAAO,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aAC/H,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IA9EU,kBAAkB;QAD9B,gEAAU,EAAE;yCAGe,+DAAU;OAFzB,kBAAkB,CA+E9B;IAAD,yBAAC;CAAA;AA/E8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BI;AACa;AACP;AAGmB;AAE5D,IAAM,UAAU,GAAG,KAAG,qEAAW,CAAC,QAAQ,GAAG,qEAAW,CAAC,OAAO,GAAG,qEAAW,CAAC,WAAa,CAAC;AAC7F,IAAM,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;AACjE,IAAM,gBAAgB,GAAM,UAAU,oBAAiB,CAAC;AACxD,IAAM,OAAO,GAAG,6BAA6B,CAAC;AAC9C,IAAM,QAAQ,GAAG,kCAAkC,CAAC;AAEpD,IAAM,MAAM,GAAG,YAAY,CAAC;AAC5B,IAAM,KAAK,GAAG,aAAa,CAAC;AAC5B,IAAM,GAAG,GAAG,WAAW,CAAC;AACxB,IAAM,QAAQ,GAAG,YAAY,CAAC;AAG9B;IAEE,8BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAED,sDAAsD;IACtD,yCAAU,GAAV,UAAW,QAAgB,EAAE,QAAgB,EAAE,MAAc,EAAE,SAAiB;QAC/E,6BAA6B;QAC5B,6BAA6B;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,gBAAgB,GAAG,MAAM,SAAI,SAAS,GAAG,OAAO,GAAG,QAAQ,GAAG,MAAM,GAAG,QAAU,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IAC5M,CAAC;IAED,2CAA2C;IAC3C,0CAAW,GAAX,UAAY,QAAgB,EAAE,QAAgB,EAAE,SAAiB,EAAE,OAAe,EAAE,UAAkB,EAAE,MAAc,EAAE,SAAiB;QACvI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,gBAAgB,GAAG,MAAM,SAAI,SAAS,GAAG,QAAQ,GAAG,QAAQ,GAAG,MAAM,GAAG,QAAQ,GAAG,KAAK,GAAG,SAAS,GAAG,GAAG,GAAG,OAAO,GAAG,QAAQ,GAAG,UAAY,EAAE,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvQ,CAAC;IAfU,oBAAoB;QADhC,gEAAU,EAAE;yCAGe,+DAAU;OAFzB,oBAAoB,CAgBhC;IAAD,2BAAC;CAAA;AAhBgC;;;;;;;;;;;;ACpBjC,gCAAgC,iBAAiB,KAAK,wBAAwB,yBAAyB,cAAc,eAAe,gBAAgB,gBAAgB,KAAK,kBAAkB,yBAAyB,cAAc,aAAa,gBAAgB,kBAAkB,KAAK,sBAAsB,yBAAyB,iBAAiB,eAAe,aAAa,gBAAgB,KAAK,kBAAkB,yBAAyB,gBAAgB,cAAc,eAAe,mBAAmB,KAAK,0BAA0B,cAAc,eAAe,mBAAmB,KAAK,+BAA+B,mBAAmB,KAAK,sCAAsC,gCAAgC,KAAK,qCAAqC,mBAAmB,KAAK,mCAAmC,yBAAyB,gBAAgB,uBAAuB,cAAc,2BAA2B,kBAAkB,KAAK,oBAAoB,4BAA4B,KAAK,qCAAqC,qCAAqC,KAAK,oCAAoC,oCAAoC,KAAK,K;;;;;;;;;;;ACAznC,kEAAkE,gyBAAgyB,+BAA+B,8bAA8b,+BAA+B,uRAAuR,saAAsa,uBAAuB,uDAAuD,UAAU,8MAA8M,2BAA2B,0WAA0W,cAAc,8SAA8S,eAAe,6P;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAz8F;AAEhB;AACF;AACb;AAC0B;AACjB;AAEY;AASY;AACI;AAQ9E;IAwBE,4BAAoB,WAAwB,EACtB,cAA8B,EAChC,gBAAkC,EAClC,mBAAwC,EACxC,mBAAwC,EACxC,qBAA4C,EAC5C,MAAc;QANd,gBAAW,GAAX,WAAW,CAAa;QACtB,mBAAc,GAAd,cAAc,CAAgB;QAChC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,WAAM,GAAN,MAAM,CAAQ;QAtBxB,eAAU,GAAG,KAAK,CAAC;QAU7B,8BAAyB,GAAG,KAAK,CAAC;QAClC,0BAAqB,GAAG,KAAK,CAAC;QAC9B,0BAAqB,GAAG,KAAK,CAAC;QAC9B,WAAM,GAAG,MAAM,CAAC;IAWhB,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAwCC;QAvCC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,IAAI,GAAG,KAAK,EAAjB,CAAiB,CAAC,CAAC;QAEhE,IAAI,CAAC,WAAW,CAAC,kBAAkB;aAChC,SAAS,CAAC,eAAK;YACd,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,KAAK,GAAG,CAAC,EAAE;gBACb,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aACxC;QACH,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,WAAW,CAAC,WAAW;aACzB,SAAS,CAAC,UAAC,OAAgB;YAC1B,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,WAAW,CAAC,kBAAkB;aAChC,SAAS,CAAC,qBAAW,IAAI,YAAI,CAAC,kBAAkB,GAAG,WAAW,EAArC,CAAqC,CAAC,CAAC;QAEnE,IAAI,CAAC,WAAW,CAAC,cAAc;aAC5B,SAAS,CAAC,iBAAO,IAAI,YAAI,CAAC,cAAc,GAAG,OAAO,EAA7B,CAA6B,CAAC,CAAC;QAEvD,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAvB,CAAuB,CAAC,CAAC;QAC1E,IAAI,CAAC,mBAAmB,CAAC,8BAA8B,CAAC,SAAS,CAAC,iBAAO;YACvE,KAAI,CAAC,qBAAqB,GAAG,OAAO,CAAC;QACvC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,SAAS,CAAC,iBAAO;YAC7D,KAAI,CAAC,yBAAyB,GAAG,OAAO,CAAC;QAC3C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,SAAS,CAAC,cAAI;YAC7D,IAAG,IAAI,EAAC;gBACN,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACtB;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,qBAAqB,CAAC,0BAA0B,CAAC,SAAS,CAAC,iBAAO;YACrE,KAAI,CAAC,qBAAqB,GAAG,OAAO,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACH,yCAAY,GAAZ;QACE,IAAM,QAAQ,GAAa,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC;QAE1D,IAAI,CAAC,cAAc,GAAI,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,aAAyB,CAAC,EAAE,CAAC;QACnF,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAE3D,IAAI,YAAsB,CAAC;QAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACjD,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,SAAS,EAAE;gBAC9C,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACrC;SACF;QAED,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC;QACzB,IAAI,YAAY,KAAK,SAAS,EAAE;YAC9B,YAAY,CAAC,QAAQ,GAAG,KAAK,CAAC;SAC/B;QACD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,EAAE,CAAC;IAE/B,CAAC;IAED,wCAAW,GAAX,UAAY,KAAK;QACf,IAAI,KAAK,KAAK,SAAS,EAAE;YACvB,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACjE,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;SAChC;IACH,CAAC;IAED;;;;OAIG;IACO,+CAAkB,GAA5B,UAA6B,OAAe;QAA5C,iBAgBC;QAfC,IAAM,QAAQ,GAAa,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,WAAC,IAAI,OAAC,CAAC,CAAC,aAAa,CAAC,OAAO,CAAC,aAAyB,CAAC,EAAE,KAAK,OAAO,EAAjE,CAAiE,CAAC,CAAC;QAC1H,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;YAC/B,OAAO,EAAE,qCAAmC,QAAQ,CAAC,MAAM,OAAI;YAC/D,MAAM,EAAE,cAAc;YACtB,IAAI,EAAE,aAAa;YACnB,MAAM,EAAE;gBACN,eAAe;gBACf,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;gBAClC,KAAI,CAAC,cAAc,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YAC3C,CAAC;YACD,MAAM,EAAE;gBACN,KAAI,CAAC,IAAI,GAAG,EAAE,CAAC;gBACf,KAAI,CAAC,IAAI,GAAG,CAAC,EAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,oBAAoB,EAAC,CAAC,CAAC;YACtF,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,sEAAsE;IAC5D,uCAAU,GAApB,UAAqB,KAAK,EAAE,KAAK;QAC/B,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IAC1C,CAAC;IAED,2CAAc,GAAd,UAAe,KAAK,EAAE,IAAI;QACxB,OAAO,IAAI,CAAC;IACd,CAAC;IAES,0CAAa,GAAvB,UAAwB,KAAK;QAC3B,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IA9IqB;QAArB,iEAAW,CAAC,OAAO,CAAC;;iEAAmB;IAgBpB;QAAnB,+DAAS,CAAC,uDAAO,CAAC;kCAAU,uDAAO;uDAAC;IAjB1B,kBAAkB;QAN9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,SAAS,EAAE,CAAC,+DAAmB,CAAC;;;SAGjC,CAAC;yCAyBiC,kEAAW;YACN,wEAAc;YACd,qEAAgB;YACb,+DAAmB;YACnB,wFAAmB;YACjB,4FAAqB;YACpC,sDAAM;OA9BvB,kBAAkB,CAiJ9B;IAAD,yBAAC;CAAA;AAjJ8B;;;;;;;;;;;;;AC1B/B;AAAA;AAAO,IAAM,mBAAmB,GAAQ;IACtC,QAAQ,EAAG;QACT;YACE,EAAE,EAAE,CAAC;YACL,IAAI,EAAE,kBAAkB;YACxB,IAAI,EAAE,kBAAkB;YACxB,QAAQ,EAAE;gBACR;oBACE,IAAI,EAAE,aAAa;oBACnB,QAAQ,EAAE,EAAE;iBACb;gBACD;oBACE,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBACR;4BACE,IAAI,EAAE,aAAa;4BACnB,mBAAmB,EAAE,aAAa;4BAClC,MAAM,EAAE,IAAI;4BACZ,UAAU,EAAE;gCACV;oCACE,IAAI,EAAE,iCAAiC;oCACvC,IAAI,EAAE,UAAU;oCAChB,YAAY,EAAE,QAAQ;oCACtB,GAAG,EAAE,CAAC;oCACN,GAAG,EAAG,GAAG;iCACV;6BACF;4BACD,QAAQ,EAAE,EAAE;yBACb;qBACF;iBACF;gBACD;oBACE,IAAI,EAAE,YAAY;oBAClB,QAAQ,EAAE;wBACR;4BACE,IAAI,EAAE,QAAQ;4BACd,QAAQ,EAAE;gCACR;oCACE,IAAI,EAAE,OAAO;oCACb,MAAM,EAAE,KAAK;oCACb,mBAAmB,EAAE,OAAO;oCAC5B,QAAQ,EAAE,OAAO;oCACjB,UAAU,EAAE;wCACV;4CACE,IAAI,EAAE,8BAA8B;4CACpC,IAAI,EAAE,QAAQ;4CACd,YAAY,EAAE,QAAQ;4CACtB,GAAG,EAAE,CAAC;4CACN,GAAG,EAAG,GAAG;yCACV;wCACD;4CACE,IAAI,EAAE,gBAAgB;4CACtB,IAAI,EAAE,MAAM;4CACZ,YAAY,EAAE,aAAa;yCAC5B;qCACF;oCACD,QAAQ,EAAE,EAAE;iCACb;gCACD;oCACE,IAAI,EAAE,UAAU;oCAChB,mBAAmB,EAAE,OAAO;oCAC5B,MAAM,EAAE,KAAK;oCACb,QAAQ,EAAE,UAAU;oCACpB,UAAU,EAAE;wCACV;4CACE,IAAI,EAAE,gCAAgC;4CACtC,IAAI,EAAE,MAAM;4CACZ,YAAY,EAAE,aAAa;yCAC5B;qCACF;oCACD,QAAQ,EAAE,EAAE;iCACb;gCACD;oCACE,IAAI,EAAE,OAAO;oCACb,MAAM,EAAE,KAAK;oCACb,KAAK,EAAE,OAAO;oCACd,mBAAmB,EAAE,OAAO;oCAC5B,UAAU,EAAE;wCACV;4CACE,IAAI,EAAE,4BAA4B;4CAClC,IAAI,EAAE,MAAM;4CACZ,YAAY,EAAE,UAAU;4CACxB,OAAO,EAAE;gDACP,EAAC,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,WAAW,EAAC;gDACxC,EAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAC;6CAC/B;yCACF;qCACF;oCACD,QAAQ,EAAE,EAAE;iCACb;6BACF;yBACF;qBACF;iBACF;aACF;SACF;QACD;YACE,EAAE,EAAE,CAAC;YACL,IAAI,EAAE,eAAe;YACrB,IAAI,EAAE,QAAQ;YACd,QAAQ,EAAE;gBACR;oBACE,IAAI,EAAE,QAAQ;oBACd,mBAAmB,EAAE,OAAO;oBAC5B,UAAU,EAAE;wBACV;4BACE,IAAI,EAAE,qBAAqB;4BAC3B,IAAI,EAAE,MAAM;4BACZ,YAAY,EAAE,OAAO;yBACtB;qBACF;oBACD,QAAQ,EAAE,EAAE;iBACb;gBACD;oBACE,IAAI,EAAE,kBAAkB;oBACxB,mBAAmB,EAAE,iBAAiB;oBACtC,UAAU,EAAE;wBACV;4BACE,IAAI,EAAE,4BAA4B;4BAClC,IAAI,EAAE,QAAQ;4BACd,YAAY,EAAE,OAAO;yBACtB;qBACF;oBACD,QAAQ,EAAE,EAAE;iBACb;aACF;SACF;QACD;YACE,EAAE,EAAE,CAAC;YACL,IAAI,EAAE,WAAW;YACjB,IAAI,EAAE,YAAY;YAClB,QAAQ,EAAE;gBACR;oBACE,IAAI,EAAE,UAAU;oBAChB,mBAAmB,EAAE,UAAU;oBAC/B,UAAU,EAAE;wBACV;4BACE,IAAI,EAAE,kBAAkB;4BACxB,IAAI,EAAE,MAAM;4BACZ,YAAY,EAAE,OAAO;yBACtB;qBACF;oBACD,QAAQ,EAAE,EAAE;iBACb;gBACD;oBACE,IAAI,EAAE,mBAAmB;oBACzB,mBAAmB,EAAE,kBAAkB;oBACvC,UAAU,EAAE;wBACV;4BACE,IAAI,EAAE,2BAA2B;4BACjC,IAAI,EAAE,MAAM;4BACZ,YAAY,EAAE,UAAU;4BACxB,OAAO,EAAE;gCACP,EAAC,KAAK,EAAE,cAAc,EAAE,KAAK,EAAE,MAAM,EAAC;gCACtC,EAAC,KAAK,EAAE,gBAAgB,EAAE,KAAK,EAAE,QAAQ,EAAC;gCAC1C,EAAC,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,KAAK,EAAC;6BACrC;yBACF;qBACF;oBACD,QAAQ,EAAE,EAAE;iBACb;aACF;SACF;QACD;YACE,EAAE,EAAE,CAAC;YACL,IAAI,EAAE,SAAS;YACf,IAAI,EAAE,OAAO;YACb,QAAQ,EAAE;gBACR;oBACE,IAAI,EAAE,kBAAkB;oBACxB,mBAAmB,EAAE,aAAa;oBAClC,QAAQ,EAAE,IAAI;oBACd,UAAU,EAAE;wBACV;4BACE,IAAI,EAAE,0BAA0B;4BAChC,IAAI,EAAE,MAAM;4BACZ,YAAY,EAAE,UAAU;4BACxB,OAAO,EAAE;gCACP,EAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAC;gCAC9B,EAAC,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAC;6BACrC;yBACF;qBACF;oBACD,QAAQ,EAAE,EAAE;iBACb;gBACD;oBACE,IAAI,EAAE,sBAAsB;oBAC5B,mBAAmB,EAAE,OAAO;oBAC5B,QAAQ,EAAE,KAAK;oBACf,UAAU,EAAE;wBACV;4BACE,IAAI,EAAE,8BAA8B;4BACpC,IAAI,EAAE,MAAM;4BACZ,YAAY,EAAE,UAAU;4BACxB,OAAO,EAAE;gCACP,EAAC,KAAK,EAAE,mBAAmB,EAAE,KAAK,EAAE,mBAAmB,EAAC;gCACxD,EAAC,KAAK,EAAE,eAAe,EAAE,KAAK,EAAE,eAAe,EAAC;gCAChD,EAAC,KAAK,EAAE,uBAAuB,EAAE,KAAK,EAAE,uBAAuB,EAAC;6BAEjE;yBACF;qBACF;oBACD,QAAQ,EAAE,EAAE;iBACb;aACF;SACF;KACF;CACF,CAAC;;;;;;;;;;;;AC/MF,mB;;;;;;;;;;;ACAA,ueAAue,2D;;;;;;;;;;;;;;;;;;;;;;;;;;ACArb;AACwB;AAEO;AAQjF;IAKE,gCAAoB,mBAAwC,EACxC,kBAAsC;QADtC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,uBAAkB,GAAlB,kBAAkB,CAAoB;QAJ1D,YAAO,GAAe,EAAE,CAAC;IAKzB,CAAC;IAED;;;OAGG;IACH,yCAAQ,GAAR;QAAA,iBAkBC;QAjBC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC;aACvE,SAAS,CAAC,kBAAQ;YACjB,KAAmB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ,EAAE;gBAAxB,IAAM,IAAI;gBACb,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACrE;YACD,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAI,CAAC,mBAAmB,CAAC,kBAAkB,EAAE,CAAC,CAAC;YAClF,IAAM,GAAG,GAAe,EAAE,CAAC;YAC3B,IAAM,aAAa,GAAsB,EAAE,CAAC;YAC5C,KAAqB,UAAY,EAAZ,UAAI,CAAC,OAAO,EAAZ,cAAY,EAAZ,IAAY,EAAE;gBAA9B,IAAM,MAAM;gBACf,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE;oBACnB,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC;oBACxB,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBAC5B;aACF;YACD,KAAI,CAAC,OAAO,GAAG,aAAa,CAAC;YAC7B,KAAI,CAAC,mBAAmB,CAAC,aAAa,GAAG,KAAI,CAAC,OAAO,CAAC;QACxD,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;OAGG;IACH,6CAAY,GAAZ,UAAa,KAAK;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,mBAAmB,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;IAC1H,CAAC;IAED;;;;;;OAMG;IACH,kDAAiB,GAAjB,UAAkB,cAAmB;QACnC,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACzD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAClC,IAAI,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YAClD,IAAI,CAAC,mBAAmB,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAC,EAAE,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAC,CAAC,CAAC;SAClF;QACD,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;QAChC,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;IAChD,CAAC;IAxDU,sBAAsB;QANlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAOyC,kFAAmB;YACpB,gFAAkB;OAN/C,sBAAsB,CAyDlC;IAAD,6BAAC;CAAA;AAzDkC;;;;;;;;;;;;ACXnC,0CAA0C,kBAAkB,KAAK,iBAAiB,wBAAwB,KAAK,0BAA0B,wBAAwB,KAAK,K;;;;;;;;;;;ACAtK,+CAA+C,mNAAmN,yBAAyB,gEAAgE,aAAa,sBAAsB,0EAA0E,aAAa,aAAa,aAAa,ogBAAogB,sSAAsS,4DAA4D,0BAA0B,sBAAsB,0JAA0J,eAAe,2CAA2C,yBAAyB,iwBAAiwB,0BAA0B,2KAA2K,wBAAwB,+tCAA+tC,+WAA+W,wCAAwC,u3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7oI;AACwB;AACE;AAExB;AACe;AACA;AACI;AACqB;AAUnG;IAsBE,yBAAoB,mBAAwC,EACxC,mBAAwC,EACxC,qBAA4C,EAC5C,wBAAyD;QAHzD,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,6BAAwB,GAAxB,wBAAwB,CAAiC;QAlB7E,kBAAa,GAAe,EAAE,CAAC;QAC/B,gBAAW,GAAQ;YACjB,OAAO,EAAE,EAAE;YACX,SAAS,EAAE,EAAE;SACd,CAAC;QACF,aAAQ,GAAmB,EAAE,CAAC;QAE9B,wBAAmB,GAAG,mEAAmB,CAAC;QAC1C,iCAA4B,GAAe,EAAE,CAAC;QAC9C,sBAAiB,GAAQ,EAAE,CAAC;QAG5B,eAAU,GAAe,EAAE,CAAC;IAO5B,CAAC;IAED;;;;OAIG;IACH,8CAAoB,GAApB,UAAqB,cAAmB;QACtC,IAAI,CAAC,4BAA4B,GAAG,cAAc,CAAC;IACrD,CAAC;IAED;;;;;;OAMG;IACH,kDAAwB,GAAxB,UAAyB,SAAc,EAAE,OAAY;QAEnD,IAAM,OAAO,GAAG,EAAC,SAAS,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAC,CAAC;QAC7C,IAAI,MAAM,GAAG,EAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAC,CAAC;QAChD,KAA0B,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,EAAE;YAA9B,IAAM,WAAW;YACpB,IAAI,WAAW,CAAC,IAAI,EAAE;gBACpB,MAAM,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC;gBAC/B,MAAM,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC;gBAC/B,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC7B,MAAM,GAAG,EAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAC,CAAC;aAC7C;SACF;QACD,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;QAC9B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC9B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC;IAC1C,CAAC;IAED;;;OAGG;IACH,kCAAQ,GAAR;QAAA,iBA8CC;QA7CC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAC/C,IAAI,CAAC,mBAAmB,CAAC,uBAAuB,CAAC,SAAS,CACxD,UAAC,MAAW;YACV,KAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC;YAClC,KAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,KAAI,CAAC,eAAe,CAAC,KAAI,CAAC,mBAAmB,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QACL,IAAI,IAAI,CAAC,eAAe,KAAK,MAAM,EAAE;YACnC,IAAI,CAAC,qBAAqB,CAAC,uBAAuB;iBAC/C,SAAS,CAAC,UAAC,aAAkB;gBAC5B,IAAM,OAAO,GAAG,aAAa,CAAC;gBAC9B,IAAI,KAAI,CAAC,eAAe,CAAC,EAAE,KAAK,OAAO,CAAC,MAAM,CAAC,EAAE,IAAI,KAAI,CAAC,eAAe,KAAK,OAAO,CAAC,WAAW,EAAE;oBACjG,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;oBAErB,IAAM,aAAW,GAAQ,EAAC,QAAQ,EAAE,EAAE,EAAC,CAAC;oBAExC,KAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,OAAO,CAAC,eAAK;wBAC3C,aAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACrC,CAAC,CAAC,CAAC;oBAEH,KAAI,CAAC,eAAe,CAAC,aAAW,CAAC,CAAC;oBAElC,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,UAAC,IAAS;wBACtC,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;4BAC/C,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,kBAAQ;gCACxC,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;oCAErD,IAAI,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,EAAE;wCAChE,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;wCACxB,KAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;wCAClC,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;wCACxC,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,cAAc,GAAG,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;qCAC1G;iCACF;4BACH,CAAC,CAAC,CAAC;yBACJ;oBACH,CAAC,CAAC,CAAC;iBACJ;gBACD,IAAM,CAAC,GAAG,KAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC;gBAChD,KAAI,CAAC,eAAe,CAAC,KAAI,CAAC,mBAAmB,CAAC,CAAC;gBAC/C,KAAI,CAAC,wBAAwB;qBAC1B,aAAa,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC;YACxD,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IAED;;;;OAIG;IACH,yCAAe,GAAf,UAAgB,MAAW;QACzB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChC,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YAC9B,KAAoB,UAAe,EAAf,WAAM,CAAC,QAAQ,EAAf,cAAe,EAAf,IAAe,EAAE;gBAAhC,IAAM,KAAK;gBACd,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;aAC7B;YACD,IAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;YACvC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC;SAC5D;aAAM;YACL,IAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;YACvC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC;YAC3D,IAAM,iBAAiB,GAAG,MAAM,CAAC;YACjC,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;SACtE;IACH,CAAC;IAED;;OAEG;IACH,0CAAgB,GAAhB;QACE,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;IAC9B,CAAC;IAED;;;;;OAKG;IACH,sCAAY,GAAZ,UAAa,KAAK;QAAlB,iBAuCC;QAtCC,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,KAAK,CAAC;QACV,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,KAAU;YACjC,IAAM,MAAM,GAAG,KAAK,CAAC;YACrB,IAAI,aAAa,GAAG,CAAC,CAAC;YACtB,KAAK,IAAM,EAAE,IAAI,KAAI,CAAC,4BAA4B,EAAE;gBAClD,IAAI,EAAE,IAAI,KAAI,CAAC,4BAA4B,CAAC,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC1D,IAAM,UAAU,GAAG,KAAI,CAAC,4BAA4B,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5D,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;wBAE7B,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,UAAU,EAAE;4BACzC,aAAa,EAAE,CAAC;yBACjB;qBACF;yBAAM;wBACL,IAAI,MAAM,CAAC,SAAS,CAAC,IAAI,KAAK,UAAU,EAAE;4BACxC,aAAa,EAAE,CAAC;yBACjB;qBACF;iBACF;aACF;YACD,IAAI,aAAa,GAAG,CAAC,IAAI,KAAI,CAAC,4BAA4B,CAAC,MAAM,KAAK,CAAC,EAAE;gBACvE,KAAK,GAAG,KAAK,CAAC;gBACd,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAE;oBAAhC,IAAM,QAAM;oBACf,IAAI,QAAM,IAAI,QAAM,CAAC,IAAI,IAAI,QAAM,CAAC,IAAI,CAAC,WAAW,EAAE;yBACjD,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,EAAE;wBAC7C,IAAI,CAAC,KAAK,EAAE;4BACV,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;4BACnC,KAAK,GAAG,IAAI,CAAC;yBACd;qBACF;iBACF;gBACD,IAAI,CAAC,KAAK,IAAI,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,EAAE;qBAC5C,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,EAAE;oBAC7C,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACnC,KAAK,GAAG,IAAI,CAAC;iBACd;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACH,0CAAgB,GAAhB,UAAiB,qBAA0B;QACzC,IAAI,CAAC,6BAA6B,GAAG,qBAAqB,CAAC;IAC7D,CAAC;IAED;;;;;;OAMG;IACH,mCAAS,GAAT,UAAU,WAAgB;QAExB,IAAM,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC;QACxC,IAAI,KAAK,GAAG,SAAS,CAAC,cAAc,CAAC;QACrC,IAAM,SAAS,GAAc,IAAI,gFAAS,EAAE,CAAC;QAC7C,IAAI,MAAM,GAAe,IAAI,kFAAU,EAAE,CAAC;QAE1C,IAAI,KAAK,KAAK,SAAS,EAAE;YAEvB,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC;YAC3B,SAAS,CAAC,SAAS,CAAC,mBAAmB,CAAC,GAAG,KAAK,CAAC;YACjD,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;YAE7B,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,eAAe,EAAE;gBAC7E,SAAS,CAAC,iBAAiB,GAAG,SAAS,CAAC,IAAI,CAAC;gBAC7C,SAAS,CAAC,YAAY,GAAG,SAAS,CAAC,IAAI,CAAC;aACzC;YACD,IAAI,SAAS,CAAC,QAAQ,EAAE;gBACtB,SAAS,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;aACzC;YACD,IAAI,SAAS,CAAC,MAAM,EAAE;gBACpB,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;aACrC;YACD,IAAI,SAAS,CAAC,KAAK,EAAE;gBACnB,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;aACnC;YACD,IAAI,SAAS,CAAC,QAAQ,EAAE;gBACtB,SAAS,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;aACzC;SACF;QAED,QAAQ,SAAS,CAAC,KAAK,EAAE;YACvB,KAAK,CAAE,CAAC,CAAC;gBACP,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;gBACxB,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;gBACxB,MAAM;aACP;YACD,KAAK,CAAE,CAAC,CAAC;gBACP,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC;gBACvB,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;gBACxB,MAAM;aACP;YACD,OAAQ,CAAC,CAAC;gBACR,MAAM;aACP;SACF;QACD,MAAM,CAAC,IAAI,GAAG,MAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,UAAK,KAAK,MAAG,CAAC;QAE3D,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;QAC7B,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,8BAA8B,CAAC,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAE5G,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACH,yCAAe,GAAf,UAAgB,KAAK;QAArB,iBAiCC;QAhCC,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,UAAU,CAAC;QAEvD,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YACzB,IAAI,CAAC,mBAAmB,CAAC,UAAU,GAAG,UAAU,CAAC;SAClD;aAAM;YACL,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC;SAClD;QAED,IAAI,UAAU,IAAI,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE;YAClD,IAAM,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,KAAK,CAAC,KAAK,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;YAChG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,CAAC;SACpD;aAAM;YACL,IAAI,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,SAAS,KAAK,EAAE,EAAE;gBAC1D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;oBACjB,QAAQ,EAAE,OAAO;oBACjB,OAAO,EAAE,EAAE;oBACX,MAAM,EAAE,yBAAyB;iBAClC,CAAC,CAAC;gBACH,UAAU,CAAC;oBACT,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;gBACrB,CAAC,EAAE,IAAI,CAAC,CAAC;aACV;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;oBACjB,QAAQ,EAAE,OAAO;oBACjB,OAAO,EAAE,EAAE;oBACX,MAAM,EAAE,0EAA0E;iBACnF,CAAC,CAAC;gBACH,UAAU,CAAC;oBACT,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;gBACrB,CAAC,EAAE,IAAI,CAAC,CAAC;aACV;SACF;IACH,CAAC;IAED;;;OAGG;IACH,uCAAa,GAAb,UAAc,WAAuB;QACnC,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;QAChE,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;IAChD,CAAC;IAED;;;;;OAKG;IACH,sCAAY,GAAZ,UAAa,WAAuB;QAClC,IAAM,MAAM,GAAe,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QACvD,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC;QACpC,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;QAE5E,IAAM,UAAU,GAAG;YACjB,MAAM;YACN,cAAc,EAAE,IAAI,CAAC,eAAe;SACrC,CAAC;QAEF,IAAI,CAAC,qBAAqB,CAAC,0BAA0B,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACvE,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAvUQ;QAAR,2DAAK,EAAE;;4DAAyB;IACxB;QAAR,2DAAK,EAAE;kCAAkB,kFAAU;4DAAC;IAC5B;QAAR,2DAAK,EAAE;;4DAAyB;IAJtB,eAAe;QAR3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;YAGtB,SAAS,EAAE,CAAC,gFAAS,EAAE,kFAAU,EAAE,kFAAmB,CAAC;SAExD,CAAC;yCAwByC,kFAAmB;YACnB,kFAAmB;YACjB,sFAAqB;YAClB,2GAA+B;OAzBlE,eAAe,CA0U3B;IAAD,sBAAC;CAAA;AA1U2B;;;;;;;;;;;;AClB5B,kCAAkC,gCAAgC,KAAK,yBAAyB,0BAA0B,4BAA4B,uBAAuB,wBAAwB,yBAAyB,wBAAwB,KAAK,yBAAyB,8BAA8B,KAAK,4BAA4B,wBAAwB,yBAAyB,0BAA0B,KAAK,gBAAgB,yBAAyB,KAAK,iBAAiB,oCAAoC,KAAK,yBAAyB,0BAA0B,KAAK,6BAA6B,gCAAgC,yBAAyB,SAAS,2BAA2B,oBAAoB,uBAAuB,0BAA0B,wBAAwB,4BAA4B,KAAK,mBAAmB,mBAAmB,KAAK,uBAAuB,mBAAmB,KAAK,oBAAoB,qCAAqC,mBAAmB,mBAAmB,oCAAoC,KAAK,oBAAoB,2BAA2B,KAAK,K;;;;;;;;;;;ACAjlC,+7CAA+7C,kEAAkE,uCAAuC,6PAA6P,gBAAgB,iuBAAiuB,6TAA6T,sQAAsQ,wEAAwE,qIAAqI,0CAA0C,yDAAyD,sSAAsS,YAAY,0BAA0B,gBAAgB,wRAAwR,sYAAsY,sLAAsL,oVAAoV,2YAA2Y,kMAAkM,0KAA0K,iIAAiI,oEAAoE,eAAe,6iBAA6iB,sBAAsB,6JAA6J,ipBAAipB,ueAAue,4IAA4I,iIAAiI,gEAAgE,eAAe,umBAAumB,wEAAwE,6HAA6H,6DAA6D,YAAY,0BAA0B,eAAe,kOAAkO,+ZAA+Z,iIAAiI,oEAAoE,eAAe,syBAAsyB,qIAAqI,iIAAiI,8DAA8D,eAAe,8Z;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtyV;AACJ;AACM;AACV;AACH;AAEH;AACU;AACE;AACE;AACP;AACX;AAC4B;AACb;AACiB;AAehG;IAuEE,6BAAoB,mBAAwC,EACxC,kBAAsC,EACtC,qBAA4C,EAC5C,WAAwB,EACxB,uBAAgD,EAChD,aAAmC,EACnC,wBAAyD;QAN7E,iBAgBC;QAhBmB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,gBAAW,GAAX,WAAW,CAAa;QACxB,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,kBAAa,GAAb,aAAa,CAAsB;QACnC,6BAAwB,GAAxB,wBAAwB,CAAiC;QAvE7E,aAAQ,GAAmB,EAAE,CAAC;QAE9B,yBAAoB,GAAoB,EAAE,CAAC;QAC3C,cAAS,GAAoB,CAAC,EAAC,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAC,EAAE,EAAC,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QAM/F,uBAAkB,GAAe,EAAE,CAAC;QACpC,wBAAmB,GAAe,EAAE,CAAC;QAIrC,cAAS,GAAe,EAAE,CAAC;QAC3B,aAAQ,GAAe,EAAE,CAAC;QAK1B,8BAAyB,GAAG,KAAK,CAAC;QAClC,wBAAmB,GAAG,IAAI,0DAAY,EAAU,CAAC;QAKjD,2BAAsB,GAAG,KAAK,CAAC;QAI/B,mBAAc,GAAG;YACf;gBACE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE;oBACvB,KAAI,CAAC,cAAc,CAAC,SAAS,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,KAAI,CAAC,aAAa,CAAC,CAAC;gBACxE,CAAC;aACA;YACD;gBACE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE;oBACtB,KAAI,CAAC,cAAc,CAAC,SAAS,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,KAAI,CAAC,aAAa,CAAC,CAAC;gBACxE,CAAC;aACA;SAAC,CAAC;QACL,qBAAgB,GAAG,CAAC;gBAClB,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE;oBACxB,KAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;gBACnC,CAAC;aACF;YACC;gBACE,KAAK,EAAE,mBAAmB,EAAE,OAAO,EAAE;oBACrC,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;gBAClC,CAAC;aACA,CAAC,CAAC;QAEL,mBAAc,GAAG,CAAC;gBAChB,KAAK,EAAE,qBAAqB,EAAE,OAAO,EAAE;oBACrC,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;gBACjC,CAAC;aACF;YACC;gBACE,KAAK,EAAE,iBAAiB,EAAE,OAAO,EAAE;oBACnC,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;gBAChC,CAAC;aACA,CAAC,CAAC;QAEL,gBAAW,GAAG,KAAK,CAAC;QAUlB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC;QAC1D,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC;QAC1E,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC;QACxD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC;QACtD,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,yBAAyB,GAAG,mBAAmB,CAAC,yBAAyB,CAAC;QAC/E,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAAC;QACtE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC;IACtD,CAAC;IAED,sCAAQ,GAAR;QAAA,iBA6DC;QA3DC,6CAA6C;QAC7C,IAAI,IAAI,CAAC,aAAa,KAAK,MAAM,IAAI,IAAI,CAAC,IAAI,EAAE;YAC9C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC;YAE/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC;YACvC,IAAI,CAAC,mBAAmB,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC;YAClD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;YAChD,IAAI,CAAC,mBAAmB,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;YACtD,IAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YAEhC,0DAA0D;YAC1D,IAAI,MAAM,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE;gBACzC,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;qBACpE,SAAS,CAAC,mBAAS;oBAClB,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;oBACpB,SAAS,CAAC,OAAO,CAAC,kBAAQ;wBACxB,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,UAAU,EAAC,CAAC,CAAC;wBACxE,KAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC;wBAC1E,KAAI,CAAC,mBAAmB,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;oBAEtD,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;aACN;YACD,oCAAoC;YACpC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAO;gBAC/C,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,EAAE,EAAC,CAAC,CAAC;YAC/D,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,mBAAmB,CAAC,WAAW,GAAG,EAAE,CAAC;YAC1C,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;YAC/B,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,GAAG,EAAE,CAAC;YACnD;;;eAGG;YACH,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;iBAC1E,SAAS,CAAC,0BAAgB;gBACzB,KAAI,CAAC,iBAAiB,CAAC,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;YACvE,CAAC,CAAC,CAAC;YACL,8DAA8D;YAC9D,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC1G;aAAM;YACL,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAO;gBAC/C,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,EAAE,EAAC,CAAC,CAAC;YAC/D,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,YAAY,GAAG,IAAI,sEAAI,EAAE,CAAC;YAC/B,IAAI,CAAC,mBAAmB,CAAC,WAAW,GAAG,EAAE,CAAC;YAC1C,IAAI,CAAC,mBAAmB,CAAC,UAAU,GAAG,EAAE,CAAC;YACzC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC;YACxD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC;SACvD;QAED,IAAI,CAAC,mBAAmB,CAAC,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAEjE,sBAAsB;QACtB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,wBAAc;YAChD,KAAI,CAAC,mBAAmB,CAAC,YAAY,GAAG,cAAc,CAAC,EAAE,CAAC;YAC1D,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC;QACtD,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACH,kDAAoB,GAApB,UAAqB,gBAA8B,EAAE,kBAAuC;QAC1F,IAAI,gBAAgB,CAAC,UAAU,KAAK,CAAC,IAAI,gBAAgB,CAAC,SAAS,KAAK,CAAC,EAAE;YACzE,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,SAAS,CAAC,EAAE,kBAAkB,CAAC,CAAC;YAC9F,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAC;YACvE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC;gBAC7B,SAAS,EAAE,kBAAkB,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,EAAE;gBACrD,QAAQ,EAAE,kBAAkB,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,QAAQ;aAC3D,CAAC,CAAC;YACH,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC;gBAC5B,SAAS,EAAE,kBAAkB,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,EAAE;gBACrD,QAAQ,EAAE,kBAAkB,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,QAAQ;aAC3D,CAAC,CAAC;YACH,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC;SAC3E;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACxC,IAAI,CAAC,mBAAmB,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;SACzD;IACH,CAAC;IAED;;;OAGG;IACH,6CAAe,GAAf,UAAgB,SAAiB;QAAjC,iBAkBC;QAjBC,IAAI,SAAS,EAAE;YACb,IAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;YAE9D,IAAI,SAAS,IAAI,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE;gBACtD,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;qBACnG,SAAS,CAAC,mBAAS;oBAClB,KAAI,CAAC,YAAY,CAAC,UAAU,GAAG,EAAE,CAAC;oBAClC,KAAI,CAAC,qBAAqB,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC9D,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;oBACpB,SAAS,CAAC,OAAO,CAAC,kBAAQ;wBACxB,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,UAAU,EAAC,CAAC,CAAC;wBACxE,KAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC;wBAC1E,KAAI,CAAC,mBAAmB,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;oBACtD,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;aACN;SACF;IACH,CAAC;IAED;;;OAGG;IACH,2CAAa,GAAb,UAAc,UAAkB;QAC9B,IAAI,UAAU,EAAE;YACd,IAAM,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;YAC5B,IAAM,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC;YACrD,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS,EAAE,MAAM,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC;SAChF;IACH,CAAC;IAED;;;;;OAKG;IACH,yCAAW,GAAX,UAAY,SAAiB;QAC3B,KAAsB,UAAiC,EAAjC,SAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAjC,cAAiC,EAAjC,IAAiC,EAAE;YAApD,IAAM,OAAO;YAChB,IAAI,OAAO,CAAC,EAAE,KAAK,SAAS,EAAE;gBAC7B,OAAO,OAAO,CAAC;aAChB;SACD;IACH,CAAC;IAED;;;;OAIG;IACH,+CAAiB,GAAjB,UAAkB,QAAgB,EAAE,QAA6B;QAAjE,iBAOC;QANC,QAAQ,CAAC,OAAO,CAAC,UAAC,KAAmB;YACnC,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,IAAM,gBAAgB,GAAiB,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;QACzE,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;IACvE,CAAC;IAED;;;OAGG;IACH,uCAAS,GAAT,UAAU,EAAE;QACV,EAAE,CAAC,cAAc,EAAE,CAAC;IACtB,CAAC;IAED;;OAEG;IACH,2CAAa,GAAb;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,sEAAI,EAAE,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,mBAAmB,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QAC1D,IAAI,CAAC,mBAAmB,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACxD,IAAI,CAAC,mBAAmB,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;IACxD,CAAC;IAED;;;OAGG;IACH,sDAAwB,GAAxB;QAEE,IAAI,CAAC,yBAAyB,GAAG,KAAK,CAAC;QACvC,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;QACnF,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED;;;OAGG;IACH,oDAAsB,GAAtB;QACE,IAAI,CAAC,yBAAyB,GAAG,KAAK,CAAC;QACvC,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1D,IAAI,CAAC,qBAAqB,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5D,IAAI,CAAC,qBAAqB,CAAC,0BAA0B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClE,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED;;;;OAIG;IACH,0CAAY,GAAZ,UAAa,OAAO;QAClB,OAAO,OAAO,KAAK,SAAS,CAAC;IAC/B,CAAC;IAED;;;;;;;;OAQG;IACH,iDAAmB,GAAnB,UAAoB,YAAoB,EAAE,eAAuB,EAAE,UAAkB,EAAE,SAAiB;QACtG,KAAoB,UAAmC,EAAnC,WAAM,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAnC,cAAmC,EAAnC,IAAmC,EAAE;YAApD,IAAM,KAAK;YACd,IAAM,aAAa,GAAQ,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;YACzD,IAAI,KAAK,KAAK,QAAQ,EAAE;gBACtB,KAA0B,UAA0B,EAA1B,WAAM,CAAC,IAAI,CAAC,aAAa,CAAC,EAA1B,cAA0B,EAA1B,IAA0B,EAAE;oBAAjD,IAAM,WAAW;oBACpB,IAAM,WAAW,GAAQ,aAAa,CAAC,WAAW,CAAC,CAAC;oBACpD,IAAI,WAAW,KAAK,KAAK,EAAE;wBACzB,KAA8B,UAAwB,EAAxB,WAAM,CAAC,IAAI,CAAC,WAAW,CAAC,EAAxB,cAAwB,EAAxB,IAAwB,EAAE;4BAAnD,IAAM,eAAe;4BACxB,IAAM,YAAY,GAAQ,WAAW,CAAC,eAAe,CAAC,CAAC;4BACvD,IAAI,CAAC,KAAK,KAAK,YAAY,IAAI,WAAW,KAAK,eAAe,IAAI,eAAe,KAAK,UAAU,CAAC;mCAC5F,YAAY,CAAC,SAAS,CAAC,EAAE;gCAC5B,YAAY,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;gCAClC,IAAI,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;oCACzC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC;iCAClE;6BACF;yBACF;qBACF;yBAAM;wBACL,IAAI,CAAC,KAAK,KAAK,YAAY,IAAI,WAAW,KAAK,eAAe,CAAC,IAAI,WAAW,CAAC,SAAS,CAAC,EAAE;4BACzF,WAAW,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;4BACjC,IAAI,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;gCACxC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;6BACjD;yBACF;qBACF;iBACF;aACF;iBAAM;gBACL,IAAI,YAAY,KAAK,QAAQ,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE;oBACzE,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;oBACnD,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;wBAC1D,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,EAAE,CAAC;qBACpC;iBACF;aACF;SACF;IACH,CAAC;IAED;;;;;;;;OAQG;IACH,yCAAW,GAAX,UAAY,YAAoB,EAAE,OAAY,EAAE,eAAoB,EAAE,YAAoB,EAAE,cAAsB;QAAlH,iBA8BC;QA7BC,IAAM,WAAW,GAAQ;YACvB,YAAY;YACZ,OAAO;YACP,YAAY;YACZ,cAAc;SACf,CAAC;QAEF,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAE3E,IAAI,CAAC,qBAAqB,CAAC,gCAAgC,CAAC,SAAS,CAAC,UAAC,cAAmB;YAExF,IAAI,cAAc,CAAC,eAAe,KAAK,YAAY,EAAE;gBACnD,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC5B,KAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,GAAG,cAAc,CAAC,OAAO,CAAC;gBAC/D,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC,GAAG,KAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;gBACvE,KAAI,CAAC,mBAAmB,CAAC,WAAW,GAAG,KAAI,CAAC,WAAW,CAAC;gBAExD,IAAI,CAAC,KAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE;oBAErE,KAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC,cAAc,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;oBACzH,KAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,cAAc,EAAE,SAAS,EAAE,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;iBAEtG;qBAAM;oBACL,KAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;oBAChI,KAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,KAAK,EAAE,cAAc,EAAE,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;iBAElG;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;;;;;OAQG;IACH,wCAAU,GAAV,UAAW,WAAmB,EAAE,MAAW,EAAE,qBAA0B,EAAE,YAAoB,EAAE,cAAsB;QAArH,iBAkBC;QAjBC,IAAM,UAAU,GAAQ;YACtB,WAAW;YACX,MAAM;YACN,YAAY;YACZ,cAAc;SACf,CAAC;QAEF,IAAI,CAAC,qBAAqB,CAAC,uBAAuB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEpE,IAAI,CAAC,qBAAqB,CAAC,0BAA0B,CAAC,SAAS,CAAC,UAAC,aAAkB;YAEjF,IAAI,aAAa,CAAC,cAAc,KAAK,WAAW,EAAE;gBAChD,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAClC,KAAI,CAAC,mBAAmB,CAAC,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC;aAEvD;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,wDAA0B,GAA1B,UAA2B,KAAU,EAAE,aAAqB;QAC1D,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;QAClC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;IACrC,CAAC;IAED;;;;;;OAMG;IACH,yCAAW,GAAX,UAAY,QAAQ,EAAE,OAAO,EAAE,OAAO;QACpC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,QAAQ,YAAE,OAAO,WAAE,MAAM,EAAE,OAAO,EAAC,CAAC,CAAC;IAC3D,CAAC;IAED;;;;;OAKG;IACH,iDAAmB,GAAnB,UAAoB,KAAa,EAAE,YAA0B;QAA7D,iBAeC;QAdC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;YACzC,IAAM,YAAY,GAAiB,IAAI,sFAAY,EAAE,CAAC;YACtD,YAAY,CAAC,SAAS,GAAG,YAAY,CAAC,EAAE,CAAC;YACzC,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;YACzD,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC;YAClE,YAAY,CAAC,IAAI,GAAG,MAAK,YAAY,CAAC,IAAI,SAAM,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,QAAQ,SAAI,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,MAAI,CAAC;YAClI,YAAY,CAAC,OAAO,GAAG,SAAS,CAAC;YACjC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,EAAE,YAAY,CAAC;iBACjE,SAAS,CAAC,kBAAQ;gBACjB,KAAI,CAAC,mBAAmB,CAAC,KAAK,GAAG,CAAC,EAAE,QAAQ,CAAC,CAAC;YAChD,CAAC,CAAC,CAAC;SACN;aAAM;YACL,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;SAChD;IACH,CAAC;IAED;;;;OAIG;IACH,6CAAe,GAAf;QACE,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;YACjC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SACvD;aAAM;YACL,IAAI,CAAC,mBAAmB,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;SAClD;IACH,CAAC;IAED;;;;;;OAMG;IACH,8CAAgB,GAAhB,UAAiB,MAAc,EAAE,IAAU,EAAE,KAAa;QAA1D,iBAaC;QAZC,IAAM,YAAY,GAAqB,IAAI,+FAAgB,EAAE,CAAC;QAC9D,YAAY,CAAC,MAAM,GAAG,MAAM,CAAC;QAC7B,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC9B,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC;QAC3B,YAAY,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QAC/B,YAAY,CAAC,QAAQ,GAAG,MAAM,CAAC;QAC/B,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC;QAClC,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,MAAM,EAAE,YAAY,CAAC;aAC3D,SAAS,CAAC,8BAAoB;YAC3B,KAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QACzD,CAAC,CACF,CAAC;IACN,CAAC;IAED;;;;OAIG;IACH,sCAAQ,GAAR,UAAS,QAAa,EAAE,KAAc;QAAtC,iBAyBC;QAxBC,IAAM,SAAS,GAAS,IAAI,sEAAI,EAAE,CAAC;QACnC,IAAM,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC;QACrD,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACtC,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC;QACpE,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,MAAM,CAAC;QAClC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAEzC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,MAAM,EAAE,SAAS,CAAC;aAChD,SAAS,CAAC,mBAAS;YAClB,KAAI,CAAC,YAAY,GAAG,IAAI,sEAAI,EAAE,CAAC;YAC/B,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,KAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,KAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;YACpD,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,KAAI,CAAC,WAAW,CAAC,SAAS,EAAE,eAAe,EAAE,wBAAwB,CAAC,CAAC;YACvE,IAAI,KAAK,EAAE;gBACT,UAAU,CAAC;oBACT,KAAI,CAAC,wBAAwB,EAAE,CAAC;gBAClC,CAAC,EAAE,IAAI,CAAC,CAAC;aACV;QACH,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,YAAY,EAAE,+BAA8B,KAAK,CAAC,KAAK,MAAG,CAAC,CAAC;QACxF,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;;OAKG;IACH,wCAAU,GAAV,UAAW,QAAa,EAAE,KAAc;QAAxC,iBAqBC;QApBC,IAAM,SAAS,GAAS,IAAI,sEAAI,EAAE,CAAC;QACnC,IAAM,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC;QACrD,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACtC,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC;QACpE,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,EAAE,CAAC;QAC/C,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,MAAM,EAAE,SAAS,CAAC;aAClD,SAAS,CAAC,qBAAW;YACpB,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,KAAI,CAAC,WAAW,CAAC,SAAS,EAAE,aAAa,EAAE,wBAAwB,CAAC,CAAC;YACrE,KAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;YACpD,IAAI,KAAK,EAAE;gBACT,UAAU,CAAC;oBACT,KAAI,CAAC,sBAAsB,EAAE,CAAC;gBAChC,CAAC,EAAE,IAAI,CAAC,CAAC;aACV;QACH,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,YAAY,EAAE,+BAA8B,KAAK,CAAC,KAAK,MAAG,CAAC,CAAC;QACxF,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;;;;;;OASG;IACH,2CAAa,GAAb,UAAc,YAAkB,EAAE,WAAgC,EAAE,UAA6B;QAE/F,IAAI,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE;YACnD,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,WAAW,EAAE,wCAAwC,CAAC,CAAC;YAEhF,OAAO,KAAK,CAAC;SACd;QACD,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE;YAC5B,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,eAAe,EAAE,6BAA6B,CAAC,CAAC;YAEzE,OAAO,KAAK,CAAC;SACd;QACD,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE;YAC3B,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,cAAc,EAAE,uBAAuB,CAAC,CAAC;YAElE,OAAO,KAAK,CAAC;SACd;QACD,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;YAC5B,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,cAAc,EAAE,kCAAkC,CAAC,CAAC;YAE7E,OAAO,KAAK,CAAC;SACd;QACD,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YAC3B,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,aAAa,EAAE,wBAAwB,CAAC,CAAC;YAElE,OAAO,KAAK,CAAC;SACd;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;;OAIG;IACH,gDAAkB,GAAlB,UAAmB,KAAc;QAAjC,iBAgBC;QAdC,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE;YAE5E,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;gBACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;oBACjC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;iBAC9C;qBAAM;oBACL,IAAI,CAAC,eAAe,EAAE,CAAC;oBACvB,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,0BAAgB;wBACjD,KAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;oBACzC,CAAC,CAAC,CAAC;iBACJ;aACF;SACF;IACH,CAAC;IAED;;;;;OAKG;IACH,gDAAkB,GAAlB,UAAmB,OAAqB;QACtC,KAAK,IAAM,KAAK,IAAI,IAAI,CAAC,WAAW,EAAE;YACpC,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,OAAO,CAAC,EAAE,EAAE;gBAC7C,OAAO,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;aAC5B;SACF;IACH,CAAC;IAED;;;;OAIG;IACH,4CAAc,GAAd;QAEE,IAAM,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC;QACrD,IAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC;QACtC,IAAM,GAAG,GAAW,QAAQ,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM;YACpD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM;YACzB,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM;YAC5B,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM;YAC7B,MAAM,CAAC,MAAM,CAAC,MAAM;YACpB,MAAM,CAAC,IAAI,CAAC,IAAI;YAChB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QAE7B,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC;eAC3B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC;eAC7B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YAEhC,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;gBAChC,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aACnE;YACD,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;gBAEjC,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;aAC/B;iBAAM;gBACL,IAAI,CAAC,eAAe,EAAE,CAAC;gBAEvB,OAAO,IAAI,CAAC;aACb;SACF;aAAM;YACL,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC;mBAC7B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC;mBAC/B,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC7B,IAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,UAAU,KAAK,CAAC,EAAE;oBACxE,IAAI,CAAC,mBAAmB,CAAC,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAEjF,OAAO,IAAI,CAAC;iBACb;qBAAM;oBACL,IAAM,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC;oBACnF,IAAM,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC,CAAC;oBAC5E,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAErF,OAAO,IAAI,CAAC;iBACb;aACF;iBAAM;gBAEL,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;aACnC;SACF;IACH,CAAC;IAED;;;;OAIG;IACH,kDAAoB,GAApB,UAAqB,KAAc;QAAnC,iBAmBC;QAlBC,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE;YAC5E,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;YAChD,IAAM,SAAS,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;YAExC,IAAI,SAAS,KAAK,IAAI,EAAE;gBACtB,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,0BAAgB;oBACjD,KAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;oBACzC,KAAI,CAAC,qBAAqB,CAAC,sBAAsB,EAAE,CAAC;oBACpD,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAAC;oBACtE,KAAI,CAAC,qBAAqB,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAChE,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;gBAClC,IAAI,CAAC,qBAAqB,CAAC,sBAAsB,EAAE,CAAC;gBACpD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAAC;gBACtE,IAAI,CAAC,qBAAqB,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC/D;SACF;IACH,CAAC;IAED;;;;OAIG;IACH,+CAAiB,GAAjB,UAAkB,KAAU;QAC1B,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE;YACjE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,uBAAuB,EAAE,yCAAyC,CAAC,CAAC;SAC9F;aAAM;YACL,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACpC;iBAAM;gBACL,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;aACxD;SACF;IACH,CAAC;IAED;;;;;;OAMG;IACH,4CAAc,GAAd,UAAe,KAAU,EAAE,gBAA0B,EAAE,UAAkB;QACvE,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;SACnC;QACD,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,GAAG,gBAAgB,CAAC;QACzD,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,UAAU,CAAC,GAAG,gBAAgB,CAAC;QAC7E,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;IACpC,CAAC;IAED;;;;;OAKG;IACH,kDAAoB,GAApB,UAAqB,QAAa,EAAE,KAAa;QAC/C,IAAM,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;QACvD,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC;QAC1B,IAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,QAAQ,CAAC,QAAQ,EAAE;YAChE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;YAC3D,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;YACtE,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;YACzD,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;SACvE;IACH,CAAC;IAED;;;;;OAKG;IACH,8CAAgB,GAAhB,UAAiB,KAAU,EAAE,OAAY;QACvC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE;YACjE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,uBAAuB,EAAE,yCAAyC,CAAC,CAAC;SAC9F;aAAM;YACL,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACpB,IAAI,CAAC,mBAAmB,CAAC,aAAa,GAAG,OAAO,CAAC;SAClD;IACH,CAAC;IAED;;;;OAIG;IACH,2CAAa,GAAb,UAAc,KAAa;QACzB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAClC,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC3C,IAAI,CAAC,mBAAmB,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;IAC1D,CAAC;IAED;;;;;;;OAOG;IACH,sDAAwB,GAAxB,UAAyB,OAAqB,EAAE,YAAoB,EAAE,oBAAyB,EAAE,KAAU;QAEzG,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;QACnC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;QACjC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAEjC,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YAC7C,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC;YAC5D,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC;SAC9D;aAAM;YACL,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC;YACxD,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC;SAClE;IACH,CAAC;IAED;;;;;;;OAOG;IACH,uDAAyB,GAAzB,UAA0B,OAAqB,EAAE,YAAoB,EAAE,oBAAyB,EAAE,KAAU;QAC1G,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;QACnC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;QACjC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACjC,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YAC7C,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC;YAC7D,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC;SAC/D;aAAM;YACL,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC;YACzD,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC;SACnE;IACH,CAAC;IAED;;;;;;;OAOG;IACH,mDAAqB,GAArB,UAAsB,qBAA0B,EAAE,KAAU,EAAE,WAAmB,EAAE,MAAkB;QACnG,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,MAAM,EAAE,qBAAqB,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;IAC9E,CAAC;IAED;;;;;;;OAOG;IACH,2CAAa,GAAb,UAAc,YAAoB,EAAE,OAAqB;QACvD,IAAI,OAAO,CAAC,SAAS,KAAK,CAAC,IAAI,OAAO,CAAC,UAAU,KAAK,CAAC,EAAE;YACvD,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;YACrF,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;YAC1F,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,EAAE,EAAC,SAAS,EAAE,OAAO,CAAC,EAAE,EAAE,QAAQ,EAAE,OAAO,CAAC,QAAQ,EAAC,CAAC,CAAC;YACvG,IAAI,CAAC,mBAAmB,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;YAExD,OAAO,IAAI,CAAC;SACb;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAED;;;;;;;;OAQG;IACH,oDAAsB,GAAtB,UAAuB,OAAqB,EAAE,YAAoB,EAAE,eAAoB,EAAE,GAAQ,EAAE,KAAU;QAC5G,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAChC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;IAC9D,CAAC;IAED;;;;;;;;OAQG;IACH,qDAAuB,GAAvB,UAAwB,OAAqB,EAAE,YAAoB,EAAE,eAAoB,EAAE,GAAQ,EAAE,KAAK;QACxG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,OAAO,CAAC,EAAE;YAC9C,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;YACnC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAChB,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;SAC9D;IACH,CAAC;IAED;;;;OAIG;IACH,0CAAY,GAAZ,UAAa,KAAa;QACxB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACjC,IAAI,CAAC,mBAAmB,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;IACxD,CAAC;IAED;;;;;;;OAOG;IACH,kCAAI,GAAJ,UAAK,EAAE,EAAE,OAAqB,EAAE,gBAAqB,EAAE,KAAa;QAClE,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAC9C,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,gBAAgB,CAAC;QACrC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;IAChC,CAAC;IAED;;;;;OAKG;IACH,kCAAI,GAAJ,UAAK,EAAE,EAAE,KAAa;QAAtB,iBAoBC;QAnBC,EAAE,CAAC,cAAc,EAAE,CAAC;QACpB,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,YAAY,EAAE;YACzC,IAAM,cAAY,GAAiB,IAAI,sFAAY,EAAE,CAAC;YACtD,cAAY,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;YACpD,cAAY,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC;YAC9C,cAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;YACnD,cAAY,CAAC,IAAI,GAAG,MAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,IAAI,SAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,SAAI,IAAI,CAAC,WAAW,CAAC,IAAI,MAAG,CAAC;YAC/G,cAAY,CAAC,OAAO,GAAG,SAAS,CAAC;YACjC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,EAAE,cAAY,CAAC;iBACjE,SAAS,CAAC,kBAAQ;gBACjB,cAAY,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC;gBAC9B,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,gBAAgB,CAAC,CAAC;gBAC1C,KAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBACzF,KAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;gBAClF,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,cAAY,CAAC,CAAC;gBAChD,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,cAAY,CAAC;gBACvC,KAAI,CAAC,mBAAmB,CAAC,WAAW,GAAG,KAAI,CAAC,WAAW,CAAC;YAC1D,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IA/6B4B;QAA5B,+DAAS,CAAC,gBAAgB,CAAC;;kEAAwB;IAC3C;QAAR,2DAAK,EAAE;;8DAAuB;IACtB;QAAR,2DAAK,EAAE;;qDAAW;IAJR,mBAAmB;QAP/B,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;YAG7B,SAAS,EAAE,CAAC,sFAAY,EAAE,gFAAS,EAAE,4EAAO,EAAE,kFAAU,CAAC;SAC1D,CAAC;yCAyEyC,kFAAmB;YACpB,gFAAkB;YACf,sFAAqB;YAC/B,mEAAW;YACC,2FAAuB;YACjC,oFAAoB;YACT,4GAA+B;OA7ElE,mBAAmB,CAk7B/B;IAAD,0BAAC;CAAA;AAl7B+B;;;;;;;;;;;;AC7BhC,2B;;;;;;;;;;;ACAA,ifAAif,+D;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/b;AACwB;AACO;AAGP;AACI;AAS9E;IAME,iCAAoB,mBAAwC,EACxC,kBAAsC,EACtC,qBAA4C;QAF5C,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,0BAAqB,GAArB,qBAAqB,CAAuB;QANhE,aAAQ,GAAwB,EAAE,CAAC;QAOjC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC;IAC5D,CAAC;IACD;;;OAGG;IACH,0CAAQ,GAAR;QAAA,iBAkBC;QAjBC,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC;aAC/E,SAAS,CAAC,kBAAQ;YACf,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,KAAI,CAAC,mBAAmB,CAAC,cAAc,GAAG,KAAI,CAAC,QAAQ,CAAC;QAC1D,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,qBAAqB,CAAC,uBAAuB;aAC/C,SAAS,CAAC,qBAAW;YACpB,IAAI,WAAW,EAAE;gBACf,KAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,KAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC;qBAC/E,SAAS,CAAC,kBAAQ;oBACjB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;oBACzB,KAAI,CAAC,mBAAmB,CAAC,cAAc,GAAG,KAAI,CAAC,QAAQ,CAAC;gBAC1D,CAAC,CAAC,CAAC;aACN;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IACD;;;OAGG;IACH,wCAAM,GAAN,UAAO,KAAK;QACV,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,mBAAmB,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;IAC5H,CAAC;IACD;;;;OAIG;IACH,oDAAkB,GAAlB,UAAmB,eAA6B;QAC9C,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC3D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACpC,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;QACjC,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,MAAM,CAAC,eAAe,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC;QAC1F,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IACjD,CAAC;IApDU,uBAAuB;QAPnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;YAG/B,SAAS,EAAE,CAAC,kFAAmB,CAAC;SACjC,CAAC;yCAQyC,kFAAmB;YACpB,gFAAkB;YACf,sFAAqB;OARrD,uBAAuB,CAqDnC;IAAD,8BAAC;CAAA;AArDmC;;;;;;;;;;;;ACfpC,6CAA6C,kBAAkB,KAAK,oBAAoB,wBAAwB,KAAK,K;;;;;;;;;;;ACArH,+CAA+C,sNAAsN,wFAAwF,cAAc,sBAAsB,0EAA0E,cAAc,aAAa,cAAc,kgBAAkgB,qEAAqE,6RAA6R,0DAA0D,2BAA2B,sBAAsB,sBAAsB,qIAAqI,eAAe,yCAAyC,0BAA0B,6tBAA6tB,0BAA0B,8KAA8K,wBAAwB,0uCAA0uC,iWAAiW,wCAAwC,wmBAAwmB,yS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/wJ;AACI;AAEoB;AACM;AACV;AACH;AACA;AACO;AACF;AACD;AAEqB;AASnG;IAsBE,0BAAoB,SAAoB,EACpB,kBAAsC,EACtC,qBAA4C,EAC5C,mBAAwC,EACxC,mBAAwC,EACxC,wBAAyD;QALzD,cAAS,GAAT,SAAS,CAAW;QACpB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,6BAAwB,GAAxB,wBAAwB,CAAiC;QArB7E,aAAQ,GAAmB,EAAE,CAAC;QAC9B,kBAAa,GAAe,EAAE,CAAC;QAC/B,gBAAW,GAAQ;YACjB,OAAO,EAAE,EAAE;YACX,SAAS,EAAE,EACV;SACF,CAAC;QAEF,UAAK,GAAoB,EAAE,CAAC;QAC5B,yBAAoB,GAAG,qEAAoB,CAAC;QAC5C,kCAA6B,GAAe,EAAE,CAAC;QAC/C,sBAAiB,GAAQ,EAAE,CAAC;QAE5B,eAAU,GAAe,EAAE,CAAC;QAC5B,qBAAgB,GAAe,EAAE,CAAC;QAShC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC;IAC5E,CAAC;IAED;;;OAGG;IACH,mCAAQ,GAAR;QAAA,iBAkDC;QAjDC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACjD,IAAI,CAAC,mBAAmB,CAAC,uBAAuB,CAAC,SAAS,CACxD,UAAC,MAAW;YACV,KAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC;YACnC,KAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,oBAAoB,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;QAEL,IAAI,IAAI,CAAC,gBAAgB,KAAK,MAAM,EAAE;YACpC,IAAI,CAAC,qBAAqB,CAAC,6BAA6B;iBACrD,SAAS,CAAC,UAAC,cAAmB;gBAC7B,IAAM,OAAO,GAAG,cAAc,CAAC;gBAC/B,IAAI,KAAI,CAAC,gBAAgB,CAAC,EAAE,KAAK,OAAO,CAAC,OAAO,CAAC,EAAE,IAAI,KAAI,CAAC,gBAAgB,KAAK,OAAO,CAAC,YAAY,EAAE;oBACrG,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;oBAErB,IAAM,aAAW,GAAQ,EAAC,QAAQ,EAAE,EAAE,EAAC,CAAC;oBACxC,KAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,OAAO,CAAC,eAAK;wBAC9C,IAAI,KAAK,CAAC,YAAY,KAAK,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,EAAE;4BAC/D,aAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;yBAClC;oBACH,CAAC,CAAC,CAAC;oBAEH,KAAI,CAAC,gBAAgB,CAAC,aAAW,CAAC,CAAC;oBAEnC,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,UAAC,IAAS;wBACtC,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;4BAC/C,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,kBAAQ;gCAExC,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;oCAEtD,IAAI,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,EAAE;wCACzE,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;wCACxB,KAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;wCAClC,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;wCACxC,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,cAAc,GAAG,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;qCACnH;iCACF;4BACH,CAAC,CAAC,CAAC;yBACJ;oBACH,CAAC,CAAC,CAAC;oBACH,IAAM,CAAC,GAAG,KAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC;oBAChD,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,oBAAoB,CAAC,CAAC;oBACjD,KAAI,CAAC,wBAAwB;yBAC1B,aAAa,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC;iBAEvD;YACH,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IAED;;;;OAIG;IACH,+CAAoB,GAApB,UAAqB,cAAmB;QACtC,IAAI,CAAC,6BAA6B,GAAG,cAAc,CAAC;IACtD,CAAC;IAED;;;;;;OAMG;IACH,oDAAyB,GAAzB,UAA0B,SAAc,EAAE,OAAY;QACpD,IAAM,OAAO,GAAG,EAAC,SAAS,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAC,CAAC;QAC7C,IAAI,MAAM,GAAG,EAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,YAAY,EAAE,SAAS,EAAC,CAAC;QACzE,KAA0B,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,EAAE;YAA9B,IAAM,WAAW;YACpB,IAAI,WAAW,CAAC,IAAI,EAAE;gBACpB,MAAM,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC;gBAC/B,MAAM,CAAC,YAAY,GAAG,WAAW,CAAC,YAAY,CAAC;gBAC/C,MAAM,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC;gBAC/B,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC7B,MAAM,GAAG,EAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,YAAY,EAAE,SAAS,EAAC,CAAC;aACtE;SACF;QAED,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;QAC9B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE9B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC;IAC1C,CAAC;IACD;;;;OAIG;IACH,2CAAgB,GAAhB,UAAiB,MAAW;QAC1B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChC,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YAC9B,KAAoB,UAAe,EAAf,WAAM,CAAC,QAAQ,EAAf,cAAe,EAAf,IAAe,EAAE;gBAAhC,IAAM,KAAK;gBACd,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;aAC9B;YACD,IAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;YACvC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC;SAC5D;aAAM;YACL,IAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;YACvC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC;YAC3D,IAAM,iBAAiB,GAAG,MAAM,CAAC;YACjC,IAAI,CAAC,yBAAyB,CAAC,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;SACvE;IACH,CAAC;IACD;;OAEG;IACH,2CAAgB,GAAhB;QACE,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;IAC9B,CAAC;IAED,2CAAgB,GAAhB,UAAiB,sBAA2B;QAC1C,IAAI,CAAC,8BAA8B,GAAG,sBAAsB,CAAC;IAC/D,CAAC;IACD;;;;;OAKG;IACH,0CAAe,GAAf,UAAgB,KAAK;QAArB,iBAiCC;QAhCC,IAAI,aAAa,GAAG,IAAI,CAAC,8BAA8B,CAAC,SAAS,CAAC,UAAU,CAAC;QAE7E,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;YAC5B,IAAI,CAAC,mBAAmB,CAAC,aAAa,GAAG,aAAa,CAAC;SACxD;aAAM;YACL,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC;SACxD;QACD,IAAI,aAAa,IAAI,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE;YAErD,IAAM,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,KAAK,CAAC,KAAK,EAAE,aAAa,EAAE,MAAM,CAAC,CAAC;YACnG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,CAAC;SACpD;aAAM;YACL,IAAI,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,SAAS,KAAK,EAAE,EAAE;gBAC1D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;oBACjB,QAAQ,EAAE,OAAO;oBACjB,OAAO,EAAE,EAAE;oBACX,MAAM,EAAE,yBAAyB;iBAClC,CAAC,CAAC;gBACH,UAAU,CAAC;oBACT,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;gBACrB,CAAC,EAAE,IAAI,CAAC,CAAC;aACV;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;oBACjB,QAAQ,EAAE,OAAO;oBACjB,OAAO,EAAE,EAAE;oBACX,MAAM,EAAE,0EAA0E;iBACnF,CAAC,CAAC;gBACH,UAAU,CAAC;oBACT,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;gBACrB,CAAC,EAAE,IAAI,CAAC,CAAC;aACV;SACF;IACH,CAAC;IACD;;;;;OAKG;IACH,wCAAa,GAAb,UAAc,KAAK;QAAnB,iBAuCC;QAtCC,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,KAAK,CAAC;QACV,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,YAAiB;YACxC,IAAM,OAAO,GAAG,YAAY,CAAC;YAC7B,IAAI,aAAa,GAAG,CAAC,CAAC;YACtB,KAAK,IAAM,EAAE,IAAI,KAAI,CAAC,6BAA6B,EAAE;gBACnD,IAAI,EAAE,IAAI,KAAI,CAAC,6BAA6B,CAAC,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC3D,IAAM,WAAW,GAAG,KAAI,CAAC,6BAA6B,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC9D,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;wBAE9B,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,WAAW,EAAE;4BAC3C,aAAa,EAAE,CAAC;yBACjB;qBACF;yBAAM;wBACL,IAAI,OAAO,CAAC,SAAS,CAAC,IAAI,KAAK,WAAW,EAAE;4BAC1C,aAAa,EAAE,CAAC;yBACjB;qBACF;iBACF;aACF;YACD,IAAI,aAAa,GAAG,CAAC,IAAI,KAAI,CAAC,6BAA6B,CAAC,MAAM,KAAK,CAAC,EAAE;gBACxE,KAAK,GAAG,KAAK,CAAC;gBACd,KAAqB,UAAe,EAAf,YAAO,CAAC,OAAO,EAAf,cAAe,EAAf,IAAe,EAAE;oBAAjC,IAAM,QAAM;oBACf,IAAI,QAAM,IAAI,QAAM,CAAC,IAAI,IAAI,QAAM,CAAC,IAAI,CAAC,WAAW,EAAE;yBACjD,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,EAAE;wBAC7C,IAAI,CAAC,KAAK,EAAE;4BACV,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;4BACpC,KAAK,GAAG,IAAI,CAAC;yBACd;qBACF;iBACF;gBACD,IAAI,CAAC,KAAK,IAAI,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,EAAE;qBAC7C,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,EAAE;oBAC7C,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACpC,KAAK,GAAG,IAAI,CAAC;iBACd;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACH,sCAAW,GAAX,UAAY,GAAG;QACb,KAAK,IAAM,YAAY,IAAK,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE;YAC/C,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,EAAE;gBAC7C,OAAO,YAAY,CAAC;aACrB;SACF;QAED,OAAO,CAAC,CAAC,CAAC;IACZ,CAAC;IAED;;;;OAIG;IACH,wCAAa,GAAb,UAAc,SAAS;QACrB,IAAM,UAAU,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAChD,KAAmB,UAAS,EAAT,uBAAS,EAAT,uBAAS,EAAT,IAAS,EAAE;YAAzB,IAAM,GAAG;YACZ,IAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YACpC,UAAU,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;SACzB;QAED,OAAO,UAAU,CAAC;IACpB,CAAC;IAED;;;;OAIG;IACH,8CAAmB,GAAnB,UAAoB,SAAS;QAC3B,IAAM,MAAM,GAAkB,EAAE,CAAC;QACjC,KAAmB,UAAS,EAAT,uBAAS,EAAT,uBAAS,EAAT,IAAS,EAAE;YAAzB,IAAM,GAAG;YACZ,KAAuB,UAAQ,EAAR,2FAAQ,EAAR,sBAAQ,EAAR,IAAQ,EAAE;gBAA5B,IAAM,OAAO;gBAChB,IAAI,GAAG,KAAK,OAAO,CAAC,KAAK,EAAE;oBACzB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;iBAC5B;aACF;SACF;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IACD;;;;;;OAMG;IACH,0CAAe,GAAf,UAAgB,WAAgB;QAE9B,IAAM,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC;QACxC,IAAI,KAAK,GAAG,SAAS,CAAC,cAAc,CAAC;QACrC,IAAI,UAAyB,CAAC;QAC9B,IAAM,SAAS,GAAc,IAAI,gFAAS,EAAE,CAAC;QAC7C,IAAI,OAAO,GAAY,IAAI,4EAAO,EAAE,CAAC;QACrC,IAAM,YAAY,GAAiB,IAAI,sFAAY,EAAE,CAAC;QAEtD,IAAI,KAAK,KAAK,SAAS,EAAE;YAEvB,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,mBAAmB,KAAK,MAAM,EAAE;gBACzE,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;gBAClC,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;aAC9C;iBAAM;gBACL,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC;aAC5B;YACD,SAAS,CAAC,SAAS,CAAC,mBAAmB,CAAC,GAAG,KAAK,CAAC;YAEjD,IAAI,SAAS,CAAC,mBAAmB,KAAK,MAAM,EAAE;gBAC5C,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAC9B;YAED,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;YAC9B,OAAO,CAAC,YAAY,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC;YAErG,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,eAAe,EAAE;gBAC7E,SAAS,CAAC,iBAAiB,GAAG,SAAS,CAAC,IAAI,CAAC;gBAC7C,SAAS,CAAC,YAAY,GAAG,SAAS,CAAC,IAAI,CAAC;aACzC;YACD,IAAI,SAAS,CAAC,QAAQ,EAAE;gBACtB,SAAS,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;aACzC;YACD,IAAI,SAAS,CAAC,MAAM,EAAE;gBACpB,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;aACrC;YAED,QAAQ,SAAS,CAAC,KAAK,EAAE;gBACvB,KAAK,CAAE,CAAC,CAAC;oBACP,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;oBACxB,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;oBACxB,MAAM;iBACP;gBACD,KAAK,CAAE,CAAC,CAAC;oBACP,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC;oBACvB,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;oBACxB,MAAM;iBACP;gBACD,OAAQ,CAAC,CAAC;oBACR,MAAM;iBACP;aAEF;YAED,IAAI,SAAS,CAAC,QAAQ,EAAE;gBACtB,SAAS,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;aACzC;YACD,IAAI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE;gBACnC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC;aACtD;YAED,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;YAE9B,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,+BAA+B,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAC/G,YAAY,CAAC,IAAI,GAAM,IAAI,CAAC,iBAAiB,CAAC,IAAI,UAAK,KAAO,CAAC;YAC/D,YAAY,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;YAEjD,OAAO,CAAC,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC;YACjC,YAAY,CAAC,OAAO,GAAG,OAAO,CAAC;SAChC;QAED,OAAO,YAAY,CAAC;IACtB,CAAC;IAED;;;OAGG;IACH,yCAAc,GAAd,UAAe,WAAgB;QAA/B,iBAYC;QAXC,IAAM,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC;QACrD,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;aACjF,SAAS,CAAC,sBAAY;YACnB,KAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACxD,KAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAC3D,KAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC;YACpF,KAAI,CAAC,YAAY,EAAE,CAAC;YACpB,KAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;YAC/C,KAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1B,CAAC,CACF,CAAC;IACN,CAAC;IACD;;;;;OAKG;IACH,wCAAa,GAAb,UAAc,WAAgB;QAA9B,iBAeC;QAdC,IAAM,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC;QACrD,IAAM,OAAO,GAAiB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;QAChE,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC;QACtC,OAAO,CAAC,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,EAAE,CAAC;QACtD,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,MAAM,EAAE,OAAO,CAAC;aACvD,SAAS,CAAC,UAAC,oBAAyB;YACnC,IAAM,UAAU,GAAG;gBACjB,OAAO,EAAE,oBAAoB;gBAC7B,eAAe,EAAE,KAAI,CAAC,gBAAgB;aACvC,CAAC;YAEF,KAAI,CAAC,qBAAqB,CAAC,gCAAgC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC7E,KAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACH,uCAAY,GAAZ;QACE,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,cAAc,GAAG,SAAS,CAAC;QACtD,IAAI,CAAC,WAAW,GAAG;YACjB,OAAO,EAAE,EAAE;YACX,SAAS,EAAE,EAAE;SACd,CAAC;IACJ,CAAC;IAhaQ;QAAR,2DAAK,EAAE;;8DAA0B;IACzB;QAAR,2DAAK,EAAE;kCAAmB,sFAAY;8DAAC;IAC/B;QAAR,2DAAK,EAAE;;8DAA0B;IAJvB,gBAAgB;QAP5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;YAGvB,SAAS,EAAE,CAAC,sFAAY,EAAE,gFAAS,EAAE,4EAAO,EAAE,kFAAmB,CAAC;SACnE,CAAC;yCAwB+B,gFAAS;YACA,gFAAkB;YACf,sFAAqB;YACvB,kFAAmB;YACnB,kFAAmB;YACd,4GAA+B;OA3BlE,gBAAgB,CAma5B;IAAD,uBAAC;CAAA;AAna4B;;;;;;;;;;;;ACrB7B,uCAAuC,yBAAyB,mBAAmB,KAAK,wBAAwB,mBAAmB,KAAK,S;;;;;;;;;;;ACAxI,kmBAAkmB,mBAAmB,ygBAAygB,iCAAiC,oBAAoB,eAAe,8DAA8D,4DAA4D,2CAA2C,+HAA+H,sCAAsC,6LAA6L,gCAAgC,2GAA2G,gBAAgB,gFAAgF,aAAa,iHAAiH,oBAAoB,6JAA6J,0CAA0C,mLAAmL,wCAAwC,+MAA+M,uCAAuC,8IAA8I,oDAAoD,eAAe,27BAA27B,sBAAsB,8CAA8C,aAAa,KAAK,oBAAoB,+DAA+D,0CAA0C,KAAK,wCAAwC,kIAAkI,2CAA2C,+HAA+H,sCAAsC,2X;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/2I;AACN;AACO;AAGH;AACJ;AACP;AACkB;AACM;AACI;AACb;AAW/E;IAsBE,6BAAoB,qBAA4C,EAC5C,kBAAsC,EACtC,mBAAwC,EACxC,mBAAwC,EACxC,WAAwB,EACxB,aAAmC,EACnC,uBAAgD;QANhD,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAsB;QACnC,4BAAuB,GAAvB,uBAAuB,CAAyB;QAzB1D,iBAAY,GAAG,IAAI,0DAAY,EAAO,CAAC;QAajD,oBAAe,GAAwB,EAAE,CAAC;QAC1C,oBAAe,GAAe,EAAE,CAAC;QACjC,qBAAgB,GAAe,EAAE,CAAC;QAElC,4BAAuB,GAAG,IAAI,0DAAY,EAAO,CAAC;QAShD,IAAI,CAAC,WAAW,GAAG;YACjB,EAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAC;YAC9B,EAAC,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,aAAa,EAAC;YAC5C,EAAC,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAC;YACpC,EAAC,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAC;SACvC,CAAC;QAEF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC;QAClE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC;QAChE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC;QAChE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,qBAAqB,CAAC,mBAAmB,CAAC;IAChE,CAAC;IAED;;;;OAIG;IACH,sCAAQ,GAAR;QAAA,iBA4BC;QA1BC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC;QACpD,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;YACrD,IAAI,CAAC,aAAa,CAAC,8BAA8B,CAAC,IAAI,CAAC,MAAM,CAAC;iBAC3D,SAAS,CAAC,mBAAS;gBAClB,KAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;gBAC3B,SAAS,CAAC,OAAO,CAAC,kBAAQ;oBACxB,KAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC;gBACxD,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;SACN;QACD,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC/B;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,wBAAc;gBAChD,KAAI,CAAC,MAAM,GAAG,cAAc,CAAC,EAAE,CAAC;gBAChC,KAAI,CAAC,mBAAmB,CAAC,YAAY,GAAG,KAAI,CAAC,MAAM,CAAC;gBACpD,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,EAAE,CAAC;QAE/C,IAAI,CAAC,qBAAqB,CAAC,oBAAoB;aAC5C,SAAS,CAAC,kBAAQ;YACjB,KAAI,CAAC,2BAA2B,GAAG,QAAQ,CAAC;QAC9C,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACH,oDAAsB,GAAtB,UAAuB,IAAU;QAC/B,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;QAC3B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,yCAAW,GAAX,UAAY,MAAc;QAA1B,iBASC;QARC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,MAAM,CAAC;aACxC,SAAS,CAAC,qBAAW;YACpB,KAAI,CAAC,KAAK,GAAG,WAAW,CAAC;YACzB,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAI;gBACrB,IAAI,CAAC,OAAO,GAAG,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBACpD,IAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACzD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACH,+CAAiB,GAAjB,UAAkB,IAAU;QAA5B,iBAqBC;QApBC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;YAC/B,OAAO,EAAE,kCAAkC;YAC3C,MAAM,EAAE,qBAAqB;YAC7B,GAAG,EAAE,gBAAgB;YACrB,IAAI,EAAE,mBAAmB;YACzB,MAAM,EAAE;gBACN,KAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,KAAI,CAAC,MAAM,EAAE,IAAI,CAAC;qBAClD,SAAS,CAAC,kBAAQ;oBACjB,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,MAAM,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;oBACpD,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;oBAC3B,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,eAAe,EAAC,CAAC,CAAC;gBAC/F,CAAC,EAAE,eAAK;oBACN,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,qCAAqC,EAAC,CAAC,CAAC;gBAChH,CAAC,CAAC,CAAC;YACP,CAAC;YACD,MAAM,EAAE;gBACN,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,oBAAoB,EAAC,CAAC,CAAC;gBAC9F,yFAAyF;YAC3F,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,6CAAe,GAAf,UAAgB,UAAgB;QAAhC,iBAMC;QALC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,IAAS,EAAE,SAAiB;YAC9C,IAAI,UAAU,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,EAAE;gBAC7B,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;aACjC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,0CAAY,GAAZ,UAAa,KAAK;QAChB,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAE1B,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;YAC5B,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;SACnD;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB;IACH,CAAC;IAED;;;;;;OAMG;IACH,8CAAgB,GAAhB,UAAiB,MAAc,EAAE,IAAS,EAAE,KAAa;QAAzD,iBAgBC;QAfC,IAAM,YAAY,GAAqB,IAAI,8FAAgB,EAAE,CAAC;QAC9D,YAAY,CAAC,MAAM,GAAG,MAAM,CAAC;QAC7B,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC9B,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC;QAC3B,YAAY,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QAC/B,YAAY,CAAC,QAAQ,GAAG,MAAM,CAAC;QAC/B,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC;QAClC,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC1B,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,MAAM,EAAE,YAAY,CAAC;aAC3D,SAAS,CACV,8BAAoB;YAClB,KAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QACzD,CAAC,CACF,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACH,kDAAoB,GAApB,UAAqB,IAAS;QAA9B,iBA+BC;QA7BC,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC;QAE7D,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC;iBACpD,SAAS,CACR,uBAAa;gBACX,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,eAAe,EAAE,MAAM,EAAE,0BAA0B,EAAC,CAAC,CAAC;gBAC5G,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;gBACzB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;YAC5B,CAAC,EAAE,eAAK;gBACN,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC;oBACrB,QAAQ,EAAE,OAAO;oBACjB,OAAO,EAAE,eAAe;oBACxB,MAAM,EAAE,8CAA8C;iBAAC,CAAC,CAAC;YAC7D,CAAC,CAAC,CAAC;SACR;aAAM;YACL,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC;iBACtD,SAAS,CACR,yBAAe;gBACb,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,EAAE,4BAA4B,EAAC,CAAC,CAAC;gBAChH,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;gBACzB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;YAC5B,CAAC,EAAE,eAAK;gBACN,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC;oBACrB,QAAQ,EAAE,OAAO;oBACjB,OAAO,EAAE,iBAAiB;oBAC1B,MAAM,EAAE,iDAAiD;iBAAC,CAAC,CAAC;YAChE,CAAC,CAAC,CAAC;SACR;IACH,CAAC;IAED;;;;OAIG;IACH,sCAAQ,GAAR,UAAS,IAAS;QAChB,IAAI,CAAC,qBAAqB,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5D,IAAI,CAAC,qBAAqB,CAAC,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnE,CAAC;IAnOQ;QAAR,2DAAK,EAAE;kCAAgB,0FAAoB;8DAAC;IACnC;QAAT,4DAAM,EAAE;;6DAAwC;IAHtC,mBAAmB;QAR/B,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;YAG/B,SAAS,EAAE,CAAC,+DAAmB,CAAC;SAEjC,CAAC;yCAwB2C,sFAAqB;YACxB,gFAAkB;YACjB,+DAAmB;YACnB,kFAAmB;YAC3B,kEAAW;YACT,oFAAoB;YACV,0FAAuB;OA5BzD,mBAAmB,CAsO/B;IAAD,0BAAC;CAAA;AAtO+B;;;;;;;;;;;;ACtBhC,mB;;;;;;;;;;;ACAA,8EAA8E,kBAAkB,8mBAA8mB,mBAAmB,yhBAAyhB,iCAAiC,oBAAoB,eAAe,+LAA+L,0CAA0C,oBAAoB,8BAA8B,oFAAoF,uCAAuC,mFAAmF,oEAAoE,qgBAAqgB,sBAAsB,8CAA8C,8BAA8B,KAAK,uCAAuC,+DAA+D,mEAAmE,sV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvkF;AACmC;AAC5B;AACO;AACO;AAEH;AACI;AACR;AAQvE;IAUE,+BAAoB,WAAwB,EACxB,kBAAsC,EACtC,qBAA4C,EAC5C,mBAAwC,EACxC,uBAAgD,EAChD,mBAAwC;QALxC,gBAAW,GAAX,WAAW,CAAa;QACxB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,wBAAmB,GAAnB,mBAAmB,CAAqB;QAR5D,aAAQ,GAAmB,EAAE,CAAC;QAS5B,IAAI,CAAC,WAAW,GAAG;YACjB,EAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAC;YAC9B,EAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAC;YAC9B,EAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC;SACjC,CAAC;QACF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC;IAClE,CAAC;IAED;;;OAGG;IACH,wCAAQ,GAAR;QAAA,iBAoBC;QAnBC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE;YAC1C,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,wBAAc;gBAChD,KAAI,CAAC,MAAM,GAAG,cAAc,CAAC,EAAE,CAAC;gBAChC,KAAI,CAAC,mBAAmB,CAAC,YAAY,GAAG,KAAI,CAAC,MAAM,CAAC;gBACpD,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,qBAAqB,CAAC,mBAAmB,CAAC;gBAC9D,KAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,KAAI,CAAC,MAAM,CAAC;qBACrD,SAAS,CAAC,6BAAmB;oBAC5B,KAAI,CAAC,aAAa,GAAG,mBAAmB,CAAC;oBACzC,KAAI,CAAC,uBAAuB,CAAC,aAAa,GAAG,KAAI,CAAC,aAAa,CAAC;gBAClE,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC;YACpD,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC;iBACrD,SAAS,CAAC,6BAAmB;gBAC5B,KAAI,CAAC,aAAa,GAAG,mBAAmB,CAAC;gBACzC,KAAI,CAAC,uBAAuB,CAAC,aAAa,GAAG,KAAI,CAAC,aAAa,CAAC;YAClE,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IAED;;;;OAIG;IACH,uDAAuB,GAAvB,UAAwB,kBAAoC;QAA5D,iBAQC;QAPC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAC,YAAiB,EAAE,iBAAyB;YACtE,IAAI,kBAAkB,CAAC,EAAE,KAAK,YAAY,CAAC,YAAY,CAAC,EAAE,EAAE;gBAC1D,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;gBAChD,KAAI,CAAC,uBAAuB,CAAC,aAAa,GAAG,KAAI,CAAC,aAAa,CAAC;gBAChE,KAAI,CAAC,uBAAuB,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACnE;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,yDAAyB,GAAzB,UAA0B,YAA8B;QAAxD,iBAqBC;QApBC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;YAC/B,OAAO,EAAE,0CAA0C;YACnD,MAAM,EAAE,qBAAqB;YAC7B,GAAG,EAAE,sBAAoB,IAAI,CAAC,aAAa,CAAC,EAAI;YAChD,IAAI,EAAE,mBAAmB;YACzB,MAAM,EAAE;gBACN,KAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,KAAI,CAAC,MAAM,EAAE,YAAY,CAAC;qBAClE,SAAS,CAAC,kBAAQ;oBACjB,KAAI,CAAC,qBAAqB,CAAC,wBAAwB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACnE,KAAI,CAAC,uBAAuB,CAAC,YAAY,CAAC,CAAC;oBAC3C,KAAI,CAAC,QAAQ,GAAG,CAAC,EAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,sBAAsB,EAAC,CAAC,CAAC;gBAEhG,CAAC,EAAE,eAAK;oBACN,KAAI,CAAC,QAAQ,GAAG,CAAC,EAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,2BAAyB,KAAK,CAAC,KAAO,EAAC,CAAC,CAAC;gBAC3G,CAAC,CAAC,CAAC;YACP,CAAC;YACD,MAAM,EAAE;gBACN,KAAI,CAAC,QAAQ,GAAG,CAAC,EAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,mBAAmB,EAAC,CAAC,CAAC;YACzF,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,4CAAY,GAAZ,UAAa,KAAK;QAChB,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAE1B,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;YAC5B,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;SACnD;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB;IACH,CAAC;IA3GQ;QAAR,2DAAK,EAAE;kCAAgB,8FAAsB;gEAAC;IADpC,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;;;SAGlC,CAAC;yCAWiC,kEAAW;YACJ,gFAAkB;YACf,sFAAqB;YACvB,+DAAmB;YACf,0FAAuB;YAC3B,kFAAmB;OAfjD,qBAAqB,CA8GjC;IAAD,4BAAC;CAAA;AA9GiC;;;;;;;;;;;;AChBlC,iCAAiC,yBAAyB,KAAK,yCAAyC,gCAAgC,yBAAyB,iBAAiB,kBAAkB,sBAAsB,sBAAsB,mBAAmB,kBAAkB,mBAAmB,yBAAyB,wBAAwB,yBAAyB,+BAA+B,KAAK,8BAA8B,gCAAgC,KAAK,yBAAyB,iBAAiB,KAAK,gCAAgC,sBAAsB,sBAAsB,KAAK,K;;;;;;;;;;;ACAzlB,+HAA+H,4BAA4B,iGAAiG,wFAAwF,kdAAkd,oBAAoB,GAAG,gBAAgB,MAAM,iBAAiB,qCAAqC,eAAe,8CAA8C,4C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAp5B;AAC4B;AACd;AACO;AAED;AACN;AACe;AAO/E;IAQE,gCAAoB,WAAwB,EACxB,kBAAsC,EACtC,mBAAwC,EACxC,cAA8B,EAC9B,uBAAgD;QAJhD,gBAAW,GAAX,WAAW,CAAa;QACxB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,4BAAuB,GAAvB,uBAAuB,CAAyB;QAVpE,sBAAiB,GAAG,KAAK,CAAC;QAC1B,kBAAa,GAA4B,EAAE,CAAC;QAC5C,gCAA2B,GAA4B,EAAE,CAAC;QAE1D,eAAU,GAAG,KAAK,CAAC;QAOjB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC;QAChE,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC;QAClF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC;IAE5D,CAAC;IAED;;OAEG;IACH,yCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,uBAAuB,CAAC,yBAAyB;aACnD,SAAS,CAAC,kBAAQ;YACjB,KAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACH,qDAAoB,GAApB;QACE,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,kEAAU,CAAC,oBAAoB,CAAC,QAAQ,EAAE,CAAC,CAAC;IACjF,CAAC;IAED;;OAEG;IACH,kDAAiB,GAAjB;QAAA,iBA0BC;QAzBC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,wBAAc;gBAChD,KAAI,CAAC,MAAM,GAAG,cAAc,CAAC,EAAE,CAAC;gBAChC,KAAI,CAAC,mBAAmB,CAAC,YAAY,GAAG,KAAI,CAAC,MAAM,CAAC;gBACpD,KAAI,CAAC,uBAAuB,CAAC,kBAAkB,CAAC,KAAI,CAAC,MAAM,CAAC;qBACzD,SAAS,CAAC,6BAAmB;oBAC5B,KAAI,CAAC,uBAAuB,CAAC,aAAa,GAAG,mBAAmB,CAAC,aAAa,CAAC;oBAC/E,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC;oBAChE,KAAI,CAAC,2BAA2B,GAAG,KAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC;oBAClF,KAAI,CAAC,UAAU,GAAG,mBAAmB,CAAC,UAAU,CAAC;oBACjD,KAAI,CAAC,gBAAgB,EAAE,CAAC;gBAE1B,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,uBAAuB,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC;iBACzD,SAAS,CAAC,6BAAmB;gBAC5B,KAAI,CAAC,uBAAuB,CAAC,aAAa,GAAG,mBAAmB,CAAC,aAAa,CAAC;gBAC/E,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC;gBAChE,KAAI,CAAC,2BAA2B,GAAG,KAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC;gBAClF,KAAI,CAAC,UAAU,GAAG,mBAAmB,CAAC,UAAU,CAAC;gBACjD,KAAI,CAAC,gBAAgB,EAAE,CAAC;YAE1B,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IAED;;;OAGG;IACH,+CAAc,GAAd;QAAA,iBAoBC;QAnBC,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;QACjD,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,sBAAY,IAAI,QAAC,YAAY,CAAC,QAAQ,EAAtB,CAAsB,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;YAChF,IAAM,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,sBAAY,IAAI,QAAC,YAAY,CAAC,QAAQ,EAAtB,CAAsB,CAAC,CAAC;YACnG,wBAAwB,CAAC,OAAO,CAAC,sBAAY,IAAI,mBAAY,CAAC,QAAQ,GAAG,IAAI,EAA5B,CAA4B,CAAC,CAAC;YAC/E,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,EAAE,wBAAwB,CAAC;iBAC/E,SAAS,CAAC,uBAAa;gBACpB,KAAI,CAAC,uBAAuB,CAAC,kBAAkB,CAAC,KAAI,CAAC,MAAM,CAAC;qBACzD,SAAS,CAAC,6BAAmB;oBAC5B,KAAI,CAAC,aAAa,GAAG,mBAAmB,CAAC,aAAa,CAAC;oBACvD,KAAI,CAAC,2BAA2B,GAAG,KAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC;oBAClF,KAAI,CAAC,UAAU,GAAG,mBAAmB,CAAC,UAAU,CAAC;oBACjD,KAAI,CAAC,gBAAgB,EAAE,CAAC;gBAE1B,CAAC,CAAC,CAAC;YACP,CAAC,EACD,eAAK;gBACH,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC;SACR;IACH,CAAC;IAED;;OAEG;IACH,iDAAgB,GAAhB;QACE,IAAM,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,sBAAY,IAAI,QAAC,YAAY,CAAC,QAAQ,EAAtB,CAAsB,CAAC,CAAC,MAAM,CAAC;QAChG,QAAQ,CAAC,aAAa,CAAC,uBAAuB,CAAC;aAC5C,YAAY,CAAC,YAAY,EAAE,KAAG,cAAgB,CAAC,CAAC;QACnD,IAAI,CAAC,UAAU,GAAG,cAAc,GAAG,CAAC,CAAC;IACvC,CAAC;IAtGU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCASiC,kEAAW;YACJ,gFAAkB;YACjB,kFAAmB;YACxB,wEAAc;YACL,0FAAuB;OAZzD,sBAAsB,CAuGlC;IAAD,6BAAC;CAAA;AAvGkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdiB;AAsBpD;IAAA;IAcA,CAAC;IAZC,kCAAS,GAAT,UAAU,IAAiB,EAAE,IAAU;QACrC,OAAO,IAAI,CAAC,GAAG,CAAC,WAAC;YACf,IAAM,SAAS,GAAG;gBAChB,OAAO,EAAE,CAAC,CAAC,OAAO;gBAClB,SAAS,EAAE,CAAC,CAAC,SAAS;gBACtB,iBAAiB,EAAE,SAAS;aAC7B,CAAC;YACF,SAAS,CAAC,iBAAiB,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC;YAE1F,oBAAW,CAAC,EAAK,SAAS,EAAE;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAbU,cAAc;QAJ1B,0DAAI,CAAC;YACJ,IAAI,EAAE,QAAQ;SACf,CAAC;OAEW,cAAc,CAc1B;IAAD,qBAAC;CAAA;AAd0B;;;;;;;;;;;;;;;;;;;;;;ACtByB;AAKpD;IAAA;IAMA,CAAC;IAJC,uCAAS,GAAT,UAAU,KAAU,EAAE,IAAU;QAC9B,OAAO,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;IAJU,mBAAmB;QAH/B,0DAAI,CAAC;YACJ,IAAI,EAAE,iBAAiB;SACxB,CAAC;OACW,mBAAmB,CAM/B;IAAD,0BAAC;CAAA;AAN+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLW;AACe;AACF;AAGM;AAEoB;AAKlF;IAKE,yCAAoB,mBAAwC,EACxC,oBAA0C;QAD1C,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,yBAAoB,GAApB,oBAAoB,CAAsB;QAJ9D,yBAAoB,GAAG,qEAAoB,CAAC;QAC5C,wBAAmB,GAAG,mEAAmB,CAAC;IAGwB,CAAC;IAEnE;;;;;;;OAOG;IACH,uDAAa,GAAb,UAAc,SAAS,EAAE,MAAM,EAAE,UAAU;QAA3C,iBAqIC;QApIC,IAAI,SAAS,IAAI,MAAM,EAAE;YACvB,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,UAAU,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;YACpE,IAAI,CAAC,oBAAoB,CAAC,uBAAuB,CAAC,UAAU,EAAE,MAAM,EAAE,SAAS,CAAC;iBAC7E,SAAS,CAAC,UAAC,OAAsB;gBAChC,IAAI,0BAA0B,GAAG,KAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBAC5F,IAAI,mBAAmB,GAAG,KAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBACpF,0BAA0B,GAAG,EAAE,CAAC;gBAChC,mBAAmB,GAAG,EAAE,CAAC;gBACzB,IAAI,UAAe,CAAC;gBACpB,IAAI,gBAAqB,CAAC;gBAC1B,IAAI,UAAU,GAAG,EAAE,CAAC;gBACpB,IAAI,gBAAgB,GAAG,EAAE,CAAC;gBAC1B,IAAI,iBAAsB,CAAC;gBAC3B,IAAI,uBAA4B,CAAC;gBACjC,KAAI,CAAC,mBAAmB,CAAC,eAAe,GAAG,OAAO,CAAC;gBAEnD,OAAO,CAAC,OAAO,CAAC,UAAC,MAAc;oBAE7B,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC9C,UAAU,GAAG;4BACZ,IAAI,EAAE,KAAG,MAAM,CAAC,IAAM;4BACtB,mBAAmB,EAAE,OAAO;4BAC5B,MAAM,EAAE,IAAI;4BACZ,UAAU,EAAE,EACX;4BACD,QAAQ,EAAE,EAAE;yBACb,CAAC;wBACD,gBAAgB,GAAG;4BAClB,IAAI,EAAE,KAAG,MAAM,CAAC,IAAM;4BACtB,mBAAmB,EAAE,OAAO;4BAC5B,MAAM,EAAE,IAAI;4BACZ,UAAU,EAAE,EACX;4BACD,QAAQ,EAAE,EAAE;yBACb,CAAC;wBACD,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,MAAc;4BACrC,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gCAE9C,IAAM,UAAQ,GAAG;oCACd,IAAI,EAAE,iBAAe,MAAM,CAAC,IAAI,SAAI,MAAM,CAAC,IAAI,WAAQ;oCACvD,IAAI,EAAE,MAAM;oCACZ,QAAQ,EAAE,MAAM,CAAC,EAAE;oCACnB,QAAQ,EAAE,MAAM,CAAC,QAAQ;oCACzB,YAAY,EAAE,UAAU;oCACxB,OAAO,EAAE,EAAE;iCACZ,CAAC;gCAEH,IAAM,gBAAc,GAAG;oCACpB,IAAI,EAAE,mBAAiB,MAAM,CAAC,IAAI,SAAI,MAAM,CAAC,IAAI,cAAW;oCAC5D,IAAI,EAAE,MAAM;oCACZ,QAAQ,EAAE,MAAM,CAAC,EAAE;oCACnB,QAAQ,EAAE,MAAM,CAAC,QAAQ;oCACzB,YAAY,EAAE,UAAU;oCACxB,OAAO,EAAE,EAAE;iCACZ,CAAC;gCAEH,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,KAAkB;oCACpC,IAAM,MAAM,GAAG,EAAC,KAAK,EAAE,KAAK,CAAC,WAAW,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,EAAC,CAAC;oCAC9D,UAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oCAC9B,gBAAc,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gCACxC,CAAC,CAAC,CAAC;gCACJ,UAAU,CAAC,IAAI,CAAC,UAAQ,CAAC,CAAC;gCAC1B,gBAAgB,CAAC,IAAI,CAAC,gBAAc,CAAC,CAAC;6BAEtC;iCAAM;gCACJ,iBAAiB,GAAG;oCACnB,IAAI,EAAE,KAAG,MAAM,CAAC,IAAM;oCACtB,MAAM,EAAE,MAAM,CAAC,IAAI;oCACnB,mBAAmB,EAAE,OAAO;oCAC5B,MAAM,EAAE,IAAI;oCACZ,UAAU,EAAE;wCACV;4CACE,IAAI,EAAE,iBAAe,MAAM,CAAC,IAAI,eAAY;4CAC5C,IAAI,EAAE,QAAQ;4CACd,QAAQ,EAAE,MAAM,CAAC,EAAE;4CACnB,QAAQ,EAAE,MAAM,CAAC,QAAQ;4CACzB,YAAY,EAAE,QAAQ;4CACtB,GAAG,EAAG,CAAC;4CACP,GAAG,EAAG,GAAG;yCACV;qCACF;oCACD,QAAQ,EAAE,EAAE;iCACb,CAAC;gCAED,uBAAuB,GAAG;oCACzB,IAAI,EAAE,KAAG,MAAM,CAAC,IAAM;oCACtB,MAAM,EAAE,MAAM,CAAC,IAAI;oCACnB,mBAAmB,EAAE,OAAO;oCAC5B,MAAM,EAAE,IAAI;oCACZ,UAAU,EAAE;wCACV;4CACE,IAAI,EAAE,mBAAiB,MAAM,CAAC,IAAI,kBAAe;4CACjD,IAAI,EAAE,QAAQ;4CACd,QAAQ,EAAE,MAAM,CAAC,EAAE;4CACnB,QAAQ,EAAE,MAAM,CAAC,QAAQ;4CACzB,YAAY,EAAE,QAAQ;4CACtB,GAAG,EAAG,CAAC;4CACP,GAAG,EAAG,GAAG;yCACV;qCACF;oCACD,QAAQ,EAAE,EAAE;iCACb,CAAC;gCACD,KAAoB,UAAmB,EAAnB,WAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAnB,cAAmB,EAAnB,IAAmB,EAAE;oCAApC,IAAM,KAAK;oCACf,IAAI,KAAK,KAAK,OAAO,EAAE;wCACtB,sDAAsD;wCACtD,qDAAqD;qCACrD;iCACF;6BACF;wBACH,CAAC,CAAC,CAAC;wBACF,IAAI,UAAU,EAAE;4BACf,UAAU,CAAC,UAAU,GAAI,UAAU,CAAC;4BACpC,0BAA0B,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;4BAC5C,UAAU,GAAG,EAAE,CAAC;yBACjB;wBACA,IAAI,gBAAgB,EAAE;4BACrB,gBAAgB,CAAC,UAAU,GAAG,gBAAgB,CAAC;4BAC/C,mBAAmB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;4BAC3C,gBAAgB,GAAG,EAAE,CAAC;yBAEvB;qBACF;gBACH,CAAC,CAAC,CAAC;gBAEH,KAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,0BAA0B,CAAC;gBACxF,KAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,mBAAmB,CAAC;gBAChF,KAAI,CAAC,mBAAmB,CAAC,oBAAoB,GAAG,KAAI,CAAC,oBAAoB,CAAC;gBAC1E,KAAI,CAAC,mBAAmB,CAAC,mBAAmB,GAAG,KAAI,CAAC,mBAAmB,CAAC;gBACxE,KAAI,CAAC,mBAAmB,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAI,CAAC,oBAAoB,CAAC,CAAC;gBACjF,KAAI,CAAC,mBAAmB,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAI,CAAC,mBAAmB,CAAC,CAAC;YAClF,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IArJU,+BAA+B;QAH3C,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAMyC,0EAAmB;YAClB,oFAAoB;OANnD,+BAA+B,CAsJ3C;IAAD,sCAAC;CAAA;AAtJ2C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZa;AAGW;AAEc;AAClB;AACN;AACxB;AACsB;AAGsB;AAG9E;IAuCE,6BAAoB,aAAmC,EACnC,WAAwB,EACxB,kBAAsC;QAF1D,iBA+BC;QA/BmB,kBAAa,GAAb,aAAa,CAAsB;QACnC,gBAAW,GAAX,WAAW,CAAa;QACxB,uBAAkB,GAAlB,kBAAkB,CAAoB;QAvC1D,mBAAc,GAAwB,EAAE,CAAC;QACzC,kBAAa,GAAsB,EAAE,CAAC;QAGtC,wBAAmB,GAAe,EAAE,CAAC;QAErC,gBAAW,GAAwB,EAAE,CAAC;QACtC,eAAU,GAAsB,EAAE,CAAC;QAGnC,yBAAoB,GAAe,EAAE,CAAC;QACtC,6BAAwB,GAAe,EAAE,CAAC;QAC1C,8BAAyB,GAAG,KAAK,CAAC;QAClC,0BAAqB,GAAG,KAAK,CAAC;QAC9B,iBAAY,GAAS,IAAI,sEAAI,EAAE,CAAC;QAChC,aAAQ,GAAqB,EAAE,CAAC;QAChC,oBAAe,GAAqB,EAAE,CAAC;QAEvC,cAAS,GAAe,EAAE,CAAC;QAC3B,qBAAgB,GAAe,EAAE,CAAC;QAClC,oBAAe,GAAe,EAAE,CAAC;QAEjC,yBAAoB,GAAG,IAAI,0DAAY,EAAW,CAAC;QACnD,mCAA8B,GAAG,IAAI,0DAAY,EAAW,CAAC;QAC7D,mBAAc,GAAG,IAAI,0DAAY,EAAoB,CAAC;QAEtD,oBAAe,GAAe,EAAE,CAAC;QACjC,yBAAoB,GAAG,qEAAoB,CAAC;QAC5C,wBAAmB,GAAG,mEAAmB,CAAC;QAE1C,4BAAuB,GAAG,IAAI,+CAAO,EAAE,CAAC;QACxC,4BAAuB,GAAG,IAAI,+CAAO,EAAE,CAAC;QAGxC,kBAAa,GAAe,EAAE,CAAC;QAC/B,eAAU,GAAe,EAAE,CAAC;QAK1B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;QAC/D,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,kBAAQ;YAC1C,KAAI,CAAC,yBAAyB,GAAG,QAAQ,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,8BAA8B,CAAC,SAAS,CAAC,kBAAQ;YACpD,KAAI,CAAC,qBAAqB,GAAG,QAAQ,CAAC;QACxC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,kBAAQ;YACpC,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAO;gBAC3B,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC;YAC7C,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,wBAAc;gBAChD,KAAI,CAAC,YAAY,GAAG,cAAc,CAAC,EAAE,CAAC;YACxC,CAAC,CAAC,CAAC;YAEH,IAAI,KAAI,CAAC,YAAY,IAAI,KAAI,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC3D,KAAI,CAAC,aAAa,CAAC,8BAA8B,CAAC,KAAI,CAAC,YAAY,CAAC;qBACjE,SAAS,CAAC,mBAAS;oBAClB,KAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;oBAC3B,SAAS,CAAC,OAAO,CAAC,kBAAQ;wBACxB,KAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC;oBACxD,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;aACN;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,iDAAmB,GAAnB;QAAA,iBAOC;QANC,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC;aAC3D,SAAS,CAAC,kBAAQ;YACjB,KAAsB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ,EAAE;gBAA3B,IAAM,OAAO;gBAChB,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC;aAC5C;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;;;OAMG;IACH,yCAAW,GAAX,UAAY,UAAU,EAAE,MAAM,EAAE,SAAS;QAAzC,iBAKC;QAJC,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,UAAU,EAAE,MAAM,EAAE,SAAS,CAAC;aAC/D,SAAS,CAAC,UAAC,OAAsB;YAChC,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACH,uCAAS,GAAT,UAAU,MAAW;QACnB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;IAED;;;;OAIG;IACH,gDAAkB,GAAlB;QACE,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED;;;;;;;OAOG;IACH,gDAAkB,GAAlB,UAAmB,KAAK,EAAE,QAAoB,EAAE,WAAmB;QACjE,IAAM,QAAQ,GAAe,EAAE,CAAC;QAChC,QAAQ,CAAC,OAAO,CAAC,UAAC,KAAU;YAC1B,IAAM,UAAU,GAAG,KAAK,CAAC;YACzB,IAAI,UAAU,CAAC,WAAW,CAAC,CAAC,WAAW,EAAE;iBACpC,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,EAAE;gBACvC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAC3B;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,QAAQ,CAAC;IAClB,CAAC;IAvIU,mBAAmB;QAD/B,gEAAU,EAAE;yCAwCwB,oFAAoB;YACtB,kEAAW;YACJ,gFAAkB;OAzC/C,mBAAmB,CAwI/B;IAAD,0BAAC;CAAA;AAxI+B;;;;;;;;;;;;;;;;;;;;;;;;;ACfyB;AAOzD;IAqBE;QAAA,iBAWC;QA7BD,yBAAoB,GAAG,IAAI,0DAAY,EAAW,CAAC;QACnD,0BAAqB,GAAG,IAAI,0DAAY,EAAQ,CAAC;QACjD,+BAA0B,GAAG,IAAI,0DAAY,EAAW,CAAC;QACzD,kCAA6B,GAAG,IAAI,0DAAY,EAAgB,CAAC;QACjE,4BAAuB,GAAG,IAAI,0DAAY,EAAc,CAAC;QACzD,4BAAuB,GAAG,IAAI,0DAAY,EAAY,CAAC;QACvD,uBAAkB,GAAG,IAAI,0DAAY,EAAQ,CAAC;QAC9C,6BAAwB,GAAG,IAAI,0DAAY,EAAO,CAAC;QAGnD,sBAAiB,GAAQ;YACvB,IAAI,EAAE,EAAC,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAC,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAC,EAAC;YACnD,MAAM,EAAE,EAAC,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAC,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAC,EAAC;YACrD,MAAM,EAAE,EAAE;SACX,CAAC;QACF,qCAAgC,GAAG,IAAI,0DAAY,EAAO,CAAC;QAC3D,+BAA0B,GAAG,IAAI,0DAAY,EAAO,CAAC;QAGnD,IAAI,CAAC,oBAAoB;aACtB,SAAS,CAAC,kBAAQ;YACjB,KAAI,CAAC,2BAA2B,GAAG,QAAQ,CAAC;QAC9C,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,qBAAqB;aACvB,SAAS,CAAC,cAAI;YACb,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;IAGP,CAAC;IAED,sDAAsB,GAAtB;QACE,IAAI,CAAC,iBAAiB,GAAG;YACvB,IAAI,EAAE,EAAC,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAC,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAC,EAAC;YACnD,MAAM,EAAE,EAAC,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAC,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAC,EAAC;YACrD,MAAM,EAAE,EAAE;SACX,CAAC;IACJ,CAAC;IAxCU,qBAAqB;QADjC,gEAAU,EAAE;;OACA,qBAAqB,CA0CjC;IAAD,4BAAC;CAAA;AA1CiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPuB;AACmC;AACd;AACzC;AAKrC;IAYE,iCAAoB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QAV1D,kBAAa,GAA4B,EAAE,CAAC;QAC5C,8BAAyB,GAAG,IAAI,0DAAY,EAAW,CAAC;QAExD,sBAAiB,GAA4B,EAAE,CAAC;QAGhD,eAAU,GAAG,KAAK,CAAC;QACnB,2BAAsB,GAAG,CAAC,CAAC;IAGkC,CAAC;IAE9D;;;;OAIG;IACH,qCAAG,GAAH,UAAI,YAA8B;QAChC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACtC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC;IAED,uCAAK,GAAL;QACE,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;IAC1B,CAAC;IAED;;;;;OAKG;IACH,oDAAkB,GAAlB,UAAmB,MAAc;QAAjC,iBAyBC;QAxBC,OAAO,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,MAAM,CAAC;aACvD,IAAI,CAAC,0DAAG,CAAC,UAAC,mBAA+B;YACxC,KAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,mBAAmB,CAAC,OAAO,CAAC,4BAAkB;gBAC1C,IAAM,QAAQ,GAAG,kBAAkB,CAAC,IAAI,CAAC;gBAEzC,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,EAAE;oBAC/B,kBAAkB,CAAC,YAAY,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;oBACtF,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;iBAC1D;YACH,CAAC,CAAC,CAAC;YACL,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,aAAa,CAAC,MAAM,GAAG,KAAI,CAAC,sBAAsB,CAAC,CAAC;gBAC9E,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,EAAE,KAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,aAAa,CAAC;YAEnF,OAAO;gBACH,SAAS,EAAE,KAAI,CAAC,UAAU;gBAC1B,aAAa,EAAE,KAAI,CAAC,aAAa;gBACjC,iBAAiB,EAAE,KAAI,CAAC,iBAAiB;aAC1C,CAAC;QACJ,CAAC,EACD,eAAK;YAEH,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,CAAC,CAAC;IACV,CAAC;IAED;;;;;;OAMG;IACH,sDAAoB,GAApB,UAAqB,MAAc,EAAE,IAAU,EAAE,KAAa;QAA9D,iBAcC;QAbC,IAAM,YAAY,GAAqB,IAAI,8FAAgB,EAAE,CAAC;QAC9D,YAAY,CAAC,MAAM,GAAG,MAAM,CAAC;QAC7B,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC9B,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC;QAC3B,YAAY,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QAC/B,YAAY,CAAC,QAAQ,GAAG,MAAM,CAAC;QAC/B,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC;QAClC,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,MAAM,EAAE,YAAY,CAAC;aAC3D,SAAS,CAAC,8BAAoB;YAC3B,KAAI,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;YAC/B,KAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5C,CAAC,CACF,CAAC;IACN,CAAC;IAlFU,uBAAuB;QADnC,gEAAU,EAAE;yCAa6B,gFAAkB;OAZ/C,uBAAuB,CAmFnC;IAAD,8BAAC;CAAA;AAnFmC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRO;AAIuC;AACpB;AAI9D;IAME,6BAAoB,oBAA0C,EAC1C,mBAAwC;QADxC,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,wBAAmB,GAAnB,mBAAmB,CAAqB;QAC1D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;IAClD,CAAC;IAED;;;;;;;OAOG;IACH,6DAA+B,GAA/B,UAAgC,OAAgB,EAAE,SAAc,EAAE,iBAAsB;QAEtF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC;QACpD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,SAAS,CAAC;QACjE,OAAO,CAAC,QAAQ,GAAG,8BAA8B,CAAC;QAClD,OAAO,CAAC,QAAQ,GAAG,8CAA8C,CAAC;QAElE,IAAI,iBAAiB,CAAC,QAAQ,IAAI,iBAAiB,CAAC,QAAQ,EAAE;YAC5D,wDAAwD;YACxD,OAAO,CAAC,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,CAAC;YAC9C,OAAO,CAAC,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,CAAC;YAC9C,IAAI,SAAS,CAAC,mBAAmB,CAAC,WAAW,EAAE,KAAK,OAAO,EAAE;gBAC3D,IAAI,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,KAAK,EAAE;oBACxC,OAAO,CAAC,SAAS,CAAC,OAAO,GAAG,KAAK,CAAC;iBACnC;qBACD,IAAI,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;oBACvC,OAAO,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;iBAClC;aACF;SACF;QAED,OAAO,OAAO,CAAC;IACjB,CAAC;IAED;;;;;;;OAOG;IACH,4DAA8B,GAA9B,UAA+B,MAAkB,EAAE,SAAc,EAAE,iBAAsB;QAEvF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC;QACpD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,SAAS,CAAC;QAEjE,MAAM,CAAC,QAAQ,GAAG,8BAA8B,CAAC;QACjD,MAAM,CAAC,QAAQ,GAAG,8CAA8C,CAAC;QACjE,MAAM,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;QAEhC,IAAI,iBAAiB,CAAC,QAAQ,IAAI,iBAAiB,CAAC,QAAQ,EAAE;YAC5D,sDAAsD;YACtD,MAAM,CAAC,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,CAAC;YAC7C,MAAM,CAAC,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,CAAC;YAC7C,IAAI,SAAS,CAAC,mBAAmB,CAAC,WAAW,EAAE,KAAK,OAAO,EAAE;gBAC3D,IAAI,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,KAAK,EAAE;oBACvC,MAAM,CAAC,SAAS,CAAC,OAAO,GAAG,KAAK,CAAC;iBAClC;qBAAM,IAAI,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;oBAC7C,MAAM,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;iBACjC;aACF;SACF;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IA1EU,mBAAmB;QAD/B,gEAAU,EAAE;yCAO+B,oFAAoB;YACrB,0EAAmB;OAPjD,mBAAmB,CA2E/B;IAAD,0BAAC;CAAA;AA3E+B;;;;;;;;;;;;ACThC,uCAAuC,mBAAmB,KAAK,yBAAyB,mBAAmB,KAAK,uBAAuB,uBAAuB,KAAK,K;;;;;;;;;;;ACAnK,2FAA2F,yVAAyV,oPAAoP,sIAAsI,oNAAoN,soBAAsoB,YAAY,mCAAmC,iBAAiB,2CAA2C,cAAc,gtBAAgtB,YAAY,KAAK,aAAa,gVAAgV,sBAAsB,mfAAmf,YAAY,iCAAiC,iBAAiB,yCAAyC,cAAc,onBAAonB,YAAY,KAAK,aAAa,6L;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7hI;AAC4B;AACV;AACU;AACP;AACP;AAGkB;AACP;AAQ3E;IAcE,0BAAoB,kBAAsC,EACtC,kBAAsC,EACtC,qBAA4C,EAC5C,mBAAwC,EACxC,WAAwB,EACxB,aAAmC;QALnC,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAsB;QAjBvD,UAAK,GAAe,EAAE,CAAC;QACvB,kBAAa,GAAe,EAAE,CAAC;QAI/B,UAAK,GAAgB,EAAE,CAAC;QACxB,kBAAa,GAAgB,EAAE,CAAC;QAEhC,aAAQ,GAAmB,EAAE,CAAC;QAC9B,gBAAW,GAAe,EAAE,CAAC;QAS3B,IAAI,CAAC,WAAW,GAAG,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,EAAE,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;QACpD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC;IAC1E,CAAC;IAED;;;;;OAKG;IACH,mCAAQ,GAAR;QAAA,iBAgCC;QA/BC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,mBAAmB,EAAE;YACnD,IAAI,CAAC,WAAW,CAAC,WAAW;iBACzB,SAAS,CAAC,iBAAO;gBAChB,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;gBACvB,KAAI,CAAC,qBAAqB,CAAC,mBAAmB,GAAG,OAAO,CAAC;YAC3D,CAAC,CAAC,CAAC;SACN;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,qBAAqB,CAAC,mBAAmB,CAAC;SAC/D;QACD,IAAI,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC;QAEnD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,wBAAc;YAChD,MAAM,GAAG,cAAc,CAAC,EAAE,CAAC;YAC3B,KAAI,CAAC,mBAAmB,CAAC,YAAY,GAAG,MAAM,CAAC;YAC/C,KAAI,CAAC,aAAa,CAAC,8BAA8B,CAAC,MAAM,CAAC;iBACtD,SAAS,CAAC,mBAAS;gBAClB,SAAS,CAAC,OAAO,CAAC,kBAAQ;oBACxB,KAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC;gBAC3D,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,mBAAmB,CAAC,mBAAmB,GAAG,KAAI,CAAC,mBAAmB,CAAC;YAC1E,CAAC,CAAC,CAAC;YACL,KAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE;iBAClC,SAAS,CAAC,eAAK;gBACd,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,cAAI,IAAI,WAAI,CAAC,EAAE,KAAK,MAAM,EAAlB,CAAkB,CAAC,CAAC;YACxD,CAAC,CAAC,CAAC;YAEL,KAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,MAAM,CAAC;iBACxC,SAAS,CAAC,eAAK;gBACd,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACrB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,sCAAW,GAAX,UAAY,KAAK;QACf,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,KAAgB,UAAuB,EAAvB,WAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAvB,cAAuB,EAAvB,IAAuB,EAAE;YAApC,IAAM,CAAC;YACV,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC3B,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;iBAC1B,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,EAAE;gBAC7C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC/B;SACF;IACH,CAAC;IAED;;;;OAIG;IACH,sCAAW,GAAX,UAAY,KAAK;QACf,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,KAAgB,UAAuB,EAAvB,WAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAvB,cAAuB,EAAvB,IAAuB,EAAE;YAApC,IAAM,CAAC;YACV,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC3B,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;iBACtB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,EAAE;gBAC7C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC/B;SACF;IACH,CAAC;IAED;;OAEG;IACH,gCAAK,GAAL;QACE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IAED;;OAEG;IACH,wCAAa,GAAb;QACE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;IACjB,CAAC;IAED;;;;;OAKG;IACH,0CAAe,GAAf,UAAgB,IAAS,EAAE,IAAU;QAArC,iBAiGC;QAhGC,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,EAAE;YACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;gBACjB,QAAQ,EAAE,OAAO;gBACjB,OAAO,EAAE,EAAE;gBACX,MAAM,EAAE,4BAA4B;aACrC,CAAC,CAAC;YACH,UAAU,CAAC;gBACT,KAAI,CAAC,KAAK,EAAE,CAAC;YACf,CAAC,EAAE,IAAI,CAAC,CAAC;SACV;aAAM,IAAI,CAAC,IAAI,EAAE;YAChB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;gBACjB,QAAQ,EAAE,OAAO;gBACjB,OAAO,EAAE,EAAE;gBACX,MAAM,EAAE,4BAA4B;aACrC,CAAC,CAAC;YACH,UAAU,CAAC;gBACT,KAAI,CAAC,KAAK,EAAE,CAAC;YACf,CAAC,EAAE,IAAI,CAAC,CAAC;SACV;aAAM;YACL,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC;iBAC5F,SAAS,CAAC,kBAAQ;gBACjB,IAAM,gBAAgB,GAAwB,QAAQ,CAAC;gBACvD,KAAsB,UAAgB,EAAhB,qCAAgB,EAAhB,8BAAgB,EAAhB,IAAgB,EAAE;oBAAnC,IAAM,OAAO;oBAChB,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC;iBAC1B;gBACD,KAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,gBAAgB,CAAC;qBACnF,SAAS,CACR,qBAAW;oBACT,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;oBAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC;oBACtB,KAAI,CAAC,aAAa,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,CAAC;yBACvD,SAAS,CAAC,mBAAS;wBAClB,IAAM,YAAY,GAAG,KAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBACnF,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;4BAC1B,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;gCACjB,QAAQ,EAAE,OAAO;gCACjB,OAAO,EAAE,EAAE;gCACX,MAAM,EAAE,+CAA+C;6BACxD,CAAC,CAAC;4BACH,UAAU,CAAC;gCACT,KAAI,CAAC,KAAK,EAAE,CAAC;4BACf,CAAC,EAAE,IAAI,CAAC,CAAC;yBACV;6BAAM;4BAEL,SAAS,CAAC,OAAO,CAAC,UAAC,QAAa,EAAE,KAAa;gCAC7C,IAAI,YAAY,IAAI,QAAQ,CAAC,EAAE,KAAK,YAAY,CAAC,EAAE,IAAI,QAAQ,CAAC,IAAI,KAAK,YAAY,CAAC,IAAI,EAAE;oCAC1F,IAAM,UAAU,GAAG,IAAI,sEAAI,EAAE,CAAC;oCAC9B,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;oCAC7B,UAAU,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;oCAC5C,UAAU,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;oCAC1C,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,UAAU,CAAC;yCAClD,SAAS,CACR,sBAAY;wCACV,IAAI,KAAK,KAAK,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;4CAClC,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;gDACjB,QAAQ,EAAE,SAAS;gDACnB,OAAO,EAAE,EAAE;gDACX,MAAM,EAAE,UAAQ,YAAY,CAAC,IAAI,qBAAkB;6CACpD,CAAC,CAAC;yCACJ;wCACD,UAAU,CAAC;4CACT,KAAI,CAAC,KAAK,EAAE,CAAC;wCACf,CAAC,EAAE,IAAI,CAAC,CAAC;oCACX,CAAC,EACD,eAAK;wCACH,UAAU,CAAC;4CACT,KAAI,CAAC,KAAK,EAAE,CAAC;wCACf,CAAC,EAAE,IAAI,CAAC,CAAC;wCACT,IAAI,KAAK,KAAK,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;4CAClC,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;gDACxB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;oDACjB,QAAQ,EAAE,OAAO;oDACjB,OAAO,EAAE,EAAE;oDACX,MAAM,EAAE,uDAAuD;iDAChE,CAAC,CAAC;6CACJ;iDAAM;gDACL,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;oDACjB,QAAQ,EAAE,OAAO;oDACjB,OAAO,EAAE,EAAE;oDACX,MAAM,EAAE,qDAAqD;iDAC9D,CAAC,CAAC;6CACJ;yCACF;oCACH,CAAC,CAAC,CAAC;iCACR;4BACH,CAAC,CAAC,CAAC;yBACJ;oBACH,CAAC,CAAC,CAAC;gBAEP,CAAC,EACD,eAAK;oBACH,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,KAAK,CAAC,CAAC;gBACrD,CAAC,CAAC,CAAC;YACT,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IAtNU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAewC,gFAAkB;YAClB,gFAAkB;YACf,sFAAqB;YACvB,kFAAmB;YAC3B,kEAAW;YACT,oFAAoB;OAnB5C,gBAAgB,CAuN5B;IAAD,uBAAC;CAAA;AAvN4B;;;;;;;;;;;;;ACjB7B;AAAA;AAAA;AAAyE;AAElE,IAAM,oBAAoB,GAAQ;IACvC,QAAQ,EAAE;QACR;YACE,EAAE,EAAC,CAAC;YACJ,IAAI,EAAE,kBAAkB;YACxB,YAAY,EAAE,iBAAiB;YAC/B,IAAI,EAAE,kBAAkB;YACxB,QAAQ,EAAE;gBACR;oBACE,IAAI,EAAE,aAAa;oBACnB,QAAQ,EAAE,EAAE;iBACb;gBACD;oBACE,IAAI,EAAE,OAAO;oBACb,MAAM,EAAE,KAAK;oBACb,mBAAmB,EAAE,OAAO;oBAC5B,QAAQ,EAAE,OAAO;oBACjB,YAAY,EAAE,iBAAiB;oBAC/B,UAAU,EAAE;wBACV;4BACE,IAAI,EAAE,+BAA+B;4BACrC,IAAI,EAAE,QAAQ;4BACd,YAAY,EAAE,QAAQ;4BACtB,GAAG,EAAE,CAAC;4BACN,GAAG,EAAE,GAAG;yBACT;wBACD;4BACE,IAAI,EAAE,eAAe;4BACrB,IAAI,EAAE,MAAM;4BACZ,YAAY,EAAE,aAAa;yBAC5B;qBACF;oBACD,QAAQ,EAAE,EAAE;iBACb;gBACD;oBACE,IAAI,EAAE,aAAa;oBACnB,QAAQ,EAAE;wBACR;4BACE,IAAI,EAAE,QAAQ;4BACd,mBAAmB,EAAE,aAAa;4BAClC,MAAM,EAAE,IAAI;4BACZ,UAAU,EAAE;gCACV;oCACE,IAAI,EAAE,oCAAoC;oCAC1C,IAAI,EAAE,QAAQ;oCACd,QAAQ,EAAE,GAAG;oCACb,YAAY,EAAE,QAAQ;oCACtB,GAAG,EAAE,CAAC;oCACN,GAAG,EAAE,GAAG;iCACT;gCACD;oCACE,IAAI,EAAE,oCAAoC;oCAC1C,IAAI,EAAE,QAAQ;oCACd,QAAQ,EAAE,GAAG;oCACb,YAAY,EAAE,QAAQ;oCACtB,GAAG,EAAE,CAAC;oCACN,GAAG,EAAE,GAAG;iCACT;gCACD;oCACE,IAAI,EAAE,mCAAmC;oCACzC,IAAI,EAAE,QAAQ;oCACd,QAAQ,EAAE,GAAG;oCACb,YAAY,EAAE,QAAQ;oCACtB,GAAG,EAAE,CAAC;oCACN,GAAG,EAAE,GAAG;iCACT;6BACF;4BACD,QAAQ,EAAE,EAAE;yBACb;qBACF;iBACF;aACF;SACF;QACD;YACE,EAAE,EAAC,CAAC;YACJ,IAAI,EAAE,UAAU;YAChB,YAAY,EAAE,UAAU;YACxB,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE;gBACR;oBACE,IAAI,EAAE,UAAU;oBAChB,mBAAmB,EAAE,MAAM;oBAC3B,UAAU,EAAE;wBACV;4BACE,IAAI,EAAE,uBAAuB;4BAC7B,IAAI,EAAE,MAAM;4BACZ,YAAY,EAAE,UAAU;yBACzB;qBACF;oBACD,QAAQ,EAAE,EAAE;iBACb;gBACD;oBACE,IAAI,EAAE,cAAc;oBACpB,mBAAmB,EAAE,MAAM;oBAC3B,UAAU,EAAE;wBACV;4BACE,IAAI,EAAE,mBAAmB;4BACzB,IAAI,EAAE,MAAM;4BACZ,YAAY,EAAE,aAAa;4BAC3B,OAAO,EAAE,8EAAQ;yBAClB;wBACD;4BACE,IAAI,EAAE,mBAAmB;4BACzB,IAAI,EAAE,MAAM;4BACZ,YAAY,EAAE,aAAa;4BAC3B,OAAO,EAAE,8EAAQ;yBAClB;qBACF;oBACD,QAAQ,EAAE,EAAE;iBACb;gBACD;oBACE,IAAI,EAAE,MAAM;oBACZ,mBAAmB,EAAE,MAAM;oBAC3B,UAAU,EAAE;wBACV;4BACE,IAAI,EAAE,oBAAoB;4BAC1B,IAAI,EAAE,MAAM;4BACZ,YAAY,EAAE,MAAM;yBACrB;wBACD;4BACE,IAAI,EAAE,WAAW;4BACjB,IAAI,EAAE,MAAM;4BACZ,YAAY,EAAE,MAAM;yBACrB;qBACF;oBACD,QAAQ,EAAE,EAAE;iBACb;aACF;SACF;QACD;YACE,EAAE,EAAC,CAAC;YACJ,IAAI,EAAE,SAAS;YACf,YAAY,EAAE,SAAS;YACvB,IAAI,EAAE,YAAY;YAClB,mBAAmB,EAAE,UAAU;YAC/B,UAAU,EAAE;gBACV;oBACE,IAAI,EAAE,yBAAyB;oBAC/B,IAAI,EAAE,MAAM;oBACZ,YAAY,EAAE,UAAU;oBACxB,OAAO,EAAE;wBACP,EAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC;wBAChC,EAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAC;qBACnC;iBACF;aACF;YACD,QAAQ,EAAE,EAAE;SACb;QACD;YACE,EAAE,EAAC,CAAC;YACJ,IAAI,EAAE,WAAW;YACjB,YAAY,EAAE,WAAW;YACzB,IAAI,EAAE,YAAY;YAClB,QAAQ,EAAE;gBACR;oBACE,IAAI,EAAE,SAAS;oBACf,mBAAmB,EAAE,SAAS;oBAC9B,UAAU,EAAE;wBACV;4BACE,IAAI,EAAE,uCAAuC;4BAC7C,IAAI,EAAE,QAAQ;4BACd,QAAQ,EAAE,GAAG;4BACb,YAAY,EAAE,QAAQ;4BACtB,GAAG,EAAE,CAAC;4BACN,GAAG,EAAE,GAAG;yBACT;wBACD;4BACE,IAAI,EAAE,uCAAuC;4BAC7C,IAAI,EAAE,QAAQ;4BACd,QAAQ,EAAE,GAAG;4BACb,YAAY,EAAE,QAAQ;4BACtB,GAAG,EAAE,CAAC;4BACN,GAAG,EAAE,GAAG;yBACT;wBACD;4BACE,IAAI,EAAE,sCAAsC;4BAC5C,IAAI,EAAE,QAAQ;4BACd,QAAQ,EAAE,GAAG;4BACb,YAAY,EAAE,QAAQ;4BACtB,GAAG,EAAE,CAAC;4BACN,GAAG,EAAE,GAAG;yBACT;qBACF;oBACD,QAAQ,EAAE,EAAE;iBACb;gBACD;oBACE,IAAI,EAAE,mBAAmB;oBACzB,mBAAmB,EAAE,kBAAkB;oBACvC,UAAU,EAAE;wBACV;4BACE,IAAI,EAAE,2BAA2B;4BACjC,IAAI,EAAE,MAAM;4BACZ,YAAY,EAAE,UAAU;4BACxB,OAAO,EAAE;gCACP,EAAC,KAAK,EAAE,cAAc,EAAE,KAAK,EAAE,MAAM,EAAC;gCACtC,EAAC,KAAK,EAAE,gBAAgB,EAAE,KAAK,EAAE,QAAQ,EAAC;gCAC1C,EAAC,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,KAAK,EAAC;6BACrC;yBACF;qBACF;oBACD,QAAQ,EAAE,EAAE;iBACb;gBACD;oBACE,IAAI,EAAE,UAAU;oBAChB,mBAAmB,EAAE,OAAO;oBAC5B,MAAM,EAAE,KAAK;oBACb,QAAQ,EAAE,UAAU;oBACpB,UAAU,EAAE;wBACV;4BACE,IAAI,EAAE,2BAA2B;4BACjC,IAAI,EAAE,MAAM;4BACZ,YAAY,EAAE,aAAa;yBAC5B;qBACF;oBACD,QAAQ,EAAE,EAAE;iBACb;gBACD;oBACE,IAAI,EAAE,OAAO;oBACb,MAAM,EAAE,KAAK;oBACb,KAAK,EAAE,OAAO;oBACd,mBAAmB,EAAE,OAAO;oBAC5B,UAAU,EAAE;wBACV;4BACE,IAAI,EAAE,wBAAwB;4BAC9B,IAAI,EAAE,MAAM;4BACZ,YAAY,EAAE,UAAU;4BACxB,OAAO,EAAE;gCACP,EAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAC;gCAClC,EAAC,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAC;6BACrC;yBACF;qBACF;oBACD,QAAQ,EAAE,EAAE;iBACb;aACF;SACF;QACD;YACE,EAAE,EAAE,CAAC;YACL,IAAI,EAAE,eAAe;YACrB,YAAY,EAAE,eAAe;YAC7B,IAAI,EAAE,QAAQ;YACd,QAAQ,EAAE;gBACR;oBACE,IAAI,EAAE,QAAQ;oBACd,mBAAmB,EAAE,OAAO;oBAC5B,UAAU,EAAE;wBACV;4BACE,IAAI,EAAE,8BAA8B;4BACpC,IAAI,EAAE,MAAM;4BACZ,YAAY,EAAE,OAAO;yBACtB;qBACF;oBACD,QAAQ,EAAE,EAAE;iBACb;gBACD;oBACE,IAAI,EAAE,kBAAkB;oBACxB,mBAAmB,EAAE,iBAAiB;oBACtC,UAAU,EAAE;wBACV;4BACE,IAAI,EAAE,sCAAsC;4BAC5C,IAAI,EAAE,QAAQ;4BACd,YAAY,EAAE,OAAO;yBACtB;qBACF;oBACD,QAAQ,EAAE,EAAE;iBACb;aACF;SACF;QACD;YACE,EAAE,EAAE,CAAC;YACL,IAAI,EAAE,SAAS;YACf,YAAY,EAAE,SAAS;YACvB,IAAI,EAAE,OAAO;YACb,QAAQ,EAAE;gBACR;oBACE,IAAI,EAAE,sBAAsB;oBAC5B,mBAAmB,EAAE,OAAO;oBAC5B,QAAQ,EAAE,KAAK;oBACf,UAAU,EAAE;wBACV;4BACE,IAAI,EAAE,8BAA8B;4BACpC,IAAI,EAAE,QAAQ;4BACd,YAAY,EAAE,UAAU;4BACxB,OAAO,EAAE;gCACP,EAAC,KAAK,EAAE,mBAAmB,EAAE,KAAK,EAAE,mBAAmB,EAAC;gCACxD,EAAC,KAAK,EAAE,eAAe,EAAE,KAAK,EAAE,eAAe,EAAC;gCAChD,EAAC,KAAK,EAAE,uBAAuB,EAAE,KAAK,EAAE,uBAAuB,EAAC;6BAEjE;yBACF;qBACF;oBACD,QAAQ,EAAE,EAAE;iBACb;aACF;SACF;KACF;CACF,CAAC;;;;;;;;;;;;AC1SF,+KAA+K,yBAAyB,mBAAmB,kBAAkB,8BAA8B,SAAS,qBAAqB,iCAAiC,oBAAoB,6BAA6B,mBAAmB,kBAAkB,KAAK,mBAAmB,mBAAmB,kBAAkB,KAAK,sBAAsB,mBAAmB,kBAAkB,KAAK,oBAAoB,2BAA2B,yBAAyB,kBAAkB,eAAe,KAAK,0BAA0B,6BAA6B,KAAK,iBAAiB,2BAA2B,yBAAyB,iBAAiB,eAAe,KAAK,uBAAuB,6BAA6B,KAAK,kBAAkB,iBAAiB,aAAa,KAAK,cAAc,8BAA8B,KAAK,wBAAwB,+CAA+C,KAAK,oBAAoB,gCAAgC,yBAAyB,0BAA0B,4CAA4C,gCAAgC,wCAAwC,+BAA+B,8BAA8B,6BAA6B,4BAA4B,uBAAuB,yBAAyB,gCAAgC,6BAA6B,4BAA4B,wBAAwB,KAAK,qBAAqB,wBAAwB,4BAA4B,KAAK,cAAc,mBAAmB,kBAAkB,KAAK,6CAA6C,4BAA4B,KAAK,cAAc,oBAAoB,KAAK,K;;;;;;;;;;;ACAnxD,2NAA2N,2bAA2b,kVAAkV,4gBAA4gB,YAAY,uHAAuH,eAAe,oEAAoE,YAAY,kMAAkM,gBAAgB,oEAAoE,YAAY,iMAAiM,gBAAgB,mEAAmE,YAAY,wMAAwM,gBAAgB,2EAA2E,YAAY,4WAA4W,yKAAyK,KAAK,aAAa,4EAA4E,YAAY,4NAA4N,YAAY,qNAAqN,YAAY,0MAA0M,YAAY,0MAA0M,YAAY,0JAA0J,YAAY,oOAAoO,gBAAgB,8FAA8F,aAAa,8MAA8M,gBAAgB,gGAAgG,aAAa,kNAAkN,gBAAgB,iEAAiE,aAAa,6WAA6W,kWAAkW,iXAAiX,2nBAA2nB,YAAY,iHAAiH,eAAe,8DAA8D,YAAY,sLAAsL,gBAAgB,8DAA8D,YAAY,qLAAqL,gBAAgB,6DAA6D,YAAY,4LAA4L,gBAAgB,qEAAqE,YAAY,sOAAsO,gBAAgB,6DAA6D,YAAY,6SAA6S,oKAAoK,MAAM,aAAa,sGAAsG,YAAY,+NAA+N,YAAY,2OAA2O,YAAY,0OAA0O,YAAY,4NAA4N,YAAY,+MAA+M,YAAY,oMAAoM,YAAY,oMAAoM,YAAY,oJAAoJ,YAAY,6PAA6P,gBAAgB,kFAAkF,aAAa,2PAA2P,gBAAgB,oFAAoF,aAAa,sMAAsM,gBAAgB,2DAA2D,aAAa,2L;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA74W;AACvD;AACoB;AACM;AACkE;AAChE;AACzC;AAGqC;AACJ;AAIwB;AAInB;AAWlE;IAIE,+BAAsB,eAAgC,EAClC,WAAwB,EACtB,cAA8B,EAChC,mBAA4C,EAC5C,MAAc;QAJZ,oBAAe,GAAf,eAAe,CAAiB;QAClC,gBAAW,GAAX,WAAW,CAAa;QACtB,mBAAc,GAAd,cAAc,CAAgB;QAChC,wBAAmB,GAAnB,mBAAmB,CAAyB;QAC5C,WAAM,GAAN,MAAM,CAAQ;QANxB,iBAAY,GAAG,IAAI,0DAAY,EAAO,CAAC;QASvC,eAAU,GAAG,kEAAU,CAAC;QAelC,YAAO,GAAG,KAAK,CAAC;IAjBhB,CAAC;8BATU,qBAAqB;IA4B1B,gCAAU,GAAjB,UAAkB,IAAkB,EAAE,aAA6C;QAChF,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC7B,IAAI,EAAE,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACtD,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;QAC7B,IAAI,EAAE,KAAK,SAAS,IAAI,EAAE,KAAK,IAAI,EAAG;YAAC,EAAE,CAAC,KAAK,CAAC,aAAa,GAAG,MAAM,CAAC;SAAC;IAC1E,CAAC;IAEM,gCAAU,GAAjB,UAAkB,IAAkB,EAAE,aAA6C;QACjF,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC7B,IAAI,EAAE,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACtD,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;QAC1B,IAAI,EAAE,KAAK,SAAS,IAAI,EAAE,KAAK,IAAI,EAAG;YAAC,EAAE,CAAC,KAAK,CAAC,aAAa,GAAG,MAAM,CAAC;SAAC;IAC1E,CAAC;IAED,6CAAa,GAAb,UAAc,QAAgB;QAC5B,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAChC,IAAI,EAAE,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;QAC3C,IAAI,EAAE,KAAK,SAAS,IAAI,EAAE,KAAK,IAAI,EAAG;YAAC,EAAE,CAAC,KAAK,CAAC,aAAa,GAAG,MAAM,CAAC;SAAC;IAC1E,CAAC;IAED,gDAAgB,GAAhB,UAAiB,IAAiB;QAChC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1B,sCAAsC;IACxC,CAAC;IAED,wCAAQ,GAAR;QAAA,iBAmFC;QAjFC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,SAAS,CAAC,eAAK;YACjD,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,CAAC,QAAQ;aACtB,SAAS,CAAC,UAAC,IAAU,IAAK,YAAI,CAAC,IAAI,GAAG,IAAI,EAAhB,CAAgB,CAAC,CAAC;QAC/C,IAAI,CAAC,WAAW,CAAC,kBAAkB;aAChC,SAAS,CAAC,qBAAW;YACpB,KAAI,CAAC,kBAAkB,GAAG,WAAW,CAAC;QACxC,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,WAAW,CAAC,cAAc;aAC5B,SAAS,CAAC,iBAAO;YAChB,KAAI,CAAC,cAAc,GAAG,OAAO,CAAC;QAChC,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,WAAW,CAAC,WAAW;aACzB,SAAS,CAAC,UAAC,OAAgB;YAC1B,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;YACpC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YAClC,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,UAAU,EAAE,CAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;QAEL,oCAAoC;QACpC,mCAAC,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;YAChB,mCAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;gBAChB,mCAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;gBACtC,mCAAC,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC;gBACzC,mCAAC,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC;YAE7C,CAAC,EACD;gBACE,mCAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;gBACtC,mCAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC;gBACxC,mCAAC,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC;YAC3C,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,GAAG;YACb,kBAAkB,EAAE,uBAAqB,CAAC,UAAU;YACpD,kBAAkB,EAAE,uBAAqB,CAAC,UAAU;YACpD,QAAQ,EAAE,0DAAQ,CAAC,GAAG;YACtB,WAAW,EAAE,6DAAW,CAAC,MAAM;YAC/B,WAAW,EAAE,6DAAW,CAAC,IAAI;YAC7B,MAAM,EAAE,EAAE;YACV,WAAW,EAAE,IAAI;YACjB,IAAI,EAAE,GAAG;YACT,IAAI,EAAC,EAAE;YACP,OAAO,EAAE,GAAG;YACZ,eAAe;YACf,OAAO,EAAE,EAAE;YACX,eAAe;YACf,SAAS,EAAE,KAAK;YAChB,cAAc,EAAE,EAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAC;YACtE,eAAe,EAAE,KAAK;YACtB,IAAI,EAAE,KAAK;YACX,iBAAiB,EAAE,IAAI;YACvB,mBAAmB,EAAE,IAAI;YACzB,SAAS,EAAE;gBACT,OAAO,EAAE,IAAI;gBACb,IAAI,EAAE,UAAU,KAAK,EAAE,QAAQ,EAAE,MAAM;oBACrC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;oBACxB,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;gBACzD,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;aACb;YACD,SAAS,EAAE;gBACT,OAAO,EAAE,IAAI;gBACb,IAAI,EAAE,UAAU,KAAK,EAAE,QAAQ,EAAE,MAAM;oBACrC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;oBAC1B,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;oBAC/B,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;oBAC7B,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;oBAC/B,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;oBACvD,MAAM,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC5C,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;aACb;SACF,CAAC;QACF,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAClC,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,IAAI,CAAC,2BAA2B,EAAE,CAAC;IAErC,CAAC;IAES,0DAA0B,GAApC;QAAA,iBAyCC;QAxCC,IAAM,UAAU,GAAG,IAAI,SAAS,CAAC,KAAG,sEAAW,CAAC,iBAAiB,GAAG,sEAAW,CAAC,OAAO,GAAG,sEAAW,CAAC,WAAW,SAAI,IAAI,CAAC,IAAI,CAAC,EAAE,SAAI,IAAI,CAAC,OAAO,CAAC,EAAE,kCAA+B,CAAC,CAAC;QACrL,4DAA4D;QAC5D,UAAU,CAAC,MAAM,GAAG;YAClB,OAAO,CAAC,GAAG,CAAC,4DAA4D,CAAC,CAAC;QAC5E,CAAC,CAAC;QAEF,aAAa;QACb,UAAU,CAAC,OAAO,GAAG,eAAK;YACxB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBACjF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,KAAK,CAAC,CAAC;QAC1C,CAAC,CAAC;QAEF,+BAA+B;QAC/B,UAAU,CAAC,SAAS,GAAG,sBAAY;YACjC,IAAM,IAAI,GAA8B,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACtE,KAAwB,UAAuB,EAAvB,UAAI,CAAC,OAAO,CAAC,UAAU,EAAvB,cAAuB,EAAvB,IAAuB,EAAE;gBAA5C,IAAM,SAAS;gBAClB,KAAoB,UAAgB,EAAhB,cAAS,CAAC,MAAM,EAAhB,cAAgB,EAAhB,IAAgB,EAAE;oBAAjC,IAAM,KAAK;oBACd,KAAqB,UAAa,EAAb,UAAK,CAAC,OAAO,EAAb,cAAa,EAAb,IAAa,EAAE;wBAA/B,IAAM,MAAM;wBACf,QAAQ,MAAM,CAAC,IAAI,EAAE;4BACnB,KAAK,kEAAU,CAAC,0BAA0B;gCACxC,KAAI,CAAC,sBAAsB,CAAC,MAAyB,EAAE,IAAI,CAAC,CAAC;gCAC7D,MAAM;4BACR,KAAK,kEAAU,CAAC,sBAAsB,CAAC;4BACvC,KAAK,kEAAU,CAAC,0BAA0B,CAAC;4BAC3C,KAAK,kEAAU,CAAC,mBAAmB,CAAC;4BACpC,KAAK,kEAAU,CAAC,mBAAmB,CAAC;4BACpC,KAAK,kEAAU,CAAC,kBAAkB;gCAChC,KAAI,CAAC,oBAAoB,CAAyF,MAAM,EAAE,IAAI,CAAC,CAAC;gCAChI,MAAM;4BACR,KAAK,kEAAU,CAAC,eAAe;gCAC7B,KAAI,CAAC,2BAA2B,CAAwB,MAAM,EAAE,IAAI,CAAC,CAAC;gCACtE,MAAM;yBACT;qBACF;iBACF;aACF;YACD,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC;QAE7C,CAAC,CAAC;IACJ,CAAC;IAES,2DAA2B,GAArC;QAAA,iBAqCC;QApCC,IAAM,UAAU,GAAG,IAAI,SAAS,CAAC,KAAG,sEAAW,CAAC,iBAAiB,GAAG,sEAAW,CAAC,OAAO,GAAG,sEAAW,CAAC,WAAW,SAAI,IAAI,CAAC,IAAI,CAAC,EAAE,SAAI,IAAI,CAAC,OAAO,CAAC,EAAE,mCAAgC,CAAC,CAAC;QACtL,4DAA4D;QAC5D,UAAU,CAAC,MAAM,GAAG;YAClB,OAAO,CAAC,GAAG,CAAC,6DAA6D,CAAC,CAAC;QAC7E,CAAC,CAAC;QAEF,aAAa;QACb,UAAU,CAAC,OAAO,GAAG,eAAK;YACxB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBACjF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,KAAK,CAAC,CAAC;QAC1C,CAAC,CAAC;QAEF,+BAA+B;QAC/B,UAAU,CAAC,SAAS,GAAG,sBAAY;YACjC,IAAM,IAAI,GAA8B,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACtE,KAAwB,UAAuB,EAAvB,UAAI,CAAC,OAAO,CAAC,UAAU,EAAvB,cAAuB,EAAvB,IAAuB,EAAE;gBAA5C,IAAM,SAAS;gBAClB,KAAoB,UAAgB,EAAhB,cAAS,CAAC,MAAM,EAAhB,cAAgB,EAAhB,IAAgB,EAAE;oBAAjC,IAAM,KAAK;oBACd,KAAqB,UAAa,EAAb,UAAK,CAAC,OAAO,EAAb,cAAa,EAAb,IAAa,EAAE;wBAA/B,IAAM,MAAM;wBACf,QAAQ,MAAM,CAAC,IAAI,EAAE;4BACnB,KAAK,kEAAU,CAAC,0BAA0B;gCACxC,KAAI,CAAC,sBAAsB,CAAC,MAAyB,EAAE,IAAI,CAAC,CAAC;gCAC7D,MAAM;4BACR,KAAK,kEAAU,CAAC,sBAAsB;gCACpC,KAAI,CAAC,oBAAoB,CAAkB,MAAM,EAAE,IAAI,CAAC,CAAC;gCACzD,MAAM;4BACR,KAAK,kEAAU,CAAC,eAAe;gCAC7B,KAAI,CAAC,2BAA2B,CAAwB,MAAM,EAAE,IAAI,CAAC,CAAC;gCACtE,MAAM;yBACT;qBACF;iBACF;aACF;YACD,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC;QAE7C,CAAC,CAAC;IACJ,CAAC;IAES,2DAA2B,GAArC;QAAA,iBAuDC;QArDC,IAAM,sBAAsB,GAAG,IAAI,SAAS,CAAC,KAAG,sEAAW,CAAC,iBAAiB,GAAG,sEAAW,CAAC,OAAO,GAAG,sEAAW,CAAC,WAAW,SAAI,IAAI,CAAC,IAAI,CAAC,EAAE,SAAI,IAAI,CAAC,OAAO,CAAC,EAAE,iCAA8B,CAAC,CAAC;QAEhM,sBAAsB,CAAC,MAAM,GAAG;YAC9B,OAAO,CAAC,GAAG,CAAC,2DAA2D,CAAC,CAAC;QAC3E,CAAC,CAAC;QAEF,aAAa;QACb,sBAAsB,CAAC,OAAO,GAAG,eAAK;YACpC,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBACjF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,KAAK,CAAC,CAAC;QAC1C,CAAC,CAAC;QAEF,+BAA+B;QAC/B,sBAAsB,CAAC,SAAS,GAAG,sBAAY;YAC7C,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YAC3C,IAAI,MAAM,CAAC;YAEX,QAAQ,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE;gBACjC,KAAK,SAAU,CAAC,CAAC;oBACf,MAAM,GAAG,WAAW,CAAC;oBACrB,OAAO,CAAC,GAAG,CAAC,UAAU,EAAC,MAAM,CAAC,CAAC;oBAE/B,MAAM;iBACP;gBACD,KAAK,MAAO,CAAC,CAAC;oBACZ,MAAM,GAAG,WAAW,CAAC;oBAErB,MAAM;iBACP;gBACD,KAAK,UAAW,CAAC,CAAC;oBAChB,MAAM,GAAG,aAAa,CAAC;oBAEvB,MAAM;iBACP;gBACD,OAAO,CAAC,CAAC;oBACP,MAAM,GAAG,SAAS,CAAC;oBACnB,MAAM;iBACP;aACF;YAED,QAAQ,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,EAAE;gBACvC,KAAK,UAAW,CAAC,CAAC;oBAChB,IAAG,CAAC,MAAM,EAAC;wBACT,MAAM,GAAG,aAAa,CAAC;qBACxB;oBACD,MAAM;iBACP;aACF;YACD,IAAI,MAAM,EAAE;gBACV,KAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;aACpF;QACH,CAAC,CAAC;IACJ,CAAC;IAED;;;OAGG;IACH,0CAAU,GAAV;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU;aAC3B,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,KAAI,CAAC,kBAAkB,EAAhC,CAAgC,CAAC,CAAC,MAAM;aAClD,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,KAAI,CAAC,cAAc,EAA5B,CAA4B,CAAC,CAAC,OAAO,CAAC;IACrD,CAAC;IAED;;;OAGG;IACO,kDAAkB,GAA5B,UAA6B,QAAgB;QAC3C,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;IAClC,CAAC;IAES,mDAAmB,GAA7B,UAA8B,MAAM;QAClC,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;QACxD,MAAM,CAAC,WAAW,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;QACxD,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;IACpE,CAAC;IAED;;;;;OAKG;IACO,8CAAc,GAAxB,UAAyB,QAAgB,EAAE,KAAK,EAAE,KAAa;QAA/D,iBAQC;QAPC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,QAAQ,EAAE,IAAI,sEAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;aAChH,SAAS,CAAC,gBAAM;QACjB,CAAC,EAAE,eAAK;YACN,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBACjF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACP,CAAC;IAES,sDAAsB,GAAhC,UAAiC,MAAuB,EAAE,IAA+B;QACvF,iCAAiC;QACjC,IAAI,MAAM,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,EAAE;YACrC,IAAI,MAAM,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,EAAE;gBACrC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;aAC3B;SACF;IACH,CAAC;IAED,yHAAyH;IAC/G,oDAAoB,GAA9B,UAA+B,MAAiF,EAAE,IAA+B;QAC/I,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACpH,CAAC;IACD,yHAAyH;IACzH,+FAA+F;IAC9F,qHAAqH;IACtH,GAAG;IAEO,2DAA2B,GAArC,UAAsC,MAA6B,EAAE,IAA+B;QAClG,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACjJ,CAAC;IAES,4CAAY,GAAtB,UAAuB,QAAe;QACpC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;QAClC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;IAC7C,CAAC;IAED,oGAAoG;IACpG,gIAAgI;IAChI,IAAI;IACN,wDAAwD;IAC/C,iCAAW,GAAlB,UAAmB,KAAa,EAAE,SAAiB,EAAE,OAAe,EAAE,OAAe;QACnF,IAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACzC,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,OAAO,CAAC;QAChC,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,OAAO,CAAC;QAChC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,GAAG,SAAS,GAAG,IAAI,CAAC;QAC5C,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;QACjC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC;QAC1B,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,kBAAkB,CAAC;QACpC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAChC,0CAA0C;QAC1C,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC5C,IAAM,OAAO,GAAG;YACd,KAAK,EAAE,IAAI,CAAC,WAAW;YACvB,MAAM,EAAE,IAAI,CAAC,YAAY;SAC1B,CAAC;QAEF,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,GAAG,IAAI,CAAC;QACZ,OAAO,OAAO,CAAC;IACjB,CAAC;IAEM,6BAAO,GAAd,UAAe,EAAE;QACf,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvB,IAAM,IAAI,GAAG,EAAE,CAAC,WAAW,CAAC;QAC5B,IAAI,KAAK,GAAG,MAAM,CAAC,gBAAgB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;QAC5E,IAAI,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,WAAmB,CAAC;QACxB,IAAM,GAAG,GAAG,MAAM,CAAC,gBAAgB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;QAC9E,IAAM,MAAM,GAAG,MAAM,CAAC,gBAAgB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;QACjF,IAAI,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC,gBAAgB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC;QACpF,IAAI,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,gBAAgB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC;QAEtF,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;QAC5D,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC5B,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;QACvD,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;QAC1D,gFAAgF;QAChF,IAAK,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC,EAAG;YAC7D,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAC1B,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;YACnD,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,oEAAoE;YACpE,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,EAAE;gBAC3D,WAAW,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC;gBACjC,EAAE,CAAC,KAAK,CAAC,QAAQ,GAAG,WAAW,CAAC;gBAChC,2EAA2E;gBAC3E,KAAK,GAAG,MAAM,CAAC,gBAAgB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;gBACxE,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC1B,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;gBAC/C,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC,gBAAgB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC;gBAChF,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,gBAAgB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAClF,CAAC,EAAE,CAAC;aACL;YACD,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;YACzB,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;SACxB;QACD,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;QACvD,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;QAC1D,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC,EAAE;YAC1D,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACxB,KAAK,GAAG,MAAM,CAAC,gBAAgB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;YACxE,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;YAC1B,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;YACnD,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,EAAE;gBAC7D,WAAW,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC;gBACjC,EAAE,CAAC,KAAK,CAAC,QAAQ,GAAG,WAAW,CAAC;gBAChC,0EAA0E;gBAE1E,KAAK,GAAG,MAAM,CAAC,gBAAgB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;gBACxE,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC1B,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;gBAC/C,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC,gBAAgB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC;gBAChF,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,gBAAgB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAClF,CAAC,EAAE,CAAC;gBACJ,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;gBACvD,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;aAC3D;YACD,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SACvB;IAEH,CAAC;IAED,gDAAgB,GAAhB;QACE,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;IAC/E,CAAC;IAES,8DAA8B,GAAxC,UAAyC,MAAM;QAC7C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC;;IAxbS;QAAT,4DAAM,EAAE;;+DAAwC;IAFtC,qBAAqB;QANjC,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;YAGzB,aAAa,EAAE,+DAAiB,CAAC,IAAI;SACtC,CAAC;yCAKuC,0EAAe;YACrB,kEAAW;YACN,wEAAc;YACX,gGAAuB;YACpC,sDAAM;OARvB,qBAAqB,CA6bjC;IAAD,4BAAC;CAAA;AA7biC;;;;;;;;;;;;AC7BlC,iCAAiC,yBAAyB,kBAAkB,mBAAmB,kBAAkB,0BAA0B,8BAA8B,0BAA0B,wCAAwC,2BAA2B,4BAA4B,0BAA0B,8BAA8B,wBAAwB,uBAAuB,gCAAgC,gCAAgC,KAAK,6BAA6B,gCAAgC,wBAAwB,KAAK,+BAA+B,iBAAiB,KAAK,mBAAmB,kBAAkB,KAAK,sBAAsB,iBAAiB,KAAK,mBAAmB,8BAA8B,uBAAuB,KAAK,sBAAsB,yBAAyB,KAAK,yBAAyB,8BAA8B,+BAA+B,KAAK,uBAAuB,8BAA8B,KAAK,wBAAwB,kBAAkB,KAAK,0BAA0B,6BAA6B,KAAK,0BAA0B,2BAA2B,yBAAyB,kBAAkB,eAAe,KAAK,sBAAsB,wBAAwB,OAAO,sBAAsB,kBAAkB,gCAAgC,KAAK,uBAAuB,yBAAyB,iBAAiB,eAAe,KAAK,wBAAwB,2BAA2B,yBAAyB,gBAAgB,KAAK,YAAY,qBAAqB,kBAAkB,gBAAgB,iCAAiC,oBAAoB,iBAAiB,KAAK,kBAAkB,yBAAyB,yBAAyB,iCAAiC,8BAA8B,KAAK,wBAAwB,iBAAiB,kBAAkB,6BAA6B,8BAA8B,4BAA4B,uEAAuE,+DAA+D,KAAK,2BAA2B,sCAAsC,8BAA8B,KAAK,2BAA2B,sCAAsC,8BAA8B,KAAK,2CAA2C,qBAAqB,8BAA8B,WAAW,gCAAgC,KAAK,mCAAmC,qBAAqB,oCAAoC,4BAA4B,OAAO,MAAM,wCAAwC,gCAAgC,SAAS,KAAK,qC;;;;;;;;;;;ACApkF,ovCAAovC,iBAAiB,iPAAiP,iBAAiB,mEAAmE,uSAAuS,gBAAgB,aAAa,uTAAuT,gBAAgB,wEAAwE,wBAAwB,4OAA4O,gBAAgB,wEAAwE,wBAAwB,8SAA8S,iBAAiB,sQAAsQ,iBAAiB,0MAA0M,qOAAqO,6LAA6L,gBAAgB,y4BAAy4B,SAAS,oP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7pJ;AACZ;AACR;AACkB;AAId;AAGvC;AACK;AACkD;AAGI;AACN;AAGtF;;;;;GAKG;AAMH;IAgCE,iCAAoB,WAAwB,EACxB,eAAgC,EAChC,aAAmC,EACnC,cAAqC;QAHrC,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,kBAAa,GAAb,aAAa,CAAsB;QACnC,mBAAc,GAAd,cAAc,CAAuB;QAhC/C,eAAU,GAAG,IAAI,0DAAY,EAAe,CAAC;QAO7C,gBAAW,GAAiB,EAAE,CAAC;QAC/B,eAAU,GAAiB,EAAE,CAAC;QACxC,cAAS,GAAW,MAAM,CAAC;QAC3B,oBAAe,GAAY,KAAK,CAAC;QAKjC,gBAAW,GAAgB,EAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAC,CAAC;QAMlG,aAAQ,GAAW,KAAK,CAAC;QAEzB,SAAS;QACT,YAAO,GAAG,KAAK,CAAC;QAEhB,qDAAqD;QAC9C,iBAAY,GAAG,CAAC,EAAC,YAAY,EAAE,IAAI,oFAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAE,UAAU,EAAC,EAAE,EAAC,CAAC,CAAC;IAM3F,CAAC;IAED,0CAAQ,GAAR;QAAA,iBA8EC;QA7EC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,WAAW;aACzB,SAAS,CAAC,eAAK;YACd,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,WAAW,CAAC,QAAQ;aACtB,SAAS,CAAC,eAAK;YACd,KAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QACpB,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,WAAW,GAAG,KAAK,EAAxB,CAAwB,CAAC,CAAC;QACjF,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,YAAY,GAAG;YAClB,mBAAmB,EAAE,KAAK;YAC1B,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE;gBACN,OAAO,EAAE,IAAI;gBACb,QAAQ,EAAE,KAAK;aAChB;YACD,QAAQ,EAAE;gBACR,SAAS,EAAE;oBACT,uBAAuB;oBACvB,UAAU,EAAG,UAAC,WAAW,EAAE,IAAI,IAAK,uBAAgB,GAAE,CAAC,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,EAAnF,CAAmF;iBACxH;aACF;YACD,MAAM,EAAE;gBACN,KAAK,EAAE,CAAC;wBACN,OAAO,EAAE,IAAI;wBACb,UAAU,EAAE;4BACV,OAAO,EAAE,IAAI;4BACb,WAAW,EAAE,EAAE;yBAChB;qBACF,CAAC;gBACF,KAAK,EAAE,CAAC;wBACN,KAAK,EAAE;4BACL,WAAW,EAAE,IAAI;yBAElB;wBACD,UAAU,EAAE;4BACV,OAAO,EAAE,IAAI;4BACb,WAAW,EAAE,EAAE;yBAChB;qBACF,CAAC;aACH;YACD,QAAQ,EAAE,UAAU,KAAK,EAAE,IAAI;gBAC7B,kDAAkD;gBAClD,kFAAkF;gBAClF,gBAAgB;gBAChB,iBAAiB;YACnB,CAAC;SACF,CAAC;QACF,IAAI,CAAC,OAAO,GAAG,IAAI,8CAAK,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;YAC/C,IAAI,EAAE,IAAI,CAAC,SAAS;YACpB,IAAI,EAAE;gBACJ,MAAM,EAAE,EAAE;gBACV,QAAQ,EAAE,EAAE;aACb;YACD,OAAO,EAAE,IAAI,CAAC,YAAY;SAC3B,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,aAAa,CAAC,WAAW,KAAK,SAAS,EAAE;YAChD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;SACnD;QAED,IAAI,CAAC,aAAa,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QACzD,IAAI,CAAC,aAAa,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QAC1D,IAAI,CAAC,WAAW,GAAE,IAAI,IAAI,CAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;QAE1E,IAAG,IAAI,CAAC,aAAa,CAAC,SAAS,KAAK,SAAS,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,KAAK,SAAS,EAAE;YACzF,IAAI,CAAC,aAAa,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YAC5D,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YACzD,sEAAsE;YACtE,oEAAoE;SACrE;IAEH,CAAC;IAED,mEAAmE;IAC3D,qDAAmB,GAA3B,UAA4B,IAAU;QACpC,IAAM,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAChC,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAClC,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC3B,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAClC,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAElC,IAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,SAAS,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC/B,IAAI,WAAW,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,WAAW,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,aAAa,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;QACvC,IAAI,aAAa,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;QAEvC,IAAI,GAAG,GAAG,EAAE,EAAE;YACZ,SAAS,GAAG,GAAG,GAAG,SAAS,CAAC;SAC7B;QACD,IAAI,KAAK,GAAG,EAAE,EAAE;YACd,WAAW,GAAG,GAAG,GAAG,WAAW,CAAC;SACjC;QACD,IAAI,KAAK,GAAG,EAAE,EAAE;YACd,WAAW,GAAG,GAAG,GAAG,WAAW,CAAC;SACjC;QACD,IAAI,OAAO,GAAG,EAAE,EAAE;YAChB,aAAa,GAAG,GAAG,GAAG,aAAa,CAAC;SACrC;QACD,IAAI,OAAO,GAAG,EAAE,EAAE;YAChB,aAAa,GAAG,GAAG,GAAG,aAAa,CAAC;SACrC;QAED,OAAO,UAAU,GAAG,GAAG,GAAG,WAAW,GAAG,GAAG,GAAG,SAAS,GAAG,GAAG,GAAG,WAAW,GAAG,GAAG,GAAG,aAAa,GAAG,GAAG,GAAG,aAAa,CAAC;IAC1H,CAAC;IAEO,oDAAkB,GAA1B;QAAA,iBAgBC;QAfC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aAC5D,SAAS,CAAC,cAAI;YACX,KAAqB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;gBAAtB,IAAM,MAAM;gBACf,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAC,CAAC,CAAC;aACrE;YAED,IAAI,KAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,SAAS,IAAI,KAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,EAAE,EAAE;gBACvH,KAAI,CAAC,aAAa,EAAE,CAAC;aACtB;QAEH,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACT,CAAC;IAED;;OAEG;IACK,uDAAqB,GAA7B;QAAA,iBAUC;QATC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC1E,KAAqB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;gBAAtB,IAAM,MAAM;gBACf,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAC,CAAC,CAAC;aACrE;QACH,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAES,+CAAa,GAAvB;QAAA,iBAkEC;QAjEC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,+CAA+C;QAC/C,IAAM,eAAe,GAAkB,EAAE,CAAC;QAC1C,IAAI,UAAU,GAAG,KAAK,CAAC;QACvB,KAAyB,UAAiC,EAAjC,SAAI,CAAC,aAAa,CAAC,cAAc,EAAjC,cAAiC,EAAjC,IAAiC,EAAE;YAAvD,IAAM,UAAU;YACnB,6BAA6B;YAC7B,KAA2B,UAAe,EAAf,mCAAe,EAAf,6BAAe,EAAf,IAAe,EAAE;gBAAvC,IAAM,YAAY;gBACrB,IAAI,YAAY,KAAK,UAAU,CAAC,QAAQ,EAAE;oBACxC,UAAU,GAAG,IAAI,CAAC;oBAClB,MAAM;iBACP;aACF;YACD,IAAI,CAAC,UAAU,EAAE;gBACf,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;aAC3C;SACF;QACD,2BAA2B;QAC3B,IAAM,qBAAqB,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,MAAM,CAAC;QACvE,+BAA+B;QAC/B,KAAyB,UAAe,EAAf,mCAAe,EAAf,6BAAe,EAAf,IAAe,EAAE;YAArC,IAAM,UAAU;oCAER,UAAU;gBACnB,IAAI,UAAU,CAAC,KAAK,KAAK,UAAU,EAAE;oBACnC,mCAAmC;oBACnC,yCAAyC;oBACzC,IAAM,YAAU,GAAG,EAAE,CAAC;oBACtB,OAAK,aAAa,CAAC,aAAa,CAAC,UAAU,CAAC,KAAK,EAAE,OAAK,IAAI,CAAC,EAAE,EAAE,OAAK,OAAO,CAAC,EAAE,CAAC;yBAC9E,SAAS,CAAC,UAAC,MAAc;wBACtB,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,EAAE;4BAC3B,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAE;gCAAhC,IAAM,MAAM;gCACf,YAAU,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC;6BACzD;yBACF;wBACD,mCAAmC;wBACnC,KAAyB,UAAU,EAAV,2BAAU,EAAV,wBAAU,EAAV,IAAU,EAAE;4BAAhC,IAAM,UAAU;4BACnB,KAAmB,UAAiC,EAAjC,UAAI,CAAC,aAAa,CAAC,cAAc,EAAjC,cAAiC,EAAjC,IAAiC,EAAE;gCAAjD,IAAM,IAAI;gCACb,IAAI,UAAU,CAAC,KAAK,KAAK,IAAI,CAAC,QAAQ,EAAE;oCACtC,mCAAmC;oCACnC,uDAAuD;oCACvD,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC;wCACrB,YAAY,EAAE,EAAC,QAAQ,EAAE,UAAU,CAAC,KAAK,EAAE,QAAQ,EAAE,UAAU,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAC;wCACrH,UAAU,EAAE,YAAU;qCAAC,CAAC,CAAC;oCAC3B,MAAM;iCACP;6BACF;yBACF;wBACD,mCAAmC;wBACnC,KAAmB,UAAiB,EAAjB,UAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB,EAAE;4BAAjC,IAAM,IAAI;4BACb,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,EAAE;gCAC3B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;6BACtB;yBACF;wBACD,wGAAwG;wBACxG,2DAA2D;wBAC3D,uCAAuC;wBACvC,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;wBAC7B,GAAG;oBAEL,CAAC,EACD,eAAK;wBACH,OAAO,CAAC,GAAG,CAAC,wCAAwC,EAAE,KAAK,CAAC,CAAC;oBAC/D,CAAC,CAAC,CAAC;iBACR;YACH,CAAC;;YA3CD,+BAA+B;YAC/B,KAAyB,UAAgB,EAAhB,SAAI,CAAC,WAAW,EAAhB,cAAgB,EAAhB,IAAgB;gBAApC,IAAM,UAAU;wBAAV,UAAU;aA0CpB;SACF;IACH,CAAC;IAGD,2CAAS,GAAT,UAAU,KAAK;QAAf,iBAoEC;QAnEC,oBAAoB;QACpB,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;QAC/E,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;QAC/E,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;QAClF,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;QAClF,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACzB,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACvB,IAAI,MAAM,GAAC,CAAC,CAAC;gCACF,QAAQ;YACjB,IAAM,OAAO,GAAG,EAAC,KAAK,EAAE,QAAQ,CAAC,YAAY,CAAC,KAAK,GAAG,MAAM,GAAG,QAAQ,CAAC,YAAY,CAAC,IAAI;gBACvF,IAAI,EAAE,EAAE;gBACR,WAAW,EAAE,MAAM;gBACnB,UAAU,EAAE,EAAE;gBACd,IAAI,EAAE,KAAK;gBACX,qCAAqC;gBACrC,oBAAoB,EAAE,EAAE;aACzB,CAAC;YACF,OAAK,aAAa,GAAG,EAAE,CAAC;YAExB,gDAAgD;YAChD,OAAK,kBAAkB,CAAC,OAAK,aAAa,CAAC,CAAC;YAE5C,OAAK,OAAO,GAAG,IAAI,CAAC;YACpB,OAAK,cAAc,CAAC,qCAAqC,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC,YAAY,CAAC,QAAQ,EACtH,OAAK,mBAAmB,CAAC,OAAK,aAAa,CAAC,EAAE,OAAK,mBAAmB,CAAC,OAAK,aAAa,CAAC,EAAE,OAAK,mBAAmB,CAAC,OAAK,WAAW,CAAC,EACtI,OAAK,QAAQ,EAAE,OAAK,IAAI,CAAC,EAAE,EAAE,OAAK,OAAO,CAAC,EAAE,CAAC;iBAC5C,SAAS,CAAC,UAAC,sBAA8C;gBACtD,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,KAAoB,UAA6B,EAA7B,2BAAsB,CAAC,MAAM,EAA7B,cAA6B,EAA7B,IAA6B,EAAE;oBAA9C,IAAM,KAAK;oBACd,IAAG,KAAK,CAAC,UAAU,IAAI,IAAI,EAAE;wBAC3B,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;wBACpC,kBAAkB;wBAClB,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAEzF,+BAA+B;wBAC/B,IAAG,KAAK,CAAC,YAAY,GAAG,IAAI,EAAC;4BAC3B,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;yBAC1C;6BACI,IAAG,KAAK,CAAC,YAAY,GAAG,IAAI,EAAC;4BAChC,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;yBAC7C;6BACG;4BACF,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;yBAC5C;qBAEF;yBAAM,IAAG,KAAK,CAAC,WAAW,IAAI,IAAI,EAAE;wBACnC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;qBAC9C;oBACD,uDAAuD;oBACvD,IAAI,MAAM,KAAK,CAAC,EAAE;wBAChB,8CAA8C;wBAC9C,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;qBACxC;iBACF;gBACD,MAAM,EAAE,CAAC;gBACT,oCAAoC;gBACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClC,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE;oBAC1C,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;iBAC5B;gBACD,KAAK,CAAC,MAAM,EAAE,CAAC;YACjB,CAAC,EACD,aAAG;gBACD,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,OAAO,CAAC,GAAG,CAAC,8CAA8C,EAAE,GAAG,CAAC,CAAC;YACnE,CAAC,CAAC,CAAC;QACT,CAAC;;QA1DD,KAAuB,UAAiB,EAAjB,SAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB;YAAnC,IAAM,QAAQ;oBAAR,QAAQ;SA0DlB;IACH,CAAC;IAGD,SAAS;IACF,8CAAY,GAAnB,UAAoB,CAAM;QACxB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC;IAEM,8CAAY,GAAnB,UAAoB,CAAM;QACxB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC;IACD,wCAAwC;IACxC,4CAAU,GAAV,UAAW,KAAK,EAAE,OAAO;QACvB,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAClC,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE;YAC1C,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;SAC5B;QACD,KAAK,CAAC,MAAM,EAAE,CAAC;IACjB,CAAC;IACD,0DAA0D;IAC1D,gDAAc,GAAd,UAAe,KAAK;QAClB,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,OAAO;YAClC,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC3B,IAAI,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,yBAAyB;gBAClF,IAAG,YAAY,IAAI,CAAC,EAAE,EAAE,4CAA4C;oBAClE,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;iBAC7C;aACF;QACH,CAAC,CAAC,CAAC;QACH,4DAA4D;QAC5D,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAC;YACnC,oCAAoC;YACpC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,KAAK;gBAC9B,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;YAC1B,CAAC,CAAC,CAAC;SACJ;QACD,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACpD,KAAK,CAAC,MAAM,EAAE,CAAC;IACjB,CAAC;IAED,+CAA+C;IAC/C,mDAAiB,GAAjB,UAAkB,KAAK,EAAE,UAAU,EAAE,KAAK;QACxC,UAAU,GAAG,KAAK,CAAC;QACnB,KAAK,CAAC,MAAM,EAAE,CAAC;IACjB,CAAC;IAGD,+CAAa,GAAb;QACE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,gDAAgD;QAChD,IAAI,CAAC,aAAa,CAAC,cAAc,GAAG,EAAE,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAC,IAAI,CAAC,WAAW,CAAE,CAAC;QACxC,iDAAiD;QACjD,KAAqB,UAAiB,EAAjB,SAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB,EAAE;YAAnC,IAAM,MAAM;YACf,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;SAC7D;QACD,iDAAiD;QACjD,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QAClD,yCAAyC;QACzC,IAAI,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,EAAE,EAAE;YACxD,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;SAC3C;QACD,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;QAC9C,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC;QAClD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC;QACzE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;QAC/D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;QACnE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;QAC/D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QAC3D,6BAA6B;QAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAE/B,CAAC;IAED,8CAAY,GAAZ;QACE,IAAI,CAAC,eAAe,GAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;QAC9C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;QAC9C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;QAClD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;QAClD,IAAI,CAAC,YAAY,GAAG,CAAC,EAAC,YAAY,EAAE,EAAC,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAC,EAAE,UAAU,EAAE,EAAE,EAAC,CAAC,CAAC;QAClH,KAAqB,UAAiC,EAAjC,SAAI,CAAC,aAAa,CAAC,cAAc,EAAjC,cAAiC,EAAjC,IAAiC,EAAE;YAAnD,IAAM,MAAM;YACf,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,YAAY,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE,EAAC,CAAC,CAAC;YAC/D,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SACzC;QACD,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;IAC5B,CAAC;IAED;;;;OAIG;IACO,gDAAc,GAAxB,UAAyB,KAAK,EAAE,KAAa;QAC3C,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,IAAI,sEAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;aAC7H,SAAS,CAAC,gBAAM;QACjB,CAAC,EAAE,eAAK;YACN,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACP,CAAC;IAES,iDAAe,GAAzB;QACE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,YAAY,EAAE,EAAC,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAC,EAAE,UAAU,EAAE,EAAE,EAAC,CAAC,CAAC;QACpH,2EAA2E;IAC7E,CAAC;IAES,iDAAe,GAAzB,UAA0B,KAAwB;QAChD,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,CAAC,SAAS,GAAG,CAAC,EAAC,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAC,CAAC,CAAC;QACvE,oDAAoD;QACpD,KAAiB,UAAiB,EAAjB,SAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB,EAAE;YAA/B,IAAI,IAAI;YACX,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ,EAAE;gBAClG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC/B,4FAA4F;gBAC5F,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;oBAC5D,+BAA+B;iBAChC;gBACD,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;aAC/D;YACD,CAAC,EAAE,CAAC;SACL;IAEH,CAAC;IAES,mDAAiB,GAA3B,UAA4B,QAAgB;QAA5C,iBAsBC;QArBC,yCAAyC;QACzC,IAAM,UAAU,GAAG,EAAE,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnD,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aACtE,SAAS,CAAC,UAAC,MAAc;YACtB,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,EAAE;gBAC3B,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAE;oBAAhC,IAAM,MAAM;oBACf,UAAU,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC;iBACzD;aACF;YACD,uDAAuD;YACvD,KAA4B,UAAiB,EAAjB,UAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB,EAAE;gBAA1C,IAAM,aAAa;gBACtB,IAAI,aAAa,CAAC,YAAY,CAAC,QAAQ,KAAK,QAAQ,EAAE;oBACpD,aAAa,CAAC,UAAU,GAAG,UAAU,CAAC;iBACvC;aACF;QACH,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,wCAAwC,EAAE,KAAK,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;IACT,CAAC;IAED,wCAAwC;IAC9B,oDAAkB,GAA5B,UAA6B,KAAW;QAEtC,4EAA4E;QAC5E,IAAI,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,IAAI,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,IAAI,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE;YACxG,IAAI,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE;gBAC1B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,GAAE,CAAC,CAAC,CAAC;gBAC/C,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBAChC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,CAAC;aACzD;iBACI,IAAG,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE;gBAC9B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,GAAE,CAAC,CAAC,CAAC;gBAC/C,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBAChC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,CAAC;aACzD;iBACI,IAAG,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE,GAAG,EAAE,EAAE;gBACtD,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;gBAC/B,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC/B,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;aACrD;iBACG;gBACF,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;gBAChD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;gBAClD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;aACrD;SACF;QAED,mDAAmD;aAC9C;YACH,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;YAChD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;YAClD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;SACrD;IACH,CAAC;IAvfmB;QAAnB,+DAAS,CAAC,OAAO,CAAC;;wDAAa;IACvB;QAAR,2DAAK,EAAE;kCAAgB,0FAAoB;kEAAC;IACnC;QAAT,4DAAM,EAAE;;+DAA8C;IAH5C,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAiCiC,kEAAW;YACP,0EAAe;YACjB,oFAAoB;YACnB,sFAAqB;OAnC9C,uBAAuB,CA0fnC;IAAD,8BAAC;CAAA;AA1fmC;;;;;;;;;;;;AC9BpC,iCAAiC,yBAAyB,kBAAkB,mBAAmB,kBAAkB,0BAA0B,8BAA8B,0BAA0B,wCAAwC,2BAA2B,4BAA4B,0BAA0B,8BAA8B,wBAAwB,uBAAuB,gCAAgC,gCAAgC,KAAK,6BAA6B,gCAAgC,wBAAwB,KAAK,+BAA+B,iBAAiB,KAAK,mBAAmB,kBAAkB,KAAK,sBAAsB,iBAAiB,KAAK,yBAAyB,8BAA8B,+BAA+B,KAAK,uBAAuB,8BAA8B,KAAK,wBAAwB,kBAAkB,KAAK,0BAA0B,6BAA6B,KAAK,0BAA0B,2BAA2B,yBAAyB,kBAAkB,eAAe,KAAK,mBAAmB,8BAA8B,uBAAuB,KAAK,sBAAsB,yBAAyB,KAAK,sBAAsB,wBAAwB,OAAO,sBAAsB,kBAAkB,gCAAgC,KAAK,uBAAuB,yBAAyB,iBAAiB,eAAe,KAAK,wBAAwB,2BAA2B,yBAAyB,gBAAgB,KAAK,YAAY,qBAAqB,kBAAkB,gBAAgB,iCAAiC,oBAAoB,iBAAiB,KAAK,gBAAgB,wBAAwB,KAAK,oBAAoB,oBAAoB,KAAK,4BAA4B,sBAAsB,mBAAmB,kBAAkB,iBAAiB,qBAAqB,mBAAmB,aAAa,cAAc,gBAAgB,eAAe,KAAK,oEAAoE,kBAAkB,qBAAqB,sBAAsB,aAAa,cAAc,kBAAkB,mBAAmB,yCAAyC,KAAK,kBAAkB,yBAAyB,yBAAyB,iCAAiC,8BAA8B,KAAK,wBAAwB,iBAAiB,kBAAkB,6BAA6B,8BAA8B,4BAA4B,uEAAuE,+DAA+D,KAAK,2BAA2B,sCAAsC,8BAA8B,KAAK,2BAA2B,sCAAsC,8BAA8B,KAAK,2CAA2C,qBAAqB,8BAA8B,WAAW,gCAAgC,KAAK,mCAAmC,qBAAqB,oCAAoC,4BAA4B,OAAO,MAAM,wCAAwC,gCAAgC,SAAS,KAAK,K;;;;;;;;;;;ACA5lG,2hBAA2hB,iBAAiB,+JAA+J,yBAAyB,wPAAwP,iBAAiB,mEAAmE,uSAAuS,gBAAgB,aAAa,uTAAuT,gBAAgB,wEAAwE,wBAAwB,4OAA4O,gBAAgB,6HAA6H,wBAAwB,8SAA8S,iBAAiB,sQAAsQ,iBAAiB,0MAA0M,+GAA+G,uHAAuH,6LAA6L,gBAAgB,q4BAAq4B,SAAS,iQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhqI;AACvC;AACkB;AAEV;AACxC;AAEN;AAG0C;AAIqC;AAEvB;AAGxF;;;;;GAKG;AAMH;IAuCE,kCAAoB,WAAwB,EACxB,eAAgC,EAChC,aAAmC,EACnC,cAAqC,EACrC,cAAiC;QAJjC,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,kBAAa,GAAb,aAAa,CAAsB;QACnC,mBAAc,GAAd,cAAc,CAAuB;QACrC,mBAAc,GAAd,cAAc,CAAmB;QAxClC,eAAU,GAAG,IAAI,0DAAY,EAAe,CAAC;QAOtD,gBAAW,GAAsB,EAAE,CAAC;QACpC,eAAU,GAAsB,EAAE,CAAC;QAQ7C,aAAQ,GAAW,KAAK,CAAC;QAEzB,UAAU;QACV,YAAO,GAAG,KAAK,CAAC;QAChB,UAAK,GAAG,CAAC,CAAC;QAMV,gBAAW,GAAgB,EAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,aAAa,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAC,CAAC;QAEnG,oBAAe,GAAG,KAAK,CAAC;QAMjB,iBAAY,GAAG,CAAC,EAAC,YAAY,EAAE,EAAC,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAC,EAAE,UAAU,EAAE,EAAE,EAAC,CAAC,CAAC;IAOpH,CAAC;IAED,2CAAQ,GAAR;QAAA,iBAkIC;QAjIC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,WAAW;aACzB,SAAS,CAAC,eAAK;YACd,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,WAAW,CAAC,QAAQ;aACtB,SAAS,CAAC,eAAK;YACd,KAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QACpB,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,WAAW,GAAG,KAAK,EAAxB,CAAwB,CAAC,CAAC;QACjF,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,YAAY,GAAG;YAClB,mBAAmB,EAAE,KAAK;YAC1B,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE;gBACN,OAAO,EAAE,IAAI;gBACb,QAAQ,EAAE,KAAK;aAChB;YACD,QAAQ,EAAE;gBACR,SAAS,EAAE;oBAGT,sBAAsB;oBACtB,UAAU,EAAG,UAAC,WAAW,EAAE,IAAI,IAAK,sBAAe,GAAE,CAAC,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,EAAtF,CAAsF;iBAC3H;aACF;YACD,MAAM,EAAE;gBACN,KAAK,EAAE,CAAC;wBACN,OAAO,EAAE,IAAI;wBACb,UAAU,EAAE;4BACV,OAAO,EAAE,IAAI;4BACb,WAAW,EAAE,EAAE;yBAChB;qBACF,CAAC;gBACF,KAAK,EAAE,CAAC;wBACN,KAAK,EAAE;4BACL,WAAW,EAAE,IAAI;yBAElB;wBACD,UAAU,EAAE;4BACV,OAAO,EAAE,IAAI;4BACb,WAAW,EAAE,EAAE;yBAChB;qBACF,CAAC;aACH;YACD,QAAQ,EAAE,UAAU,KAAK,EAAE,IAAI;gBAC7B,kDAAkD;gBAClD,kFAAkF;gBAClF,gBAAgB;gBAChB,iBAAiB;YACnB,CAAC;SACF,CAAC;QACF,IAAI,CAAC,OAAO,GAAG,IAAI,8CAAK,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;YAC/C,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE;gBACJ,MAAM,EAAE,EAAE;gBACV,QAAQ,EAAE,EAAE;aACb;YACD,OAAO,EAAE,IAAI,CAAC,YAAY;SAC3B,CAAC,CAAC;QAEH,2CAA2C;QAC3C,IAAI,IAAI,CAAC,aAAa,CAAC,cAAc,KAAK,SAAS,EAAE;YACnD,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC;SACjE;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,WAAW,KAAK,SAAS,EAAE;YAChD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;SACnD;QAED,mDAAmD;QACnD,IAAI,CAAC,WAAW,CAAC,iBAAiB;aAC/B,SAAS,CAAC,gBAAM;YACf,IAAI,eAAe,GAAG,OAAO,CAAC;YAC9B,IAAI,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,QAAQ,KAAK,EAAE,IAAI,KAAI,CAAC,OAAO,KAAK,SAAS,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,SAAS,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,KAAK,SAAS;mBAC7J,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,SAAS,EAAE;gBAChD,+CAA+C;gBAC/C,KAAuB,UAAiB,EAAjB,UAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB,EAAE;oBAArC,IAAM,QAAQ;oBACjB,IAAI,QAAQ,CAAC,YAAY,CAAC,QAAQ,KAAK,MAAM,CAAC,QAAQ;wBACpD,QAAQ,CAAC,YAAY,CAAC,QAAQ,KAAK,MAAM,CAAC,QAAQ,EAAE;wBAEpD,qLAAqL;wBACrL,iDAAiD;wBAGjD,yBAAyB;wBAGzB,IAAG,KAAI,CAAC,KAAK,IAAI,KAAI,CAAC,sBAAsB,EAAC;4BAC3C,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;4BAC7B,KAAI,CAAC,gBAAgB,GAAG,IAAI,GAAG,EAAkB,CAAC;4BAClD,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,sBAAsB,EAAG,CAAC,EAAE,EAAE;gCACpD,KAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,KAAI,CAAC,KAAK,GAAE,CAAC,GAAG,CAAC,EAAE,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;6BACtF;4BACD,kDAAkD;4BAClD,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,gBAAgB,CAAC;4BAE3C,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,KAAK,GAAG,CAAC,CAAC;4BAC5B,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAI,CAAC,KAAK,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC;4BACxD,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,KAAK,GAAG,CAAC,CAAC;yBAC7B;6BACI;4BACH,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAI,CAAC,KAAK,EAAG,MAAM,CAAC,YAAY,CAAC,CAAC;4BACzD,KAAI,CAAC,KAAK,EAAE,CAAC;yBACd;wBAEG,IAAG,MAAM,CAAC,YAAY,GAAG,IAAI,EAAC;4BAC5B,IAAG,MAAM,CAAC,YAAY,GAAG,IAAI,EAAC;gCAC5B,eAAe,GAAG,KAAK,CAAC;6BACzB;iCACG;gCACF,eAAe,GAAG,QAAQ,CAAC;6BAC5B;yBACF;wBACD,KAAI,CAAC,OAAO,CAAC,KAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,YAAY,CAAC,KAAK,GAAG,MAAM,GAAG,QAAQ,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;wBAE/I,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,KAAI,CAAC,sBAAsB,EAAE;4BAC9E,gDAAgD;4BAChD,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;yBAC/B;qBAEF;iBACF;aACF;QACH,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,mEAAmE;IAC3D,sDAAmB,GAA3B,UAA4B,IAAU;QACpC,IAAM,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAChC,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAClC,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC3B,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAClC,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAElC,IAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,SAAS,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC/B,IAAI,WAAW,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,WAAW,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,aAAa,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;QACvC,IAAI,aAAa,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;QAEvC,IAAI,GAAG,GAAG,EAAE,EAAE;YACZ,SAAS,GAAG,GAAG,GAAG,SAAS,CAAC;SAC7B;QACD,IAAI,KAAK,GAAG,EAAE,EAAE;YACd,WAAW,GAAG,GAAG,GAAG,WAAW,CAAC;SACjC;QACD,IAAI,KAAK,GAAG,EAAE,EAAE;YACd,WAAW,GAAG,GAAG,GAAG,WAAW,CAAC;SACjC;QACD,IAAI,OAAO,GAAG,EAAE,EAAE;YAChB,aAAa,GAAG,GAAG,GAAG,aAAa,CAAC;SACrC;QACD,IAAI,OAAO,GAAG,EAAE,EAAE;YAChB,aAAa,GAAG,GAAG,GAAG,aAAa,CAAC;SACrC;QAED,OAAO,UAAU,GAAG,GAAG,GAAG,WAAW,GAAG,GAAG,GAAG,SAAS,GAAG,GAAG,GAAG,WAAW,GAAG,GAAG,GAAG,aAAa,GAAG,GAAG,GAAG,aAAa,CAAC;IAC1H,CAAC;IAEO,qDAAkB,GAA1B;QAAA,iBAeC;QAdC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aAC5D,SAAS,CAAC,cAAI;YACX,KAAqB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;gBAAtB,IAAM,MAAM;gBACf,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAC,CAAC,CAAC;aACrE;YACD,IAAI,KAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,SAAS,IAAI,KAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,EAAE,EAAE;gBACvH,KAAI,CAAC,aAAa,EAAE,CAAC;aACtB;QAEH,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACT,CAAC;IAED;;OAEG;IACK,wDAAqB,GAA7B;QAAA,iBAWC;QAVC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aAC5D,SAAS,CAAC,cAAI;YACX,KAAqB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;gBAAtB,IAAM,MAAM;gBACf,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAC,CAAC,CAAC;aACrE;QACH,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACT,CAAC;IAES,gDAAa,GAAvB;QAAA,iBAyEC;QAxEC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,+CAA+C;QAC/C,IAAM,eAAe,GAAkB,EAAE,CAAC;QAC1C,IAAI,UAAU,GAAG,KAAK,CAAC;QACvB,KAAyB,UAAiC,EAAjC,SAAI,CAAC,aAAa,CAAC,cAAc,EAAjC,cAAiC,EAAjC,IAAiC,EAAE;YAAvD,IAAM,UAAU;YACnB,6BAA6B;YAC7B,KAA2B,UAAe,EAAf,mCAAe,EAAf,6BAAe,EAAf,IAAe,EAAE;gBAAvC,IAAM,YAAY;gBACrB,IAAI,YAAY,KAAK,UAAU,CAAC,QAAQ,EAAE;oBACxC,UAAU,GAAG,IAAI,CAAC;oBAClB,MAAM;iBACP;aACF;YACD,IAAI,CAAC,UAAU,EAAE;gBACf,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;aAC3C;SACF;QACD,2BAA2B;QAC3B,IAAM,qBAAqB,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,MAAM,CAAC;QACvE,+BAA+B;QAC/B,KAAyB,UAAe,EAAf,mCAAe,EAAf,6BAAe,EAAf,IAAe,EAAE;YAArC,IAAM,UAAU;oCAER,UAAU;gBACnB,IAAI,UAAU,CAAC,KAAK,KAAK,UAAU,EAAE;oBACnC,mCAAmC;oBACnC,yCAAyC;oBACzC,IAAM,YAAU,GAAG,EAAE,CAAC;oBACtB,OAAK,aAAa,CAAC,aAAa,CAAC,UAAU,CAAC,KAAK,EAAE,OAAK,IAAI,CAAC,EAAE,EAAE,OAAK,OAAO,CAAC,EAAE,CAAC;yBAC9E,SAAS,CAAC,UAAC,MAAc;wBACtB,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,EAAE;4BAC3B,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAE;gCAAhC,IAAM,MAAM;gCACf,YAAU,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC;6BACzD;yBACF;wBACD,iCAAiC;wBACjC,2CAA2C;wBAC3C,+DAA+D;wBAC/D,MAAM;wBACN,IAAI;wBACJ,mCAAmC;wBACnC,KAAyB,UAAU,EAAV,2BAAU,EAAV,wBAAU,EAAV,IAAU,EAAE;4BAAhC,IAAM,UAAU;4BACnB,KAAmB,UAAiC,EAAjC,UAAI,CAAC,aAAa,CAAC,cAAc,EAAjC,cAAiC,EAAjC,IAAiC,EAAE;gCAAjD,IAAM,IAAI;gCACb,IAAI,UAAU,CAAC,KAAK,KAAK,IAAI,CAAC,QAAQ,EAAE;oCACtC,mCAAmC;oCACnC,uDAAuD;oCACvD,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC;wCACrB,YAAY,EAAE,EAAC,QAAQ,EAAE,UAAU,CAAC,KAAK,EAAE,QAAQ,EAAE,UAAU,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAC;wCACrH,UAAU,EAAE,YAAU;qCAAC,CAAC,CAAC;oCAC3B,MAAM;iCACP;6BACF;yBACF;wBACD,mCAAmC;wBACnC,KAAmB,UAAiB,EAAjB,UAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB,EAAE;4BAAjC,IAAM,IAAI;4BACb,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,EAAE;gCAC3B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;6BACtB;yBACF;wBACD,wGAAwG;wBACxG,2DAA2D;wBAC3D,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;wBACpC,GAAG;oBAEL,CAAC,EACD,eAAK;wBACH,OAAO,CAAC,GAAG,CAAC,wCAAwC,EAAE,KAAK,CAAC,CAAC;oBAC/D,CAAC,CAAC,CAAC;iBACR;YACH,CAAC;;YA/CD,+BAA+B;YAC/B,KAAyB,UAAgB,EAAhB,SAAI,CAAC,WAAW,EAAhB,cAAgB,EAAhB,IAAgB;gBAApC,IAAM,UAAU;wBAAV,UAAU;aA8CpB;SACF;QACD,6BAA6B;QAE7B,0CAA0C;IAC5C,CAAC;IAGD;;;OAGG;IACH,mDAAgB,GAAhB,UAAiB,KAAK;QAAtB,iBAgFE;QA/EA,oBAAoB;QACpB,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;QAC/E,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;QAC/E,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;QAClF,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;QAClF,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,IAAI,IAAI,EAAE,CAAC;QAChC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gCAG3B,QAAQ;YACjB,4BAA4B;YAC5B,IAAM,OAAO,GAAG,EAAC,KAAK,EAAE,QAAQ,CAAC,YAAY,CAAC,KAAK,GAAG,MAAM,GAAG,QAAQ,CAAC,YAAY,CAAC,IAAI;gBACvF,IAAI,EAAE,EAAE;gBACR,WAAW,EAAE,MAAM;gBACnB,UAAU,EAAC,EAAE;gBACb,IAAI,EAAE,KAAK;gBACX,oBAAoB,EAAE,EAAE,EAAC,CAAC;YAC1B,OAAK,OAAO,GAAG,IAAI,CAAC;YACpB,OAAK,cAAc,CAAC,aAAa,EAAE,CAAC;YACtC,iJAAiJ;YACjJ,uBAAuB;YACvB,wCAAwC;YACxC,OAAK,cAAc,CAAC,2BAA2B,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAK,IAAI,CAAC,EAAE,EAAE,OAAK,OAAO,CAAC,EAAE,EAAE,OAAK,mBAAmB,CAAC,OAAK,aAAa,CAAC,EAAE,OAAK,mBAAmB,CAAC,OAAK,OAAO,CAAC,EAAE,OAAK,QAAQ,CAAC;iBAChP,SAAS,CAAC;gBACT,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,KAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;gBACpC,KAAI,CAAC,cAAc,CAAC,gCAAgC,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,KAAI,CAAC,IAAI,CAAC,EAAE,EAAE,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC;qBAChJ,SAAS,CAAC,UAAC,sBAA8C;oBACtD,IAAM,KAAK,GAAG,sBAAsB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oBAC/C,wCAAwC;oBACxC,IAAI,KAAK,CAAC,UAAU,IAAI,IAAI,EAAE;wBAC5B,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;wBAEpC,IAAG,KAAK,CAAC,YAAY,GAAG,IAAI,EAAC;4BAC3B,IAAG,KAAK,CAAC,YAAY,GAAG,IAAI,EAAC;gCAC3B,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;6BAC1C;iCACG;gCACF,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;6BAC7C;yBACF;6BACG;4BACF,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;yBAC5C;wBAED,4BAA4B;wBAC5B,8CAA8C;wBAC9C,IAAI;wBACJ,QAAQ;wBACR,gDAAgD;wBAChD,IAAI;qBACL;yBAAM,IAAI,KAAK,CAAC,WAAW,IAAI,IAAI,EAAE;wBACpC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;qBAG9C;oBACD,uDAAuD;oBACvD,IAAI,MAAM,KAAK,CAAC,EAAE;wBAChB,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;wBACvC,MAAM,EAAE,CAAC;qBACV;oBACD,oCAAoC;oBACpC,0CAA0C;oBAC1C,KAAI,CAAC,aAAa,GAAG,IAAI,GAAG,EAAkB,CAAC;oBAC/C,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;oBAC9C,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClC,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE;wBAC1C,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;qBAC5B;oBACD,KAAK,CAAC,MAAM,EAAE,CAAC;gBACjB,CAAC,EACD,aAAG;oBACD,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,OAAO,CAAC,GAAG,CAAC,sCAAsC,EAAE,GAAG,CAAC,CAAC;gBAC3D,CAAC,CAAC,CAAC;YACT,CAAC,CAAC,CAAC;QAET,CAAC;;QArEC,kCAAkC;QAClC,KAAuB,UAAiB,EAAjB,SAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB;YAAnC,IAAM,QAAQ;oBAAR,QAAQ;SAoEpB;IAAA,CAAC;IAEF,qDAAkB,GAAlB,UAAmB,KAAK;QAAxB,iBAyFC;QAxFC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;QACxC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;QAC/E,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;QAC/E,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;QAClF,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;QAClF,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,IAAI,IAAI,EAAE,CAAC;QAChC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gCAE3B,QAAQ;YACjB,4BAA4B;YAC5B,IAAI,WAAW,GAAG,KAAK,CAAC;YACxB,IAAM,OAAO,GAAG,EAAC,KAAK,EAAE,QAAQ,CAAC,YAAY,CAAC,KAAK,GAAG,MAAM,GAAG,QAAQ,CAAC,YAAY,CAAC,IAAI;gBACvF,IAAI,EAAE,EAAE;gBACR,WAAW,EAAE,EAAE;gBACf,UAAU,EAAE,EAAE;gBACd,IAAI,EAAE,KAAK;gBACX,oBAAoB,EAAE,EAAE,EAAC,CAAC;YAC5B,KAAoB,UAAmB,EAAnB,UAAK,CAAC,IAAI,CAAC,QAAQ,EAAnB,cAAmB,EAAnB,IAAmB,EAAE;gBAApC,IAAI,OAAO;gBACd,kCAAkC;gBAClC,IAAI,OAAO,CAAC,KAAK,KAAK,OAAO,CAAC,KAAK,EAAC;oBAClC,WAAW,GAAG,IAAI,CAAC;oBACnB,8CAA8C;oBAC9C,OAAO,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC9B,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;qBACtB;oBACD,wBAAwB;oBACxB,OAAO,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;wBACnC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;qBAC3B;oBACD,4BAA4B;oBAC5B,yDAAyD;oBACzD,OAAO,CAAC,UAAU,GAAG,EAAE,CAAC;oBACxB,MAAM;iBACP;aACF;YACD,IAAI,CAAC,WAAW,EAAE;gBAChB,yCAAyC;gBACzC,OAAK,OAAO,GAAG,IAAI,CAAC;gBACpB,OAAK,cAAc,CAAC,2BAA2B,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAK,IAAI,CAAC,EAAE,EAAE,OAAK,OAAO,CAAC,EAAE,EAAE,OAAK,mBAAmB,CAAC,OAAK,aAAa,CAAC,EAAE,OAAK,mBAAmB,CAAC,OAAK,OAAO,CAAC,EAAE,OAAK,QAAQ,CAAC;qBAChP,SAAS,CAAC;oBACT,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACzB,KAAI,CAAC,cAAc,CAAC,gCAAgC,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,KAAI,CAAC,IAAI,CAAC,EAAE,EAAE,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC;yBAChJ,SAAS,CAAC,UAAC,sBAA8C;wBACtD,IAAM,KAAK,GAAG,sBAAsB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;wBAC/C,wCAAwC;wBACxC,IAAI,KAAK,CAAC,UAAU,IAAI,IAAI,EAAE;4BAC5B,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;4BACpC,IAAI,KAAK,CAAC,YAAY,GAAG,IAAI,EAAC;gCAC5B,IAAI,KAAK,CAAC,YAAY,GAAG,IAAI,EAAC;oCAC5B,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iCAC1C;qCACI;oCACH,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iCAC7C;6BACF;iCACI;gCACH,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;6BAC5C;yBACF;6BAAM,IAAI,KAAK,CAAC,WAAW,IAAI,IAAI,EAAE;4BACpC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;yBAC9C;wBACD,qFAAqF;wBACrF,IAAI,MAAM,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;4BAClD,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;4BACvC,MAAM,EAAE,CAAC;yBACV;wBACD,KAAI,CAAC,aAAa,GAAG,IAAI,GAAG,EAAkB,CAAC;wBAC/C,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;wBAC9C,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBAClC,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE;4BAC1C,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;yBAC5B;wBACD,KAAK,CAAC,MAAM,EAAE,CAAC;wBACf,mCAAmC;oBACrC,CAAC,EACD,aAAG;wBACD,OAAO,CAAC,GAAG,CAAC,sCAAsC,EAAE,GAAG,CAAC,CAAC;oBAC3D,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;aACN;YACD,6BAA6B;YAC7B,OAAK,cAAc,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC;;QA3ED,kCAAkC;QAClC,KAAuB,UAAiB,EAAjB,SAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB;YAAnC,IAAM,QAAQ;oBAAR,QAAQ;SA0ElB;QAED,0CAA0C;IAE5C,CAAC;IACD,SAAS;IACF,+CAAY,GAAnB,UAAoB,CAAM;QACxB,kBAAkB;IACpB,CAAC;IAEM,+CAAY,GAAnB,UAAoB,CAAM;QACxB,kBAAkB;IACpB,CAAC;IAED,uEAAuE;IACvE,0CAAO,GAAP,UAAQ,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,IAAI,EAAE,eAAe;QACtD,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9B,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,OAAO;YAClC,IAAI,WAAW,KAAK,OAAO,CAAC,KAAK,EAAE;gBACjC,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;gBACvC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACxB,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;aACpD;iBAAM;gBACL,qDAAqD;gBACrD,IAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;gBAChC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACxB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACzB;QAEH,CAAC,CAAC,CAAC;QACH,KAAK,CAAC,MAAM,EAAE,CAAC;IACjB,CAAC;IAED,wCAAwC;IACxC,6CAAU,GAAV,UAAW,KAAK,EAAE,OAAO;QACvB,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAClC,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE;YAC1C,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;SAC5B;QACD,KAAK,CAAC,MAAM,EAAE,CAAC;IACjB,CAAC;IAED,6DAA6D;IAC7D,6CAAU,GAAV,UAAW,KAAK;QACd,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1B,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,OAAO;YAClC,OAAO,CAAC,oBAAoB,CAAC,KAAK,EAAE,CAAC;YACrC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,KAAK,CAAC,MAAM,EAAE,CAAC;IACjB,CAAC;IAED,0DAA0D;IAC1D,iDAAc,GAAd,UAAe,KAAK;QAClB,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,OAAO;YAClC,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC3B,IAAI,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,yBAAyB;gBAClF,IAAG,YAAY,IAAI,CAAC,EAAE,EAAE,4CAA4C;oBAClE,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;iBAC7C;aACF;QACH,CAAC,CAAC,CAAC;QACH,4DAA4D;QAC5D,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAC;YACnC,oCAAoC;YACpC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,KAAK;gBAC9B,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;YAC1B,CAAC,CAAC,CAAC;SACJ;QACD,KAAK,CAAC,MAAM,EAAE,CAAC;IACjB,CAAC;IAED,+CAA+C;IAC/C,oDAAiB,GAAjB,UAAkB,KAAK,EAAE,UAAU,EAAE,KAAK;QACxC,UAAU,GAAG,KAAK,CAAC;QACnB,KAAK,CAAC,MAAM,EAAE,CAAC;IACjB,CAAC;IAGD,gDAAa,GAAb;QACE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,aAAa,CAAC,cAAc,GAAG,EAAE,CAAC;QACvC,iDAAiD;QACjD,KAAqB,UAAiB,EAAjB,SAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB,EAAE;YAAnC,IAAM,MAAM;YACf,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;SAC7D;QACD,iDAAiD;QACjD,IAAI,CAAC,aAAa,CAAC,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC;QAChE,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QAClD,yCAAyC;QACzC,IAAI,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,EAAE,EAAE;YACxD,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;SAC3C;QACD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC;QACzE,kEAAkE;QAClE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC;QACzE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;QACnE,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QAC/E,sCAAsC;QACtC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACxC,CAAC;IAED,+CAAY,GAAZ;QAEE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;QAC9C,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC;QAChE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;QAClD,IAAI,CAAC,YAAY,GAAG,CAAC,EAAC,YAAY,EAAE,EAAC,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAC,EAAE,UAAU,EAAE,EAAE,EAAC,CAAC,CAAC;QAClH,KAAqB,UAAiC,EAAjC,SAAI,CAAC,aAAa,CAAC,cAAc,EAAjC,cAAiC,EAAjC,IAAiC,EAAE;YAAnD,IAAM,MAAM;YACf,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,YAAY,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE,EAAC,CAAC,CAAC;YAC/D,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SACzC;QACD,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;IAC5B,CAAC;IAED;;;;OAIG;IACO,iDAAc,GAAxB,UAAyB,KAAK,EAAE,KAAa;QAC3C,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,IAAI,sEAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;aAC7H,SAAS,CAAC,gBAAM;QACjB,CAAC,EAAE,eAAK;YACN,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACP,CAAC;IAES,kDAAe,GAAzB;QACE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,YAAY,EAAE,EAAC,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAC,EAAE,UAAU,EAAE,EAAE,EAAC,CAAC,CAAC;QACpH,2EAA2E;IAC7E,CAAC;IAES,kDAAe,GAAzB,UAA0B,KAAwB;QAChD,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,CAAC,SAAS,GAAG,CAAC,EAAC,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAC,CAAC,CAAC;QAEvE,KAAiB,UAAiB,EAAjB,SAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB,EAAE;YAA/B,IAAI,IAAI;YACX,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ,EAAE;gBAClG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC/B,4FAA4F;gBAC5F,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;oBAC5D,+BAA+B;iBAChC;gBACD,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;aAC/D;YACD,CAAC,EAAE,CAAC;SACL;IAEH,CAAC;IAES,oDAAiB,GAA3B,UAA4B,QAAgB;QAA5C,iBA2BC;QA1BC,yCAAyC;QACzC,IAAM,UAAU,GAAG,EAAE,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnD,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aACtE,SAAS,CAAC,UAAC,MAAc;YACtB,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,EAAE;gBAC3B,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAE;oBAAhC,IAAM,MAAM;oBACf,UAAU,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC;iBACzD;aACF;YACD,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,EAAE;gBAC3B,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAE;oBAAhC,IAAM,MAAM;oBACf,UAAU,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC;iBACzD;aACF;YACD,uDAAuD;YACvD,KAA4B,UAAiB,EAAjB,UAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB,EAAE;gBAA1C,IAAM,aAAa;gBACtB,IAAI,aAAa,CAAC,YAAY,CAAC,QAAQ,KAAK,QAAQ,EAAE;oBACpD,aAAa,CAAC,UAAU,GAAG,UAAU,CAAC;iBACvC;aACF;QACH,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,wCAAwC,EAAE,KAAK,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;IACT,CAAC;IAES,2CAAQ,GAAlB,UAAmB,QAAgB;QACjC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,GAAG,QAAQ,CAAC;IACrD,CAAC;IACD,2CAA2C;IACjC,qDAAkB,GAA5B,UAA6B,KAAW;QAEtC,4EAA4E;QAC5E,IAAI,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,IAAI,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,IAAI,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE;YACxG,IAAI,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE;gBAC1B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,GAAE,CAAC,CAAC,CAAC;gBAC/C,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBAChC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,CAAC;aACzD;iBACI,IAAG,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE;gBAC9B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,GAAE,CAAC,CAAC,CAAC;gBAC/C,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBAChC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,CAAC;aACzD;iBACI,IAAG,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE,GAAG,EAAE,EAAE;gBACtD,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;gBAC/B,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC/B,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;aACrD;iBACG;gBACF,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;gBAChD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;gBAClD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;aACrD;SACF;QAED,mDAAmD;aAC9C;YACH,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;YAChD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;YAClD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;SACrD;IACH,CAAC;IArsBQ;QAAR,2DAAK,EAAE;kCAAgB,4FAAqB;mEAAC;IAC1B;QAAnB,+DAAS,CAAC,OAAO,CAAC;;yDAAa;IACtB;QAAT,4DAAM,EAAE;;gEAAuD;IAHrD,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAwCiC,kEAAW;YACP,0EAAe;YACjB,oFAAoB;YACnB,sFAAqB;YACrB,+DAAiB;OA3C1C,wBAAwB,CAusBpC;IAAD,+BAAC;CAAA;AAvsBoC;;;;;;;;;;;;AC9BrC,iCAAiC,iBAAiB,KAAK,cAAc,wBAAwB,KAAK,0BAA0B,qBAAqB,KAAK,sBAAsB,2BAA2B,yBAAyB,kBAAkB,eAAe,KAAK,gBAAgB,gBAAgB,aAAa,KAAK,K;;;;;;;;;;;ACAxT,kmBAAkmB,gBAAgB,6VAA6V,gBAAgB,szCAAszC,yOAAyO,kLAAkL,oBAAoB,qBAAqB,aAAa,YAAY,8GAA8G,oFAAoF,2SAA2S,aAAa,KAAK,sBAAsB,0FAA0F,iXAAiX,aAAa,YAAY,KAAK,gCAAgC,4DAA4D,qDAAqD,8TAA8T,gBAAgB,EAAE,eAAe,+EAA+E,gBAAgB,iGAAiG,uBAAuB,iBAAiB,0BAA0B,6MAA6M,uBAAuB,YAAY,iPAAiP,uBAAuB,KAAK,uBAAuB,qGAAqG,uBAAuB,iBAAiB,yBAAyB,8MAA8M,uBAAuB,YAAY,6TAA6T,oBAAoB,qBAAqB,aAAa,YAAY,gHAAgH,sFAAsF,iTAAiT,YAAY,KAAK,sBAAsB,4FAA4F,yXAAyX,aAAa,YAAY,KAAK,gCAAgC,qEAAqE,wBAAwB,qBAAqB,kBAAkB,2TAA2T,gBAAgB,EAAE,eAAe,wHAAwH,gBAAgB,iGAAiG,uBAAuB,iBAAiB,yBAAyB,6MAA6M,uBAAuB,YAAY,iPAAiP,uBAAuB,KAAK,uBAAuB,qGAAqG,uBAAuB,iBAAiB,yBAAyB,8MAA8M,uBAAuB,YAAY,mO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA37Q;AACd;AAC8B;AACkB;AAElB;AAGQ;AAEJ;AACI;AAG/E;;;;;GAKG;AAMH;IAeE,sCAAoB,WAAwB,EAAU,eAAgC,EAAU,aAAmC,EAAU,MAAc;QAAvI,gBAAW,GAAX,WAAW,CAAa;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,kBAAa,GAAb,aAAa,CAAsB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAVjJ,gBAAW,GAAsB,EAAE,CAAC;QACpC,eAAU,GAAsB,EAAE,CAAC;QACnC,oBAAe,GAAG,KAAK,CAAC;QAKxB,UAAK,GAAsB,EAAE,CAAC;QAC9B,eAAU,GAAG,kEAAU,CAAC;IAGlC,CAAC;IAED,+CAAQ,GAAR;QAAA,iBAmCC;QAlCC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,OAAO,GAAG,KAAK,EAApB,CAAoB,CAAC,CAAC;QACtE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,IAAI,GAAG,KAAK,EAAjB,CAAiB,CAAC,CAAC;QAChE,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,WAAW,GAAG,KAAK,EAAxB,CAAwB,CAAC,CAAC;QAEjF,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,IAAI,CAAC,KAAK,GAAG;YACX,EAAC,KAAK,EAAE,uBAAuB,EAAE,IAAI,EAAE,iBAAiB,EAAC;YACzD,EAAC,KAAK,EAAE,8BAA8B,EAAE,IAAI,EAAE,wBAAwB,EAAC;YACvE,EAAC,KAAK,EAAE,yBAAyB,EAAE,IAAI,EAAE,mBAAmB,EAAC;YAC7D,EAAC,KAAK,EAAE,2BAA2B,EAAE,IAAI,EAAE,qBAAqB,EAAC;YACjE,EAAC,KAAK,EAAE,yBAAyB,EAAE,IAAI,EAAE,mBAAmB,EAAC;YAC7D,EAAC,KAAK,EAAE,mBAAmB,EAAE,IAAI,EAAE,aAAa,EAAC;SAClD,CAAC;QAEF,sDAAsD;QACtD,KAAmB,UAAU,EAAV,SAAI,CAAC,KAAK,EAAV,cAAU,EAAV,IAAU,EAAE;YAA1B,IAAM,IAAI;YACb,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE;gBAC1C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC;aAChC;SACF;QACD,8DAA8D;QAC9D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC;QAE3D,0DAA0D;QAC1D,IAAI,CAAC,WAAW,CAAC,eAAe;aAC7B,SAAS,CAAC,gBAAM;YACf,OAAO;YACP,IAAI,MAAM,KAAK,SAAS,IAAI,KAAI,CAAC,cAAc,KAAK,MAAM,CAAC,QAAQ;gBACjE,KAAI,CAAC,cAAc,KAAK,MAAM,CAAC,QAAQ,EAAE;gBACzC,YAAY;gBACZ,KAAI,CAAC,aAAa,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;aACzC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,oDAAa,GAArB;QAAA,iBA+CC;QA9CC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC1E,KAAqB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;gBAAtB,IAAM,MAAM;gBACf,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,EAAE,mCAAmC;oBAClE,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAE;wBAAhC,IAAM,MAAM;wBACf,kDAAkD;wBAClD,IAAI,MAAM,CAAC,SAAS,KAAK,IAAI,EAAE;4BAC7B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAC,CAAC,CAAC;4BACpE,MAAM;yBACP;qBACF;iBACF;aACF;YACD,IAAI,KAAI,CAAC,aAAa,CAAC,QAAQ,IAAI,SAAS,EAAC;gBAC3C,kBAAkB;gBAClB,KAAuB,UAAgB,EAAhB,UAAI,CAAC,WAAW,EAAhB,cAAgB,EAAhB,IAAgB,EAAC;oBAAnC,IAAM,QAAQ;oBACf,IAAI,QAAQ,CAAC,KAAK,KAAK,KAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;wBAClD,KAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,KAAK,CAAC;wBACrC,8BAA8B;wBAC9B,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,EAAE,KAAI,CAAC,IAAI,CAAC,EAAE,EAAE,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC;6BAC5F,SAAS,CAAC,UAAC,MAAc;4BACtB,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;4BACrB,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,EAAE;gCAC3B,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAE;oCAAhC,IAAM,MAAM;oCACf,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC;iCAC9D;6BACF;4BACD,iBAAiB;4BACjB,KAAuB,UAAe,EAAf,UAAI,CAAC,UAAU,EAAf,cAAe,EAAf,IAAe,EAAE;gCAAnC,IAAM,UAAQ;gCACjB,IAAI,UAAQ,CAAC,KAAK,KAAK,KAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;oCAClD,KAAI,CAAC,cAAc,GAAG,UAAQ,CAAC,KAAK,CAAC;oCACrC,KAAI,CAAC,eAAe,EAAE,CAAC;iCACxB;6BACF;wBACH,CAAC,EACD,eAAK;4BACH,OAAO,CAAC,GAAG,CAAC,wCAAwC,EAAE,KAAK,CAAC,CAAC;wBAC/D,CAAC,CAAC,CAAC;qBACR;iBACJ;aACF;QAEH,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACK,4DAAqB,GAA7B;QAAA,iBAsBC;QArBC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aAC5D,SAAS,CAAC,UAAC,OAAsB;YAC9B,KAAqB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,EAAE;gBAAzB,IAAM,MAAM;gBACf,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,EAAE,mCAAmC;oBAClE,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAE;wBAAhC,IAAM,MAAM;wBACf,kDAAkD;wBAClD,IAAI,KAAI,CAAC,aAAa,CAAC,IAAI,KAAK,kEAAU,CAAC,mBAAmB,IAAI,MAAM,CAAC,SAAS,KAAK,IAAI,EAAE;4BAC3F,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAC,CAAC,CAAC;4BACpE,MAAM;yBACP;qBACF;iBACF;aACF;QACH,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,8CAA8C,EAAE,GAAG,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;QACP,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,QAAC,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,EAA9B,CAA8B,CAAC,CAAC;IAClE,CAAC;IAED;;;OAGG;IACO,2DAAoB,GAA9B;QAAA,iBAkBC;QAjBC,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,SAAS,CAAC;QACxC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aACjF,SAAS,CAAC,UAAC,MAAc;YACtB,IAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;YAC/B,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACvC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,KAAK,IAAI,EAAE;oBACjC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,EAAC,CAAC,CAAC;iBACtE;aACF;QACH,CAAC,EAAE,aAAG;YACN,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YACzC,OAAO,CAAC,GAAG,CAAC,uDAAuD,EAAE,GAAG,CAAC,CAAC;QAC5E,CAAC,CACF,CAAC;IACN,CAAC;IAED;;;OAGG;IACO,gEAAyB,GAAnC;QAAA,iBAgBC;QAfC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aACjF,SAAS,CAAC,UAAC,MAAc;YACxB,IAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,KAAI,CAAC,cAAc,EAA5B,CAA4B,CAAC,CAAC;YACtE,IAAI,MAAM,CAAC,WAAW,CAAC,UAAU,KAAK,IAAI,EAAE;gBAC1C,KAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,CAAC,CAAC;gBAChC,KAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,GAAG,CAAC;aACnC;iBAAM;gBACL,KAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC;gBACzD,KAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC;aAC1D;QACH,CAAC,EAAE,aAAG;YACJ,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,+CAA+C,EAAE,GAAG,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;OAGG;IACO,wDAAiB,GAA3B,UAA4B,WAAmB;QAA/C,iBAwBC;QAvBC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aACzF,SAAS,CAAC,UAAC,MAAc;YACtB,IAAM,MAAM,GAAW,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,KAAI,CAAC,aAAa,CAAC,QAAQ,EAApC,CAAoC,CAAC,CAAC;YACtF,IAAI,WAAW,GAAG,KAAI,CAAC,aAAa,CAAC,QAAQ,IAAI,WAAW,GAAG,KAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;gBAC1F,OAAO,CAAC,GAAG,CAAC,oDAAoD,CAAC,CAAC;aACnE;iBAAM;gBACL,KAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,KAAI,CAAC,IAAI,CAAC,EAAE,EAAE,KAAI,CAAC,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,EAAE,EAAE,WAAW,CAAC;qBACzG,SAAS,CAAC,gBAAM;oBACb,qBAAqB;oBACrB,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;gBACtD,CAAC,EACD,aAAG;oBACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;wBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;qBAAE;oBAC3C,OAAO,CAAC,GAAG,CAAC,iDAAiD,EAAE,GAAG,CAAC,CAAC;gBACtE,CAAC,CAAC,CAAC;aACR;QACH,CAAC,EACD,eAAK;YACH,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBACjF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,yCAAyC,EAAE,KAAK,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IACT,CAAC;IAGD;;;;OAIG;IACH,oDAAa,GAAb;QACE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC;QAClD,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC;QAClD,IAAI,CAAC,aAAa,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC3D,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC;QAC5C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAC7D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAC7D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACrD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAC7D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAC7D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAC7D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC;QAE3E,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IACD,gDAAgD;IAChD,mDAAY,GAAZ;QACE,IAAI,CAAC,eAAe,GAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC;QAC3D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;QAC5C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;QAClD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;IACpD,CAAC;IAED;;OAEG;IACO,sDAAe,GAAzB;QAAA,iBAUC;QATC,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aAC9H,SAAS,CAAC,gBAAM;YACb,KAAI,CAAC,aAAa,CAAC,KAAK,GAAG,MAAM,CAAC;QACpC,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,8CAA8C,EAAE,GAAG,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;IACT,CAAC;IAED;;;;OAIG;IACO,qDAAc,GAAxB,UAAyB,KAAK,EAAE,KAAa;QAA7C,iBAQC;QAPC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,IAAI,sEAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;aAC7H,SAAS,CAAC,gBAAM;QACjB,CAAC,EAAE,eAAK;YACN,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBACjF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACP,CAAC;IAzQQ;QAAR,2DAAK,EAAE;kCAAgB,0EAAY;uEAAC;IAD1B,4BAA4B;QALxC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;;;SAGlC,CAAC;yCAgBiC,kEAAW,EAA2B,0EAAe,EAAyB,oFAAoB,EAAkB,sDAAM;OAfhJ,4BAA4B,CA4QxC;IAAD,mCAAC;CAAA;AA5QwC;;;;;;;;;;;;ACzBzC,iCAAiC,iBAAiB,KAAK,cAAc,wBAAwB,KAAK,0BAA0B,qBAAqB,KAAK,sBAAsB,2BAA2B,yBAAyB,kBAAkB,eAAe,KAAK,gBAAgB,gBAAgB,aAAa,KAAK,K;;;;;;;;;;;ACAxT,kmBAAkmB,gBAAgB,kTAAkT,gBAAgB,4oCAA4oC,sLAAsL,kLAAkL,oBAAoB,qBAAqB,aAAa,YAAY,gHAAgH,iBAAiB,oFAAoF,6RAA6R,aAAa,KAAK,sBAAsB,0FAA0F,uVAAuV,aAAa,YAAY,KAAK,gCAAgC,4DAA4D,uDAAuD,kBAAkB,aAAa,kNAAkN,eAAe,iKAAiK,oBAAoB,qBAAqB,aAAa,YAAY,sHAAsH,sFAAsF,iSAAiS,YAAY,KAAK,sBAAsB,4FAA4F,2VAA2V,aAAa,YAAY,KAAK,gCAAgC,qEAAqE,wBAAwB,qBAAqB,kBAAkB,uPAAuP,eAAe,uE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAr6K;AACgB;AACkB;AAOd;AACI;AACF;AACpC;AAEzC;;;;;GAKG;AAMH;IAeE,qCAAoB,WAAwB,EAAU,eAAgC,EAAU,aAAmC,EAAU,MAAc;QAAvI,gBAAW,GAAX,WAAW,CAAa;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,kBAAa,GAAb,aAAa,CAAsB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAVjJ,gBAAW,GAAsB,EAAE,CAAC;QACpC,eAAU,GAAsB,EAAE,CAAC;QACnC,oBAAe,GAAsB,EAAE,CAAC;QACxC,oBAAe,GAAG,KAAK,CAAC;QAKxB,UAAK,GAAsB,EAAE,CAAC;IAGxC,CAAC;IAED,8CAAQ,GAAR;QAAA,iBAqCC;QApCC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,OAAO,GAAG,KAAK,EAApB,CAAoB,CAAC,CAAC;QACtE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,IAAI,GAAG,KAAK,EAAjB,CAAiB,CAAC,CAAC;QAChE,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,WAAW,GAAG,KAAK,EAAxB,CAAwB,CAAC,CAAC;QAEjF,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,IAAI,CAAC,KAAK,GAAG;YACX,EAAC,KAAK,EAAE,uBAAuB,EAAE,IAAI,EAAE,iBAAiB,EAAC;YACzD,EAAC,KAAK,EAAE,8BAA8B,EAAE,IAAI,EAAE,wBAAwB,EAAC;YACvE,EAAC,KAAK,EAAE,yBAAyB,EAAE,IAAI,EAAE,mBAAmB,EAAC;YAC7D,EAAC,KAAK,EAAE,2BAA2B,EAAE,IAAI,EAAE,qBAAqB,EAAC;YACjE,EAAC,KAAK,EAAE,yBAAyB,EAAE,IAAI,EAAE,mBAAmB,EAAC;YAC7D,EAAC,KAAK,EAAE,mBAAmB,EAAE,IAAI,EAAE,aAAa,EAAC;SAClD,CAAC;QAEF,sDAAsD;QACtD,KAAmB,UAAU,EAAV,SAAI,CAAC,KAAK,EAAV,cAAU,EAAV,IAAU,EAAE;YAA1B,IAAM,IAAI;YACb,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE;gBAC1C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC;aAChC;SACF;QACD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC;QAE3D,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;YAC9D,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;SACpF;QAED,0DAA0D;QAC1D,IAAI,CAAC,WAAW,CAAC,eAAe;aAC7B,SAAS,CAAC,gBAAM;YACf,IAAI,MAAM,KAAK,SAAS,IAAI,KAAI,CAAC,cAAc,KAAK,MAAM,CAAC,QAAQ;gBACjE,KAAI,CAAC,cAAc,KAAK,MAAM,CAAC,QAAQ,EAAE;gBACzC,YAAY;gBACZ,KAAI,CAAC,aAAa,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;aACzC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,mDAAa,GAArB;QAAA,iBAkDC;QAjDC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC1E,KAAqB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;gBAAtB,IAAM,MAAM;gBACf,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,EAAE,mCAAmC;oBAClE,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAE;wBAAhC,IAAM,MAAM;wBACf,kDAAkD;wBAClD,IAAI,MAAM,CAAC,SAAS,KAAK,IAAI,EAAE;4BAC7B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAC,CAAC,CAAC;4BACpE,MAAM;yBACP;qBACF;iBACF;aACF;YACD,IAAI,KAAI,CAAC,aAAa,CAAC,QAAQ,IAAI,SAAS,EAAC;gBAC3C,kBAAkB;gBAClB,KAAuB,UAAgB,EAAhB,UAAI,CAAC,WAAW,EAAhB,cAAgB,EAAhB,IAAgB,EAAC;oBAAnC,IAAM,QAAQ;oBACjB,IAAI,QAAQ,CAAC,KAAK,KAAK,KAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;wBAClD,KAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,KAAK,CAAC;wBACrC,8BAA8B;wBAC9B,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,EAAE,KAAI,CAAC,IAAI,CAAC,EAAE,EAAE,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC;6BAC5F,SAAS,CAAC,UAAC,MAAc;4BACtB,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;4BACrB,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,EAAE;gCAC3B,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAE;oCAAhC,IAAM,MAAM;oCACf,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC;iCAC9D;6BACF;4BACD,iBAAiB;4BACjB,KAAwB,UAAe,EAAf,UAAI,CAAC,UAAU,EAAf,cAAe,EAAf,IAAe,EAAE;gCAApC,IAAM,SAAS;gCAClB,IAAI,SAAS,CAAC,KAAK,KAAK,KAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;oCACnD,KAAI,CAAC,cAAc,GAAG,SAAS,CAAC,KAAK,CAAC;oCACtC,KAAI,CAAC,eAAe,EAAE,CAAC;oCACvB,MAAM;iCACP;6BACF;wBACH,CAAC,EACD,eAAK;4BACH,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gCACjF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;6BAAE;4BAC3C,OAAO,CAAC,GAAG,CAAC,wCAAwC,EAAE,KAAK,CAAC,CAAC;wBAC/D,CAAC,CAAC,CAAC;qBACR;iBACF;aACF;QAEH,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAGD;;;;OAIG;IACO,yDAAmB,GAA7B,UAA8B,QAAgB,EAAE,QAAgB;QAAhE,iBAYC;QAXC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aACtE,SAAS,CAAC,UAAC,MAAc;YACxB,IAAM,MAAM,GAAW,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,QAAQ,EAAjB,CAAiB,CAAC,CAAC;YACnE,KAAoB,UAAa,EAAb,WAAM,CAAC,MAAM,EAAb,cAAa,EAAb,IAAa,EAAE;gBAA9B,IAAM,KAAK;gBACd,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,KAAK,CAAC,WAAW,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,EAAC,CAAC,CAAC;aAC3E;QAEH,CAAC,EAAE,eAAK;YACN,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBACjF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,wCAAwC,EAAE,KAAK,CAAC,CAAC;QAAC,CAAC,CAAC,CAAC;IACvE,CAAC;IAED;;;OAGG;IACK,2DAAqB,GAA7B;QAAA,iBAyBC;QAxBC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aAC5D,SAAS,CAAC,UAAC,OAAsB;YAC9B,KAAqB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,EAAE;gBAAzB,IAAM,MAAM;gBACf,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,EAAE,mCAAmC;oBAClE,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAE;wBAAhC,IAAM,MAAM;wBACf,8DAA8D;wBAC9D,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,EAAE;4BAC1B,IAAI,MAAM,CAAC,SAAS,KAAK,KAAK,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gCAC1D,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAC,CAAC,CAAC;gCACpE,MAAM;6BACP;yBACF;qBACF;iBAEF;aACF;QACH,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,8CAA8C,EAAE,GAAG,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;QACP,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,QAAC,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,EAA9B,CAA8B,CAAC,CAAC;IAClE,CAAC;IAED;;;OAGG;IACO,0DAAoB,GAA9B;QAAA,iBAoBC;QAnBC,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,SAAS,CAAC;QACxC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aACjF,SAAS,CAAC,UAAC,MAAc;YACtB,IAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;YAC/B,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACvC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,IAAI,EAAE;oBAC9B,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,KAAK,KAAK,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,SAAS,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;wBACrG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,EAAC,CAAC,CAAC;qBACtE;iBACF;aACF;QACH,CAAC,EAAE,aAAG;YACN,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YACzC,OAAO,CAAC,GAAG,CAAC,uDAAuD,EAAE,GAAG,CAAC,CAAC;QAC5E,CAAC,CACF,CAAC;IACN,CAAC;IAED;;;OAGG;IACO,iDAAW,GAArB,UAAsB,WAAmB;QAAzC,iBAmBC;QAlBC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aACjF,SAAS,CAAC,UAAC,MAAc;YACtB,IAAM,MAAM,GAAW,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,KAAI,CAAC,cAAc,EAA5B,CAA4B,CAAC,CAAC;YAC9E,KAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,KAAI,CAAC,IAAI,CAAC,EAAE,EAAE,KAAI,CAAC,OAAO,CAAC,EAAE,EAAE,KAAI,CAAC,cAAc,EAAE,KAAI,CAAC,cAAc,EAAE,WAAW,CAAC;iBACvH,SAAS,CAAC,gBAAM;gBACb,qBAAqB;gBACrB,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;YACtD,CAAC,EACD,aAAG;gBACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;oBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;iBAAE;gBAC3C,OAAO,CAAC,GAAG,CAAC,iDAAiD,EAAE,GAAG,CAAC,CAAC;YACtE,CAAC,CAAC,CAAC;QACT,CAAC,EACD,eAAK;YAAK,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC3F,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YACzC,OAAO,CAAC,GAAG,CAAC,yCAAyC,EAAE,KAAK,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IACT,CAAC;IAED;;;;OAIG;IACH,mDAAa,GAAb;QACE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,aAAa,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC1D,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC;QAC5C,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC;QAClD,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC;QAClD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAC7D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAC7D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACrD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC;QAE3E,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACnF,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,gDAAgD;IAChD,kDAAY,GAAZ;QACE,IAAI,CAAC,eAAe,GAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC;QAC3D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;QAC5C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;QAClD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;IACpD,CAAC;IAED;;OAEG;IACO,qDAAe,GAAzB;QAAA,iBAUC;QATC,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aAC9H,SAAS,CAAC,gBAAM;YACb,KAAI,CAAC,aAAa,CAAC,KAAK,GAAG,MAAM,CAAC;QACpC,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,8CAA8C,EAAE,GAAG,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;IACT,CAAC;IAED;;;;OAIG;IACO,oDAAc,GAAxB,UAAyB,KAAK,EAAE,KAAa;QAA7C,iBAQC;QAPC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,IAAI,sEAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;aAC7H,SAAS,CAAC,gBAAM;QACjB,CAAC,EAAE,eAAK;YACN,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBACjF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACP,CAAC;IA3QQ;QAAR,2DAAK,EAAE;kCAAgB,wEAAW;sEAAC;IADzB,2BAA2B;QALvC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;yCAgBiC,kEAAW,EAA2B,0EAAe,EAAyB,oFAAoB,EAAkB,sDAAM;OAfhJ,2BAA2B,CA8QvC;IAAD,kCAAC;CAAA;AA9QuC;;;;;;;;;;;;ACzBxC,iCAAiC,iBAAiB,KAAK,cAAc,wBAAwB,KAAK,0BAA0B,qBAAqB,KAAK,sBAAsB,2BAA2B,yBAAyB,kBAAkB,eAAe,KAAK,gBAAgB,gBAAgB,aAAa,KAAK,K;;;;;;;;;;;ACAxT,kmBAAkmB,gBAAgB,kTAAkT,gBAAgB,w2CAAw2C,2HAA2H,8NAA8N,kLAAkL,oBAAoB,qBAAqB,aAAa,YAAY,gHAAgH,+FAA+F,6RAA6R,aAAa,KAAK,sBAAsB,0FAA0F,uVAAuV,aAAa,YAAY,KAAK,gCAAgC,4DAA4D,kBAAkB,uPAAuP,iBAAiB,4IAA4I,oBAAoB,qBAAqB,aAAa,YAAY,sHAAsH,sFAAsF,iSAAiS,YAAY,KAAK,sBAAsB,4FAA4F,2VAA2V,aAAa,YAAY,KAAK,gCAAgC,qEAAqE,wBAAwB,qBAAqB,kBAAkB,wRAAwR,iBAAiB,8D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/wL;AACgB;AACkB;AAOd;AACI;AACA;AACtC;AAEzC;;;;;GAKG;AAMH;IAgBE,sCAAoB,WAAwB,EAAU,eAAgC,EAAU,aAAmC,EAAU,MAAc;QAAvI,gBAAW,GAAX,WAAW,CAAa;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,kBAAa,GAAb,aAAa,CAAsB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAXjJ,gBAAW,GAAsB,EAAE,CAAC;QACpC,eAAU,GAAsB,EAAE,CAAC;QACnC,oBAAe,GAAG,KAAK,CAAC;QAOxB,UAAK,GAAsB,EAAE,CAAC;IAGxC,CAAC;IAED,+CAAQ,GAAR;QAAA,iBAoCC;QAnCC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,OAAO,GAAG,KAAK,EAApB,CAAoB,CAAC,CAAC;QACtE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,IAAI,GAAG,KAAK,EAAjB,CAAiB,CAAC,CAAC;QAChE,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,WAAW,GAAG,KAAK,EAAxB,CAAwB,CAAC,CAAC;QAEjF,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,IAAI,CAAC,KAAK,GAAG;YACX,EAAC,KAAK,EAAE,uBAAuB,EAAE,IAAI,EAAE,iBAAiB,EAAC;YACzD,EAAC,KAAK,EAAE,8BAA8B,EAAE,IAAI,EAAE,wBAAwB,EAAC;YACvE,EAAC,KAAK,EAAE,yBAAyB,EAAE,IAAI,EAAE,mBAAmB,EAAC;YAC7D,EAAC,KAAK,EAAE,2BAA2B,EAAE,IAAI,EAAE,qBAAqB,EAAC;YACjE,EAAC,KAAK,EAAE,yBAAyB,EAAE,IAAI,EAAE,mBAAmB,EAAC;YAC7D,EAAC,KAAK,EAAE,mBAAmB,EAAE,IAAI,EAAE,aAAa,EAAC;SAClD,CAAC;QAEF,sDAAsD;QACtD,KAAmB,UAAU,EAAV,SAAI,CAAC,KAAK,EAAV,cAAU,EAAV,IAAU,EAAE;YAA1B,IAAM,IAAI;YACb,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE;gBAC1C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC;aAChC;SACF;QACD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC;QAC3D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;QACxD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC;QAE1D,0DAA0D;QAC1D,IAAI,CAAC,WAAW,CAAC,eAAe;aAC7B,SAAS,CAAC,gBAAM;YACf,IAAI,MAAM,KAAK,SAAS,IAAI,KAAI,CAAC,cAAc,KAAK,MAAM,CAAC,QAAQ;gBACjE,KAAI,CAAC,cAAc,KAAK,MAAM,CAAC,QAAQ,EAAE;gBACzC,YAAY;gBACZ,KAAI,CAAC,aAAa,CAAC,KAAK,GAAG,CAAC,MAAM,CAAC,KAAK,KAAK,CAAC,CAAC,EAAC,CAAC,KAAK,EAAC,KAAI,CAAC;aAC7D;QACH,CAAC,CAAC,CAAC;IAEP,CAAC;IAEO,oDAAa,GAArB;QAAA,iBAgDC;QA/CC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC1E,KAAqB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;gBAAtB,IAAM,MAAM;gBACf,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,EAAE,mCAAmC;oBAClE,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAE;wBAAhC,IAAM,MAAM;wBACf,kDAAkD;wBAClD,IAAI,MAAM,CAAC,SAAS,KAAK,IAAI,EAAE;4BAC7B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAC,CAAC,CAAC;4BACpE,MAAM;yBACP;qBACF;iBACF;aACF;YACD,IAAI,KAAI,CAAC,aAAa,CAAC,QAAQ,IAAI,SAAS,EAAC;gBAC3C,kBAAkB;gBAClB,KAAuB,UAAgB,EAAhB,UAAI,CAAC,WAAW,EAAhB,cAAgB,EAAhB,IAAgB,EAAC;oBAAnC,IAAM,QAAQ;oBACjB,IAAI,QAAQ,CAAC,KAAK,KAAK,KAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;wBAClD,KAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,KAAK,CAAC;wBACrC,8BAA8B;wBAC9B,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,EAAE,KAAI,CAAC,IAAI,CAAC,EAAE,EAAE,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC;6BAC5F,SAAS,CAAC,UAAC,MAAc;4BACtB,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;4BACrB,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,EAAE;gCAC3B,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAE;oCAAhC,IAAM,MAAM;oCACf,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC;iCAC9D;6BACF;4BACD,iBAAiB;4BACjB,KAAwB,UAAe,EAAf,UAAI,CAAC,UAAU,EAAf,cAAe,EAAf,IAAe,EAAE;gCAApC,IAAM,SAAS;gCAClB,IAAI,SAAS,CAAC,KAAK,KAAK,KAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;oCACnD,KAAI,CAAC,cAAc,GAAG,SAAS,CAAC,KAAK,CAAC;oCACtC,KAAI,CAAC,eAAe,EAAE,CAAC;oCACvB,MAAM;iCACP;6BACF;wBACH,CAAC,EACD,eAAK;4BACH,OAAO,CAAC,GAAG,CAAC,wCAAwC,EAAE,KAAK,CAAC,CAAC;wBAC/D,CAAC,CAAC,CAAC;qBACR;iBACF;aACF;QAEH,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IACD;;;OAGG;IACK,4DAAqB,GAA7B;QAAA,iBAyBC;QAxBC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aAC5D,SAAS,CAAC,UAAC,OAAsB;YAC9B,KAAqB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,EAAE;gBAAzB,IAAM,MAAM;gBACf,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,EAAE,mCAAmC;oBAClE,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAE;wBAAhC,IAAM,MAAM;wBACf,kDAAkD;wBAClD,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,EAAE;4BAC1B,IAAI,MAAM,CAAC,SAAS,KAAK,KAAK,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gCAC1D,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAC,CAAC,CAAC;gCACpE,MAAM;6BACP;yBACF;qBACF;iBAEF;aACF;QACH,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,8CAA8C,EAAE,GAAG,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;QACP,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,QAAC,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,EAA9B,CAA8B,CAAC,CAAC;IAClE,CAAC;IAED;;;OAGG;IACO,2DAAoB,GAA9B;QAAA,iBAmBC;QAlBC,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,SAAS,CAAC;QACxC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aACjF,SAAS,CAAC,UAAC,MAAc;YACtB,IAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;YAC/B,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACvC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,IAAI,EAAE;oBAC9B,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,KAAK,KAAK,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,SAAS,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;wBACvG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,EAAC,CAAC,CAAC;qBACtE;iBACF;aACF;QACH,CAAC,EAAE,aAAG;YACN,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YACzC,OAAO,CAAC,GAAG,CAAC,uDAAuD,EAAE,GAAG,CAAC,CAAC;QAC5E,CAAC,CACF,CAAC;IACN,CAAC;IAED;;;OAGG;IACO,kDAAW,GAArB,UAAsB,WAAoB;QAA1C,iBAwBC;QAvBC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aACjF,SAAS,CAAC,UAAC,MAAc;YACtB,IAAM,MAAM,GAAW,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,KAAI,CAAC,cAAc,EAA5B,CAA4B,CAAC,CAAC;YAC9E,IAAI,OAAO,GAAG,CAAC,CAAC;YAChB,IAAI,WAAW,EAAE;gBACf,OAAO,GAAG,CAAC,CAAC;aACb;YACD,KAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,KAAI,CAAC,IAAI,CAAC,EAAE,EAAE,KAAI,CAAC,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC;iBACrG,SAAS,CAAC,gBAAM;gBACb,qBAAqB;gBACrB,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;YACtD,CAAC,EACD,aAAG;gBACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;oBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;iBAAE;gBAC3C,OAAO,CAAC,GAAG,CAAC,iDAAiD,EAAE,GAAG,CAAC,CAAC;YACtE,CAAC,CAAC,CAAC;QACT,CAAC,EACD,eAAK;YACH,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBACjF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,yCAAyC,EAAE,KAAK,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IACT,CAAC;IAED;;;;OAIG;IACH,oDAAa,GAAb;QACE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC;QAClD,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC;QAClD,IAAI,CAAC,aAAa,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC3D,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC;QAC5C,IAAI,CAAC,aAAa,CAAC,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC1D,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC;QACxD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAC7D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAC7D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACrD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAC7D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC;QACvE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC;QACzE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC;QAE3E,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IACD,gDAAgD;IAChD,mDAAY,GAAZ;QACE,IAAI,CAAC,eAAe,GAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC;QAC3D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;QAC5C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;QAClD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;QAClD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;QACxD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC;IAC5D,CAAC;IAED;;OAEG;IACO,sDAAe,GAAzB;QAAA,iBAiBC;QAhBC,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aAC9G,SAAS,CAAC,gBAAM;YACb,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;YACrC,IAAI,MAAM,KAAK,CAAC,EAAE;gBAChB,KAAI,CAAC,aAAa,CAAC,KAAK,GAAG,KAAK,CAAC;aAClC;iBAAM,IAAI,MAAM,KAAK,CAAC,EAAE;gBACvB,KAAI,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC;aACjC;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,iDAAiD,EAAE,MAAM,CAAC,CAAC;aACxE;QACD,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,8CAA8C,EAAE,GAAG,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;IACT,CAAC;IAED;;;;OAIG;IACO,qDAAc,GAAxB,UAAyB,KAAK,EAAE,KAAa;QAA7C,iBAQC;QAPC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,IAAI,sEAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;aAC7H,SAAS,CAAC,gBAAM;QACjB,CAAC,EAAE,eAAK;YACN,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBACjF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACP,CAAC;IApQQ;QAAR,2DAAK,EAAE;kCAAgB,0EAAY;uEAAC;IAD1B,4BAA4B;QALxC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;;;SAGlC,CAAC;yCAiBiC,kEAAW,EAA2B,0EAAe,EAAyB,oFAAoB,EAAkB,sDAAM;OAhBhJ,4BAA4B,CAuQxC;IAAD,mCAAC;CAAA;AAvQwC;;;;;;;;;;;;ACzBzC,0BAA0B,yBAAyB,KAAK,K;;;;;;;;;;;ACAxD,qdAAqd,aAAa,iMAAiM,oBAAoB,2FAA2F,wBAAwB,wPAAwP,eAAe,qMAAqM,oBAAoB,sEAAsE,wBAAwB,4FAA4F,4HAA4H,2FAA2F,uBAAuB,kBAAkB,aAAa,YAAY,uCAAuC,gOAAgO,eAAe,gRAAgR,qOAAqO,eAAe,oRAAoR,sEAAsE,0PAA0P,kFAAkF,sOAAsO,wEAAwE,6QAA6Q,gOAAgO,eAAe,qXAAqX,eAAe,oBAAoB,qBAAqB,YAAY,mCAAmC,sKAAsK,uKAAuK,6GAA6G,0sC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtyJ;AACX;AAE6C;AAClB;AACJ;AAE1B;AAQzC;IAkCE,4BAAoB,WAAwB,EACxB,aAAmC,EAAU,MAAc;QAD3D,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAsB;QAAU,WAAM,GAAN,MAAM,CAAQ;QA5BrE,cAAS,GAAkB,CAAC,WAAW,EAAC,WAAW,CAAC,CAAC;QAoBrD,kBAAa,GAAG,CAAC,CAAC,CAAC,yGAAyG;IAStI,CAAC;IAND,sBAAI,2CAAW;aAAf;YACE,OAAO,IAAI,CAAC,YAAY,CAAC;QAC3B,CAAC;;;OAAA;IAMD,qCAAQ,GAAR;QAAA,iBAwDC;QAvDC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,OAAO,GAAG,KAAK,EAApB,CAAoB,CAAC,CAAC;QACtE,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,YAAY,GAAG,KAAK,EAAzB,CAAyB,CAAC,CAAC;QAClF,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,gBAAgB,GAAG,KAAK,EAA7B,CAA6B,CAAC,CAAC;QACpF,IAAI,CAAC,eAAe,GAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;QAClB,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;QACrB,IAAI,CAAC,eAAe,GAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;QACnC,IAAI,CAAC,gBAAgB,GAAC,KAAK,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAC,EAAE,CAAC;QACb,IAAI,CAAC,WAAW,GAAC,EAAE,CAAC;QACpB,IAAI,CAAC,aAAa,GAAC,EAAE,CAAC;QACtB,IAAI,CAAC,SAAS,GAAC,EAAE,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,SAAS,GAAE,EAAE,CAAC;QAEnB,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,gBAAM;YACvF,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC;QAC1B,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,gBAAM;YACvF,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,cAAI;gBAC9B,OAAO,EAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC;YACnC,CAAC,CAAC,CAAC;QACL,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC3F,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACxB,KAAI,CAAC,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,cAAI;gBACtC,OAAO,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,EAAC,CAAC;YAC7C,CAAC,CAAC,CAAC;QACL,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC3F,KAAI,CAAC,aAAa,GAAG,MAAM,CAAC,GAAG,CAAC,cAAI;gBAClC,OAAO,EAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC;YACnC,CAAC,CAAC,CAAC;QACL,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAES,wCAAW,GAArB;QACE,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,OAAO,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE;YACzB,CAAC,EAAE,CAAC;YACJ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;SAC9B;IACH,CAAC;IAES,0CAAa,GAAvB;QAAA,iBAYC;QAXC,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;QAChC,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC7H,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACxB,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IAEP,CAAC;IAEH,mBAAmB;IACP,0CAAa,GAAvB,UAAwB,KAAK,EAAE,QAAQ;QACrC,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED;;;OAGG;IACO,gDAAmB,GAA7B;QACE,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACzD,IAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC;YACxD,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;aACpB,IAAI,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAC7D,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;;YAEvB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;IAC3B,CAAC;IAED,sDAAsD;IAC5C,sCAAS,GAAnB;QAAA,iBAuEC;QAtEC,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,EAAE;YACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC;SACjC;QACD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,MAAM,EAC3G,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,gBAAM;YACrH,qBAAqB;YACrB,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;YACpD,IAAI,MAAc,CAAC;YACnB,KAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAI,CAAC,gBAAgB,CAAC,KAAK,EAAC,KAAI,CAAC,gBAAgB,EAAE,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;gBACxH,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;wCACjB,QAAM;oBACf,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,QAAM,CAAC,IAAI,CAAC,CAAC;oBACzC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;oBACzD,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,KAAI,CAAC,IAAI,CAAC,CAAC;oBACrC,IAAI,QAAM,CAAC,IAAI,KAAK,KAAI,CAAC,cAAc,CAAC,IAAI,IAAI,QAAM,CAAC,IAAI,KAAK,KAAI,CAAC,IAAI,EAAE;wBACzE,+CAA+C;wBAC/C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;wBACnB,IAAI,QAAM,CAAC,OAAO,KAAK,SAAS,IAAI,QAAM,CAAC,OAAO,CAAC,MAAM,GAAE,CAAC,EAAG;4BAC7D,KAAI,CAAC,OAAO,GAAG,QAAM,CAAC,OAAO,CAAC,GAAG,CAAC,cAAI;gCACpC,OAAO,EAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,QAAQ,EAAE,QAAM,CAAC,QAAQ,EAAC,CAAC;4BAC7E,CAAC,CAAC,CAAC;4BACH,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,KAAI,CAAC,OAAO,CAAC,CAAC;yBACxC;wBACD,IAAI,QAAM,CAAC,SAAS,KAAK,SAAS,IAAI,QAAM,CAAC,SAAS,CAAC,MAAM,GAAE,CAAC,EAAE;4BAChE,KAAI,CAAC,SAAS,GAAG,QAAM,CAAC,SAAS,CAAC,GAAG,CAAC,cAAI;gCACxC,OAAO,EAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC;4BAClD,CAAC,CAAC,CAAC;4BACH,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC;yBAC5C;wBACD,IAAI,KAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAG;4BAC5B,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;yBAC7B;6BAAM;4BACL,KAAI,CAAC,KAAK,EAAE,CAAC;yBACd;;qBAEA;gBAEH,CAAC;gBA3BH,KAAqB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI;oBAApB,IAAM,QAAM;0CAAN,QAAM;;;iBA2Bd;gBAED,KAAI,CAAC,SAAS,GAAC,IAAI,CAAC;gBAEpB,gEAAgE;gBAChE,UAAU,CAAC;oBACT,KAAI,CAAC,SAAS,GAAC,KAAK,CAAC;gBACvB,CAAC,EAAE,IAAI,CAAC,CAAC;YAEb,CAAC,EACD,aAAG;gBACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;oBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;iBAAE;gBAC3C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,KAAI,CAAC,gBAAgB,GAAC,IAAI,CAAC;gBAC3B,UAAU,CAAC;oBACT,KAAI,CAAC,gBAAgB,GAAC,KAAK,CAAC;gBAC9B,CAAC,EAAE,IAAI,CAAC,CAAC;YAEX,CAAC,CAAC,CAAC;QACL,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,MAAM,GAAC,IAAI,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,iDAAiD,CAAC,CAAC;YAC/D,UAAU,CAAC;gBACT,KAAI,CAAC,MAAM,GAAC,KAAK,CAAC;YACpB,CAAC,EAAE,IAAI,CAAC,CAAC;QAEX,CAAC,CAAC,CAAC;IAEP,CAAC;IAES,6CAAgB,GAA1B;QAAA,iBA8BC;QA7BC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,WAAW,GAAsB,EAAE,CAAC;QACxC,KAAmB,UAAY,EAAZ,SAAI,CAAC,OAAO,EAAZ,cAAY,EAAZ,IAAY,EAAE;YAA5B,IAAM,IAAI;YACb,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;YAC7B,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,EACtE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;SAC7D;QACD;;;WAGG;QACH,IAAM,WAAW,GAAG,qDAAQ,CAAC,WAAW,CAAC,CAAC;QAC1C,WAAW,CAAC,SAAS,CAAC,iBAAO;YAC3B,gHAAgH;YAC9G,KAAI,CAAC,KAAK,EAAE,CAAC;YACb,KAAI,CAAC,eAAe,GAAE,IAAI,CAAC;YAC3B,UAAU,CAAC;gBACT,KAAI,CAAC,eAAe,GAAC,KAAK,CAAC;YAC7B,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,qBAAqB,GAAE,IAAI,CAAC;YACjC,UAAU,CAAC;gBACT,KAAI,CAAC,qBAAqB,GAAC,KAAK,CAAC;YACnC,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACP,CAAC;IAED,yBAAyB;IACf,kCAAK,GAAf;QACE,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,IAAI,CAAC,cAAc,GAAC,EAAE,CAAC;QACvB,IAAI,CAAC,gBAAgB,GAAC,EAAE,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,MAAM,GAAC,EAAE,CAAC;QACf,IAAI,CAAC,IAAI,GAAC,EAAE,CAAC;QACb,IAAI,CAAC,SAAS,GAAC,EAAE,CAAC;QAClB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;IA7PQ;QAAR,2DAAK,EAAE;kCAAgB,8DAAM;6DAAC;IADpB,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAmCiC,kEAAW;YACT,oFAAoB,EAAkB,sDAAM;OAnCpE,kBAAkB,CA+P9B;IAAD,yBAAC;CAAA;AA/P8B;;;;;;;;;;;;ACf/B,0BAA0B,yBAAyB,KAAK,K;;;;;;;;;;;ACAxD,qDAAqD,uBAAuB,qBAAqB,aAAa,YAAY,oCAAoC,oBAAoB,qBAAqB,aAAa,YAAY,qCAAqC,iLAAiL,eAAe,yIAAyI,oBAAoB,gpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3iB;AACkC;AACtB;AACI;AAE9B;AAOzC;IAQE,+BAAoB,aAAmC,EAAU,WAAwB,EAAU,MAAc;QAA7F,kBAAa,GAAb,aAAa,CAAsB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEtH,wCAAQ,GAAR;QAAA,iBAiBC;QAhBC,IAAI,CAAC,WAAW,CAAC,WAAW;aACzB,SAAS,CAAC,eAAK;YACd,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;QAClB,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,gBAAgB,GAAG,KAAK,EAA7B,CAA6B,CAAC,CAAC;QACpF,oCAAoC;QACpC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,gBAAM;YACrF,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACxB,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6CAAa,GAAb;QAAA,iBASC;QARC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,gBAAM;YACrF,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACxB,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,4CAA4C;IAC5C,4CAAY,GAAZ;QAAA,iBAuBC;QAtBC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,gBAAM;YACrH,qBAAqB;YACvB,KAAI,CAAC,SAAS,GAAC,IAAI,CAAC;YAClB,KAAI,CAAC,aAAa,EAAE,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;YACpD,UAAU,CAAC;gBACT,KAAI,CAAC,SAAS,GAAC,KAAK,CAAC;gBACrB,KAAI,CAAC,cAAc,GAAC,EAAE,CAAC;YACzB,CAAC,EAAE,IAAI,CAAC,CAAC;QAEf,CAAC,EACG,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC7C,KAAI,CAAC,MAAM,GAAC,IAAI,CAAC;YACjB,UAAU,CAAC;gBACP,KAAI,CAAC,MAAM,GAAC,KAAK,CAAC;YACpB,CAAC,EAAE,IAAI,CAAC,CAAC;YAET,OAAO,CAAC,GAAG,CAAC,iDAAiD,CAAC,CAAC;YAC/D,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IA/DQ;QAAR,2DAAK,EAAE;kCAAgB,8DAAM;gEAAC;IADpB,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCASmC,oFAAoB,EAAuB,kEAAW,EAAkB,sDAAM;OARtG,qBAAqB,CAmEjC;IAAD,4BAAC;CAAA;AAnEiC;;;;;;;;;;;;ACZlC,iCAAiC,yBAAyB,kBAAkB,mBAAmB,kBAAkB,0BAA0B,8BAA8B,0BAA0B,wCAAwC,2BAA2B,4BAA4B,0BAA0B,8BAA8B,wBAAwB,uBAAuB,gCAAgC,gCAAgC,KAAK,6BAA6B,gCAAgC,wBAAwB,KAAK,+BAA+B,iBAAiB,KAAK,mBAAmB,kBAAkB,KAAK,sBAAsB,iBAAiB,KAAK,yBAAyB,8BAA8B,+BAA+B,KAAK,uBAAuB,8BAA8B,KAAK,wBAAwB,kBAAkB,KAAK,0BAA0B,6BAA6B,KAAK,0BAA0B,2BAA2B,yBAAyB,kBAAkB,eAAe,KAAK,sBAAsB,wBAAwB,OAAO,sBAAsB,kBAAkB,6BAA6B,KAAK,uBAAuB,yBAAyB,iBAAiB,eAAe,KAAK,wBAAwB,2BAA2B,yBAAyB,gBAAgB,KAAK,YAAY,qBAAqB,kBAAkB,gBAAgB,iCAAiC,oBAAoB,iBAAiB,KAAK,S;;;;;;;;;;;ACA1+C,ikBAAikB,8MAA8M,gUAAgU,2MAA2M,6SAA6S,gBAAgB,aAAa,uTAAuT,gBAAgB,wEAAwE,wBAAwB,4OAA4O,gBAAgB,wGAAwG,wBAAwB,gJAAgJ,mFAAmF,wBAAwB,oCAAoC,0RAA0R,iBAAiB,4xBAA4xB,iBAAiB,iPAAiP,iBAAiB,ggCAAggC,gBAAgB,0aAA0a,gBAAgB,ynBAAynB,6HAA6H,qOAAqO,wMAAwM,gBAAgB,+OAA+O,SAAS,uDAAuD,0J;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAp1N;AAEjB;AACxC;AAC0D;AACA;AAEV;AAEzC;AAIqE;AAChC;AAQ3E;;;;;GAKG;AAMH;IA0DE,wCAAoB,WAAwB,EACxB,eAAgC,EAChC,aAAmC,EACnC,aAAmC;QAHnC,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,kBAAa,GAAb,aAAa,CAAsB;QACnC,kBAAa,GAAb,aAAa,CAAsB;QA1D7C,eAAU,GAAG,IAAI,0DAAY,EAAe,CAAC;QAM7C,cAAS,GAAY,IAAI,CAAC;QACpC,uBAAuB;QACb,iBAAY,GAAW,MAAM,CAAC;QAC9B,cAAS,GAAY,KAAK,CAAC;QACrC,uBAAuB;QACb,eAAU,GAAW,OAAO,CAAC;QACvC,+BAA+B;QACrB,aAAQ,GAAW,EAAE,CAAC;QAChC,2CAA2C;QACjC,oBAAe,GAAgB,2EAAW,CAAC,GAAG,CAAC;QAC/C,cAAS,GAAc,yEAAS,CAAC,KAAK,CAAC;QAKvC,gBAAW,GAAiB,EAAE,CAAC;QAC/B,qBAAgB,GAAiB,EAAE,CAAC;QAEpC,eAAU,GAAiB,EAAE,CAAC;QAC9B,oBAAe,GAAsB,CAAC,EAAC,KAAK,EAAE,2EAAW,CAAC,GAAG,EAAE,KAAK,EAAE,2EAAW,CAAC,GAAG,EAAC;YAC9F,EAAC,KAAK,EAAE,2EAAW,CAAC,GAAG,EAAE,KAAK,EAAE,2EAAW,CAAC,GAAG,EAAC,EAAE,EAAC,KAAK,EAAE,2EAAW,CAAC,GAAG,EAAE,KAAK,EAAE,2EAAW,CAAC,GAAG,EAAC,CAAC,CAAC;QAC5F,aAAQ,GAAsB,CAAC,EAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAC,EAAE,EAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAC,EAAE,EAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC,CAAC,CAAC;QAC/H,gCAA2B,GAAsB,CAAC,EAAC,KAAK,EAAE,gBAAgB,EAAE,KAAK,EAAE,UAAU,EAAC,EAAE,EAAC,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,YAAY,EAAC,CAAC,CAAC;QAGtJ,oBAAe,GAAY,KAAK,CAAC;QAIjC,gBAAW,GAAgB,EAAC,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAC,CAAC;QAKpF,oBAAe,GAAsB,EAAE,CAAC;QAC3C,iBAAY,GAAG,CAAC;gBACrB,YAAY,EAAE;oBACZ,QAAQ,EAAE,EAAE;oBACZ,QAAQ,EAAE,EAAE;oBACZ,QAAQ,EAAE,EAAE;oBACZ,QAAQ,EAAE,IAAI;oBACd,QAAQ,EAAE,IAAI;oBACd,KAAK,EAAE,SAAS;oBAChB,KAAK,EAAE,EAAE;oBACT,IAAI,EAAE,EAAE;oBACR,IAAI,EAAE,EAAE;iBACT,EAAE,UAAU,EAAE,EAAE;aAClB,CAAC,CAAC;IAMH,CAAC;IAED,iDAAQ,GAAR;QAAA,iBA2FC;QA1FC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,WAAW;aACzB,SAAS,CAAC,eAAK;YACd,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,WAAW,CAAC,QAAQ;aACtB,SAAS,CAAC,eAAK;YACd,KAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QACpB,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,WAAW,GAAG,KAAK,EAAxB,CAAwB,CAAC,CAAC;QACjF,IAAI,IAAI,CAAC,aAAa,CAAC,WAAW,KAAK,SAAS,EAAE;YAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;SAAC;QACtG,IAAI,IAAI,CAAC,aAAa,CAAC,SAAS,KAAK,SAAS,EAAE;YAC9C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;YAC9C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;SAC/C;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,WAAW,KAAK,SAAS,EAAE;YAChD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;YAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE;SAC5C;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,KAAK,SAAS,EAAE;YAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC;SAAC;QAElH,IAAI,IAAI,CAAC,aAAa,CAAC,aAAa,KAAK,SAAS,EAAE;YAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;SAAC;QAExG,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,KAAK,SAAS,EAAE;YAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;SAAC;QAE7F,IAAI,IAAI,CAAC,aAAa,CAAC,SAAS,KAAK,SAAS,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,KAAK,SAAS,EAAE;YAC1F,IAAI,CAAC,aAAa,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YAC5D,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;SACzD;aAAM;YACL,IAAI,CAAC,aAAa,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YACzD,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;SACzD;QAED,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAE3B,yCAAyC;QACzC,IAAI,CAAC,YAAY,GAAG;YAClB,mBAAmB,EAAE,KAAK;YAC1B,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE;gBACN,OAAO,EAAE,IAAI;gBACb,QAAQ,EAAE,KAAK;aAChB;YACD,MAAM,EAAE;gBACN,KAAK,EAAE,CAAC;wBACN,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE,IAAI;wBACb,UAAU,EAAE;4BACV,OAAO,EAAE,IAAI;4BACb,WAAW,EAAE,MAAM;yBACpB;qBAKF,CAAC;gBACF,KAAK,EAAE,CAAC;wBACN,KAAK,EAAE;4BACL,WAAW,EAAE,IAAI;4BACjB,GAAG,EAAE,SAAS;yBACf;wBACD,UAAU,EAAE;4BACV,OAAO,EAAE,IAAI;4BACb,WAAW,EAAE,EAAE;yBAChB;qBACF,CAAC;aACH;YACD,QAAQ,EAAE,UAAU,KAAK,EAAE,IAAI;gBAC7B,kDAAkD;gBAClD,kFAAkF;gBAClF,gBAAgB;gBAChB,iBAAiB;YACnB,CAAC;SACF,CAAC;QACF,IAAI,CAAC,OAAO,GAAG,IAAI,8CAAK,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;YAC/C,IAAI,EAAE,IAAI,CAAC,SAAS;YACpB,IAAI,EAAE;gBACJ,MAAM,EAAE,EAAE;gBACV,QAAQ,EAAE,EAAE;aACb;YACD,OAAO,EAAE,IAAI,CAAC,YAAY;SAC3B,CAAC,CAAC;IAEL,CAAC;IAED,mEAAmE;IAC3D,4DAAmB,GAA3B,UAA4B,IAAU;QACpC,IAAM,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAChC,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAClC,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC3B,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAClC,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAElC,IAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,SAAS,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC/B,IAAI,WAAW,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,WAAW,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,aAAa,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;QACvC,IAAI,aAAa,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;QAEvC,IAAI,GAAG,GAAG,EAAE,EAAE;YACZ,SAAS,GAAG,GAAG,GAAG,SAAS,CAAC;SAC7B;QACD,IAAI,KAAK,GAAG,EAAE,EAAE;YACd,WAAW,GAAG,GAAG,GAAG,WAAW,CAAC;SACjC;QACD,IAAI,KAAK,GAAG,EAAE,EAAE;YACd,WAAW,GAAG,GAAG,GAAG,WAAW,CAAC;SACjC;QACD,IAAI,OAAO,GAAG,EAAE,EAAE;YAChB,aAAa,GAAG,GAAG,GAAG,aAAa,CAAC;SACrC;QACD,IAAI,OAAO,GAAG,EAAE,EAAE;YAChB,aAAa,GAAG,GAAG,GAAG,aAAa,CAAC;SACrC;QAED,OAAO,UAAU,GAAG,GAAG,GAAG,WAAW,GAAG,GAAG,GAAG,SAAS,GAAG,GAAG,GAAG,WAAW,GAAG,GAAG,GAAG,aAAa,GAAG,GAAG,GAAG,aAAa,CAAC;IAC1H,CAAC;IAES,sDAAa,GAAvB;QAAA,iBA4FC;QA3FC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,+CAA+C;QAC/C,IAAM,eAAe,GAAkB,EAAE,CAAC;QAC1C,IAAI,UAAU,GAAG,KAAK,CAAC;QACvB,KAAyB,UAAiC,EAAjC,SAAI,CAAC,aAAa,CAAC,cAAc,EAAjC,cAAiC,EAAjC,IAAiC,EAAE;YAAvD,IAAM,UAAU;YACnB,6BAA6B;YAC7B,KAA2B,UAAe,EAAf,mCAAe,EAAf,6BAAe,EAAf,IAAe,EAAE;gBAAvC,IAAM,YAAY;gBACrB,IAAI,YAAY,KAAK,UAAU,CAAC,QAAQ,EAAE;oBACxC,UAAU,GAAG,IAAI,CAAC;oBAClB,MAAM;iBACP;aACF;YACD,IAAI,CAAC,UAAU,EAAE;gBACf,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;aAC3C;SACF;QACD,2BAA2B;QAC3B,IAAM,qBAAqB,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,MAAM,CAAC;QACvE,+BAA+B;QAC/B,KAAyB,UAAe,EAAf,mCAAe,EAAf,6BAAe,EAAf,IAAe,EAAE;YAArC,IAAM,UAAU;oCAER,UAAU;gBACnB,IAAI,UAAU,CAAC,KAAK,KAAK,UAAU,EAAE;oBACnC,mCAAmC;oBACnC,yCAAyC;oBACzC,IAAM,YAAU,GAAG,EAAE,CAAC;oBACtB,OAAK,aAAa,CAAC,aAAa,CAAC,UAAU,CAAC,KAAK,EAAE,OAAK,IAAI,CAAC,EAAE,EAAE,OAAK,OAAO,CAAC,EAAE,CAAC;yBAC9E,SAAS,CAAC,UAAC,MAAc;wBACtB,8CAA8C;wBAC9C,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,IAAI,KAAI,CAAC,SAAS,EAAE;4BAC7C,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAE;gCAAhC,IAAM,MAAM;gCACf,YAAU,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC;6BACzD;yBACF;wBACD,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,EAAE;4BAC3B,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAE;gCAAhC,IAAM,MAAM;gCACf,kFAAkF;gCAClF,IAAI,CAAC,KAAI,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;oCACxC,YAAU,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC;iCACzD;qCAAM,IAAI,KAAI,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,EAAE;oCAC7C,yDAAyD;oCACzD,YAAU,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC;iCACzD;6BACF;yBACF;wBAGD,mCAAmC;wBACnC,KAAyB,UAAU,EAAV,2BAAU,EAAV,wBAAU,EAAV,IAAU,EAAE;4BAAhC,IAAM,UAAU;4BACnB,KAAmB,UAAiC,EAAjC,UAAI,CAAC,aAAa,CAAC,cAAc,EAAjC,cAAiC,EAAjC,IAAiC,EAAE;gCAAjD,IAAM,IAAI;gCACb,IAAI,UAAU,CAAC,KAAK,KAAK,IAAI,CAAC,QAAQ,EAAE;oCACtC,mCAAmC;oCACnC,uDAAuD;oCACvD,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC;wCACrB,YAAY,EAAE;4CACZ,QAAQ,EAAE,UAAU,CAAC,KAAK;4CAC1B,QAAQ,EAAE,UAAU,CAAC,KAAK;4CAC1B,QAAQ,EAAE,IAAI,CAAC,QAAQ;4CACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;4CACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;4CACvB,KAAK,EAAE,IAAI,CAAC,KAAK;4CACjB,KAAK,EAAE,IAAI,CAAC,KAAK;4CACjB,IAAI,EAAE,IAAI,CAAC,IAAI;4CACf,IAAI,EAAE,GAAG;yCACV;wCACD,UAAU,EAAE,YAAU;qCACvB,CAAC,CAAC;oCACH,MAAM;iCACP;6BACF;yBACF;wBACD,mCAAmC;wBACnC,KAAmB,UAAiB,EAAjB,UAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB,EAAE;4BAAjC,IAAM,IAAI;4BACb,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,EAAE;gCAC3B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;6BACtB;yBACF;wBAED,wGAAwG;wBACxG,2DAA2D;wBAC3D,uCAAuC;wBACvC,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;wBAC7B,GAAG;oBAEL,CAAC,EACD,eAAK;wBACH,OAAO,CAAC,GAAG,CAAC,wCAAwC,EAAE,KAAK,CAAC,CAAC;oBAC/D,CAAC,CAAC,CAAC;iBACR;YACH,CAAC;;YArED,+BAA+B;YAC/B,KAAyB,UAAgB,EAAhB,SAAI,CAAC,WAAW,EAAhB,cAAgB,EAAhB,IAAgB;gBAApC,IAAM,UAAU;wBAAV,UAAU;aAoEpB;SACF;IACH,CAAC;IAED,kDAAS,GAAT,UAAU,KAAK;QAAf,iBAsKC;QArKC,oBAAoB;QACpB,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;QAC/E,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;QAC/E,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;QAClF,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;QAClF,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACzB,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACvB,IAAI,SAAS,GAAG,EAAC,UAAU,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAC,MAAM,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC,EAAC,CAAC;QACrG,iBAAiB;QACjB,IAAI,MAAM,GAAG,CAAC,CAAC;gCAEJ,QAAQ;YACjB,OAAK,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAK,IAAI,CAAC,EAAE,EAAE,OAAK,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,MAAM;gBAC/G,2DAA2D;gBAC3D,IAAI,CAAC,KAAI,CAAC,SAAS,EAAE;oBACnB,IAAI,MAAM,UAAC;oBACX,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAE;wBAAhC,IAAM,MAAM;wBACf,mCAAmC;wBACnC,MAAM,GAAG,EAAE,CAAC;wBACZ,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,EAAE,KAAK,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE;4BACrE,KAAoB,UAAa,EAAb,WAAM,CAAC,MAAM,EAAb,cAAa,EAAb,IAAa,EAAE;gCAA9B,IAAM,KAAK;gCACd,MAAM,CAAC,IAAI,CAAC,EAAC,MAAM,EAAE,KAAK,CAAC,KAAK,EAAE,WAAW,EAAE,KAAK,CAAC,WAAW,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC,CAAC;6BAC9E;4BACD,SAAS,GAAG,EAAC,UAAU,EAAE,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,UAAU,EAAE,MAAM,CAAC,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAC,CAAC;4BAClG,MAAM;yBACP;qBACF;iBACF;gBACD,wBAAwB;gBACxB,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAC3F,KAAI,CAAC,mBAAmB,CAAC,KAAI,CAAC,aAAa,CAAC,EAAE,KAAI,CAAC,mBAAmB,CAAC,KAAI,CAAC,WAAW,CAAC,EACxF,KAAK,EAAE,KAAI,CAAC,IAAI,CAAC,EAAE,EAAE,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC;qBACpC,SAAS,CAAC,UAAC,eAAgC;oBAC1C,IAAI,eAAe,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAC;wBACpC,IAAI,UAAU,GAAG,CAAC,CAAC;wBACnB,IAAI,SAAS,GAAS,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;wBACnE,IAAI,OAAO,GAAS,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;wBACjG,mFAAmF;wBACnF,IAAI,SAAS,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC,GAAG,OAAO,CAAC;wBACpE,iBAAiB;wBACjB,IAAI,KAAI,CAAC,SAAS,EAAE;4BAClB,IAAI,KAAK,GAAG,CAAC,CAAC;4BACd,QAAQ,KAAI,CAAC,eAAe,EAAE;gCAC5B,KAAK,2EAAW,CAAC,GAAG;oCAClB,KAAK,GAAG,KAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;oCACjE,MAAM;gCACR,KAAK,2EAAW,CAAC,GAAG;oCAClB,KAAK,GAAG,KAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;oCACtD,MAAM;gCACR,KAAK,2EAAW,CAAC,GAAG,CAAC;gCACrB;oCACE,KAAK,GAAG,KAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;oCACtD,MAAM;6BACT;4BAED,oCAAoC;4BACpC,iBAAiB;4BACjB,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;gCAClC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,eAAe,CAAC,CAAC;6BAC9C;4BACD,IAAM,OAAO,GAAG;gCACd,KAAK,EAAE,QAAQ,CAAC,YAAY,CAAC,KAAK;gCAClC,IAAI,EAAE,CAAC,KAAK,CAAC;gCACb,eAAe,EAAE,QAAQ,CAAC,YAAY,CAAC,KAAK;gCAC5C,WAAW,EAAE,QAAQ,CAAC,YAAY,CAAC,KAAK;6BACzC,CAAC;4BACF,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;4BAClC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;4BAClC,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;4BAC1D,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE;gCAC1C,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;gCAChC,8BAA8B;6BAC/B;4BACD,KAAK,CAAC,MAAM,EAAE,CAAC;4BACf,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;4BAEvC,gBAAgB;yBACjB;6BAAM;4BACL,KAAoB,UAAsB,EAAtB,oBAAe,CAAC,MAAM,EAAtB,cAAsB,EAAtB,IAAsB,EAAE;gCAAvC,IAAM,KAAK;gCACd,IAAI,WAAW,SAAQ,CAAC;gCACtB,IAAI,KAAK,CAAC,UAAU,KAAK,IAAI,EAAC;oCAC5B,WAAW,GAAG,KAAK,CAAC,UAAU,CAAC;iCAChC;qCAAM;oCACL,IAAI,OAAO,GAAG,KAAK,CAAC,WAAW,CAAC;oCAChC,qDAAqD;oCACrD,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;oCACrC,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;iCAC/B;gCACH,IAAI,GAAG,GAAG,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC;gCACxC,KAAoB,UAAgB,EAAhB,cAAS,CAAC,MAAM,EAAhB,cAAgB,EAAhB,IAAgB,EAAE;oCAAjC,IAAM,KAAK;oCACd,IAAI,eAAe,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE;wCACnD,IAAI,WAAW,KAAK,KAAK,CAAC,MAAM,EAAE;4CAChC,wDAAwD;4CACxD,IAAI,KAAK,GAAS,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;4CAC3C,IAAI,GAAG,GAAS,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;4CAErG,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,OAAO,CAAC,CAAC;yCAC3E;qCACF;iCACF;gCACD,wCAAwC;gCACxC,uDAAuD;6BACxD;4BAED,gCAAgC;4BAChC,IAAI,KAAI,CAAC,SAAS,KAAK,yEAAS,CAAC,UAAU,EAAE;gCAC3C,KAAoB,UAAgB,EAAhB,cAAS,CAAC,MAAM,EAAhB,cAAgB,EAAhB,IAAgB,EAAE;oCAAjC,IAAM,KAAK;oCACd,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,SAAS,CAAC;iCACvC;6BACF;4BACD,oCAAoC;4BACpC,iBAAiB;4BACjB,IAAI,WAAW,GAAG,EAAE,CAAC;4BACrB,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;oDACzC,KAAK;gCACd,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gCAC1B,SAAS,GAAG,EAAE,CAAC;gCACnB,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAI,IAAI,WAAI,KAAK,KAAK,CAAC,MAAM,EAArB,CAAqB,CAAC,CAAC;gCACpE,IAAI,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE;oCACzB,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;iCACtC;4BACH,CAAC;gCALK,SAAS;4BAFf,KAAoB,UAAgB,EAAhB,cAAS,CAAC,MAAM,EAAhB,cAAgB,EAAhB,IAAgB;gCAA/B,IAAM,KAAK;wCAAL,KAAK;6BAOf;4BACD,IAAM,OAAO,GAAG;gCACd,KAAK,EAAE,QAAQ,CAAC,YAAY,CAAC,KAAK;gCAClC,IAAI,EAAE,WAAW;gCACjB,eAAe,EAAE,QAAQ,CAAC,YAAY,CAAC,KAAK;gCAC5C,WAAW,EAAE,QAAQ,CAAC,YAAY,CAAC,KAAK;6BACzC,CAAC;4BACF,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;4BAClC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;4BAElC,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE;gCAC3C,+BAA+B;6BAC/B;4BACD,KAAK,CAAC,MAAM,EAAE,CAAC;4BACf,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;yBACxC;qBACF;yBAAM;wBACL,yDAAyD;wBACzD,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;wBACpB,IAAM,OAAO,GAAG;4BACd,KAAK,EAAE,QAAQ,CAAC,YAAY,CAAC,KAAK;4BAClC,IAAI,EAAE,EAAE;4BACR,eAAe,EAAE,QAAQ,CAAC,YAAY,CAAC,KAAK;4BAC5C,WAAW,EAAE,QAAQ,CAAC,YAAY,CAAC,KAAK;yBACzC,CAAC;wBACF,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;wBAClC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBAElC,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE;4BAC1C,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;yBAC7B;wBACD,KAAK,CAAC,MAAM,EAAE,CAAC;wBACf,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;qBACxC;gBAED,CAAC,EACD,aAAG;oBACD,OAAO,CAAC,GAAG,CAAC,8CAA8C,EAAE,GAAG,CAAC,CAAC;gBACnE,CAAC,CAAC,CAAC;YACT,CAAC,EAAE,eAAK;gBACN,OAAO,CAAC,GAAG,CAAC,4CAA4C,CAAC,CAAC;YAC5D,CAAC,CAAC,CAAC;QACL,CAAC;;QAzJD,kCAAkC;QAClC,KAAuB,UAAiB,EAAjB,SAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB;YAAnC,IAAM,QAAQ;oBAAR,QAAQ;SAwJlB;IAEH,CAAC;IAED,SAAS;IACF,qDAAY,GAAnB,UAAoB,CAAM;QACxB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC;IAEM,qDAAY,GAAnB,UAAoB,CAAM;QACxB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC;IAED,wCAAwC;IACxC,mDAAU,GAAV,UAAW,KAAK,EAAE,OAAO;QACvB,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAClC,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE;YAC1C,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;SAC5B;QACD,KAAK,CAAC,MAAM,EAAE,CAAC;IACjB,CAAC;IAED,0DAA0D;IAC1D,uDAAc,GAAd,UAAe,KAAK;QAClB,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,OAAO;YAClC,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC3B,IAAI,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,yBAAyB;gBAClF,IAAI,YAAY,IAAI,CAAC,EAAE,EAAE,4CAA4C;oBACnE,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;iBAC7C;aACF;QACH,CAAC,CAAC,CAAC;QACH,4DAA4D;QAC5D,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;YACpC,oCAAoC;YACpC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,KAAK;gBAC9B,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;YAC1B,CAAC,CAAC,CAAC;SACJ;QACD,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACxD,KAAK,CAAC,MAAM,EAAE,CAAC;IACjB,CAAC;IAED,+CAA+C;IAC/C,0DAAiB,GAAjB,UAAkB,KAAK,EAAE,UAAU,EAAE,KAAK;QACxC,UAAU,GAAG,KAAK,CAAC;QACnB,KAAK,CAAC,MAAM,EAAE,CAAC;IACjB,CAAC;IAGD,sDAAa,GAAb;QACE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,gDAAgD;QAChD,IAAI,CAAC,aAAa,CAAC,cAAc,GAAG,EAAE,CAAC;QACvC,iDAAiD;QACjD,KAAqB,UAAiB,EAAjB,SAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB,EAAE;YAAnC,IAAM,MAAM;YACf,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;SAC7D;QACD,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC9C,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QAClD,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC5C,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC;QAChD,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC9C,IAAI,CAAC,aAAa,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QAC1D,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC;QAClD,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;QAC9C,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC;QAClD,yCAAyC;QACzC,IAAI,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,EAAE,EAAE;YACxD,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;SAC3C;QACD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC;QACzE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;QAC/D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;QACnE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAC7D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;QAC/D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;QACnE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC;QAC3E,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC;QACvE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;QAC/D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QAC3D,6BAA6B;QAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAE/B,CAAC;IAED,qDAAY,GAAZ;QACE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,iDAAiD;QACjD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;QAC9C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;QAClD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;QAClD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;QAC5C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;QAChD,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,EAAC,CAAC,MAAM,EAAC,QAAO,CAAC;QACnD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;QAC9C,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,EAAC,CAAC,MAAM,EAAC,QAAO,CAAC;QACrD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC;QAC1D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;QAClD,IAAI,CAAC,YAAY,GAAG,CAAC;gBACnB,YAAY,EAAE;oBACZ,QAAQ,EAAE,EAAE;oBACZ,QAAQ,EAAE,EAAE;oBACZ,QAAQ,EAAE,EAAE;oBACZ,QAAQ,EAAE,IAAI;oBACd,QAAQ,EAAE,IAAI;oBACd,KAAK,EAAE,SAAS;oBAChB,KAAK,EAAE,EAAE;oBACT,IAAI,EAAE,EAAE;oBACR,IAAI,EAAE,EAAE;iBACT,EAAE,UAAU,EAAE,EAAE;aAClB,CAAC,CAAC;QACH,KAAqB,UAAiC,EAAjC,SAAI,CAAC,aAAa,CAAC,cAAc,EAAjC,cAAiC,EAAjC,IAAiC,EAAE;YAAnD,IAAM,MAAM;YACf,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,YAAY,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE,EAAC,CAAC,CAAC;YAC/D,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SACzC;QACD,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAED;;;;OAIG;IACO,uDAAc,GAAxB,UAAyB,KAAK,EAAE,KAAa;QAC3C,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,IAAI,sEAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;aAC7H,SAAS,CAAC,gBAAM;QACjB,CAAC,EAAE,eAAK;YACN,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACP,CAAC;IAES,wDAAe,GAAzB;QACE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YACrB,YAAY,EAAE;gBACZ,QAAQ,EAAE,EAAE;gBACZ,QAAQ,EAAE,EAAE;gBACZ,QAAQ,EAAE,EAAE;gBACZ,QAAQ,EAAE,IAAI;gBACd,QAAQ,EAAE,IAAI;gBACd,KAAK,EAAE,SAAS;gBAChB,KAAK,EAAE,EAAE;gBACT,IAAI,EAAE,EAAE;gBACR,IAAI,EAAE,EAAE;aACT,EAAE,UAAU,EAAE,EAAE;SAClB,CAAC,CAAC;QACH,2EAA2E;IAC7E,CAAC;IAES,wDAAe,GAAzB,UAA0B,KAAwB;QAChD,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,CAAC,SAAS,GAAG,CAAC,EAAC,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,WAAW,EAAE,SAAS,EAAE,eAAe,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAC,CAAC,CAAC;QAC1G,oDAAoD;QACpD,KAAiB,UAAiB,EAAjB,SAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB,EAAE;YAA/B,IAAI,IAAI;YACX,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ,EAAE;gBAClG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC/B,4FAA4F;gBAC5F,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;oBAC5D,+BAA+B;iBAChC;gBACD,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;aAC/D;YACD,CAAC,EAAE,CAAC;SACL;IAEH,CAAC;IAES,0DAAiB,GAA3B,UAA4B,QAAgB;QAA5C,iBAoCC;QAnCC,yCAAyC;QACzC,IAAM,UAAU,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aACtE,SAAS,CAAC,UAAC,MAAc;YACxB,oEAAoE;YAClE,IAAI,KAAI,CAAC,SAAS,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,EAAC;gBAC5C,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAE;oBAAhC,IAAM,MAAM;oBACf,qDAAqD;oBACrD,UAAU,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC;iBACzD;aACF;YAED,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,EAAE;gBAC3B,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAC;oBAA/B,IAAM,MAAM;oBACf,6GAA6G;oBAC7G,IAAI,CAAC,KAAI,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,KAAI,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAC;wBACjF,UAAU,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC;qBACzD;iBACF;aACF;YAED,uDAAuD;YACvD,KAA4B,UAAiB,EAAjB,UAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB,EAAE;gBAA1C,IAAM,aAAa;gBACtB,IAAI,aAAa,CAAC,YAAY,CAAC,QAAQ,KAAK,QAAQ,EAAE;oBACpD,aAAa,CAAC,UAAU,GAAG,UAAU,CAAC;oBACtC,4EAA4E;oBAC5E,IAAI,aAAa,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAC;wBACxC,aAAa,CAAC,YAAY,CAAC,QAAQ,GAAG,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;qBACzE;iBACF;aACF;QACH,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,wCAAwC,EAAE,KAAK,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;IACT,CAAC;IAED,yFAAyF;IACzF,uDAAc,GAAd;IAEA,CAAC;IAED,6DAA6D;IACnD,wDAAe,GAAzB,UAA0B,MAAe;QAAzC,iBA6DC;QA5DC,cAAc;QACd,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,CAAC;gBACnB,YAAY,EAAE;oBACZ,QAAQ,EAAE,EAAE;oBACZ,QAAQ,EAAE,EAAE;oBACZ,QAAQ,EAAE,EAAE;oBACZ,QAAQ,EAAE,IAAI;oBACd,QAAQ,EAAE,IAAI;oBACd,KAAK,EAAE,SAAS;oBAChB,KAAK,EAAE,EAAE;oBACT,IAAI,EAAE,EAAE;oBACR,IAAI,EAAE,EAAE;iBACT,EAAE,UAAU,EAAE,EAAE;aAClB,CAAC,CAAC;QACH,kBAAkB;QAClB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aAC5D,SAAS,CAAC,iBAAO;YACd,KAAqB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,EAAE;gBAAzB,IAAM,MAAM;gBAEf,IAAI,UAAU,GAAY,KAAK,CAAC;gBAChC,6CAA6C;gBAC7C,IAAI,KAAI,CAAC,SAAS,EAAE;oBAClB,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,EAAE;wBAC3B,qCAAqC;wBACrC,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAC;4BAA/B,IAAM,MAAM;4BACf,IAAI,MAAM,CAAC,SAAS,EAAC;gCACnB,UAAU,GAAG,IAAI,CAAC;gCAClB,MAAM;6BACP;yBACF;qBACF;oBACD,IAAI,CAAC,UAAU,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAC;wBACtE,qDAAqD;wBACrD,UAAU,GAAG,IAAI,CAAC;qBACnB;iBACF;qBAAM,IAAI,CAAC,KAAI,CAAC,SAAS,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,EAAE;oBACrD,gCAAgC;oBAChC,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAC;wBAA/B,IAAM,MAAM;wBACf,IAAI,CAAC,MAAM,CAAC,SAAS,EAAC;4BACpB,UAAU,GAAG,IAAI,CAAC;4BAClB,MAAM;yBACP;qBACF;iBACF;gBACD,IAAI,UAAU,EAAE;oBACd,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAC,CAAC,CAAC;iBACrE;aACF;YAED,uCAAuC;YACvC,IAAI,MAAM,IAAI,KAAI,CAAC,aAAa,CAAC,cAAc,KAAK,SAAS,IAAI,KAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,SAAS;mBACvH,KAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,EAAE,EAAE;gBACzD,KAAI,CAAC,aAAa,EAAE,CAAC;aACtB;QAEH,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACT,CAAC;IAED,yDAAgB,GAAhB,UAAiB,IAA+B,EAAE,SAAS;QACzD,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,IAAI,KAAW,CAAC;QAChB,IAAI,GAAS,CAAC;QACd,IAAI,WAAmB,CAAC;QACxB,KAAoB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;YAArB,IAAM,KAAK;YACd,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAC;gBAC1C,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBACjC,GAAG,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;gBACvD,IAAI,KAAK,CAAC,UAAU,KAAK,IAAI,EAAC;oBAC5B,WAAW,GAAG,KAAK,CAAC,UAAU,CAAC;iBAChC;qBAAM;oBACL,IAAI,OAAO,GAAG,KAAK,CAAC,WAAW,CAAC;oBAChC,qDAAqD;oBACrD,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;oBACrC,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;iBAC/B;gBACD,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC,CAAC,GAAG,WAAW,CAAC;aACvF;SACF;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,yDAAgB,GAAhB,UAAiB,IAA+B;QAC9C,IAAI,GAAW,CAAC;QAChB,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,KAAK,IAAI,EAAC;YAC9B,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU;SACzB;aAAM;YACL,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;YAClC,qDAAqD;YACrD,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACrC,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;SACvB;QACD,KAAoB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;YAArB,IAAM,KAAK;YACd,IAAI,KAAK,CAAC,UAAU,KAAK,IAAI,IAAI,KAAK,CAAC,UAAU,GAAG,GAAG,EAAE;gBACvD,GAAG,GAAG,KAAK,CAAC,UAAU,CAAC;aACxB;;gBACC,IAAI,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;YACnC,qDAAqD;YACrD,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACvC,IAAI,KAAK,CAAC,WAAW,KAAK,IAAI,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,EAAE;gBAC1D,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;aACxB;SACF;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,yDAAgB,GAAhB,UAAiB,IAA+B;QAC9C,IAAI,GAAW,CAAC;QAChB,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,KAAK,IAAI,EAAC;YAC9B,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU;SACzB;aAAM;YACL,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;YAClC,qDAAqD;YACrD,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACrC,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;SACvB;QACD,KAAoB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;YAArB,IAAM,KAAK;YACd,IAAI,KAAK,CAAC,UAAU,KAAK,IAAI,IAAI,KAAK,CAAC,UAAU,GAAG,GAAG,EAAE;gBACvD,GAAG,GAAG,KAAK,CAAC,UAAU,CAAC;aACxB;;gBACC,IAAI,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;YACrC,qDAAqD;YACrD,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACvC,IAAI,KAAK,CAAC,WAAW,KAAK,IAAI,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,EAAE;gBACxD,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;aACxB;SACF;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,mEAA0B,GAA1B,UAA2B,IAA+B,EAAE,MAAM,EAAE,SAAS;IAC7E,CAAC;IAED,+HAA+H;IAC/H,qDAAY,GAAZ,UAAa,KAAa;QACxB,IAAI,CAAC,SAAS,GAAG,CAAC,KAAK,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QACnD,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAC;YAC/B,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;SAC5C;IACH,CAAC;IAED,qDAAY,GAAZ,UAAa,KAAa;QACxB,IAAI,KAAK,KAAK,MAAM,EAAE;YACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACvB;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB;QACD,mBAAmB;QACnB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAnzBmB;QAAnB,+DAAS,CAAC,OAAO,CAAC;;+DAAa;IACvB;QAAR,2DAAK,EAAE;kCAAgB,8EAAc;yEAAC;IAC7B;QAAT,4DAAM,EAAE;;sEAA8C;IAH5C,8BAA8B;QAL1C,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;;;SAGpC,CAAC;yCA2DiC,kEAAW;YACP,0EAAe;YACjB,oFAAoB;YACpB,oFAAoB;OA7D5C,8BAA8B,CAqzB1C;IAAD,qCAAC;CAAA;AArzB0C;;;;;;;;;;;;ACjC3C,iCAAiC,yBAAyB,kBAAkB,mBAAmB,kBAAkB,0BAA0B,8BAA8B,0BAA0B,wCAAwC,2BAA2B,4BAA4B,0BAA0B,8BAA8B,wBAAwB,uBAAuB,gCAAgC,gCAAgC,KAAK,6BAA6B,gCAAgC,wBAAwB,KAAK,+BAA+B,iBAAiB,KAAK,mBAAmB,kBAAkB,KAAK,sBAAsB,iBAAiB,KAAK,yBAAyB,8BAA8B,+BAA+B,KAAK,uBAAuB,8BAA8B,KAAK,wBAAwB,kBAAkB,KAAK,0BAA0B,6BAA6B,KAAK,0BAA0B,2BAA2B,yBAAyB,kBAAkB,eAAe,KAAK,sBAAsB,wBAAwB,OAAO,sBAAsB,kBAAkB,6BAA6B,KAAK,uBAAuB,yBAAyB,iBAAiB,eAAe,KAAK,wBAAwB,2BAA2B,yBAAyB,gBAAgB,KAAK,YAAY,qBAAqB,kBAAkB,gBAAgB,iCAAiC,oBAAoB,iBAAiB,KAAK,S;;;;;;;;;;;ACA1+C,mjBAAmjB,oBAAoB,kIAAkI,wBAAwB,+wCAA+wC,iBAAiB,yUAAyU,oBAAoB,6EAA6E,wBAAwB,0YAA0Y,gBAAgB,ucAAuc,iBAAiB,yUAAyU,oBAAoB,6EAA6E,wBAAwB,8YAA8Y,gBAAgB,6fAA6f,iBAAiB,yUAAyU,oBAAoB,6EAA6E,wBAAwB,8YAA8Y,gBAAgB,oQAAoQ,yHAAyH,qOAAqO,wMAAwM,+OAA+O,SAAS,uDAAuD,0J;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApgN;AAEjB;AACxC;AAC0D;AACA;AAEV;AAEzC;AAIqC;AAI+B;AACS;AAE/E;AACK;AAEzC;;;;;GAKG;AAMH;IA8CE,2CAAoB,WAAwB,EACxB,eAAgC,EAChC,aAAmC,EACnC,aAAmC,EAAU,MAAc;QAH3D,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,kBAAa,GAAb,aAAa,CAAsB;QACnC,kBAAa,GAAb,aAAa,CAAsB;QAAU,WAAM,GAAN,MAAM,CAAQ;QA7CrE,eAAU,GAAG,IAAI,0DAAY,EAAe,CAAC;QAMvD,2CAA2C;QACjC,oBAAe,GAAgB,oFAAW,CAAC,GAAG,CAAC;QAI/C,gBAAW,GAAiB,EAAE,CAAC;QAC/B,eAAU,GAAiB,EAAE,CAAC;QAE9B,oBAAe,GAAsB,CAAC,EAAC,KAAK,EAAE,oFAAW,CAAC,GAAG,EAAE,KAAK,EAAE,oFAAW,CAAC,GAAG,EAAC;YAC9F,EAAC,KAAK,EAAE,oFAAW,CAAC,GAAG,EAAE,KAAK,EAAE,oFAAW,CAAC,GAAG,EAAC,EAAE,EAAC,KAAK,EAAE,oFAAW,CAAC,GAAG,EAAE,KAAK,EAAE,oFAAW,CAAC,GAAG,EAAC,CAAC,CAAC;QAG5F,mBAAc,GAAgB,EAAE,CAAC;QAU3C,oBAAe,GAAY,KAAK,CAAC;QAWvB,oBAAe,GAAsB,EAAE,CAAC;QAC3C,iBAAY,GAAmC,EAAE,CAAC;IAMzD,CAAC;IAED,oDAAQ,GAAR;QAAA,iBA0HC;QAzHC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QAEzB,IAAI,CAAC,gBAAgB,GAAG;YACtB,EAAC,KAAK,EAAE,QAAQ,EAAC;YACjB,EAAC,KAAK,EAAE,QAAQ,EAAC;YACjB,EAAC,KAAK,EAAE,eAAe,EAAC;SACzB,CAAC;QACH,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;QAC9C,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,EAAC,KAAK,EAAC,QAAQ,EAAE,IAAI,EAAE,EAAE,EAAE,WAAW,EAAE,oFAAW,CAAC,GAAG,EAAC,CAAC;QAC1E,IAAI,CAAC,SAAS,GAAG,EAAC,KAAK,EAAC,QAAQ,EAAC,IAAI,EAAE,EAAE,EAAE,WAAW,EAAE,oFAAW,CAAC,GAAG,EAAC,CAAC;QACzE,IAAI,CAAC,SAAS,GAAG,EAAC,KAAK,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,EAAE,WAAW,EAAE,oFAAW,CAAC,GAAG,EAAC,CAAC;QAChF,IAAI,CAAC,WAAW,CAAC,WAAW;aACzB,SAAS,CAAC,eAAK;YACd,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,WAAW,CAAC,QAAQ;aACtB,SAAS,CAAC,eAAK;YACd,KAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QACpB,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,WAAW,GAAG,KAAK,EAAxB,CAAwB,CAAC,CAAC;QACjF,IAAI,IAAI,CAAC,aAAa,CAAC,SAAS,KAAK,SAAS,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,KAAK,SAAS,EAAE;YAC1F,IAAI,CAAC,aAAa,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YAC5D,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;SACzD;aAAM;YACL,IAAI,CAAC,aAAa,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YACzD,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;SACzD;QAED,qBAAqB;QACrB,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,gBAAM;YAChF,IAAI,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,cAAI;gBACrC,OAAO,EAAC,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,EAAC,CAAC;YAC9C,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,cAAc,GAAG,CAAC,EAAC,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,WAAW,EAAC,CAAC,CAAC;YAC7F,KAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,KAAI,CAAC,IAAI,CAAC,EAAE,EAAE,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,iBAAO;gBACnF,IAAI,aAAa,GAAG,OAAO,CAAC,GAAG,CAAC,cAAI;oBAClC,OAAO,EAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC;gBACpC,CAAC,CAAC,CAAC;gBACH,IAAI,eAAe,GAAG,KAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAC,KAAK,EAAE,oBAAoB,EAAE,KAAK,EAAE,cAAc,EAAE,KAAK,EAAE,aAAa,EAAC,CAAC;gBAC5H,KAAI,CAAC,cAAc,GAAG,eAAe,CAAC;YACxC,CAAC,EACD,aAAG;gBACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;oBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;iBAAE;gBAC3C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC;QACP,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;QAIL,mBAAmB;QACnB,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aAC9D,SAAS,CAAC,mBAAS;YAChB,4CAA4C;YAC5C,KAAkB,UAAS,EAAT,uBAAS,EAAT,uBAAS,EAAT,IAAS,EAAE;gBAAxB,IAAM,GAAG;gBACZ,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,IAAI,EAAC,CAAC,CAAC;aAC7D;YACD,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,KAAI,CAAC,aAAa,CAAC,CAAC;QACrD,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;QACP,yCAAyC;QACzC,IAAI,CAAC,YAAY,GAAG;YAClB,mBAAmB,EAAE,KAAK;YAC1B,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE;gBACN,OAAO,EAAE,IAAI;gBACb,QAAQ,EAAE,KAAK;aAChB;YACD,MAAM,EAAE;gBACN,KAAK,EAAE,CAAC;wBACN,KAAK,EAAE;4BACL,WAAW,EAAE,IAAI;4BACjB,GAAG,EAAE,SAAS;yBACf;wBACD,OAAO,EAAE,IAAI;wBACb,UAAU,EAAE;4BACV,OAAO,EAAE,IAAI;4BACb,WAAW,EAAE,GAAG;yBACjB;qBAKF,CAAC;gBACF,KAAK,EAAE,CAAC;wBACN,KAAK,EAAE;4BACL,WAAW,EAAE,IAAI;4BACjB,GAAG,EAAE,SAAS;yBACf;wBACD,UAAU,EAAE;4BACV,OAAO,EAAE,IAAI;4BACb,WAAW,EAAE,GAAG;yBACjB;qBACF,CAAC;aACH;YACD,QAAQ,EAAE,UAAU,KAAK,EAAE,IAAI;gBAC7B,kDAAkD;gBAClD,kFAAkF;gBAClF,gBAAgB;gBAChB,iBAAiB;YACnB,CAAC;SACF,CAAC;QACF,IAAI,CAAC,OAAO,GAAG,IAAI,8CAAK,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;YAC/C,IAAI,EAAE,IAAI,CAAC,SAAS;YACpB,IAAI,EAAE;gBACJ,MAAM,EAAE,EAAE;gBACV,QAAQ,EAAE,EAAE;aACb;YACD,OAAO,EAAE,IAAI,CAAC,YAAY;SAC3B,CAAC,CAAC;IACL,CAAC;IAED,mEAAmE;IAC3D,+DAAmB,GAA3B,UAA4B,IAAU;QACpC,IAAM,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAChC,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAClC,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC3B,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAClC,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAElC,IAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,SAAS,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC/B,IAAI,WAAW,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,WAAW,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,aAAa,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;QACvC,IAAI,aAAa,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;QAEvC,IAAI,GAAG,GAAG,EAAE,EAAE;YACZ,SAAS,GAAG,GAAG,GAAG,SAAS,CAAC;SAC7B;QACD,IAAI,KAAK,GAAG,EAAE,EAAE;YACd,WAAW,GAAG,GAAG,GAAG,WAAW,CAAC;SACjC;QACD,IAAI,KAAK,GAAG,EAAE,EAAE;YACd,WAAW,GAAG,GAAG,GAAG,WAAW,CAAC;SACjC;QACD,IAAI,OAAO,GAAG,EAAE,EAAE;YAChB,aAAa,GAAG,GAAG,GAAG,aAAa,CAAC;SACrC;QACD,IAAI,OAAO,GAAG,EAAE,EAAE;YAChB,aAAa,GAAG,GAAG,GAAG,aAAa,CAAC;SACrC;QAED,OAAO,UAAU,GAAG,GAAG,GAAG,WAAW,GAAG,GAAG,GAAG,SAAS,GAAG,GAAG,GAAG,WAAW,GAAG,GAAG,GAAG,aAAa,GAAG,GAAG,GAAG,aAAa,CAAC;IAC1H,CAAC;IAED,qDAAS,GAAT,UAAU,KAAK;QAAf,iBAkDC;QAjDC,oBAAoB;QACpB,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACzB,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACvB,IAAI,SAAS,GAAG,EAAC,UAAU,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAC,MAAM,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC,EAAC,CAAC;QACrG,iBAAiB;QACjB,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,WAAW,GAAsB,EAAE,CAAC;QACxC,KAAmB,UAAkB,EAAlB,SAAI,CAAC,aAAa,EAAlB,cAAkB,EAAlB,IAAkB,EAAE;YAAlC,IAAM,IAAI;YACb,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;SACtG;QACD,IAAM,WAAW,GAAG,4DAAQ,CAAC,WAAW,CAAC,CAAC;QAC1C,WAAW,CAAC,SAAS,CAAC,iBAAO;YAC3B,gHAAgH;YAChH,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,OAAO,CAAC,CAAC;YACrD,KAAmB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,EAAE;gBAAvB,IAAM,IAAI;gBACb,kEAAkE;gBAClE,gBAAgB;gBAChB,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC1B,IAAI,UAAU,GAAG,CAAC,CAAC;oBACnB,IAAI,SAAS,GAAS,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;oBACxD,IAAI,OAAO,GAAS,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;oBAC3E,mFAAmF;oBACnF,IAAI,SAAS,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC,GAAG,OAAO,CAAC;oBACpE,IAAI,KAAK,GAAG,CAAC,CAAC;oBACd,QAAQ,KAAI,CAAC,eAAe,EAAE;wBAC5B,KAAK,oFAAW,CAAC,GAAG;4BAClB,KAAK,GAAG,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;4BACtD,MAAM;wBACR,KAAK,oFAAW,CAAC,GAAG;4BAClB,KAAK,GAAG,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;4BAC3C,MAAM;wBACR,KAAK,oFAAW,CAAC,GAAG,CAAC;wBACrB;4BACE,KAAK,GAAG,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;4BAC3C,MAAM;qBACT;oBAED,oCAAoC;oBACtC,gFAAgF;oBAC9E,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACxC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;iBACxC;aACF;YACD,KAAK,CAAC,MAAM,EAAE,CAAC;YACf,KAAI,CAAC,cAAc,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC;QAC3C,CAAC,EAAC,aAAG;YACH,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,kEAAsB,GAAtB;QACE,IAAI,CAAC,cAAc,GAAE,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC/C,CAAC;IAED,SAAS;IACF,wDAAY,GAAnB,UAAoB,CAAM;QACxB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC;IAEM,wDAAY,GAAnB,UAAoB,CAAM;QACxB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC;IAGD,yDAAa,GAAb;QACE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,gDAAgD;QAChD,IAAI,CAAC,aAAa,CAAC,cAAc,GAAG,EAAE,CAAC;QACvC,iDAAiD;QACjD,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC9C,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;QAC9C,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC;QAClD,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QACtC,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QACtC,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QACtC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC;QACzE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;QAC/D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;QAC/D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QAC3D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAC/C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAC/C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAC/C,6BAA6B;QAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC/B,CAAC;IAED,wDAAY,GAAZ;QACE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,iDAAiD;QACjD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;QAC9C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;QACpD,2DAA2D;IAC3D,CAAC;IAED;;;;OAIG;IACO,0DAAc,GAAxB,UAAyB,KAAK,EAAE,KAAa;QAC3C,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,IAAI,sEAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;aAC7H,SAAS,CAAC,gBAAM;QACjB,CAAC,EAAE,eAAK;YACN,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+EAA+E;IACrE,2DAAe,GAAzB,UAA0B,MAAe;QACvC,cAAc;QACd,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,kBAAkB;QAClB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aAC5D,SAAS,CAAC,iBAAO;YACd,KAAqB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,EAAE;gBAAzB,IAAM,MAAM;gBAEf,IAAI,UAAU,GAAY,KAAK,CAAC;gBAChC,6CAA6C;gBAE7C,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,EAAE;oBAC3B,qCAAqC;oBACrC,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAE;wBAAhC,IAAM,MAAM;wBACf,IAAI,MAAM,CAAC,SAAS,EAAE;4BACpB,UAAU,GAAG,IAAI,CAAC;4BAClB,MAAM;yBACP;qBACF;iBACF;gBACD,IAAI,CAAC,UAAU,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;oBACvE,qDAAqD;oBACrD,UAAU,GAAG,IAAI,CAAC;iBACnB;aACF;YACD,uCAAuC;YACvC;;;eAGG;QAEL,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACT,CAAC;IAED,4DAAgB,GAAhB,UAAiB,IAA+B,EAAE,SAAS;QACzD,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,IAAI,KAAW,CAAC;QAChB,IAAI,GAAS,CAAC;QACd,IAAI,WAAmB,CAAC;QACxB,KAAoB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;YAArB,IAAM,KAAK;YACd,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;gBAC3C,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBACjC,GAAG,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;gBACvD,WAAW,GAAG,CAAC,KAAK,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;gBACzF,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC,CAAC,GAAG,WAAW,CAAC;aACvF;SACF;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,4DAAgB,GAAhB,UAAiB,IAA+B;QAC9C,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;QAC3F,KAAoB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;YAArB,IAAM,KAAK;YACd,IAAI,KAAK,CAAC,UAAU,KAAK,IAAI,IAAI,KAAK,CAAC,UAAU,GAAG,GAAG,EAAE;gBACvD,GAAG,GAAG,KAAK,CAAC,UAAU,CAAC;aACxB;iBAAM,IAAI,KAAK,CAAC,WAAW,KAAK,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,GAAG,EAAE;gBACxE,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;aACjC;SACF;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,4DAAgB,GAAhB,UAAiB,IAA+B;QAC9C,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;QAC3F,KAAoB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;YAArB,IAAM,KAAK;YACd,IAAI,KAAK,CAAC,UAAU,KAAK,IAAI,IAAI,KAAK,CAAC,UAAU,GAAG,GAAG,EAAE;gBACvD,GAAG,GAAG,KAAK,CAAC,UAAU,CAAC;aACxB;iBAAM,IAAI,KAAK,CAAC,WAAW,KAAK,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,GAAG,EAAE;gBACxE,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;aACjC;SACF;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,+DAA+D;IACrD,yDAAa,GAAvB,UAAwB,QAAgB;QACtC,kBAAkB;QAClB,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aAC7E,SAAS,CAAC,iBAAO;YACd,IAAI,iBAAiB,GAA8B,EAAE,CAAC;YACtD,oDAAoD;YACpD,KAAqB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,EAAE;gBAAzB,IAAM,MAAM;gBACf,+FAA+F;gBAChG;;;;;oBAKI;aACJ;YACF,2CAA2C;YAC1C,8DAA8D;QAChE,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACT,CAAC;IAED,mGAAmG;IACzF,2DAAe,GAAzB,UAA0B,UAAkB;QAA5C,iBAuCC;QAtCC,cAAc;QACd,2BAA2B;QAC3B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,kBAAkB;QAClB,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aACjF,SAAS,CAAC,iBAAO;YACd,IAAI,QAAQ,GAAY,KAAK,CAAC;YAC9B,yBAAyB;YACzB,KAAqB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,EAAE;gBAAzB,IAAM,MAAM;gBACf,0BAA0B;gBAC1B,KAAkB,UAAkB,EAAlB,UAAI,CAAC,aAAa,EAAlB,cAAkB,EAAlB,IAAkB,EAAC;oBAAhC,IAAM,GAAG;oBACZ,sEAAsE;oBACtE,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,MAAM,CAAC,QAAQ,EAAE;wBACpC,QAAQ,GAAG,IAAI,CAAC;wBAChB,MAAM;qBACP;iBACF;gBACD,8DAA8D;gBAC9D,IAAI,QAAQ,KAAK,KAAK,EAAC;oBACrB,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAC,CAAC,CAAC;iBAC3E;gBACD,8HAA8H;gBAC9H,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAC;oBAA/B,IAAM,MAAM;oBAChB,sDAAsD;oBACpD,8EAA8E;oBAC/E,GAAG;iBACJ;gBACD,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAC;oBAA/B,IAAM,MAAM;oBACf,qDAAqD;oBACpD,8EAA8E;oBAC/E,GAAG;iBACJ;gBACD,wEAAwE;aACzE;QACH,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACT,CAAC;IACD,0DAAc,GAAd,UAAe,OAAO;QACpB,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QAClC,IAAI,CAAC,OAAO;YAAE,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAC5C,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;QAE9B;;;wCAGgC;QAChC,IAAI,QAAQ,CAAC;QACb,QAAQ,OAAO,EAAE;YACf,KAAK,MAAM;gBACT,QAAQ,GAAG;oBACT,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;oBACrB,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;oBACtB,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;oBACrB,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;oBACnB,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;iBAClB,CAAC;gBACF,MAAM;YACR,KAAK,MAAM;gBACT,QAAQ,GAAG;oBACT,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;oBACrB,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;oBACtB,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;oBACpB,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;oBACnB,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;iBAClB,CAAC;gBACF,MAAM;YACR,KAAK,MAAM,CAAC;YACZ;gBACE,QAAQ,GAAG;oBACT,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;oBACrB,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;oBACtB,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC;oBACrB,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC;oBACrB,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;iBAClB,CAAC;gBACF,MAAM;SACT;QAED,yCAAyC;QACzC,IAAI,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzC,YAAY,CAAC,IAAI,CAAC,UAAS,CAAC,EAAE,CAAC;YAC7B,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;QAEH,0BAA0B;QAC1B,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;QAC7C,QAAQ,SAAS,EAAE;YACjB,KAAK,KAAK,CAAC;YACX,KAAK,UAAU;gBACb,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACpD,IAAI,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;gBACrC,MAAM;YACR,KAAK,KAAK,CAAC;YACX,KAAK,MAAM;gBACT,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACjD,IAAI,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC;gBAChC,MAAM;SACT;QAED,kBAAkB;QAClB,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;YAClC,IAAI,aAAa,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,6CAA6C;YACpG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC5C,IAAI,WAAW,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;gBAClC,IAAI,aAAa,KAAK,CAAC,WAAW,EAAE,EAAE,uDAAuD;oBAC3F,WAAW,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC;oBAClE,MAAM;iBACP;qBAAM,IAAI,aAAa,GAAG,CAAC,WAAW,EAAE,EAAE,2DAA2D;oBACpG,IAAI,OAAO,GAAG,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBAClC,IAAI,iBAAiB,GAAG,CAAC,aAAa,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,iBAAiB;oBACtH,IAAI,KAAK,GAAG,EAAE,CAAC;oBACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,qFAAqF;wBACjH,KAAK,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,CAAC;wBAC1G,IAAI,CAAC,GAAG,CAAC;4BAAE,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC5C;oBACD,WAAW,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC;oBAClD,MAAM;iBACP;aACF;SACF;QAED,0BAA0B;QAC1B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;YAC9B,QAAQ,SAAS,EAAE;gBACjB,KAAK,KAAK,CAAC;gBACX,KAAK,UAAU;oBACb,IAAI,CAAC,QAAQ,CAAC,eAAe;wBAAE,QAAQ,CAAC,eAAe,GAAG,EAAE,CAAC;oBAC7D,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;oBAC7C,IAAI,CAAC,QAAQ,CAAC,WAAW;wBAAE,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC;oBACrD,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,qBAAqB,CAAC;oBAChD,MAAM;gBACR,KAAK,KAAK;oBACR,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;oBAC7C,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,qBAAqB,CAAC;oBAChD,MAAM;gBACR,KAAK,MAAM;oBACT,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;oBACzC,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,qBAAqB,CAAC;oBACpD,MAAM;aACT;SACF;QAED,yCAAyC;QACzC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;IACxB,CAAC;IA3jBmB;QAAnB,+DAAS,CAAC,OAAO,CAAC;;kEAAa;IACR;QAAvB,+DAAS,CAAC,WAAW,CAAC;;mEAAkB;IAChC;QAAR,2DAAK,EAAE;kCAAgB,oFAAiB;4EAAC;IAChC;QAAT,4DAAM,EAAE;;yEAA8C;IAJ5C,iCAAiC;QAL7C,+DAAS,CAAC;YACT,QAAQ,EAAE,4BAA4B;;;SAGvC,CAAC;yCA+CiC,kEAAW;YACP,0EAAe;YACjB,oFAAoB;YACpB,oFAAoB,EAAkB,uDAAM;OAjDpE,iCAAiC,CA8jB7C;IAAD,wCAAC;CAAA;AA9jB6C;;;;;;;;;;;;AClC9C,iCAAiC,yBAAyB,kBAAkB,mBAAmB,kBAAkB,0BAA0B,8BAA8B,0BAA0B,wCAAwC,2BAA2B,4BAA4B,0BAA0B,8BAA8B,wBAAwB,uBAAuB,gCAAgC,gCAAgC,KAAK,6BAA6B,gCAAgC,wBAAwB,KAAK,+BAA+B,iBAAiB,KAAK,mBAAmB,kBAAkB,KAAK,sBAAsB,iBAAiB,KAAK,yBAAyB,8BAA8B,+BAA+B,KAAK,uBAAuB,8BAA8B,KAAK,wBAAwB,kBAAkB,KAAK,0BAA0B,6BAA6B,KAAK,0BAA0B,2BAA2B,yBAAyB,kBAAkB,eAAe,KAAK,sBAAsB,wBAAwB,OAAO,sBAAsB,mBAAmB,8BAA8B,MAAM,uBAAuB,0BAA0B,kBAAkB,gBAAgB,MAAM,wBAAwB,4BAA4B,0BAA0B,iBAAiB,MAAM,YAAY,qBAAqB,kBAAkB,gBAAgB,iCAAiC,oBAAoB,iBAAiB,KAAK,gBAAgB,wBAAwB,KAAK,oBAAoB,oBAAoB,KAAK,S;;;;;;;;;;;ACA/kD,ojBAAojB,2MAA2M,8TAA8T,gNAAgN,wUAAwU,4OAA4O,6VAA6V,iBAAiB,iPAAiP,iBAAiB,0DAA0D,6OAA6O,iBAAiB,g1BAAg1B,0pBAA0pB,gBAAgB,ooBAAooB,qVAAqV,gBAAgB,4PAA4P,gBAAgB,wJAAwJ,qVAAqV,gBAAgB,4PAA4P,gBAAgB,mTAAmT,gBAAgB,aAAa,uTAAuT,gBAAgB,wEAAwE,wBAAwB,4OAA4O,gBAAgB,wEAAwE,wBAAwB,6GAA6G,mFAAmF,wBAAwB,oCAAoC,0RAA0R,iBAAiB,sQAAsQ,iBAAiB,kkBAAkkB,gBAAgB,i9BAAi9B,qOAAqO,wMAAwM,gBAAgB,+OAA+O,SAAS,4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhvU;AACjB;AACkB;AACA;AACV;AAE3C;AAEN;AAIuD;AACV;AAK7E;;;;;GAKG;AAMH;IAsCE,yCAAoB,WAAwB,EACxB,eAAgC,EAChC,aAAmC,EACnC,aAAmC;QAHnC,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,kBAAa,GAAb,aAAa,CAAsB;QACnC,kBAAa,GAAb,aAAa,CAAsB;QAtCpC,eAAU,GAAG,IAAI,0DAAY,EAAe,CAAC;QAatD,gBAAW,GAAsB,EAAE,CAAC;QACpC,eAAU,GAAsB,EAAE,CAAC;QACnC,iBAAY,GAAsB,CAAC,EAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC,EAAC,EAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAC,CAAC,CAAC;QAIlH,gBAAW,GAAgB,EAAC,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAC,CAAC;QAE9F,oBAAe,GAAG,KAAK,CAAC;QAGxB,aAAQ,GAAW,KAAK,CAAC;QACzB,eAAU,GAAG,qBAAqB,CAAC;QAMzB,oBAAe,GAAsB,EAAE,CAAC;QAC3C,iBAAY,GAAG,CAAC,EAAC,YAAY,EAAE,EAAC,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAC,EAAE,UAAU,EAAE,EAAE,EAAC,CAAC,CAAC;QAClL,UAAK,GAAG,EAAC,YAAY,EAAE,EAAC,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAC,EAAE,UAAU,EAAE,EAAE,EAAC,CAAC;QACrK,UAAK,GAAG,EAAC,YAAY,EAAE,EAAC,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAC,EAAE,UAAU,EAAE,EAAE,EAAC,CAAC;IAK5K,CAAC;IAED,kDAAQ,GAAR;QAAA,iBA+IC;QA9IC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,WAAW;aACzB,SAAS,CAAC,eAAK;YACd,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,WAAW,CAAC,QAAQ;aACtB,SAAS,CAAC,eAAK;YACd,KAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QACpB,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,WAAW,GAAG,KAAK,EAAxB,CAAwB,CAAC,CAAC;QACjF,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,eAAe,GAAG;YACrB,EAAC,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,MAAM,EAAC;YACnC,EAAC,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAC;YACtC,EAAC,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAC;SAClC,CAAC;QAEF,IAAI,IAAI,CAAC,aAAa,CAAC,WAAW,KAAK,SAAS,EAAE;YAChD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;SACnD;QACD,yCAAyC;QACzC,IAAI,CAAC,YAAY,GAAG;YAClB,mBAAmB,EAAE,KAAK;YAC1B,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE;gBACN,OAAO,EAAE,IAAI;gBACb,QAAQ,EAAE,KAAK;aAChB;YACD,MAAM,EAAE;gBACN,KAAK,EAAE,CAAC;wBACN,OAAO,EAAE,IAAI;wBACb,UAAU,EAAE;4BACV,OAAO,EAAE,IAAI;4BACb,WAAW,EAAE,EAAE;yBAChB;qBACF,CAAC;gBACF,KAAK,EAAE,CAAC;wBACN,KAAK,EAAE;4BACL,WAAW,EAAE,IAAI;yBAElB;wBACD,UAAU,EAAE;4BACV,OAAO,EAAE,IAAI;4BACb,WAAW,EAAE,EAAE;yBAChB;qBACF,CAAC;aACH;YACD,QAAQ,EAAE,UAAU,KAAK,EAAE,IAAI;gBAC7B,kDAAkD;gBAClD,kFAAkF;gBAClF,gBAAgB;gBAChB,iBAAiB;YACnB,CAAC;SACF,CAAC;QACF,IAAI,CAAC,OAAO,GAAG,IAAI,8CAAK,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;YAC/C,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE;gBACJ,MAAM,EAAE,EAAE;gBACV,QAAQ,EAAE,EAAE;aACb;YACD,OAAO,EAAE,IAAI,CAAC,YAAY;SAC3B,CAAC,CAAC;QAEH,wEAAwE;QACxE,IAAI,CAAC,2BAA2B,EAAE,CAAC;QAEnC,oCAAoC;QACpC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;QAE3D,2CAA2C;QAC3C,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,aAAa,CAAC,cAAc,KAAK,SAAS,EAAE;YACtE,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC;SACjE;aAAM,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,SAAS,KAAK,SAAS,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,KAAK,SAAS,EAAE;YACvH,IAAI,CAAC,aAAa,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YAC5D,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YACzD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SACjC;aAAM,IAAI,CAAC,IAAI,CAAC,UAAU,EAAC;YAC1B,IAAI,CAAC,aAAa,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YAC1D,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;SAC5E;QAED,mDAAmD;QACnD,IAAI,CAAC,WAAW,CAAC,eAAe;aAC7B,SAAS,CAAC,gBAAM;YACf,IAAI,KAAI,CAAC,UAAU,EAAC;gBAClB,IAAI,SAAS,GAAG,KAAK,CAAC;gBACtB,IAAI,KAAI,CAAC,WAAW,EAAC;oBACnB,IAAI,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,QAAQ,KAAK,EAAE,IAAI,KAAI,CAAC,OAAO,KAAK,SAAS,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,SAAS,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,KAAK,SAAS;2BAC7J,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,SAAS,EAAE;wBAEhD,+CAA+C;wBAC/C,KAAuB,UAAiB,EAAjB,UAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB,EAAE;4BAArC,IAAM,QAAQ;4BACjB,IAAI,QAAQ,CAAC,YAAY,CAAC,QAAQ,KAAK,MAAM,CAAC,QAAQ;gCACpD,QAAQ,CAAC,YAAY,CAAC,QAAQ,KAAK,MAAM,CAAC,QAAQ,EAAE;gCACpD,SAAS,GAAG,IAAI,CAAC;gCACjB,yBAAyB;gCACzB,KAAI,CAAC,OAAO,CAAC,KAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,YAAY,CAAC,KAAK,GAAG,MAAM,GAAG,QAAQ,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;gCAC1H,gDAAgD;gCAChD,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gCAChD,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,KAAI,CAAC,sBAAsB,EAAE;oCAC9E,gDAAgD;oCAChD,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;iCAC/B;6BACF;yBACF;wBACD,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBACpE;iBACF;qBAAM,IAAI,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,KAAK,EAAE,IAAI,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,KAAK,EAAE,EAAE;oBAC7F,oBAAoB;oBACpB,sBAAsB;oBACtB,IAAI,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,KAAK,MAAM,CAAC,QAAQ;wBACtD,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,KAAK,MAAM,CAAC,QAAQ,EAAE;wBACtD,SAAS,GAAG,IAAI,CAAC;wBACjB,eAAe;wBACf,IAAI,KAAK,GAAG,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;wBAChG,yBAAyB;wBACzB,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,EAAC,CAAC,CAAC;wBACrE,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;qBAC7C;yBAAM,IAAI,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,KAAK,MAAM,CAAC,QAAQ;wBAC7D,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,KAAK,MAAM,CAAC,QAAQ,EAAC;wBACrD,sBAAsB;wBACtB,SAAS,GAAG,IAAI,CAAC;wBACjB,eAAe;wBACf,IAAI,KAAK,GAAG,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;wBAChG,yBAAyB;wBACzB,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,CAAC,KAAK,EAAC,CAAC,CAAC;wBACrE,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;qBACtC;oBAED,gDAAgD;oBAChD,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;oBAC5D,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,KAAI,CAAC,sBAAsB,EAAE;wBAC9E,gDAAgD;wBAChD,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;qBAC/B;oBACD,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACnE;aACF;QACH,CAAC,CAAC,CAAC;IAEP,CAAC;IAEO,6DAAmB,GAA3B,UAA4B,IAAU;QACpC,IAAM,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAChC,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAClC,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC3B,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAClC,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAElC,IAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,SAAS,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC/B,IAAI,WAAW,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,WAAW,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,aAAa,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;QACvC,IAAI,aAAa,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;QAEvC,IAAI,GAAG,GAAG,EAAE,EAAE;YACZ,SAAS,GAAG,GAAG,GAAG,SAAS,CAAC;SAC7B;QACD,IAAI,KAAK,GAAG,EAAE,EAAE;YACd,WAAW,GAAG,GAAG,GAAG,WAAW,CAAC;SACjC;QACD,IAAI,KAAK,GAAG,EAAE,EAAE;YACd,WAAW,GAAG,GAAG,GAAG,WAAW,CAAC;SACjC;QACD,IAAI,OAAO,GAAG,EAAE,EAAE;YAChB,aAAa,GAAG,GAAG,GAAG,aAAa,CAAC;SACrC;QACD,IAAI,OAAO,GAAG,EAAE,EAAE;YAChB,aAAa,GAAG,GAAG,GAAG,aAAa,CAAC;SACrC;QAED,OAAO,UAAU,GAAG,GAAG,GAAG,WAAW,GAAG,GAAG,GAAG,SAAS,GAAG,GAAG,GAAG,WAAW,GAAG,GAAG,GAAG,aAAa,GAAG,GAAG,GAAG,aAAa,CAAC;IAC1H,CAAC;IAGO,4DAAkB,GAA1B;QAAA,iBAgBC;QAdC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aAC5D,SAAS,CAAC,cAAI;YACb,KAAqB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;gBAAtB,IAAM,MAAM;gBACf,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAC,CAAC,CAAC;aACrE;YACD,IAAI,KAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,SAAS,IAAI,KAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,EAAE,EAAE;gBACvH,KAAI,CAAC,aAAa,EAAE,CAAC;aACtB;QAEH,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACK,+DAAqB,GAA7B;QAAA,iBAWC;QAVC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aAC5D,SAAS,CAAC,cAAI;YACb,KAAqB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;gBAAtB,IAAM,MAAM;gBACf,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAC,CAAC,CAAC;aACrE;QACH,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAES,uDAAa,GAAvB;QAAA,iBAyFC;QAxFC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,+CAA+C;QAC/C,IAAM,eAAe,GAAkB,EAAE,CAAC;QAC1C,IAAI,UAAU,GAAG,KAAK,CAAC;QACvB,KAAyB,UAAiC,EAAjC,SAAI,CAAC,aAAa,CAAC,cAAc,EAAjC,cAAiC,EAAjC,IAAiC,EAAE;YAAvD,IAAM,UAAU;YACnB,6BAA6B;YAC7B,KAA2B,UAAe,EAAf,mCAAe,EAAf,6BAAe,EAAf,IAAe,EAAE;gBAAvC,IAAM,YAAY;gBACrB,IAAI,YAAY,KAAK,UAAU,CAAC,QAAQ,EAAE;oBACxC,UAAU,GAAG,IAAI,CAAC;oBAClB,MAAM;iBACP;aACF;YACD,IAAI,CAAC,UAAU,EAAE;gBACf,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;aAC3C;SACF;QACD,2BAA2B;QAC3B,IAAM,qBAAqB,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,MAAM,CAAC;QACvE,+BAA+B;QAC/B,KAAyB,UAAe,EAAf,mCAAe,EAAf,6BAAe,EAAf,IAAe,EAAE;YAArC,IAAM,UAAU;oCAER,UAAU;gBACnB,IAAI,UAAU,CAAC,KAAK,KAAK,UAAU,EAAE;oBACnC,mCAAmC;oBACnC,yCAAyC;oBACzC,IAAM,YAAU,GAAG,EAAE,CAAC;oBACtB,OAAK,aAAa,CAAC,aAAa,CAAC,UAAU,CAAC,KAAK,EAAE,OAAK,IAAI,CAAC,EAAE,EAAE,OAAK,OAAO,CAAC,EAAE,CAAC;yBAC9E,SAAS,CAAC,UAAC,MAAc;wBACtB,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,EAAE;4BAC3B,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAE;gCAAhC,IAAM,MAAM;gCACf,YAAU,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC;6BACzD;yBACF;wBACD,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,EAAE;4BAC3B,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAE;gCAAhC,IAAM,MAAM;gCACf,YAAU,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC;6BACzD;yBACF;wBACD,mCAAmC;wBACnC,KAAyB,UAAU,EAAV,2BAAU,EAAV,wBAAU,EAAV,IAAU,EAAE;4BAAhC,IAAM,UAAU;4BACnB,KAAmB,UAAiC,EAAjC,UAAI,CAAC,aAAa,CAAC,cAAc,EAAjC,cAAiC,EAAjC,IAAiC,EAAE;gCAAjD,IAAM,IAAI;gCACb,IAAI,UAAU,CAAC,KAAK,KAAK,IAAI,CAAC,QAAQ,EAAE;oCACtC,mCAAmC;oCACnC,uDAAuD;oCACvD,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC;wCACrB,YAAY,EAAE,EAAC,QAAQ,EAAE,UAAU,CAAC,KAAK,EAAE,QAAQ,EAAE,UAAU,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ;4CACrH,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAC;wCAClG,UAAU,EAAE,YAAU;qCAAC,CAAC,CAAC;oCAC3B,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,SAAS,IAAI,CAAC,KAAI,CAAC,WAAW,EAAC;wCACrD,IAAI,IAAI,CAAC,IAAI,KAAK,GAAG,EAAC;4CACpB,KAAI,CAAC,KAAK,GAAG,EAAC,YAAY,EAAE,EAAC,QAAQ,EAAE,UAAU,CAAC,KAAK,EAAE,QAAQ,EAAE,UAAU,CAAC,KAAK;oDAC/E,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAC;gDACpJ,UAAU,EAAE,YAAU,EAAC,CAAC;yCAC3B;6CAAM,IAAI,IAAI,CAAC,IAAI,KAAI,GAAG,EAAC;4CAC1B,KAAI,CAAC,KAAK,GAAG,EAAC,YAAY,EAAE,EAAC,QAAQ,EAAE,UAAU,CAAC,KAAK,EAAE,QAAQ,EAAE,UAAU,CAAC,KAAK;oDAC/E,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAC;gDACpJ,UAAU,EAAE,YAAU,EAAC,CAAC;yCAC3B;qCACF;oCACD,MAAM;iCACP;6BACF;yBACF;wBACD,mCAAmC;wBACnC,KAAmB,UAAiB,EAAjB,UAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB,EAAE;4BAAjC,IAAM,IAAI;4BACb,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,EAAE;gCAC3B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;6BACtB;yBACF;wBACH,wGAAwG;wBACxG,IAAI,KAAI,CAAC,YAAY,CAAC,MAAM,KAAK,qBAAqB,EAAE;4BACtD,IAAI,KAAI,CAAC,UAAU,EAAC;gCAClB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gCAC1B,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;6BACrC;iCAAM;gCACL,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gCACzB,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;6BAC9B;yBAEF;oBAED,CAAC,EACD,eAAK;wBACH,OAAO,CAAC,GAAG,CAAC,wCAAwC,EAAE,KAAK,CAAC,CAAC;oBAC/D,CAAC,CAAC,CAAC;iBACR;YACH,CAAC;;YAlED,+BAA+B;YAC/B,KAAyB,UAAgB,EAAhB,SAAI,CAAC,WAAW,EAAhB,cAAgB,EAAhB,IAAgB;gBAApC,IAAM,UAAU;wBAAV,UAAU;aAiEpB;SACF;IACH,CAAC;IAGD;;;OAGG;IACH,0DAAgB,GAAhB,UAAiB,KAAK;QAAtB,iBA2FC;QA1FC,oBAAoB;QACpB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;QAC/E,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;QAC/E,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;QAClF,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;QAClF,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;QAClB,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACzB,IAAM,KAAK,GAAS,IAAI,IAAI,EAAE,CAAC;QAC/B,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAG,IAAI,CAAC,WAAW,EAAC;YAClB,kCAAkC;YAClC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;oCACtC,QAAQ;gBACjB,4BAA4B;gBAC5B,IAAM,OAAO,GAAG,EAAC,KAAK,EAAE,QAAQ,CAAC,YAAY,CAAC,KAAK,GAAG,MAAM,GAAG,QAAQ,CAAC,YAAY,CAAC,IAAI;oBACvF,IAAI,EAAE,EAAE,EAAE,WAAW,EAAE,QAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,eAAe,EAAE,QAAQ,CAAC,YAAY,CAAC,KAAK;oBAChG,UAAU,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,KAAK,OAAO,CAAC,EAAC,CAAC,EAAE,EAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAE,IAAI,EAAE,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAC,CAAC;gBACtJ,wCAAwC;gBACtC,OAAK,aAAa,CAAC,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAK,IAAI,CAAC,EAAE,EAAE,OAAK,OAAO,CAAC,EAAE,CAAC;qBACzH,SAAS,CAAC,UAAC,eAAgC;oBACxC,IAAM,KAAK,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oBACxC,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;oBAC9B,wCAAwC;oBACxC,IAAG,KAAK,CAAC,UAAU,IAAI,IAAI,EAAE;wBAC3B,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC,UAAU,EAAC,CAAC,CAAC;qBACpD;yBAAM,IAAG,KAAK,CAAC,WAAW,IAAI,IAAI,EAAE;wBACnC,IAAI,OAAO,GAAG,KAAK,CAAC,WAAW,CAAC;wBAChC,qDAAqD;wBACrD,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;wBACrC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAC,MAAM,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC;qBAClD;oBACD,oCAAoC;oBACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClC,sBAAsB;oBACtB;;uBAEG;oBACH,KAAK,CAAC,MAAM,EAAE,CAAC;oBACf,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACvD,CAAC,EACD,aAAG;oBACD,OAAO,CAAC,GAAG,CAAC,sCAAsC,EAAE,GAAG,CAAC,CAAC;gBAC3D,CAAC,CAAC,CAAC;YAEX,CAAC;;YAhCD,KAAuB,UAAiB,EAAjB,SAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB;gBAAnC,IAAM,QAAQ;wBAAR,QAAQ;aAgClB;SACF;aAAM;YACL,qBAAqB;YACrB,IAAM,SAAO,GAAG,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,GAAG,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI;gBAC3F,IAAI,EAAE,EAAE,EAAE,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,EAAE,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ;gBACxL,UAAU,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,KAAK,OAAO,CAAC,EAAC,CAAC,EAAE,EAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC;YACxE,IAAI,OAAK,GAAG,CAAC,EAAC,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,SAAS,EAAC,CAAC,CAAC;YAC/C,kBAAkB;YAClB,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;iBAC7H,SAAS,CAAC,UAAC,eAAgC;gBACxC,IAAI,MAAc,CAAC;gBACnB,IAAM,KAAK,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACxC,IAAI,KAAK,CAAC,UAAU,IAAI,IAAI,EAAE;oBAC5B,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC;iBAC3B;qBAAM,IAAI,KAAK,CAAC,WAAW,IAAI,IAAI,EAAE;oBACpC,IAAI,OAAO,GAAG,KAAK,CAAC,WAAW,CAAC;oBAChC,qDAAqD;oBACrD,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;oBACrC,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;iBAC1B;gBACD,OAAK,CAAC,KAAK,EAAE,CAAC;gBACd,qBAAqB;gBACrB,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,KAAI,CAAC,IAAI,CAAC,EAAE,EAAE,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC;qBAC7H,SAAS,CAAC,UAAC,gBAAiC;oBAC3C,IAAM,MAAM,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oBAC1C,IAAI,MAAM,CAAC,UAAU,IAAI,IAAI,EAAC;wBAC9B,SAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,CAAC,UAAU,EAAC,CAAC,CAAC;qBACpD;yBAAM,IAAI,MAAM,CAAC,WAAW,IAAI,IAAI,EAAE;wBACrC,qDAAqD;wBACrD,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;wBAC7D,SAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,EAAC,CAAC,CAAC;qBAC7D;oBACD,8DAA8D;oBAC9D,oCAAoC;oBACpC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,SAAO,CAAC,IAAI,CAAC,CAAC;oBACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAO,CAAC,CAAC;oBAClC,iBAAiB;oBACjB,KAAI,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,KAAI,CAAC,WAAW,CAAC,EAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;oBAC3D,KAAK,CAAC,MAAM,EAAE,CAAC;gBACjB,CAAC,CAAC,CAAC;YACP,CAAC,EACD,aAAG;gBACD,OAAO,CAAC,GAAG,CAAC,8CAA8C,EAAE,GAAG,CAAC,CAAC;YACnE,CAAC,CAAC,CAAC;SACR;IACH,CAAC;IACD,qGAAqG;IACrG,4DAAkB,GAAlB,UAAmB,KAAK;QAAxB,iBAoEC;QAnEC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;QAC/E,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;QAC/E,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;QAClF,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;QAClF,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,IAAI,CAAC,WAAW,EAAE;oCAET,QAAQ;gBACjB,4BAA4B;gBAC5B,IAAI,WAAW,GAAG,KAAK,CAAC;gBACxB,IAAM,OAAO,GAAG,EAAC,KAAK,EAAE,QAAQ,CAAC,YAAY,CAAC,KAAK,GAAG,MAAM,GAAG,QAAQ,CAAC,YAAY,CAAC,IAAI;oBACvF,IAAI,EAAE,EAAE,EAAE,WAAW,EAAE,QAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,eAAe,EAAE,QAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,YAAY,CAAC,QAAQ;oBAChL,UAAU,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,KAAK,OAAO,CAAC,EAAC,CAAC,EAAE,EAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC;gBAEtE,KAAoB,UAAmB,EAAnB,UAAK,CAAC,IAAI,CAAC,QAAQ,EAAnB,cAAmB,EAAnB,IAAmB,EAAE;oBAApC,IAAI,OAAO;oBACd,kCAAkC;oBAClC,IAAI,OAAO,CAAC,KAAK,KAAK,OAAO,CAAC,KAAK,EAAC;wBAClC,WAAW,GAAG,IAAI,CAAC;wBACnB,8CAA8C;wBAC9C,OAAO,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;4BAC9B,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;yBACtB;wBACD,4BAA4B;wBAC5B,OAAO,CAAC,WAAW,GAAG,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC;wBAClD,OAAO,CAAC,UAAU,GAAG,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,KAAK,OAAO,CAAC,EAAC,CAAC,EAAE,EAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;wBAC5E,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC;wBAClD,OAAO,CAAC,IAAI,GAAG,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC;wBAC9C,MAAM;qBACP;iBACF;gBACD,IAAI,CAAC,WAAW,EAAE;oBAChB,yCAAyC;oBACzC,OAAK,aAAa,CAAC,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAK,IAAI,CAAC,EAAE,EAAE,OAAK,OAAO,CAAC,EAAE,CAAC;yBACzH,SAAS,CAAC,UAAC,eAAgC;wBACxC,IAAM,KAAK,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;wBACxC,wCAAwC;wBACxC,IAAI,KAAK,CAAC,UAAU,IAAI,IAAI,EAAE;4BAC5B,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,CAAC,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,UAAU,EAAC,CAAC,CAAC;yBACvE;6BAAM,IAAI,KAAK,CAAC,WAAW,IAAI,IAAI,EAAE;4BACpC,IAAI,OAAO,GAAG,KAAK,CAAC,WAAW,CAAC;4BAChC,qDAAqD;4BACrD,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;4BACrC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,CAAC,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC;yBACtE;wBACD,qFAAqF;wBACrF,IAAI,MAAM,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;4BAClD,yCAAyC;4BACzC,MAAM,EAAE,CAAC;yBACV;wBACD,KAAI,CAAC,UAAU,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;wBAChC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;wBAC3D,iBAAiB;wBACjB,KAAI,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,KAAI,CAAC,WAAW,CAAC,EAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;oBAC7D,CAAC,EACD,aAAG;wBACD,OAAO,CAAC,GAAG,CAAC,sCAAsC,EAAE,GAAG,CAAC,CAAC;oBAC3D,CAAC,CAAC,CAAC;iBACR;gBACD,6BAA6B;gBAC7B,OAAK,cAAc,CAAC,KAAK,CAAC,CAAC;YAC7B,CAAC;;YAtDD,kCAAkC;YAClC,KAAuB,UAAiB,EAAjB,SAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB;gBAAnC,IAAM,QAAQ;wBAAR,QAAQ;aAqDlB;YAED,0CAA0C;SAC3C;aAAM;YACL,qBAAqB;YACrB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;SAC9B;IACH,CAAC;IAED,oCAAoC;IACpC,mDAAS,GAAT,UAAU,KAAK;QAAf,iBAkHC;QAjHC,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,wCAAwC;QACxC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;QAC/E,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;QAC/E,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;QAClF,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;QAClF,cAAc;QACd,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACzB,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAC;YACpB,uBAAuB;YACvB,IAAM,SAAO,GAAG,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,GAAG,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI;gBAC3F,IAAI,EAAE,EAAE,EAAE,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,EAAE,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ;gBACxL,UAAU,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,KAAK,OAAO,CAAC,EAAC,CAAC,EAAE,EAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC;YACxE,IAAI,OAAK,GAAG,CAAC,EAAC,UAAU,EAAE,EAAE,EAAE,OAAO,EAAE,SAAS,EAAC,CAAC,CAAC;YACnD,kBAAkB;YAClB,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,EAC/F,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,EACxF,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;iBAC5C,SAAS,CAAC,UAAC,eAAgC;gBAExC,KAAoB,UAAsB,EAAtB,oBAAe,CAAC,MAAM,EAAtB,cAAsB,EAAtB,IAAsB,EAAE;oBAAvC,IAAM,KAAK;oBACd,IAAI,KAAK,CAAC,UAAU,IAAI,IAAI,EAAE;wBAC5B,OAAK,CAAC,IAAI,CAAC,EAAC,UAAU,EAAE,KAAK,CAAC,QAAQ,EAAE,OAAO,EAAE,KAAK,CAAC,UAAU,EAAC,CAAC,CAAC;qBACrE;yBAAM,IAAI,KAAK,CAAC,WAAW,IAAI,IAAI,EAAE;wBACpC,IAAI,OAAO,GAAG,KAAK,CAAC,WAAW,CAAC;wBAChC,qDAAqD;wBACrD,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;wBACrC,OAAK,CAAC,IAAI,CAAC,EAAC,UAAU,EAAE,KAAK,CAAC,QAAQ,EAAE,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC;qBACpE;iBACF;gBACD,OAAK,CAAC,KAAK,EAAE,CAAC;gBACd,qBAAqB;gBACrB,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,EACvF,KAAI,CAAC,mBAAmB,CAAC,KAAI,CAAC,aAAa,CAAC,EAAE,KAAI,CAAC,mBAAmB,CAAC,KAAI,CAAC,WAAW,CAAC,EACxF,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,IAAI,CAAC,EAAE,EAAE,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC;qBAC5C,SAAS,CAAC,UAAC,eAAgC;oBAC1C,IAAI,cAAc,GAAG,CAAC,CAAC;oBACvB,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,OAAK,CAAC,MAAM,CAAC,CAAC;oBAC5C,KAAqB,UAAsB,EAAtB,oBAAe,CAAC,MAAM,EAAtB,cAAsB,EAAtB,IAAsB,EAAE;wBAAxC,IAAM,MAAM;wBACf,KAAqB,UAAK,EAAL,iBAAK,EAAL,mBAAK,EAAL,IAAK,EAAC;4BAAtB,IAAM,MAAM;4BACf,IAAI,MAAM,CAAC,QAAQ,KAAK,MAAM,CAAC,QAAQ,EAAC;gCACtC,sDAAsD;gCACtD,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;gCACrC,IAAI,MAAM,CAAC,UAAU,IAAI,IAAI,EAAE;oCAC7B,SAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,CAAC,UAAU,EAAC,CAAC,CAAC;iCAC5D;qCAAM,IAAI,MAAM,CAAC,WAAW,IAAI,IAAI,EAAE;oCACrC,IAAI,OAAO,GAAG,MAAM,CAAC,WAAW,CAAC;oCACjC,qDAAqD;oCACrD,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;oCACrC,SAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC;iCAC1D;gCACD,0CAA0C;gCAC1C,+DAA+D;gCAC/D,kCAAkC;gCAClC,uBAAuB;gCACvB,cAAc,GAAG,CAAC,CAAC;6BACpB;4BACD,cAAc,EAAE,CAAC;yBAClB;qBACF;oBACD,oCAAoC;oBACpC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,SAAO,CAAC,CAAC;oBAC/B,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAO,CAAC,CAAC;oBAClC,iBAAiB;oBACjB,KAAK,CAAC,IAAI,GAAG,CAAC,KAAI,CAAC,WAAW,CAAC,EAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;oBACpD,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACjD,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;oBACxC,KAAK,CAAC,MAAM,EAAE,CAAC;gBACjB,CAAC,CAAC,CAAC;YACf,CAAC,EACD,aAAG;gBACD,OAAO,CAAC,GAAG,CAAC,8CAA8C,EAAE,GAAG,CAAC,CAAC;YACnE,CAAC,CAAC,CAAC;SACR;aAAM;oCAEQ,QAAQ;gBACjB,6CAA6C;gBAC7C,IAAM,OAAO,GAAG,EAAC,KAAK,EAAE,QAAQ,CAAC,YAAY,CAAC,KAAK,GAAG,MAAM,GAAG,QAAQ,CAAC,YAAY,CAAC,IAAI;oBACvF,IAAI,EAAE,EAAE,EAAE,WAAW,EAAE,QAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,eAAe,EAAE,QAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,YAAY,CAAC,QAAQ;oBAChL,UAAU,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,KAAK,OAAO,CAAC,EAAC,CAAC,EAAE,EAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC;gBACtE,OAAK,aAAa,CAAC,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAC3F,OAAK,mBAAmB,CAAC,OAAK,aAAa,CAAC,EAAE,OAAK,mBAAmB,CAAC,OAAK,WAAW,CAAC,EACxF,OAAK,QAAQ,EAAE,OAAK,IAAI,CAAC,EAAE,EAAE,OAAK,OAAO,CAAC,EAAE,CAAC;qBAC5C,SAAS,CAAC,UAAC,eAAgC;oBAC1C,IAAI,CAAC,GAAG,CAAC,CAAC;oBACR,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,eAAe,CAAC,MAAM,CAAC,CAAC;oBACvD,KAAoB,UAAsB,EAAtB,oBAAe,CAAC,MAAM,EAAtB,cAAsB,EAAtB,IAAsB,EAAE;wBAAvC,IAAM,KAAK;wBACd,IAAI,KAAK,CAAC,UAAU,IAAI,IAAI,EAAE;4BAC5B,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,CAAC,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,UAAU,EAAC,CAAC,CAAC;yBACvE;6BAAM,IAAI,KAAK,CAAC,WAAW,IAAI,IAAI,EAAE;4BACpC,IAAI,OAAO,GAAG,KAAK,CAAC,WAAW,CAAC;4BAChC,qDAAqD;4BACrD,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;4BACrC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,CAAC,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC;yBACtE;qBACF;oBACD,oCAAoC;oBACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClC,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE;wBAC1C,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;qBAC5B;oBACD,iBAAiB;oBACjB,KAAI,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,KAAI,CAAC,WAAW,CAAC,EAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;oBAC3D,KAAK,CAAC,MAAM,EAAE,CAAC;gBACjB,CAAC,EACD,aAAG;oBACD,OAAO,CAAC,GAAG,CAAC,8CAA8C,EAAE,GAAG,CAAC,CAAC;gBACnE,CAAC,CAAC,CAAC;YAET,CAAC;;YAnCH,kBAAkB;YAChB,KAAuB,UAAiB,EAAjB,SAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB;gBAAnC,IAAM,QAAQ;wBAAR,QAAQ;aAkClB;SACJ;IAEH,CAAC;IAED,SAAS;IACF,sDAAY,GAAnB,UAAoB,CAAM;QACxB,kBAAkB;IACpB,CAAC;IAEM,sDAAY,GAAnB,UAAoB,CAAM;QACxB,kBAAkB;IACpB,CAAC;IAED,uEAAuE;IACvE,iDAAO,GAAP,UAAQ,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,IAAI;QACrC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAC;YACpB,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;SACzC;QACD,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,OAAO;YAClC,IAAI,WAAW,KAAK,OAAO,CAAC,KAAK,EAAE;gBACjC,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;gBACvC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,CAAC,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,EAAC,CAAC,CAAC;aAClD;iBAAM;gBACL,qDAAqD;gBACrD,IAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;gBAChC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACxB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,CAAC,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAC,CAAC,CAAC;aACpD;QAEH,CAAC,CAAC,CAAC;QACH,KAAK,CAAC,MAAM,EAAE,CAAC;IACjB,CAAC;IAED,wCAAwC;IACxC,oDAAU,GAAV,UAAW,KAAK,EAAE,OAAO;QACvB,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAClC,KAAK,CAAC,MAAM,EAAE,CAAC;IACjB,CAAC;IAED,6DAA6D;IAC7D,oDAAU,GAAV,UAAW,KAAK;QACd,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;QACvD,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QAE1B,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,OAAO;YAClC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,KAAK,CAAC,MAAM,EAAE,CAAC;IACjB,CAAC;IAED,0DAA0D;IAC1D,wDAAc,GAAd,UAAe,KAAK;QAClB,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,OAAO;YAClC,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC3B,IAAI,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,yBAAyB;gBAClF,IAAG,YAAY,IAAI,CAAC,EAAE,EAAE,4CAA4C;oBAClE,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;iBAC7C;aACF;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,WAAW,EAAC;YACpB,4DAA4D;YAC5D,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAC;gBACnC,oCAAoC;gBACpC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,KAAK;oBAC9B,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;gBAC1B,CAAC,CAAC,CAAC;aACJ;SACF;QAGD,KAAK,CAAC,MAAM,EAAE,CAAC;IACjB,CAAC;IAED,+CAA+C;IAC/C,2DAAiB,GAAjB,UAAkB,KAAK,EAAE,UAAU,EAAE,KAAK;QACxC,UAAU,GAAG,KAAK,CAAC;QACnB,KAAK,CAAC,MAAM,EAAE,CAAC;IACjB,CAAC;IAGD,uDAAa,GAAb;QACE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,aAAa,CAAC,cAAc,GAAG,EAAE,CAAC;QACvC,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC9C,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAChD,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QAClD,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;QACxD,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAC,IAAI,CAAC,WAAW,CAAE,CAAC;QACxC,iDAAiD;QACjD,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,WAAW,EAAC;YACvC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;YAChE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;SACjE;aAAM;YACL,IAAI,IAAI,CAAC,SAAS,EAAC;gBACjB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;aAC3E;iBAAM;gBACL,KAAqB,UAAiB,EAAjB,SAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB,EAAE;oBAAnC,IAAM,MAAM;oBACf,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;iBAC7D;aACF;SACF;QACD,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QAClD,yCAAyC;QACzC,IAAI,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,EAAE,EAAE;YACxD,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;SAC3C;QACD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC;QACzE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;QAC/D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;QAC/D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QACjE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;QACnE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;QACnE,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QAC/E,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAE3C,IAAI,IAAI,CAAC,UAAU,EAAC;YAClB,IAAI,CAAC,aAAa,CAAC,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC;YAChE,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,SAAS,CAAC;YACzC,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,SAAS,CAAC;YACvC,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,SAAS,CAAC;YACxC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC;YACzE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;YAC7D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;YAC/D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;YAC3D,sCAAsC;YACtC,IAAI,IAAI,CAAC,aAAa,CAAC,SAAS,KAAK,IAAI,CAAC,SAAS,EAAC;gBAClD,IAAI,CAAC,eAAe,EAAE,CAAC;gBACxB,uCAAuC;aACvC;YAED,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC;YACnC,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAC9C,wCAAwC;SACzC;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,cAAc,GAAG,SAAS,CAAC;YAC9C,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;YAC9C,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC;YAClD,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;YAC/C,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,KAAK,CAAC;YACpC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC;YACzE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;YAC7D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,WAAW,CAAC,CAAC;YACzF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,SAAS,CAAC,CAAC;YACrF,wCAAwC;YACxC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC9B;IACH,CAAC;IAED,sDAAY,GAAZ;QACE,gBAAgB;QAChB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;QAC9C,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,EAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;QACtE,IAAI,CAAC,KAAK,GAAG,EAAC,YAAY,EAAE,EAAC,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAC,IAAI,EAAE,QAAQ,EAAC,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAC,EAAE,UAAU,EAAE,EAAE,EAAC,CAAC;QACxK,IAAI,CAAC,KAAK,GAAG,EAAC,YAAY,EAAE,EAAC,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAC,EAAE,UAAU,EAAE,EAAE,EAAC,CAAC;QAC1K,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;QAClD,IAAI,CAAC,YAAY,GAAG,CAAC,EAAC,YAAY,EAAE,EAAC,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAC,EAAE,UAAU,EAAE,EAAE,EAAC,CAAC,CAAC;QAC3K,KAAqB,UAAiC,EAAjC,SAAI,CAAC,aAAa,CAAC,cAAc,EAAjC,cAAiC,EAAjC,IAAiC,EAAE;YAAnD,IAAM,MAAM;YACf,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,YAAY,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE,EAAC,CAAC,CAAC;YAC/D,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SACzC;QACD,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAC;YAC/B,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;SAC3B;QACD,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAC;YACnD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,GAAG,GAAG,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAC;gBAClD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;gBAClC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,GAAG,GAAG,CAAC;aACpC;SACF;QACD,IAAI,IAAI,CAAC,UAAU,EAAC;YAClB,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC;SACjE;aAAM;YACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;YAC9C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;YAClD,sDAAsD;SACvD;IACH,CAAC;IAED;;;;OAIG;IACO,wDAAc,GAAxB,UAAyB,KAAK,EAAE,KAAa;QAC3C,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,IAAI,sEAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;aAC7H,SAAS,CAAC,gBAAM;QACjB,CAAC,EAAE,eAAK;YACN,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACP,CAAC;IAES,yDAAe,GAAzB;QACE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,YAAY,EAAE,EAAC,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAC,EAAE,UAAU,EAAE,EAAE,EAAC,CAAC,CAAC;QAC7K,2EAA2E;IAC7E,CAAC;IAES,yDAAe,GAAzB,UAA0B,KAAwB;QAChD,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,CAAC,SAAS,GAAG,CAAC,EAAC,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,WAAW,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QAC9F,oDAAoD;QACpD,IAAI,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC;QACzC,KAAiB,UAAiB,EAAjB,SAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB,EAAE;YAA/B,IAAI,IAAI;YACX,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ,EAAE;gBAClG,gBAAgB,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC9B,4FAA4F;gBAC5F,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;oBAC7D,+BAA+B;iBAC/B;gBACD,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;aAC/D;YACD,CAAC,EAAE,CAAC;SACL;QACD,IAAI,CAAC,YAAY,GAAG,gBAAgB,CAAC;IAEvC,CAAC;IAES,2DAAiB,GAA3B,UAA4B,QAAgB;QAA5C,iBAoCC;QAnCC,yCAAyC;QACzC,IAAM,UAAU,GAAG,EAAE,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnD,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aACtE,SAAS,CAAC,UAAC,MAAc;YACtB,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,EAAE;gBAC3B,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAE;oBAAhC,IAAM,MAAM;oBACf,UAAU,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC;iBACzD;aACF;YACD,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,EAAE;gBAC3B,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAE;oBAAhC,IAAM,MAAM;oBACf,UAAU,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC;iBACzD;aACF;YAED,IAAI,KAAI,CAAC,WAAW,EAAC;gBACnB,uDAAuD;gBACvD,KAA4B,UAAiB,EAAjB,UAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB,EAAE;oBAA1C,IAAM,aAAa;oBACtB,IAAI,aAAa,CAAC,YAAY,CAAC,QAAQ,KAAK,QAAQ,EAAE;wBACpD,aAAa,CAAC,UAAU,GAAG,UAAU,CAAC;qBACvC;iBACF;aACF;iBAAM;gBACL,IAAI,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,KAAK,QAAQ,EAAE;oBACjD,KAAI,CAAC,KAAK,CAAC,UAAU,GAAG,UAAU,CAAC;iBACpC;qBAAM,IAAI,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,KAAK,QAAQ,EAAE;oBACxD,KAAI,CAAC,KAAK,CAAC,UAAU,GAAG,UAAU,CAAC;iBACpC;aACF;QAEH,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,wCAAwC,EAAE,KAAK,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;IACT,CAAC;IAED,+HAA+H;IAC/H,sDAAY,GAAZ,UAAa,KAAa;QACxB,IAAI,CAAC,SAAS,GAAG,CAAC,KAAK,KAAK,MAAM,CAAC,EAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QAClD,IAAI,KAAK,KAAK,MAAM,EAAE;YACpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,MAAM,CAAC;YACjC,sFAAsF;YACtF,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAC;gBAC/B,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;aAC5C;SACF;aAAM;YACL,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,KAAK,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAE,CAAC,EAAE;gBAC7F,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;gBACpC,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAC;oBAC/B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;iBACnC;aACF;SACF;IACH,CAAC;IAED,qEAA2B,GAA3B;QACE,IAAI,IAAI,CAAC,aAAa,CAAC,WAAW,KAAK,SAAS,EAAC;YAC/C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;YAClD,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,EAAC,CAAC,MAAM,EAAC,QAAO,CAAC;SACnE;aAAM;YACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;SAC9B;QACD,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,KAAK,SAAS,EAAC;YAC9C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;YAChD,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,EAAC,CAAC,MAAM,EAAC,QAAO,CAAC;SAC5D;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;SACxB;QACD,IAAI,IAAI,CAAC,aAAa,CAAC,SAAS,KAAK,SAAS,EAAC;YAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;YAC9C,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,EAAC,CAAC,MAAM,EAAC,QAAO,CAAC;SAC/D;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;SAC5B;IACH,CAAC;IAED,uDAAa,GAAb,UAAc,KAAa;QACzB,IAAI,CAAC,UAAU,GAAG,CAAC,KAAK,KAAK,MAAM,CAAC,EAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IACrD,CAAC;IACD,wDAAc,GAAd,UAAe,KAAa;QAC1B,IAAI,CAAC,WAAW,GAAG,CAAC,KAAK,KAAK,MAAM,CAAC,EAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QACpD,IAAI,KAAK,KAAK,MAAM,EAAE;YACpB,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,MAAM,CAAC;SAClC;aAAM;YACL,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,KAAK,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAE,CAAC,EAAE;gBAC/F,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;gBAClC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACpB,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,GAAG,GAAG,CAAC;gBACnC,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAC;oBAC/B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;oBAClC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,GAAG,GAAG,CAAC;iBACpC;qBAAM;oBACL,IAAI,CAAC,KAAK,GAAG,EAAC,YAAY,EAAE,EAAC,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAC,EAAE,UAAU,EAAE,EAAE,EAAC,CAAC;iBAC3K;aACF;iBAAM;gBACL,IAAI,CAAC,KAAK,GAAG,EAAC,YAAY,EAAE,EAAC,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAC,EAAE,UAAU,EAAE,EAAE,EAAC,CAAC;gBAC1K,IAAI,CAAC,KAAK,GAAG,EAAC,YAAY,EAAE,EAAC,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAC,EAAE,UAAU,EAAE,EAAE,EAAC,CAAC;aAE3K;SACF;IACH,CAAC;IAED,yDAAe,GAAf;QAAkB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1C,IAAI,IAAI,CAAC,WAAW,EAAC;YACnB,IAAI,CAAC,YAAY,GAAG;gBAClB,mBAAmB,EAAE,KAAK;gBAC1B,UAAU,EAAE,IAAI;gBAChB,MAAM,EAAE;oBACN,OAAO,EAAE,IAAI;oBACb,QAAQ,EAAE,KAAK;iBAChB;gBACD,MAAM,EAAE;oBACN,KAAK,EAAE,CAAC;4BACN,IAAI,EAAE,MAAM;4BACZ,IAAI,EAAE;gCACJ,MAAM,EAAE,IAAI,CAAC,UAAU;gCACvB,aAAa,EAAE,IAAI;gCACnB,cAAc,EAAE;oCACd,aAAa,EAAE,UAAU;oCACzB,QAAQ,EAAE,UAAU;oCACpB,QAAQ,EAAE,UAAU;oCACpB,MAAM,EAAE,WAAW;oCACnB,KAAK,EAAE,WAAW;oCAClB,MAAM,EAAE,WAAW;oCACnB,OAAO,EAAE,WAAW;oCACpB,SAAS,EAAE,WAAW;oCACtB,MAAM,EAAE,WAAW;iCACpB;6BACF;4BACD,OAAO,EAAE,IAAI;4BACb,UAAU,EAAE;gCACV,OAAO,EAAE,IAAI;gCACb,WAAW,EAAE,MAAM;6BACpB;yBACF,CAAC;oBACF,KAAK,EAAE,CAAC;4BACN,KAAK,EAAE;gCACL,WAAW,EAAE,IAAI;6BAElB;4BACD,UAAU,EAAE;gCACV,OAAO,EAAE,IAAI;gCACb,WAAW,EAAE,EAAE;6BAChB;yBACF,CAAC;iBACH;aACF,CAAC;SACH;aAAM;YACL,IAAI,CAAC,YAAY,GAAG;gBAClB,mBAAmB,EAAE,KAAK;gBAC1B,UAAU,EAAE,IAAI;gBAChB,MAAM,EAAE;oBACN,OAAO,EAAE,IAAI;oBACb,QAAQ,EAAE,KAAK;iBAChB;gBACD,MAAM,EAAE;oBACN,KAAK,EAAE,CAAC;4BACN,OAAO,EAAE,IAAI;4BACb,UAAU,EAAE;gCACV,OAAO,EAAE,IAAI;gCACb,WAAW,EAAE,EAAE;6BAChB;4BACD,IAAI,EAAE,QAAQ;4BACd,QAAQ,EAAE,QAAQ;yBACnB,CAAC;oBACF,KAAK,EAAE,CAAC;4BACN,KAAK,EAAE;gCACL,WAAW,EAAE,IAAI;6BAClB;4BACD,UAAU,EAAE;gCACV,OAAO,EAAE,IAAI;gCACb,WAAW,EAAE,EAAE;6BAChB;yBACF,CAAC;iBACH;gBACD,QAAQ,EAAE,UAAU,KAAK,EAAE,IAAI;oBAC7B,kDAAkD;oBAClD,kFAAkF;oBAClF,gBAAgB;oBAChB,iBAAiB;gBACnB,CAAC;aACF,CAAC;SACH;QACD,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC;IAC3C,CAAC;IAlhCQ;QAAR,2DAAK,EAAE;kCAAgB,gFAAe;0EAAC;IACpB;QAAnB,+DAAS,CAAC,OAAO,CAAC;;gEAAa;IACtB;QAAT,4DAAM,EAAE;;uEAAuD;IAHrD,+BAA+B;QAL3C,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAuCiC,kEAAW;YACP,0EAAe;YACjB,oFAAoB;YACpB,oFAAoB;OAzC5C,+BAA+B,CAohC3C;IAAD,sCAAC;CAAA;AAphC2C;;;;;;;;;;;;AC7B5C,iCAAiC,yBAAyB,kBAAkB,mBAAmB,kBAAkB,0BAA0B,8BAA8B,0BAA0B,wCAAwC,2BAA2B,4BAA4B,0BAA0B,8BAA8B,wBAAwB,uBAAuB,gCAAgC,gCAAgC,KAAK,6BAA6B,gCAAgC,wBAAwB,KAAK,+BAA+B,iBAAiB,KAAK,mBAAmB,kBAAkB,KAAK,sBAAsB,iBAAiB,KAAK,yBAAyB,8BAA8B,+BAA+B,KAAK,uBAAuB,8BAA8B,KAAK,wBAAwB,kBAAkB,KAAK,0BAA0B,6BAA6B,KAAK,0BAA0B,2BAA2B,yBAAyB,kBAAkB,eAAe,KAAK,sBAAsB,wBAAwB,OAAO,sBAAsB,kBAAkB,6BAA6B,KAAK,uBAAuB,yBAAyB,iBAAiB,eAAe,KAAK,wBAAwB,2BAA2B,yBAAyB,gBAAgB,KAAK,YAAY,qBAAqB,kBAAkB,gBAAgB,iCAAiC,oBAAoB,iBAAiB,KAAK,S;;;;;;;;;;;ACA1+C,8jBAA8jB,oBAAoB,yHAAyH,wBAAwB,69BAA69B,gBAAgB,aAAa,qTAAqT,gBAAgB,wEAAwE,wBAAwB,qOAAqO,gBAAgB,wEAAwE,wBAAwB,6SAA6S,iBAAiB,qQAAqQ,iBAAiB,6gBAA6gB,oBAAoB,wEAAwE,wBAAwB,oHAAoH,mFAAmF,wBAAwB,wBAAwB,ogCAAogC,gBAAgB,8EAA8E,wBAAwB,8FAA8F,6HAA6H,qOAAqO,wMAAwM,+OAA+O,SAAS,uDAAuD,0J;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA53L;AAEjB;AACxC;AAC0D;AACA;AAEV;AAEhD;AACO;AAIkF;AAC7C;AAY3E;IAoCE,gCAAoB,WAAwB,EACxB,eAAgC,EAChC,aAAmC,EACnC,aAAmC;QAHnC,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,kBAAa,GAAb,aAAa,CAAsB;QACnC,kBAAa,GAAb,aAAa,CAAsB;QApC7C,eAAU,GAAG,IAAI,0DAAY,EAAe,CAAC;QAQ7C,gBAAW,GAAiB,EAAE,CAAC;QAC/B,mBAAc,GAAiB,EAAE,CAAC;QAClC,eAAU,GAAiB,EAAE,CAAC;QAC9B,qBAAgB,GAAiB,CAAC,EAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAC,EAAE,EAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAC;YACxG,EAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAC,CAAC,CAAC;QACxB,qBAAgB,GAAiB,CAAC,EAAC,KAAK,EAAE,2BAA2B,EAAE,KAAK,EAAE,KAAK,EAAC;YAC5F,EAAC,KAAK,EAAE,qCAAqC,EAAE,KAAK,EAAE,UAAU,EAAC,EAAC,EAAC,KAAK,EAAE,cAAc,EAAE,KAAK,EAAE,QAAQ,EAAC,CAAC,CAAC;QAGvG,mBAAc,GAAG,CAAC;gBACvB,QAAQ,EAAE,EAAE;gBACZ,QAAQ,EAAE,EAAE;gBACZ,KAAK,EAAE,EAAE;gBACT,IAAI,EAAE,EAAE;aACT,CAAC,CAAC;QAGH,oBAAe,GAAY,KAAK,CAAC;IAYjC,CAAC;IAED,yCAAQ,GAAR;QAAA,iBA8DC;QA7DC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG;YAClB,mBAAmB,EAAE,KAAK;YAC1B,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE;gBACN,OAAO,EAAE,IAAI;gBACb,QAAQ,EAAE,KAAK;aAChB;YACD,QAAQ,EAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC;YACvB,aAAa,EAAG,CAAC,GAAC,IAAI,CAAC,EAAE;YACzB,QAAQ,EAAE,UAAU,KAAK,EAAE,IAAI;gBAC7B,kDAAkD;gBAClD,kFAAkF;gBAClF,gBAAgB;gBAChB,iBAAiB;YACnB,CAAC;SACF,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,WAAW;aACzB,SAAS,CAAC,eAAK;YACd,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,WAAW,CAAC,QAAQ;aACtB,SAAS,CAAC,eAAK;YACd,KAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QACpB,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,WAAW,GAAG,KAAK,EAAxB,CAAwB,CAAC,CAAC;QAEjF,+FAA+F;QAE/F,+BAA+B;QAC/B,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;QACrB,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;QAC/B,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,KAAK,SAAS,CAAC,EAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QAChH,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,KAAK,SAAS,CAAC,EAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC;QAEjH,IAAI,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,SAAS,IAAI,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,EAAE,EAAE;YAC9G,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC;YACxD,IAAI,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,SAAS,EAAE;gBAC/D,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;aACvE;SACF;QAAA,CAAC;QAEF,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,KAAK,SAAS,CAAC,EAAC,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QACxI,IAAI,CAAC,oBAAoB,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,KAAK,SAAS,CAAC,EAAC,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAC9I,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,KAAK,SAAS,CAAC,EAAC,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC;QAC9G,yCAAyC;QACzC,IAAI,CAAC,OAAO,GAAG,IAAI,8CAAK,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;YAC/C,IAAI,EAAE,IAAI,CAAC,SAAS;YACpB,IAAI,EAAE;gBACJ,MAAM,EAAE,EAAE;gBACV,QAAQ,EAAE,EAAE;aACb;YACD,OAAO,EAAE,IAAI,CAAC,YAAY;SAC3B,CAAC,CAAC;QACH,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC/B,CAAC;IAED,mEAAmE;IAC3D,oDAAmB,GAA3B,UAA4B,IAAU;QACpC,IAAM,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAChC,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAClC,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC3B,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAClC,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAElC,IAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,SAAS,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC/B,IAAI,WAAW,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,WAAW,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,aAAa,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;QACvC,IAAI,aAAa,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;QAEvC,IAAI,GAAG,GAAG,EAAE,EAAE;YACZ,SAAS,GAAG,GAAG,GAAG,SAAS,CAAC;SAC7B;QACD,IAAI,KAAK,GAAG,EAAE,EAAE;YACd,WAAW,GAAG,GAAG,GAAG,WAAW,CAAC;SACjC;QACD,IAAI,KAAK,GAAG,EAAE,EAAE;YACd,WAAW,GAAG,GAAG,GAAG,WAAW,CAAC;SACjC;QACD,IAAI,OAAO,GAAG,EAAE,EAAE;YAChB,aAAa,GAAG,GAAG,GAAG,aAAa,CAAC;SACrC;QACD,IAAI,OAAO,GAAG,EAAE,EAAE;YAChB,aAAa,GAAG,GAAG,GAAG,aAAa,CAAC;SACrC;QAED,OAAO,UAAU,GAAG,GAAG,GAAG,WAAW,GAAG,GAAG,GAAG,SAAS,GAAG,GAAG,GAAG,WAAW,GAAG,GAAG,GAAG,aAAa,GAAG,GAAG,GAAG,aAAa,CAAC;IAC1H,CAAC;IAED,0CAAS,GAAT,UAAU,KAAK;QACb,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACvB,IAAI,SAAS,GAAG,EAAC,UAAU,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAC,MAAM,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC,EAAC,CAAC;QACrG,iBAAiB;QACjB,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,kCAAkC;QAClC,QAAO,IAAI,CAAC,oBAAoB,EAAC;YAC/B,KAAK,UAAU;gBACb,IAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,MAAM;YACR,KAAK,QAAQ;gBACX,IAAI,CAAC,0BAA0B,EAAE,CAAC;gBAClC,MAAM;YACR,KAAK,KAAK,CAAC;YACX;gBACE,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,MAAM;SACT;IACH,CAAC;IAED,+CAAc,GAAd;QAAA,iBAoFC;QAnFC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,MAAM;YAChH,2DAA2D;YACzD,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAE;gBAAhC,IAAM,MAAM;gBACf,mCAAmC;gBACnC,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,EAAE,KAAK,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;oBACtE,KAAoB,UAAa,EAAb,WAAM,CAAC,MAAM,EAAb,cAAa,EAAb,IAAa,EAAE;wBAA9B,IAAM,KAAK;wBACd,MAAM,CAAC,IAAI,CAAC,EAAC,MAAM,EAAE,KAAK,CAAC,KAAK,EAAE,WAAW,EAAE,KAAK,CAAC,WAAW,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC,CAAC;qBAC9E;oBACD,MAAM;iBACP;aACJ;YACD,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC;YACvC,wBAAwB;YACxB,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,EAC7F,KAAI,CAAC,mBAAmB,CAAC,KAAI,CAAC,aAAa,CAAC,EAAE,KAAI,CAAC,mBAAmB,CAAC,KAAI,CAAC,WAAW,CAAC,EACxF,KAAK,EAAE,KAAI,CAAC,IAAI,CAAC,EAAE,EAAE,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC;iBACpC,SAAS,CAAC,UAAC,eAAgC;gBACxC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;gBACzC,IAAI,eAAe,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAC;oBACpC,IAAI,UAAU,GAAG,CAAC,CAAC;oBACnB,IAAI,SAAS,GAAS,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;oBACnE,IAAI,OAAO,GAAS,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;oBACjG,mFAAmF;oBACnF,IAAI,SAAS,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC,GAAG,OAAO,CAAC;oBAElE,KAAoB,UAAsB,EAAtB,oBAAe,CAAC,MAAM,EAAtB,cAAsB,EAAtB,IAAsB,EAAE;wBAAvC,IAAM,KAAK;wBACd,IAAI,WAAW,SAAQ,CAAC;wBACxB,IAAI,KAAK,CAAC,UAAU,KAAK,IAAI,EAAC;4BAC5B,WAAW,GAAG,KAAK,CAAC,UAAU,CAAC;yBAChC;6BAAM;4BACL,IAAI,OAAO,GAAG,KAAK,CAAC,WAAW,CAAC;4BAChC,qDAAqD;4BACrD,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;4BACrC,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;yBAC/B;wBACD,IAAI,GAAG,GAAG,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC;wBACxC,KAAoB,UAAM,EAAN,iBAAM,EAAN,oBAAM,EAAN,IAAM,EAAE;4BAAvB,IAAM,KAAK;4BACd,IAAI,eAAe,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE;gCACnD,IAAI,WAAW,KAAK,KAAK,CAAC,MAAM,EAAE;oCAChC,wDAAwD;oCACxD,IAAI,KAAK,GAAS,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;oCAC3C,IAAI,GAAG,GAAS,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;oCAErG,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,OAAO,CAAC,CAAC;iCAC3E;6BACF;yBACF;wBACD,wCAAwC;qBACzC;oBACD,IAAI,KAAK,GAAG,CAAC,CAAC;oBACd,KAAoB,UAAM,EAAN,iBAAM,EAAN,oBAAM,EAAN,IAAM,EAAE;wBAAvB,IAAM,KAAK;wBACd,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;qBAC7B;oBACD,oCAAoC;oBACpC,iBAAiB;oBACjB,IAAI,WAAW,GAAG,EAAE,CAAC;oBACrB,KAAoB,UAAM,EAAN,iBAAM,EAAN,oBAAM,EAAN,IAAM,EAAE;wBAAvB,IAAM,KAAK;wBACd,wCAAwC;wBACxC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,GAAC,GAAG,GAAC,KAAK,CAAC,CAAC,CAAC;wBACpD,IAAI,KAAK,CAAC,UAAU,KAAK,SAAS,EAAE;4BAClC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,GAAG,IAAI,GAAG,KAAK,CAAC,UAAU,GAAE,GAAG,CAAC,CAAC;yBACvF;6BAAM;4BACL,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;yBACxD;qBAEF;oBACD,IAAM,OAAO,GAAG;wBACd,IAAI,EAAE,WAAW;qBAClB,CAAC;oBACF,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;oBAClC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAE,CAAC,OAAO,CAAC,CAAC;oBACtC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACzD,KAAI,CAAC,cAAc,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC;oBACzC,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;iBACvB;YACL,CAAC,EACD,aAAG;gBACD,OAAO,CAAC,GAAG,CAAC,8CAA8C,EAAE,GAAG,CAAC,CAAC;YACnE,CAAC,CAAC,CAAC;QACT,CAAC,EAAE,eAAK;YACN,OAAO,CAAC,GAAG,CAAC,4CAA4C,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2DAA0B,GAA1B;QAAA,iBAuBC;QAtBC,IAAI,SAAS,GAAG,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QACtB,IAAI,MAAM,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;QACtC,IAAI,WAAW,GAAsB,EAAE,CAAC;QACxC,KAAmB,UAAmB,EAAnB,SAAI,CAAC,cAAc,EAAnB,cAAmB,EAAnB,IAAmB,EAAE;YAAnC,IAAM,IAAI;YACb,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;SACjG;QACD,IAAM,WAAW,GAAG,qDAAQ,CAAC,WAAW,CAAC,CAAC;QAC1C,WAAW,CAAC,SAAS,CAAC,mBAAS;YAC3B,gHAAgH;YAChH,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,SAAS,CAAC,CAAC;YAChD,KAAmB,UAAS,EAAT,uBAAS,EAAT,uBAAS,EAAT,IAAS,EAAE;gBAAzB,IAAM,IAAI;gBACb,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;gBAClD,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;aACnD;YACD,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAC,IAAI,EAAE,SAAS,EAAC,CAAC,CAAC;YACjD,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YAClC,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;YACtB,KAAI,CAAC,cAAc,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC;QAC3C,CAAC,EAAC,aAAG;YACH,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,4CAAW,GAAX;QAAA,iBAkBC;QAjBC,IAAI,SAAS,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAC1B,IAAI,MAAM,GAAG,CAAC,SAAS,EAAE,QAAQ,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;QAC3D,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aAC5D,SAAS,CAAC,iBAAO;YACd,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;YACnD,KAAqB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,EAAE;gBAAzB,IAAM,MAAM;gBACf,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;aACzE;YACD,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,SAAS,CAAC,CAAC;YAC1C,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAC,IAAI,EAAE,SAAS,EAAC,CAAC,CAAC;YACjD,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YAClC,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;YACtB,KAAI,CAAC,cAAc,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC;QAC3C,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACT,CAAC;IAED,SAAS;IACF,6CAAY,GAAnB,UAAoB,CAAM;IAC1B,CAAC;IAEM,6CAAY,GAAnB,UAAoB,CAAM;IAC1B,CAAC;IAED,+CAA+C;IAC/C,kDAAiB,GAAjB,UAAkB,KAAK,EAAE,UAAU,EAAE,KAAK;QACxC,UAAU,GAAG,KAAK,CAAC;QACnB,KAAK,CAAC,MAAM,EAAE,CAAC;IACjB,CAAC;IAED,8CAAa,GAAb;QACE,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACrD,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,aAAa,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QACxD,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC9C,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACpD,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC;QACtD,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,8CAA8C;QAC9C,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;QAC9C,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC;QAClD,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC;QAC5D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC;QACzE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;QAC/D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;QACrE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;QACrE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;QACrE,+DAA+D;QAC/D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;QAC/D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QAC3D,6BAA6B;QAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC/B,CAAC;IAED,6CAAY,GAAZ;QACE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,iDAAiD;QACjD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;QAC9C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;QAClD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;QACpD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;QACtD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;QAC5D,8CAA8C;QAC9C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC;QACxD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;IACxE,CAAC;IAED;;;;OAIG;IACO,+CAAc,GAAxB,UAAyB,KAAK,EAAE,KAAa;QAC3C,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,IAAI,sEAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;aAC7H,SAAS,CAAC,gBAAM;QACjB,CAAC,EAAE,eAAK;YACN,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACP,CAAC;IAES,kDAAiB,GAA3B,UAA4B,QAAgB;QAA5C,iBAqBC;QApBC,yCAAyC;QACzC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aACtE,SAAS,CAAC,UAAC,MAAc;YACtB,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,EAAE;gBAC3B,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAC;oBAA/B,IAAM,MAAM;oBACf,0CAA0C;oBAC1C,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAC;wBACrD,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC;qBAC9D;iBACF;aACF;YACD,4EAA4E;YAC5E,IAAI,KAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAC;gBAC/B,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;aAC5D;QACH,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,wCAAwC,EAAE,KAAK,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;IACT,CAAC;IAED,6DAA6D;IACnD,gDAAe,GAAzB;QAAA,iBAyBC;QAxBC,eAAe;QACf,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,kBAAkB;QAClB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aAC5D,SAAS,CAAC,iBAAO;YACd,KAAqB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,EAAE;gBAAzB,IAAM,MAAM;gBACf,IAAI,YAAY,GAAY,KAAK,CAAC;gBAClC,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,EAAE;oBAC3B,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAE;wBAAhC,IAAM,MAAM;wBACf,uDAAuD;wBACvD,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;4BAC5B,YAAY,GAAG,IAAI,CAAC;4BACpB,MAAM;yBACP;qBACF;oBACD,IAAK,YAAY,EAAG;wBAAE,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAC,CAAC,CAAC;qBAAE;iBAC7F;gBACD,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAC,CAAC,CAAC;aACxE;QACH,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACT,CAAC;IAED,kDAAiB,GAAjB;QACE,IAAI,IAAI,CAAC,YAAY,KAAK,MAAM,EAAE;YAChC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YAC7C,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,GAAC,IAAI,CAAC,EAAE,CAAC;SAChD;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;YACzC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC;SAC9C;IACH,CAAC;IAED,2DAA0B,GAA1B,UAA2B,IAA+B,EAAE,MAAM,EAAE,SAAS;IAC7E,CAAC;IAED,gEAAgE;IAChE,+CAAc,GAAd,UAAe,OAAO;QACpB,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QAClC,IAAI,CAAC,OAAO;YAAE,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAC5C,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;QAE9B;;;wCAGgC;QAChC,IAAI,QAAQ,CAAC;QACb,QAAQ,OAAO,EAAE;YACf,KAAK,MAAM;gBACT,QAAQ,GAAG;oBACT,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;oBACrB,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;oBACtB,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;oBACrB,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;oBACnB,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;iBAClB,CAAC;gBACF,MAAM;YACR,KAAK,MAAM;gBACT,QAAQ,GAAG;oBACT,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;oBACrB,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;oBACtB,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;oBACpB,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;oBACnB,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;iBAClB,CAAC;gBACF,MAAM;YACR,KAAK,MAAM,CAAC;YACZ;gBACE,QAAQ,GAAG;oBACT,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;oBACrB,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;oBACtB,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC;oBACrB,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC;oBACrB,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;iBAClB,CAAC;gBACF,MAAM;SACT;QAED,yCAAyC;QACzC,IAAI,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzC,YAAY,CAAC,IAAI,CAAC,UAAS,CAAC,EAAE,CAAC;YAC7B,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;QAEH,0BAA0B;QAC1B,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;QAC7C,QAAQ,SAAS,EAAE;YACjB,KAAK,KAAK,CAAC;YACX,KAAK,UAAU;gBACb,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACpD,IAAI,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;gBACrC,MAAM;YACR,KAAK,KAAK,CAAC;YACX,KAAK,MAAM;gBACT,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACjD,IAAI,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC;gBAChC,MAAM;SACT;QAED,kBAAkB;QAClB,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;YAClC,IAAI,aAAa,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,6CAA6C;YACpG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC5C,IAAI,WAAW,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;gBAClC,IAAI,aAAa,KAAK,CAAC,WAAW,EAAE,EAAE,uDAAuD;oBAC3F,WAAW,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC;oBAClE,MAAM;iBACP;qBAAM,IAAI,aAAa,GAAG,CAAC,WAAW,EAAE,EAAE,2DAA2D;oBACpG,IAAI,OAAO,GAAG,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBAClC,IAAI,iBAAiB,GAAG,CAAC,aAAa,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,iBAAiB;oBACtH,IAAI,KAAK,GAAG,EAAE,CAAC;oBACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,qFAAqF;wBACjH,KAAK,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,CAAC;wBAC1G,IAAI,CAAC,GAAG,CAAC;4BAAE,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC5C;oBACD,WAAW,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC;oBAClD,MAAM;iBACP;aACF;SACF;QAED,0BAA0B;QAC1B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;YAC9B,QAAQ,SAAS,EAAE;gBACjB,KAAK,KAAK,CAAC;gBACX,KAAK,OAAO,CAAC;gBACb,KAAK,UAAU;oBACb,IAAI,CAAC,QAAQ,CAAC,eAAe;wBAAE,QAAQ,CAAC,eAAe,GAAG,EAAE,CAAC;oBAC7D,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;oBAC7C,IAAI,CAAC,QAAQ,CAAC,WAAW;wBAAE,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC;oBACrD,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,qBAAqB,CAAC;oBAChD,MAAM;gBACR,KAAK,KAAK;oBACR,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;oBAC7C,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,qBAAqB,CAAC;oBAChD,MAAM;gBACR,KAAK,MAAM;oBACT,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;oBACzC,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,qBAAqB,CAAC;oBACpD,MAAM;aACT;SACF;QAED,yCAAyC;QACzC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;IACxB,CAAC;IAED,0DAAyB,GAAzB;QACE,gEAAgE;QAChE,IAAI,IAAI,CAAC,oBAAoB,KAAK,QAAQ,EAAC;YACzC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,SAAS,CAAC;SAC/C;aAAM,IAAI,IAAI,CAAC,oBAAoB,KAAK,UAAU,EAAE;YACnD,0CAA0C;YAC1C,OAAM,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;gBACpC,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC;aAC3B;SACF;aAAM,IAAI,IAAI,CAAC,oBAAoB,KAAK,KAAK,EAAE;YAC9C,2BAA2B;SAC5B;IACH,CAAC;IAES,gDAAe,GAAzB;QACE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC,CAAC;QAC5E,2EAA2E;IAC7E,CAAC;IAES,gDAAe,GAAzB,UAA0B,KAAgC;QACxD,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,oDAAoD;QACpD,IAAI,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC;QAC3C,KAAiB,UAAmB,EAAnB,SAAI,CAAC,cAAc,EAAnB,cAAmB,EAAnB,IAAmB,EAAE;YAAjC,IAAI,IAAI;YACX,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ,EAAE;gBACpC,gBAAgB,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC9B,4FAA4F;gBAC5F,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,gBAAgB,CAAC,CAAC;aAC9D;YACD,CAAC,EAAE,CAAC;SACL;QACD,IAAI,CAAC,cAAc,GAAG,gBAAgB,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IAC3D,CAAC;IAnjBmB;QAAnB,+DAAS,CAAC,OAAO,CAAC;;uDAAa;IACvB;QAAR,2DAAK,EAAE;kCAAgB,wFAAmB;iEAAC;IAClC;QAAT,4DAAM,EAAE;;8DAA8C;IAH5C,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,8BAA8B;;;SAGzC,CAAC;yCAqCiC,kEAAW;YACP,0EAAe;YACjB,oFAAoB;YACpB,oFAAoB;OAvC5C,sBAAsB,CAujBlC;IAAD,6BAAC;CAAA;AAvjBkC;;;;;;;;;;;;AC3BnC,iCAAiC,yBAAyB,kBAAkB,mBAAmB,kBAAkB,0BAA0B,8BAA8B,0BAA0B,wCAAwC,2BAA2B,4BAA4B,0BAA0B,8BAA8B,wBAAwB,uBAAuB,gCAAgC,gCAAgC,KAAK,6BAA6B,gCAAgC,wBAAwB,KAAK,+BAA+B,iBAAiB,KAAK,mBAAmB,kBAAkB,KAAK,sBAAsB,iBAAiB,KAAK,yBAAyB,8BAA8B,+BAA+B,KAAK,uBAAuB,8BAA8B,KAAK,wBAAwB,kBAAkB,KAAK,0BAA0B,6BAA6B,KAAK,0BAA0B,2BAA2B,yBAAyB,kBAAkB,eAAe,KAAK,sBAAsB,wBAAwB,OAAO,sBAAsB,kBAAkB,6BAA6B,KAAK,uBAAuB,yBAAyB,iBAAiB,eAAe,KAAK,wBAAwB,2BAA2B,yBAAyB,gBAAgB,KAAK,YAAY,qBAAqB,kBAAkB,gBAAgB,iCAAiC,oBAAoB,iBAAiB,KAAK,S;;;;;;;;;;;ACA1+C,wjBAAwjB,oBAAoB,0CAA0C,6EAA6E,wBAAwB,mHAAmH,wBAAwB,+TAA+T,oBAAoB,8HAA8H,wBAAwB,qiCAAqiC,gBAAgB,ybAAyb,gBAAgB,8EAA8E,wBAAwB,8FAA8F,6HAA6H,qOAAqO,wMAAwM,+OAA+O,SAAS,0DAA0D,4J;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACArxH;AAEpD;AACL;AAE0D;AAKlB;AACI;AACI;AACU;AAEhD;AACqJ;AAO9L;IAiCE,8CAAoB,WAAwB,EACxB,eAAgC,EAChC,aAAmC,EACnC,aAAmC,EAAU,MAAc;QAH3D,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,kBAAa,GAAb,aAAa,CAAsB;QACnC,kBAAa,GAAb,aAAa,CAAsB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAjCrE,eAAU,GAAG,IAAI,0DAAY,EAAe,CAAC;QAM7C,oBAAe,GAAgB,iFAAW,CAAC,GAAG,CAAC;QAE/C,gBAAW,GAAiB,EAAE,CAAC;QAC/B,qBAAgB,GAAiB,CAAC,EAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAC,EAAE,EAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAC;YACxG,EAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAC,CAAC,CAAC;QACxB,oBAAe,GAAsB,CAAC,EAAC,KAAK,EAAE,iFAAW,CAAC,GAAG,EAAE,KAAK,EAAE,iFAAW,CAAC,GAAG,EAAC;YAC9F,EAAC,KAAK,EAAE,iFAAW,CAAC,GAAG,EAAE,KAAK,EAAE,iFAAW,CAAC,GAAG,EAAC,EAAE,EAAC,KAAK,EAAE,iFAAW,CAAC,GAAG,EAAE,KAAK,EAAE,iFAAW,CAAC,GAAG,EAAC,CAAC,CAAC;QAC5F,mBAAc,GAAgB,EAAE,CAAC;QAEjC,kBAAa,GAAiB,EAAE,CAAC;QAIpC,mBAAc,GAAmC,EAAE,CAAC;QAG3D,oBAAe,GAAY,KAAK,CAAC;IAYjC,CAAC;IAED,uDAAQ,GAAR;QAAA,iBA4EC;QA3EC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAG;YAClB,mBAAmB,EAAE,KAAK;YAC1B,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE;gBACN,OAAO,EAAE,IAAI;gBACb,QAAQ,EAAE,KAAK;aAChB;YACD,0BAA0B;YAC1B,QAAQ,EAAE,UAAU,KAAK,EAAE,IAAI;gBAC7B,kDAAkD;gBAClD,kFAAkF;gBAClF,gBAAgB;gBAChB,iBAAiB;YACnB,CAAC;SACF,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,WAAW;aACzB,SAAS,CAAC,eAAK;YACd,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,WAAW,CAAC,QAAQ;aACtB,SAAS,CAAC,eAAK;YACd,KAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QACpB,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,WAAW,GAAG,KAAK,EAAxB,CAAwB,CAAC,CAAC;QACjF,IAAI,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;QACrB,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;QAC/B,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,KAAK,SAAS,CAAC,EAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QAChH,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,KAAK,SAAS,CAAC,EAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC;QAEjH,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,KAAK,SAAS,CAAC,EAAC,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QACxI,yCAAyC;QACzC,IAAI,CAAC,OAAO,GAAG,IAAI,8CAAK,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;YAC/C,IAAI,EAAE,IAAI,CAAC,SAAS;YACpB,IAAI,EAAE;gBACJ,MAAM,EAAE,EAAE;gBACV,QAAQ,EAAE,EAAE;aACb;YACD,OAAO,EAAE,IAAI,CAAC,YAAY;SAC3B,CAAC,CAAC;QAEJ,qBAAqB;QACpB,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,gBAAM;YAClF,IAAI,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,cAAI;gBACnC,OAAO,EAAC,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,EAAC,CAAC;YAC9C,CAAC,CAAC,CAAC;YACL,KAAI,CAAC,cAAc,GAAG,CAAC,EAAC,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,WAAW,EAAC,CAAC,CAAC;YAC3F,KAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,KAAI,CAAC,IAAI,CAAC,EAAE,EAAE,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,iBAAO;gBACnF,IAAI,aAAa,GAAG,OAAO,CAAC,GAAG,CAAC,cAAI;oBAClC,OAAO,EAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC;gBACpC,CAAC,CAAC,CAAC;gBACH,IAAI,eAAe,GAAG,KAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAC,KAAK,EAAE,oBAAoB,EAAE,KAAK,EAAE,cAAc,EAAE,KAAK,EAAE,aAAa,EAAC,CAAC;gBAC5H,KAAI,CAAC,cAAc,GAAG,eAAe,CAAC;YACxC,CAAC,EACD,aAAG;gBACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;oBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;iBAAE;gBAC3C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC;QACP,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;QAEL,kBAAkB;QAClB,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,KAAK,EAAE,EAAC;YACvC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;YACxD,IAAI,CAAC,uBAAuB,EAAE,CAAC;YAC/B,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,2DAA2D;SAC5D;IACH,CAAC;IAED,mEAAmE;IAC3D,kEAAmB,GAA3B,UAA4B,IAAU;QACpC,IAAM,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAChC,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAClC,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC3B,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAClC,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAElC,IAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,SAAS,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC/B,IAAI,WAAW,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,WAAW,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,aAAa,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;QACvC,IAAI,aAAa,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;QAEvC,IAAI,GAAG,GAAG,EAAE,EAAE;YACZ,SAAS,GAAG,GAAG,GAAG,SAAS,CAAC;SAC7B;QACD,IAAI,KAAK,GAAG,EAAE,EAAE;YACd,WAAW,GAAG,GAAG,GAAG,WAAW,CAAC;SACjC;QACD,IAAI,KAAK,GAAG,EAAE,EAAE;YACd,WAAW,GAAG,GAAG,GAAG,WAAW,CAAC;SACjC;QACD,IAAI,OAAO,GAAG,EAAE,EAAE;YAChB,aAAa,GAAG,GAAG,GAAG,aAAa,CAAC;SACrC;QACD,IAAI,OAAO,GAAG,EAAE,EAAE;YAChB,aAAa,GAAG,GAAG,GAAG,aAAa,CAAC;SACrC;QAED,OAAO,UAAU,GAAG,GAAG,GAAG,WAAW,GAAG,GAAG,GAAG,SAAS,GAAG,GAAG,GAAG,WAAW,GAAG,GAAG,GAAG,aAAa,GAAG,GAAG,GAAG,aAAa,CAAC;IAC1H,CAAC;IAED,wDAAS,GAAT,UAAU,KAAK;QAAf,iBA4DC;QA3DC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzB,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACvB,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAC,IAAI,EAAC,EAAE,EAAE,eAAe,EAAC,EAAE,EAAC,CAAC,CAAC;QACtD,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;QAChD,OAAO,CAAC,GAAG,CAAC,+BAA+B,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAClE,iBAAiB;QACjB,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,OAAO,GAAG,EAAC,MAAM,EAAC,EAAE,EAAC,IAAI,EAAC,EAAE,EAAC,CAAC;QAClC,IAAI,WAAW,GAAsB,EAAE,CAAC;QACxC,KAAmB,UAAmB,EAAnB,SAAI,CAAC,cAAc,EAAnB,cAAmB,EAAnB,IAAmB,EAAE;YAAnC,IAAM,IAAI;YACb,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YAC5B,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAC1E,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,EACxF,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;SAC1C;QACD,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC;QACzD,IAAM,WAAW,GAAG,2DAAQ,CAAC,WAAW,CAAC,CAAC;QAC1C,WAAW,CAAC,SAAS,CAAC,mBAAS;YAC7B,gHAAgH;YAChH,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,SAAS,CAAC,CAAC;oCACrC,IAAI;gBACb,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;gBACtC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC1B,IAAI,UAAU,GAAG,CAAC,CAAC;oBACnB,IAAI,SAAS,GAAS,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;oBACxD,IAAI,OAAO,GAAS,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;oBAC3E,mFAAmF;oBACnF,IAAI,SAAS,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC,GAAG,OAAO,CAAC;oBACpE,IAAI,OAAK,GAAG,CAAC,CAAC;oBACd,QAAQ,KAAI,CAAC,eAAe,EAAE;wBAC5B,KAAK,iFAAW,CAAC,GAAG;4BAClB,OAAK,GAAG,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;4BACtD,MAAM;wBACR,KAAK,iFAAW,CAAC,GAAG;4BAClB,OAAK,GAAG,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;4BAC3C,MAAM;wBACR,KAAK,iFAAW,CAAC,GAAG,CAAC;wBACrB;4BACE,OAAK,GAAG,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;4BAC3C,MAAM;qBACT;oBAED,oCAAoC;oBACpC,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAI,CAAC,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,KAAI,CAAC,IAAI,CAAC,EAAE,EAAE,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,gBAAM;wBACrI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;wBACxC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAK,CAAC,CAAC;wBACxC,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,EAAC;4BACtF,KAAI,CAAC,cAAc,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC;4BACzC,KAAK,CAAC,MAAM,EAAE,CAAC;yBAChB;oBACH,CAAC,CAAC,CAAC;iBAEJ;YACH,CAAC;YAjCD,KAAmB,UAAS,EAAT,uBAAS,EAAT,uBAAS,EAAT,IAAS;gBAAvB,IAAM,IAAI;wBAAJ,IAAI;aAiCd;QAEH,CAAC,EAAC,aAAG;YACH,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,SAAS;IACF,2DAAY,GAAnB,UAAoB,CAAM;IAC1B,CAAC;IAEM,2DAAY,GAAnB,UAAoB,CAAM;IAC1B,CAAC;IAED,+CAA+C;IAC/C,gEAAiB,GAAjB,UAAkB,KAAK,EAAE,UAAU,EAAE,KAAK;QACxC,UAAU,GAAG,KAAK,CAAC;QACnB,KAAK,CAAC,MAAM,EAAE,CAAC;IACjB,CAAC;IAED,4DAAa,GAAb;QACE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC9C,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC;QACtD,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAC5C,8CAA8C;QAC9C,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;QAC9C,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC;QAClD,IAAI,CAAC,aAAa,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QAC1D,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACxD,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC;QACpD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;QAC/D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;QACrE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC;QAC3E,+DAA+D;QAC/D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;QAC/D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QAC3D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAC7D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QACjE,6BAA6B;QAC7B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IACrD,CAAC;IAED,2DAAY,GAAZ;QACE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,iDAAiD;QACjD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;QAC9C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;QAClD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;QACtD,8CAA8C;QAC9C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;QACxD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;QACpD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC;IAC5D,CAAC;IAED;;;;OAIG;IACO,6DAAc,GAAxB,UAAyB,KAAK,EAAE,KAAa;QAC3C,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,IAAI,sEAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;aAC7H,SAAS,CAAC,gBAAM;QACjB,CAAC,EAAE,eAAK;YACN,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+DAA+D;IACrD,4DAAa,GAAvB,UAAwB,QAAgB;QAAxC,iBAqBC;QApBC,kBAAkB;QAClB,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aAC7E,SAAS,CAAC,iBAAO;YAChB,IAAI,iBAAiB,GAA8B,EAAE,CAAC;YACtD,oDAAoD;YACpD,KAAqB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,EAAE;gBAAzB,IAAM,MAAM;gBACf,+FAA+F;gBAC/F,KAAsB,UAAmB,EAAnB,UAAI,CAAC,cAAc,EAAnB,cAAmB,EAAnB,IAAmB,EAAE;oBAAtC,IAAM,OAAO;oBAChB,IAAI,MAAM,CAAC,QAAQ,KAAK,OAAO,CAAC,QAAQ,EAAE;wBACxC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBAChC,MAAM;qBACP;iBACF;aACF;YACD,KAAI,CAAC,cAAc,GAAG,iBAAiB,CAAC;YACxC,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,KAAI,CAAC,cAAc,CAAC,CAAC;QAC5D,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACT,CAAC;IAES,sEAAuB,GAAjC;QAAA,iBA2BC;QA1BC,cAAc;QACd,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,kBAAkB;QAClB,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aAC9F,SAAS,CAAC,iBAAO;YACd,IAAI,QAAQ,GAAY,KAAK,CAAC;YAC9B,yBAAyB;YACzB,KAAqB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,EAAE;gBAAzB,IAAM,MAAM;gBACf,0BAA0B;gBAC1B,KAAkB,UAAkB,EAAlB,UAAI,CAAC,aAAa,EAAlB,cAAkB,EAAlB,IAAkB,EAAC;oBAAhC,IAAM,GAAG;oBACZ,sEAAsE;oBACtE,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,MAAM,CAAC,QAAQ,EAAE;wBACpC,QAAQ,GAAG,IAAI,CAAC;wBAChB,MAAM;qBACP;iBACF;gBACD,8DAA8D;gBAC9D,IAAI,QAAQ,KAAK,KAAK,EAAC;oBACrB,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAC,CAAC,CAAC;iBAC3E;aACF;YACD,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC;QACrD,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACT,CAAC;IAED,8EAA8E;IACpE,mEAAoB,GAA9B,UAA+B,UAAkB;QAAjD,iBAkCC;QAjCC,cAAc;QACd,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,kBAAkB;QAClB,kBAAkB;QAClB,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aACjF,SAAS,CAAC,iBAAO;YAChB,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;YAC/B,IAAI,QAAQ,GAAY,KAAK,CAAC;YAC9B,yBAAyB;YACzB,KAAqB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,EAAE;gBAAzB,IAAM,MAAM;gBACf,8HAA8H;gBAC9H,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAC;oBAA/B,IAAM,MAAM;oBAEf,IAAI,MAAM,CAAC,IAAI,KAAK,KAAI,CAAC,kBAAkB,EAAC;wBAC1C,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC;qBAC5E;iBACF;gBACD,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAC;oBAA/B,IAAM,MAAM;oBACf,IAAI,MAAM,CAAC,IAAI,KAAK,KAAI,CAAC,kBAAkB,EAAC;wBAC1C,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC;qBAC5E;iBACF;aACF;YACD,wBAAwB;YACxB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,KAAI,CAAC,cAAc,CAAC,CAAC;YACrD,IAAI,KAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,EAAC;gBACjC,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;aAC9B;QACH,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACT,CAAC;IAED,gDAAgD;IACtC,6DAAc,GAAxB,UAAyB,OAAO;QAC9B,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QAClC,IAAI,CAAC,OAAO;YAAE,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAC5C,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;QAE9B;;;wCAGgC;QAChC,IAAI,QAAQ,CAAC;QACb,QAAQ,OAAO,EAAE;YACf,KAAK,MAAM;gBACT,QAAQ,GAAG;oBACT,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;oBACrB,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;oBACtB,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;oBACrB,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;oBACnB,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;iBAClB,CAAC;gBACF,MAAM;YACR,KAAK,MAAM;gBACT,QAAQ,GAAG;oBACT,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;oBACrB,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;oBACtB,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;oBACpB,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;oBACnB,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;iBAClB,CAAC;gBACF,MAAM;YACR,KAAK,MAAM,CAAC;YACZ;gBACE,QAAQ,GAAG;oBACT,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;oBACrB,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;oBACtB,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC;oBACrB,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC;oBACrB,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;iBAClB,CAAC;gBACF,MAAM;SACT;QAED,yCAAyC;QACzC,IAAI,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzC,YAAY,CAAC,IAAI,CAAC,UAAS,CAAC,EAAE,CAAC;YAC7B,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;QAEH,0BAA0B;QAC1B,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;QAC7C,QAAQ,SAAS,EAAE;YACjB,KAAK,KAAK,CAAC;YACX,KAAK,UAAU,CAAC;YAChB,KAAK,WAAW;gBACd,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACpD,IAAI,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;gBACrC,MAAM;YACR,KAAK,QAAQ,CAAC;YACd,KAAK,KAAK,CAAC;YACX,KAAK,MAAM;gBACT,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACjD,IAAI,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC;gBAChC,MAAM;SACT;QACH,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;QACpC,kBAAkB;QAClB,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;YAClC,IAAI,aAAa,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,6CAA6C;YACpG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC5C,IAAI,WAAW,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;gBAClC,IAAI,aAAa,KAAK,CAAC,WAAW,EAAE,EAAE,uDAAuD;oBAC3F,WAAW,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC;oBAClE,MAAM;iBACP;qBAAM,IAAI,aAAa,GAAG,CAAC,WAAW,EAAE,EAAE,2DAA2D;oBACpG,IAAI,OAAO,GAAG,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBAClC,IAAI,iBAAiB,GAAG,CAAC,aAAa,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,iBAAiB;oBACtH,IAAI,KAAK,GAAG,EAAE,CAAC;oBACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,qFAAqF;wBACjH,KAAK,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,CAAC;wBAC1G,IAAI,CAAC,GAAG,CAAC;4BAAE,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC5C;oBACD,WAAW,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC;oBAClD,MAAM;iBACP;aACF;SACF;QACD,0BAA0B;QAC1B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;YAC9B,QAAQ,SAAS,EAAE;gBACjB,KAAK,KAAK,CAAC;gBACX,KAAK,WAAW,CAAC;gBACjB,KAAK,UAAU;oBACb,IAAI,CAAC,QAAQ,CAAC,eAAe;wBAAE,QAAQ,CAAC,eAAe,GAAG,EAAE,CAAC;oBAC7D,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;oBAC7C,IAAI,CAAC,QAAQ,CAAC,WAAW;wBAAE,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC;oBACrD,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,qBAAqB,CAAC;oBAChD,MAAM;gBACR,KAAK,QAAQ,CAAC;gBACd,KAAK,KAAK;oBACR,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;oBAC7C,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,qBAAqB,CAAC;oBAChD,MAAM;gBACR,KAAK,MAAM;oBACT,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;oBACzC,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,qBAAqB,CAAC;oBACpD,MAAM;aACT;SACF;QAED,yCAAyC;QACzC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;IACxB,CAAC;IAED,+DAAgB,GAAhB,UAAiB,IAA+B,EAAE,SAAS;QACzD,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,IAAI,KAAW,CAAC;QAChB,IAAI,GAAS,CAAC;QACd,IAAI,WAAmB,CAAC;QACxB,KAAoB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;YAArB,IAAM,KAAK;YACd,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAC;gBAC1C,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBACjC,GAAG,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;gBACvD,IAAI,KAAK,CAAC,UAAU,KAAK,IAAI,EAAC;oBAC5B,WAAW,GAAG,KAAK,CAAC,UAAU,CAAC;iBAChC;qBAAM;oBACL,IAAI,OAAO,GAAG,KAAK,CAAC,WAAW,CAAC;oBAChC,qDAAqD;oBACrD,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;oBACrC,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;iBAC/B;gBACD,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC,CAAC,GAAG,WAAW,CAAC;aACvF;SACF;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,+DAAgB,GAAhB,UAAiB,IAA+B;QAC9C,IAAI,GAAW,CAAC;QAChB,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,KAAK,IAAI,EAAC;YAC9B,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU;SACzB;aAAM;YACL,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;YAClC,qDAAqD;YACrD,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACrC,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;SACvB;QACD,KAAoB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;YAArB,IAAM,KAAK;YACd,IAAI,KAAK,CAAC,UAAU,KAAK,IAAI,IAAI,KAAK,CAAC,UAAU,GAAG,GAAG,EAAE;gBACvD,GAAG,GAAG,KAAK,CAAC,UAAU,CAAC;aACxB;;gBACC,IAAI,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;YACrC,qDAAqD;YACrD,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACvC,IAAI,KAAK,CAAC,WAAW,KAAK,IAAI,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,EAAE;gBACxD,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;aACxB;SACF;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,+DAAgB,GAAhB,UAAiB,IAA+B;QAC9C,IAAI,GAAW,CAAC;QAChB,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,KAAK,IAAI,EAAC;YAC9B,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU;SACzB;aAAM;YACL,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;YAClC,qDAAqD;YACrD,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACrC,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;SACvB;QACD,KAAoB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;YAArB,IAAM,KAAK;YACd,IAAI,KAAK,CAAC,UAAU,KAAK,IAAI,IAAI,KAAK,CAAC,UAAU,GAAG,GAAG,EAAE;gBACvD,GAAG,GAAG,KAAK,CAAC,UAAU,CAAC;aACxB;;gBACC,IAAI,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;YACrC,qDAAqD;YACrD,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACvC,IAAI,KAAK,CAAC,WAAW,KAAK,IAAI,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,EAAE;gBACxD,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;aACxB;SACF;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAniBmB;QAAnB,+DAAS,CAAC,OAAO,CAAC;;qEAAa;IACvB;QAAR,2DAAK,EAAE;kCAAgB,0FAAoB;+EAAC;IACnC;QAAT,4DAAM,EAAE;;4EAA8C;IAH5C,oCAAoC;QALhD,+DAAS,CAAC;YACT,QAAQ,EAAE,gCAAgC;;;SAG3C,CAAC;yCAkCiC,kEAAW;YACP,0EAAe;YACjB,oFAAoB;YACpB,oFAAoB,EAAkB,sDAAM;OApCpE,oCAAoC,CAuiBhD;IAAD,2CAAC;CAAA;AAviBgD;;;;;;;;;;;;ACvBjD,0CAA0C,0BAA0B,KAAK,0BAA0B,2BAA2B,yBAAyB,kBAAkB,eAAe,KAAK,sBAAsB,wBAAwB,WAAW,iC;;;;;;;;;;;ACAtP,uiBAAuiB,gBAAgB,mJAAmJ,yYAAyY,gBAAgB,4XAA4X,gBAAgB,4CAA4C,uZAAuZ,gBAAgB,6CAA6C,07BAA07B,6LAA6L,oGAAoG,oBAAoB,qBAAqB,aAAa,YAAY,mGAAmG,iBAAiB,iTAAiT,YAAY,KAAK,sBAAsB,gIAAgI,iBAAiB,uTAAuT,aAAa,YAAY,KAAK,gCAAgC,gIAAgI,aAAa,4LAA4L,wBAAwB,KAAK,qBAAqB,0HAA0H,aAAa,4LAA4L,wBAAwB,KAAK,qBAAqB,8GAA8G,oBAAoB,qBAAqB,aAAa,YAAY,gGAAgG,iBAAiB,6RAA6R,YAAY,KAAK,sBAAsB,0FAA0F,iBAAiB,mTAAmT,aAAa,YAAY,KAAK,gCAAgC,0HAA0H,oBAAoB,YAAY,aAAa,2MAA2M,wBAAwB,KAAK,uBAAuB,iRAAiR,YAAY,gBAAgB,mBAAmB,oBAAoB,4LAA4L,wBAAwB,KAAK,uBAAuB,6C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA56N;AACE;AACR;AACkB;AACA;AAGQ;AAEtB;AAGP;AAE3B;AAEzC;;;;;GAKG;AAMH;IAEE,6CAAoB,WAAwB,EACxB,eAAgC,EAChC,aAAmC,EACnC,aAAmC,EACnC,EAAe,EACf,MAAc;QALd,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,kBAAa,GAAb,aAAa,CAAsB;QACnC,kBAAa,GAAb,aAAa,CAAsB;QACnC,OAAE,GAAF,EAAE,CAAa;QACf,WAAM,GAAN,MAAM,CAAQ;QAQxB,eAAU,GAAG,IAAI,0DAAY,EAAe,CAAC;QAEvD;;WAEG;QACH,cAAS,GAAG,2EAAU,CAAC;QAgBvB;;WAEG;QACH,oBAAe,GAAG,KAAK,CAAC;QAiBxB;;WAEG;QACO,gBAAW,GAAsB,EAAE,CAAC;QAC9C;;WAEG;QACO,eAAU,GAAsB,EAAE,CAAC;QAC7C;;WAEG;QACO,eAAU,GAAsB,EAAE,CAAC;QAE7C;;WAEG;QACO,cAAS,GAAsB,EAAE,CAAC;IAhE5C,CAAC;IAyED,sDAAQ,GAAR;QAAA,iBAuBC;QAtBC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,WAAW,GAAG,KAAK,EAAxB,CAAwB,CAAC,CAAC;QACjF,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,IAAI,GAAG,KAAK,EAAjB,CAAiB,CAAC,CAAC;QAChE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,eAAK;YAC1C,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAE1B,IAAI,CAAC,SAAS,GAAG;YACf,EAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,2EAAU,CAAC,MAAM,EAAC;YAC3C,EAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,2EAAU,CAAC,MAAM,EAAC;SAC5C,CAAC;QAEF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC;QAC3D,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;QACxD,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,KAAK,EAAE,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,KAAK,EAAE,EAAE;YAC5E,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;YAClD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;YAClD,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;QACD,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAE7B,CAAC;IAGO,gEAAkB,GAA1B;QAAA,iBA4DC;QA3DC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC1E,KAAqB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;gBAAtB,IAAM,MAAM;gBACf,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAC,CAAC,CAAC;aACrE;YACD,IAAI,KAAI,CAAC,aAAa,CAAC,QAAQ,IAAI,SAAS,EAAC;gBAC3C,aAAa;gBACb,KAAuB,UAAgB,EAAhB,UAAI,CAAC,WAAW,EAAhB,cAAgB,EAAhB,IAAgB,EAAC;oBAAnC,IAAM,QAAQ;oBACjB,IAAI,QAAQ,CAAC,KAAK,KAAK,KAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;wBAClD,yCAAyC;wBACzC,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;wBACrD,KAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,KAAK,CAAC;wBACrC,4BAA4B;wBAC5B,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAI,CAAC,cAAc,EAAE,KAAI,CAAC,IAAI,CAAC,EAAE,EAAE,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC;6BACjF,SAAS,CAAC,UAAC,MAAc;4BACtB,IAAG,KAAI,CAAC,kBAAkB,KAAK,MAAM,CAAC,2EAAU,CAAC,MAAM,CAAC,EAAE;gCACxD,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;gCACrB,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAE;oCAAhC,IAAM,MAAM;oCACf,sCAAsC;oCACtC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC;oCAC7D,KAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;iCAC/B;gCACD,2BAA2B;gCAC3B,KAAmB,UAAe,EAAf,UAAI,CAAC,UAAU,EAAf,cAAe,EAAf,IAAe,EAAE;oCAA/B,IAAI,MAAM;oCACb,IAAI,MAAM,CAAC,KAAK,KAAK,KAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;wCAChD,qBAAqB;wCACrB,KAAI,CAAC,cAAc,GAAG,MAAM,CAAC,KAAK,CAAC;wCACnC,KAAI,CAAC,eAAe,EAAE,CAAC;qCACxB;iCACF;6BACF;iCAAM,IAAI,KAAI,CAAC,kBAAkB,KAAK,MAAM,CAAC,2EAAU,CAAC,MAAM,CAAC,EAAC;gCAC/D,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;gCACrB,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAE;oCAAhC,IAAM,MAAM;oCACf,sCAAsC;oCACtC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC;oCAC7D,KAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;iCAC/B;gCACD,2BAA2B;gCAC3B,KAAmB,UAAe,EAAf,UAAI,CAAC,UAAU,EAAf,cAAe,EAAf,IAAe,EAAE;oCAA/B,IAAI,MAAM;oCACb,IAAI,MAAM,CAAC,KAAK,KAAK,KAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;wCAChD,qBAAqB;wCACrB,KAAI,CAAC,cAAc,GAAG,MAAM,CAAC,KAAK,CAAC;wCACnC,KAAI,CAAC,eAAe,EAAE,CAAC;qCACxB;iCACF;6BACF;wBACH,CAAC,EACD,eAAK;4BACH,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gCACjF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;6BAAE;4BAC3C,OAAO,CAAC,GAAG,CAAC,8CAA8C,EAAE,KAAK,CAAC,CAAC;wBACrE,CAAC,CAAC,CAAC;qBACR;iBACF;aACF;QACH,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACO,mEAAqB,GAA/B;QAAA,iBAoBC;QAnBC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aAC5D,SAAS,CAAC,UAAC,OAAsB;YAC9B,KAAqB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,EAAE,EAAE,2GAA2G;gBAAtI,IAAM,MAAM;gBACf,IAAI,KAAI,CAAC,kBAAkB,KAAK,2EAAU,CAAC,MAAM,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,EAAE,kDAAkD;oBAClI,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAC,CAAC,CAAC;iBACrE;qBAAM,IAAI,KAAI,CAAC,kBAAkB,KAAK,2EAAU,CAAC,MAAM,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,EAAE,mDAAmD;oBAC1I,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAC,CAAC,CAAC;iBACrE;aACF;YACD,KAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QAChC,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;YACnC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IAET,CAAC;IAED;;OAEG;IACO,6DAAe,GAAzB;QACE,IAAI,IAAI,CAAC,kBAAkB,KAAK,2EAAU,CAAC,MAAM,EAAE;YACjD,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAE7B;aAAM;YACL,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC7B;IACH,CAAC;IAED;;OAEG;IACO,kEAAoB,GAA9B;QAAA,iBAeC;QAdC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aACjF,SAAS,CAAC,UAAC,MAAc;YACtB,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAE;gBAAhC,IAAM,MAAM;gBACf,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC;gBAC7D,KAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;aAC/B;QACH,CAAC,EACD,eAAK;YACH,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBACjF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,8CAA8C,EAAE,KAAK,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;IAET,CAAC;IAED;;OAEG;IACO,kEAAoB,GAA9B;QAAA,iBAcC;QAbC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aACjF,SAAS,CAAC,UAAC,MAAc;YACtB,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,KAAqB,UAAc,EAAd,WAAM,CAAC,OAAO,EAAd,cAAc,EAAd,IAAc,EAAE;gBAAhC,IAAM,MAAM;gBACf,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC;gBAC7D,KAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;aAC/B;QACH,CAAC,EACD,eAAK;YACH,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBACjF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,8CAA8C,EAAE,KAAK,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;IACT,CAAC;IAED,gDAAgD;IAChD;;OAEG;IACH,6DAAe,GAAf;QAAA,iBAmBC;QAlBC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aACnG,SAAS,CAAC,UAAC,eAAgC;YACxC,IAAI,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,KAAK,IAAI,EAAE;gBACjD,KAAI,CAAC,aAAa,CAAC,KAAK,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;gBAC3E,gCAAgC;aACjC;iBAAM;gBACL,KAAI,CAAC,aAAa,CAAC,KAAK,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;gBAClE,gCAAgC;aAChC;YACD,KAAI,CAAC,IAAI,GAAG,eAAe,CAAC,IAAI,CAAC;YACjC,KAAI,CAAC,KAAK,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;QAElD,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,sCAAsC,EAAE,GAAG,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;IACT,CAAC;IAED;;OAEG;IACH,2DAAa,GAAb;QACE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC;QAClD,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACxD,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC;QAClD,IAAI,CAAC,aAAa,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC3D,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,gCAAgC;QAEhC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QACjE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAC7D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAC7D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC;IAC7E,CAAC;IAED,0DAAY,GAAZ;QACE,IAAI,CAAC,eAAe,GAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;QACxD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC;QAC3D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;QAClD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;IACpD,CAAC;IACD;;;;OAIG;IACO,4DAAc,GAAxB,UAAyB,KAAK,EAAE,KAAa;QAA7C,iBAQC;QAPC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,IAAI,sEAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;aAC7H,SAAS,CAAC,gBAAM;QACjB,CAAC,EAAE,eAAK;YACN,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBACjF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACP,CAAC;IAES,+DAAiB,GAA3B,UAA4B,IAAa;QACvC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;IAC/B,CAAC;IAES,iEAAmB,GAA7B;QACE,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;YAC/F,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;SAC9B;aAAM;YACL,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;SAC/B;IACH,CAAC;IAED,4DAA4D;IAClD,oEAAsB,GAAhC;QACE,uCAAuC;QACvC,IAAM,QAAQ,GAAG,QAAQ,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC;QACjE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAgB,CAAC,CAAC;SAClD;IACH,CAAC;IA5TQ;QAAR,2DAAK,EAAE;kCAAgB,gFAAe;8EAAC;IAE9B;QAAT,4DAAM,EAAE;;2EAA8C;IAf5C,mCAAmC;QAL/C,+DAAS,CAAC;YACT,QAAQ,EAAE,8BAA8B;;;SAGzC,CAAC;yCAGiC,kEAAW;YACP,0EAAe;YACjB,oFAAoB;YACpB,oFAAoB;YAC/B,0DAAW;YACP,sDAAM;OAPvB,mCAAmC,CA6U/C;IAAD,0CAAC;CAAA;AA7U+C;;;;;;;;;;;;AC3BhD,mCAAmC,wBAAwB,2BAA2B,sBAAsB,KAAK,K;;;;;;;;;;;ACAjH,iNAAiN,SAAS,UAAU,QAAQ,6DAA6D,oBAAoB,seAAse,6BAA6B,uEAAuE,iBAAiB,kBAAkB,iBAAiB,8FAA8F,kBAAkB,iBAAiB,qFAAqF,kBAAkB,iBAAiB,mMAAmM,6BAA6B,uEAAuE,0MAA0M,8MAA8M,gBAAgB,2D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAn4D,oBAAoB;AACkD;AAC7B;AACkB;AACQ;AACA;AACA;AAIR;AACgB;AAS3E;IAyBE,iCAAoB,eAAgC,EAChC,WAAwB,EACxB,mBAAwC,EACxC,cAA8B,EAC9B,mBAAwC,EACxC,MAAc;QALd,oBAAe,GAAf,eAAe,CAAiB;QAChC,gBAAW,GAAX,WAAW,CAAa;QACxB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,WAAM,GAAN,MAAM,CAAQ;QAjBlC,SAAI,GAAc,EAAE,CAAC;QACX,iBAAY,GAAG,IAAI,0DAAY,EAAO,CAAC;IAiBjD,CAAC;IAbD,wDAAsB,GAAtB;QACE,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;QACtC,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;QACnF,IAAI,CAAC,mBAAmB,CAAC,8BAA8B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACtE,CAAC;IAWD,0CAAQ,GAAR;QAAA,iBAoJC;QAnJC,IAAI,CAAC,WAAW,CAAC,WAAW;aACzB,SAAS,CAAC,UAAC,OAAgB,IAAK,YAAI,CAAC,OAAO,GAAG,OAAO,EAAtB,CAAsB,CAAC,CAAC;QAE3D,IAAI,CAAC,WAAW,CAAC,kBAAkB;aAChC,SAAS,CAAC,qBAAW,IAAI,YAAI,CAAC,kBAAkB,GAAG,WAAW,EAArC,CAAqC,CAAC,CAAC;QAEnE,IAAI,CAAC,WAAW,CAAC,cAAc;aAC5B,SAAS,CAAC,iBAAO,IAAI,YAAI,CAAC,cAAc,GAAG,OAAO,EAA7B,CAA6B,CAAC,CAAC;QAGvD,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,gBAAM,IAAI,YAAI,CAAC,YAAY,GAAG,MAAM,EAA1B,CAA0B,CAAC,CAAC;QAC9E,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,SAAS,CAAC,YAAE,IAAI,YAAI,CAAC,WAAW,GAAG,EAAE,EAArB,CAAqB,CAAC,CAAC;QAC3E,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,SAAS,GAAG,KAAK,EAAtB,CAAsB,CAAC,CAAC;QAC7E,IAAM,WAAW,GAAY,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACpE,WAAY,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;QAClC,WAAY,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;QACnC,WAAY,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC;QAEtD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,SAAS,CAAC,UAAC,QAAQ;YAC/D,KAAI,CAAC,yBAAyB,GAAG,QAAQ,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,GAAG;YACX;gBACE,KAAK,EAAE,mBAAmB;gBAC1B,IAAI,EAAE,cAAc;gBACpB,KAAK,EACH;oBACE;wBACE,KAAK,EAAE,YAAY,EAAE,OAAO,EAAE,UAAC,KAAY;4BACzC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,kEAAU,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;wBACtE,CAAC;qBACF;oBACD;wBACE,KAAK,EAAE,eAAe,EAAE,OAAO,EAAE,UAAC,KAAY;4BAC5C,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,kEAAU,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC;wBACzE,CAAC;qBACF;iBACF;aACJ;YACD;gBACE,KAAK,EAAE,gBAAgB;gBACvB,IAAI,EAAE,eAAe;gBACrB,KAAK,EACH;oBACE;wBACE,KAAK,EAAE,QAAQ;wBACf,OAAO,EAAE,UAAC,KAAY;4BACpB,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,kEAAU,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC,CAAC;wBAChF,CAAC;qBACF;oBACD;wBACE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAC,KAAY;4BACrC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,kEAAU,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC,CAAC;wBAChF,CAAC;qBACF;oBACD;wBACE,KAAK,EAAE,eAAe,EAAE,OAAO,EAAE,UAAC,KAAY;4BAC5C,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,kEAAU,CAAC,kBAAkB,CAAC,QAAQ,EAAE,CAAC,CAAC;wBAC/E,CAAC;qBACF;iBACF;aACJ;YACD;gBACE,KAAK,EAAE,sBAAsB;gBAC7B,IAAI,EAAE,iBAAiB;gBACvB,KAAK,EAAE;oBACL;wBACE,KAAK,EAAE,WAAW,EAAE,OAAO,EAAE,UAAC,KAAY;4BACxC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,kEAAU,CAAC,qBAAqB,CAAC,QAAQ,EAAE,CAAC,CAAC;wBAClF,CAAC;qBACF;oBACF;;;;yBAIK;oBACJ;wBACE,KAAK,EAAE,gBAAgB,EAAE,OAAO,EAAE,UAAC,KAAY;4BAC7C,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,kEAAU,CAAC,0BAA0B,CAAC,QAAQ,EAAE,CAAC,CAAC;wBACvF,CAAC;qBACF;oBACD;wBACE,KAAK,EAAE,YAAY,EAAE,OAAO,EAAE,UAAC,KAAY;4BACzC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,kEAAU,CAAC,sBAAsB,CAAC,QAAQ,EAAE,CAAC,CAAC;wBACnF,CAAC;qBACF;oBACD;wBACE,KAAK,EAAE,kBAAkB,EAAE,OAAO,EAAE,UAAC,KAAY;4BAC/C,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,kEAAU,CAAC,2BAA2B,CAAC,QAAQ,EAAE,CAAC,CAAC;wBACxF,CAAC;qBACF;oBACD;wBACE,KAAK,EAAE,gBAAgB,EAAE,OAAO,EAAE,UAAC,KAAY;4BAC7C,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,kEAAU,CAAC,0BAA0B,CAAC,QAAQ,EAAE,CAAC,CAAC;wBACvF,CAAC;qBACF;iBAEF;aACF;YACD;gBACE,KAAK,EAAE,mBAAmB;gBAC1B,IAAI,EAAE,kBAAkB;gBACxB,KAAK,EAAE;oBACL;wBACE,KAAK,EAAE,2BAA2B,EAAE,OAAO,EAAE,UAAC,KAAY;4BACxD,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,kEAAU,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,CAAC;wBAC3E,CAAC;qBACF;oBACD;wBACE,KAAK,EAAE,4BAA4B,EAAE,OAAO,EAAE,UAAC,KAAY;4BACzD,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,kEAAU,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,CAAC;wBAC5E,CAAC;qBACF;iBACF;aACF;YACD;gBACE,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,iBAAiB;gBACvB,KAAK,EAAE;oBACL,EAAC,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,UAAC,KAAY,IAAM,KAAI,CAAC,sBAAsB,EAAE,GAAC,EAAC;oBAC/E;wBACE,KAAK,EAAE,YAAY,EAAE,OAAO,EAAE,UAAC,KAAY;4BAC3C,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,kEAAU,CAAC,kBAAkB,CAAC,QAAQ,EAAE,CAAC,CAAC;wBAC/E,CAAC;qBAAC;oBACF,EAAC,KAAK,EAAE,cAAc,EAAE,OAAO,EAAE,UAAC,KAAY;4BAC5C,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,kEAAU,CAAC,oBAAoB,CAAC,QAAQ,EAAE,CAAC,CAAC;wBACjF,CAAC,EAAC;oBACF,EAAC,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,UAAC,KAAY;4BACvC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,kEAAU,CAAC,qBAAqB,CAAC,QAAQ,EAAE,CAAC,CAAC;wBAClF,CAAC,EAAC;iBACH;aACF;SACF,CAAC;QAEF,IAAI,CAAC,WAAW,GAAG;YACjB;gBACE,KAAK,EAAE,kBAAkB;gBACzB,OAAO,EAAE,gBAAM,IAAI,YAAI,CAAC,kBAAkB,EAAE,EAAzB,CAAyB;aAC7C;YACD;gBACE,KAAK,EAAE,gBAAgB;gBACvB,OAAO,EAAE,gBAAM,IAAI,YAAI,CAAC,yBAAyB,EAAE,EAAhC,CAAgC;aACpD;SACF,CAAC;IAEJ,CAAC;IAEO,oDAAkB,GAA1B;QAAA,iBAeC;QAdC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;YAC/B,OAAO,EAAE,2CAA2C;YACpD,MAAM,EAAE,kBAAkB;YAC1B,IAAI,EAAE,aAAa;YACnB,MAAM,EAAE;gBACN,eAAe;gBACf,KAAI,CAAC,cAAc,CAAC,eAAe,CAAC,KAAI,CAAC,kBAAkB,CAAC,CAAC;gBAC7D,KAAI,CAAC,IAAI,GAAG,CAAC,EAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,mBAAmB,EAAC,CAAC,CAAC;gBACvF,KAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YACnB,CAAC;YACD,MAAM,EAAE;gBACN,KAAI,CAAC,IAAI,GAAG,CAAC,EAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,oBAAoB,EAAC,CAAC,CAAC;YACtF,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAEO,2DAAyB,GAAjC;QAAA,iBAeC;QAdC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;YAC/B,OAAO,EAAE,yCAAyC;YAClD,MAAM,EAAE,gBAAgB;YACxB,IAAI,EAAE,aAAa;YACnB,MAAM,EAAE;gBACN,eAAe;gBACf,KAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;gBACpC,KAAI,CAAC,IAAI,GAAG,CAAC,EAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,iBAAiB,EAAC,CAAC,CAAC;gBACrF,KAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YACnB,CAAC;YACD,MAAM,EAAE;gBACN,KAAI,CAAC,IAAI,GAAG,CAAC,EAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,oBAAoB,EAAC,CAAC,CAAC;YACtF,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAzMS;QAAT,4DAAM,EAAE;;iEAAwC;IAdtC,uBAAuB;QAPnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,SAAS,EAAE,CAAC,+DAAmB,CAAC;;;SAGjC,CAAC;yCA2BqC,0EAAe;YACnB,kEAAW;YACH,+DAAmB;YACxB,wEAAc;YACT,wFAAmB;YAChC,sDAAM;OA9BvB,uBAAuB,CAyNnC;IAAD,8BAAC;CAAA;AAzNmC;;;;;;;;;;;;ACpBpC,qCAAqC,mBAAmB,wBAAwB,eAAe,eAAe,KAAK,+BAA+B,0BAA0B,KAAK,gCAAgC,0BAA0B,KAAK,2BAA2B,gCAAgC,KAAK,2BAA2B,gCAAgC,KAAK,kDAAkD,qBAAqB,iCAAiC,OAAO,KAAK,kDAAkD,uBAAuB,iCAAiC,OAAO,KAAK,K;;;;;;;;;;;ACA1lB,g6C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAwE;AACf;AAEM;AACR;AACc;AACI;AACZ;AAKhC;AACsB;AACQ;AAEA;AACV;AACQ;AAG2B;AAOpF;IAUE,2BACU,WAAwB,EACxB,eAAgC,EAChC,KAAqB,EACrB,MAAc,EACd,WAA+B,EAC/B,aAAmC,EACnC,cAA8B,EAC9B,mBAAwC;QAPxC,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAoB;QAC/B,kBAAa,GAAb,aAAa,CAAsB;QACnC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,wBAAmB,GAAnB,mBAAmB,CAAqB;QAZlD,iBAAY,GAAoB,EAAE,CAAC;QAEzB,iBAAY,GAAG,IAAI,0DAAY,EAAO,CAAC;IAWjD,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAoBC;QAnBC,IAAI,CAAC,WAAW,CAAC,QAAQ;aACtB,SAAS,CAAC,UAAC,IAAU,IAAK,YAAI,CAAC,IAAI,GAAG,IAAI,EAAhB,CAAgB,CAAC,CAAC;QAE/C,IAAI,CAAC,WAAW,CAAC,WAAW;aACzB,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,OAAO,GAAG,KAAK,EAApB,CAAoB,CAAC,CAAC;QAE5C,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtB,IAAI,CAAC,WAAW,CAAC,kBAAkB;aAChC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,kBAAkB,GAAG,KAAK,EAA/B,CAA+B,CAAC,CAAC;QAEvD,IAAI,CAAC,WAAW,CAAC,WAAW;aACzB,SAAS,CAAC,gBAAM;YACf,KAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;QAEL,uBAAuB;IACzB,CAAC;IAES,0DAA8B,GAAxC,UAAyC,MAAM;QAC7C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC;IAEM,0CAAc,GAArB;QAAA,iBA0GC;QAzGC,IAAI,CAAC,UAAU,GAAG;YAChB;gBACE,KAAK,EAAE,OAAO;gBACd,OAAO,EAAE,UAAC,KAAY;oBACpB,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;gBAC3B,CAAC;aACF;YACD;gBACE,KAAK,EAAE,WAAW;gBAClB,OAAO,EAAE,UAAC,KAAY;oBACpB,KAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;gBAC/B,CAAC;aACF;YACD;gBACE,KAAK,EAAE,WAAW;gBAClB,OAAO,EAAE,UAAC,KAAY;oBACpB,KAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;gBAC/B,CAAC;aACF;YACD;gBACE,KAAK,EAAE,OAAO;gBACd,OAAO,EAAE,UAAC,KAAY;oBACpB,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;gBAC3B,CAAC;aACF;YACD;gBACE,KAAK,EAAE,WAAW;gBAClB,OAAO,EAAE,UAAC,KAAY;oBACpB,KAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;gBAC/B,CAAC;aACF;YACD;gBACE,KAAK,EAAE,UAAU;gBACjB,OAAO,EAAE,UAAC,KAAY;oBACpB,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;gBAC9B,CAAC;aACF;YACD;gBACE,KAAK,EAAE,OAAO;gBACd,OAAO,EAAE,UAAC,KAAY;oBACpB,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;gBAC3B,CAAC;aACF;YACD;gBACE,KAAK,EAAE,MAAM;gBACb,OAAO,EAAE,UAAC,KAAY;oBACpB,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;gBAC1B,CAAC;aACF;YACD;gBACE,KAAK,EAAE,QAAQ;gBACf,OAAO,EAAE,UAAC,KAAY;oBACpB,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gBAC5B,CAAC;aACF;YACD;gBACE,KAAK,EAAE,QAAQ;gBACf,OAAO,EAAE,UAAC,KAAY;oBACpB,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gBAC5B,CAAC;aACF;YACD;gBACE,KAAK,EAAE,gBAAgB;gBACvB,OAAO,EAAE,UAAC,KAAY;oBACpB,KAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;gBACpC,CAAC;aACF;YACD;gBACE,KAAK,EAAE,SAAS;gBAChB,OAAO,EAAE,UAAC,KAAY;oBACpB,KAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;gBAC7B,CAAC;aACF;YACD;gBACE,KAAK,EAAE,QAAQ;gBACf,OAAO,EAAE,UAAC,KAAY;oBACpB,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gBAC5B,CAAC;aACF;YACD;gBACE,KAAK,EAAE,cAAc;gBACrB,OAAO,EAAE,UAAC,KAAY;oBACpB,KAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;gBAClC,CAAC;aACF;YACD;gBACE,KAAK,EAAE,OAAO;gBACd,OAAO,EAAE,UAAC,KAAY;oBACpB,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;gBAC3B,CAAC;aACF;YACD;gBACE,KAAK,EAAE,YAAY;gBACnB,OAAO,EAAE,UAAC,KAAY;oBACpB,KAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;gBAChC,CAAC;aACF;YACD;gBACE,KAAK,EAAE,SAAS;gBAChB,OAAO,EAAE,UAAC,KAAY;oBACpB,KAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;gBAC7B,CAAC;aACF;SAEF,CAAC;IACJ,CAAC;IAEM,wCAAY,GAAnB;QAAA,iBA8CC;QA7CC,IAAM,YAAY,GAAoB,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,iEAAiE;QAC7I,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;aAC3F,SAAS,CAAC,UAAC,KAAuB;YACjC,KAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oCAC3C,CAAC;gBACR,IAAM,UAAQ,GAAa,EAAE,CAAC;gBAC9B,UAAQ,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBAClC,UAAQ,CAAC,SAAS,CAAC,GAAG,UAAC,KAAY;oBACjC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;gBACxD,CAAC,CAAC;gBACF,YAAY,CAAC,CAAC,CAAC,GAAG,UAAQ,CAAC;YAC7B,CAAC;YAPD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE;wBAA5B,CAAC;aAOT;YACD,IAAM,QAAQ,GAAa,EAAE,CAAC;YAC9B,QAAQ,CAAC,OAAO,CAAC,GAAG,aAAa,CAAC;YAClC,QAAQ,CAAC,SAAS,CAAC,GAAG,UAAC,KAAY;gBACjC,KAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC;YACxC,CAAC,CAAC;YACF,QAAQ,CAAC,MAAM,CAAC,GAAG,YAAY,CAAC;YAChC,yFAAyF;YACzF,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC;YAEjC,KAAI,CAAC,KAAK,GAAG;gBACX;oBACE,KAAK,EAAE,UAAU;oBACjB,KAAK,EAAE,KAAI,CAAC,YAAY;oBACxB,IAAI,EAAE,gBAAgB;iBACvB;gBACD;oBACE,KAAK,EAAE,YAAY;oBACnB,KAAK,EAAE,KAAI,CAAC,aAAa,EAAE;oBAC3B,IAAI,EAAE,iBAAiB;iBACxB;gBACD;oBACE,KAAK,EAAE,WAAW;oBAClB,UAAU,EAAE,CAAC,oBAAoB,CAAC;oBAClC,IAAI,EAAE,sBAAsB;iBAC7B;;;;;mBAKE;aACJ,CAAC;QAEJ,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,yCAAa,GAApB;QAAA,iBAuBC;QAtBC,IAAI,cAA+B,CAAC;QACpC,cAAc,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,iEAAiE;gCAEpH,CAAC;YACR,IAAM,UAAQ,GAAa,EAAE,CAAC;YAC9B,UAAQ,CAAC,KAAK,GAAG,OAAK,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACjD,UAAQ,CAAC,OAAO,GAAG,UAAC,KAAY;gBAC9B,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBACpE,KAAI,CAAC,eAAe,CAAC,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACtD,CAAC,CAAC;YACF,cAAc,CAAC,CAAC,CAAC,GAAG,UAAQ,CAAC;QAC/B,CAAC;;QARD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE;oBAA9C,CAAC;SAQT;QAED,IAAM,QAAQ,GAAa,EAAE,CAAC;QAC9B,QAAQ,CAAC,OAAO,CAAC,GAAG,eAAe,CAAC;QACpC,QAAQ,CAAC,SAAS,CAAC,GAAG,UAAC,KAAY;YACjC,KAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC,CAAC;QACF,QAAQ,CAAC,MAAM,CAAC,GAAG,eAAe,CAAC;QACnC,6FAA6F;QAE7F,OAAO,cAAc,CAAC;IACxB,CAAC;IAEO,6CAAiB,GAAzB;QAAA,iBA+BC;QA9BC,IAAM,QAAQ,GAAU,IAAI,6DAAK,CAAC,8CAAM,EAAE,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;QAC3D,IAAM,YAAY,GAAc,IAAI,qEAAS,CAAC,8CAAM,EAAE,EAAE,gBAAa,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;QAEvH,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,IAAI,8DAAO,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;aACrH,SAAS,CAAC,gBAAM;YACb,KAAI,CAAC,eAAe,CAAC,cAAc,CAAC,KAAI,CAAC,eAAe,CAAC,oBAAoB,EAAE,IAAI,sEAAW,CAAC,YAAY,CAAC,EAAE,EAAE,YAAY,CAAC,IAAI,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBAC7J,SAAS,CAAC,gBAAM;gBACb,KAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,KAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,KAAI,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,uEAAU,CAAC,YAAY,EAAE,YAAY,CAAC,EAAE,CAAC,CAAC;qBAC9I,SAAS,CAAC,gBAAM;oBACb,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBAC3C,KAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,KAAI,CAAC,eAAe,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;gBACxC,CAAC,EACD,aAAG;oBACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;wBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;qBAAE;oBAC3C,OAAO,CAAC,GAAG,CAAC,sCAAsC,EAAE,GAAG,CAAC,CAAC;gBAC3D,CAAC,CAAC,CAAC;YACT,CAAC,EACD,aAAG;gBACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;oBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;iBAAE;gBAC3C,OAAO,CAAC,GAAG,CAAC,sCAAsC,EAAE,GAAG,CAAC,CAAC;YAC3D,CAAC,CAAC,CAAC;QACT,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,sCAAsC,EAAE,GAAG,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;IACT,CAAC;IAGD;;;OAGG;IACH,sCAAU,GAAV,UAAW,KAAK;QAAhB,iBAcC;QAbC,IAAM,SAAS,GAAoB,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAoB,CAAC;QAC3F,SAAS,CAAC,IAAI,GAAG,4BAA4B,GAAG,KAAK,GAAG,YAAY,CAAC;QAErE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,uEAAU,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;aAC1H,SAAS,CAAC,gBAAM;QACf,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,GAAG,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IAET,CAAC;IAED;;;OAGG;IACO,2CAAe,GAAzB,UAA0B,EAAU;QAClC,IAAI,CAAC,WAAW,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC;QAC9C,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,EAAE,EAAX,CAAW,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,2CAA2C;IACjJ,CAAC;IAGD,qEAAqE;IAC3D,0CAAc,GAAxB,UAAyB,KAAK,EAAE,IAAI;QAClC,OAAO,IAAI,CAAC;IACd,CAAC;IAES,wCAAY,GAAtB,UAAuB,KAAK,EAAE,IAAI;QAChC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,wCAAY,GAAZ;QAAA,iBAeC;QAdC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aAC5D,SAAS,CAAC,gBAAM;YACb,qBAAqB;YACrB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,IAAM,OAAO,GAAG,MAAM,CAAC;YACvB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAC9B,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,uDAAuD,CAAC,CAAC;YACrE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACT,CAAC;IAED,0DAA0D;IAC1D,yCAAa,GAAb,UAAc,OAAY;QAA1B,iBAmDC;QAlDC,IAAI,MAAM,CAAC;QACX,IAAM,cAAc,GAAkB,EAAE,CAAC;QACzC,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,IAAM,WAAW,GAAkB,EAAE,CAAC;QACtC,IAAM,WAAW,GAAkB,EAAE,CAAC;gCAE3B,MAAM;YACf,OAAK,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAK,IAAI,CAAC,EAAE,EAAE,OAAK,OAAO,CAAC,EAAE,CAAC;iBAC5E,SAAS,CAAC,gBAAM;gBACb,qBAAqB;gBACrB,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;gBAC5C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;gBACvB,QAAQ,MAAM,EAAE;oBACd,mBAAmB;oBACnB,KAAK,CAAC,CAAC,CAAC;wBACN,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;wBAC9B,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;wBACrC,SAAS,EAAE,CAAC;wBACZ,MAAM;qBACP;oBACD,sBAAsB;oBACtB,KAAK,CAAC,CAAC,CAAC;wBACN,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;wBACjC,YAAY,EAAE,CAAC;wBACf,MAAM;qBACP;oBACD,wBAAwB;oBACxB;wBACE,MAAM;iBACT;YACH,CAAC,EACD,aAAG;gBACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;oBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;iBAAE;gBAC3C,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;gBAC5C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC;QACT,CAAC;;QAhCD,kCAAkC;QAClC,KAAqB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO;YAAvB,IAAM,MAAM;oBAAN,MAAM;SA+BhB;QAED,qBAAqB;QACrB;;;;;;;;WAQG;IACL,CAAC;IA1WS;QAAT,4DAAM,EAAE;;2DAAwC;IARtC,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAYuB,kEAAW;YACP,0EAAe;YACzB,8DAAc;YACb,sDAAM;YACD,gFAAkB;YAChB,oFAAoB;YACnB,wEAAc;YACT,mGAAmB;OAlBvC,iBAAiB,CAoX7B;IAAD,wBAAC;CAAA;AApX6B;;;;;;;;;;;;AC5B9B,kCAAkC,mBAAmB,kBAAkB,yBAAyB,wBAAwB,mBAAmB,KAAK,mBAAmB,yBAAyB,KAAK,qBAAqB,uBAAuB,mBAAmB,uBAAuB,0BAA0B,KAAK,gBAAgB,yBAAyB,kBAAkB,kBAAkB,KAAK,qBAAqB,sBAAsB,gBAAgB,cAAc,eAAe,KAAK,aAAa,wBAAwB,KAAK,kBAAkB,yBAAyB,kBAAkB,KAAK,oBAAoB,yBAAyB,kBAAkB,KAAK,cAAc,kBAAkB,uBAAuB,KAAK,0BAA0B,0BAA0B,KAAK,qBAAqB,SAAS,2BAA2B,yBAAyB,cAAc,gBAAgB,yBAAyB,KAAK,mCAAmC,qBAAqB,qCAAqC,kCAAkC,qCAAqC,4BAA4B,KAAK,6BAA6B,iBAAiB,KAAK,K;;;;;;;;;;;ACAhpC,mEAAmE,aAAa,gBAAgB,+uBAA+uB,gBAAgB,oPAAoP,8IAA8I,uJAAuJ,0IAA0I,4JAA4J,uMAAuM,sHAAsH,kGAAkG,wGAAwG,qBAAqB,wJAAwJ,qBAAqB,8JAA8J,qBAAqB,iJAAiJ,qBAAqB,8HAA8H,0LAA0L,yKAAyK,gBAAgB,qDAAqD,oBAAoB,oDAAoD,UAAU,6XAA6X,kBAAkB,oCAAoC,wBAAwB,wIAAwI,yK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA90H;AACL;AACF;AACoB;AACL;AAEd;AACd;AAQzC;IAsBE,mCAAoB,WAAwB,EAAU,gBAAkC,EAAU,aAAmC,EAAU,cAAmC,EAAU,MAAc;QAAtL,gBAAW,GAAX,WAAW,CAAa;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,kBAAa,GAAb,aAAa,CAAsB;QAAU,mBAAc,GAAd,cAAc,CAAqB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAlBhM,uBAAkB,GAAG,EAAE,CAAC;QACxB,iBAAY,GAAiB,EAAE,CAAC;QAE1C,gBAAW,GAAY,KAAK,CAAC;QAa7B,SAAI,GAAc,EAAE,CAAC;IAGrB,CAAC;IAED,4CAAQ,GAAR;QAAA,iBAsBC;QArBC,IAAI,CAAC,WAAW,CAAC,WAAW;aACzB,SAAS,CAAC,eAAK;YACd,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,SAAS,CAAC,gBAAM,IAAI,YAAI,CAAC,WAAW,GAAG,MAAM,EAAzB,CAAyB,CAAC,CAAC;QACnF,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC1C,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAvB,CAAuB,CAAC,CAAC;QAC1E,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,SAAS,CAAC,aAAG,IAAI,YAAI,CAAC,MAAM,GAAG,GAAG,EAAjB,CAAiB,CAAC,CAAC;QACtE,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aAC7D,SAAS,CAAC,gBAAM;YACb,KAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC;QACnC,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;QAEP,IAAI,CAAC,uBAAuB,EAAE,CAAC;IAEjC,CAAC;IAED,kCAAkC;IACxB,+CAAW,GAArB;QAAA,iBAkBC;QAjBC,IAAM,QAAQ,GAAa,IAAI,iEAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC;QACvN,OAAO,CAAC,GAAG,CAAC,YAAY,EAAG,QAAQ,CAAC,CAAC;QACrC,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,QAAQ,CAAC;aACzC,SAAS,CAAC,gBAAM;YACb,qBAAqB;YACrB,+CAA+C;YAC/C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAEpB,KAAI,CAAC,mBAAmB,EAAE,CAAC;QAC7B,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;QACP,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IAES,gDAAY,GAAtB;QAAA,iBAcC;QAbC,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aACrI,SAAS,CAAC,gBAAM;YACb,qBAAqB;YACrB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,KAAI,CAAC,IAAI,GAAG,CAAC,EAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,wBAAwB,EAAC,CAAC,CAAC;YACzF,KAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YACjB,KAAI,CAAC,uBAAuB,EAAE,CAAC;QACjC,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACT,CAAC;IAGD,iCAAiC;IACvB,kDAAc,GAAxB,UAAyB,QAAQ;QAAjC,iBA+BC;QA9BC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC;YAC1B,OAAO,EAAE,sCAAsC;YAC/C,MAAM,EAAE,iBAAiB;YACzB,IAAI,EAAE,aAAa;YACnB,MAAM,EAAE;gBAEN,kBAAkB;gBAClB,KAAI,CAAC,aAAa,CAAC,cAAc,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,KAAI,CAAC,MAAM,EAAE,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,gBAAM;oBACpG,qBAAqB;oBACrB,OAAO,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC;oBACzD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;oBAEpB,KAAI,CAAC,mBAAmB,EAAE,CAAC;oBAC3B,KAAI,CAAC,IAAI,GAAG,CAAC,EAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,kBAAkB,EAAC,CAAC,CAAC;oBACnF,KAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;gBACnB,CAAC,EACD,aAAG;oBACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;wBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;qBAAE;oBAC3C,OAAO,CAAC,GAAG,CAAC,oDAAoD,CAAC,CAAC;oBAClE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACnB,CAAC,CAAC,CAAC;YACP,CAAC;YACD,MAAM,EAAE;gBACN,KAAI,CAAC,IAAI,GAAG,CAAC,EAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,oBAAoB,EAAC,CAAC,CAAC;gBACpF,KAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YACnB,CAAC;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACjC,CAAC;IAED,kDAAc,GAAd;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACjC,CAAC;IAAA,CAAC;IAGF,+CAAW,GAAX,UAAY,KAAK;QACf,IAAI,KAAK,KAAK,SAAS,EAAE;YACvB,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACjE,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;SAChC;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;SACrC;IACH,CAAC;IAEO,uDAAmB,GAA3B;QAAA,iBAUC;QATC,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC7E,KAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;QAC1C,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,2DAAuB,GAA/B;QAAA,iBAeC;QAdC,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;QACxC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aAChE,SAAS,CAAC,gBAAM;YACb,KAAI,CAAC,YAAY,GAAG,MAAM,CAAC,GAAG,CAAC,cAAI;gBACjC,OAAO,EAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC;YAC5C,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;QAC3C,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACT,CAAC;IAlKqB;QAArB,iEAAW,CAAC,OAAO,CAAC;;wEAAmB;IAD7B,yBAAyB;QANrC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,SAAS,EAAE,CAAC,+DAAmB,CAAC;;;SAGjC,CAAC;yCAuBiC,kEAAW,EAA4B,qEAAgB,EAAyB,oFAAoB,EAA0B,+DAAmB,EAAkB,sDAAM;OAtB/L,yBAAyB,CAoKrC;IAAD,gCAAC;CAAA;AApKqC;;;;;;;;;;;;ACftC,kCAAkC,mBAAmB,kBAAkB,yBAAyB,wBAAwB,KAAK,mBAAmB,yBAAyB,KAAK,K;;;;;;;;;;;ACA9K,mEAAmE,aAAa,gBAAgB,0xCAA0xC,UAAU,mGAAmG,UAAU,8DAA8D,+P;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAl/C;AACvB;AAC0B;AACR;AACF;AAWtD;IAWE,iCAAoB,MAAc,EAAU,WAAwB,EAAU,eAAgC,EAAU,gBAAkC;QAAtI,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;IAAG,CAAC;IAE9J,0CAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,WAAW,GAAG,KAAK,EAAxB,CAAwB,CAAC,CAAC;QACjF,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAvB,CAAuB,CAAC,CAAC;QAC1E,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACnD,CAAC;IAED,6CAAW,GAAX,UAAY,KAAK;QACf,IAAI,KAAK,KAAK,SAAS,EAAE;YACvB,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACjE,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;SAChC;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;SACrC;IAAA,CAAC;IAEQ,4CAAU,GAApB,UAAqB,KAAa;QAClC;;;;;;;aAOK;IACL,CAAC;IAES,+CAAa,GAAvB;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC7B,IAAI,WAAW,GAAkB,EAAE,CAAC;QACpC,IAAI,WAAW,GAAmB,EAAE,CAAC;QACrC,MAAM;IACR,CAAC;IA1CmB;QAArB,iEAAW,CAAC,OAAO,CAAC;;sEAAmB;IAD7B,uBAAuB;QANnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAa4B,sDAAM,EAAuB,kEAAW,EAA2B,0EAAe,EAA4B,qEAAgB;OAX/I,uBAAuB,CA6CnC;IAAD,8BAAC;CAAA;AA7CmC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfK;AACc;AAEY;AACuB;AACN;AACO;AAE3F,IAAM,OAAO,GAAW;IACtB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,iFAAkB,EAAC;IACzC,EAAC,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,kGAAuB,EAAC;IAC7D,EAAC,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,wGAAyB,EAAC;IACjE,EAAC,IAAI,EAAE,cAAc,EAAC,SAAS,EAAE,yGAAqB,EAAC;CACtD,CAAC;AAMJ;IAAA;IAAqC,CAAC;IAAzB,qBAAqB;QAJjC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YACzC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,qBAAqB,CAAI;IAAD,4BAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBlC,kBAAkB;AAC6B;AACS;AACU;AACzB;AACI;AAC7C,sBAAsB;AACiC;AACW;AAClE,mBAAmB;AACgC;AAEF;AAEjD,iBAAiB;AACuG;AACrD;AAC8D;AACK;AAC9C;AACE;AAClC;AACsC;AACV;AACO;AAC6E;AACV;AAElC;AACG;AACb;AAElH,kBAAkB;AACgC;AACV;AACI;AACE;AACA;AACA;AACI;AACH;AACH;AACU;AACR;AACU;AACd;AACA;AACE;AACJ;AACM;AACY;AACJ;AACF;AACJ;AACQ;AACF;AACgF;AACH;AAC8B;AAEzG;AACR;AACM;AACA;AACR;AACA;AAE9C,kBAAkB;AACqE;AACD;AACH;AAC0B;AACrC;AACY;AACI;AACkB;AACxB;AACI;AAC5C;AACY;AACN;AACA;AACD;AACgC;AACe;AACK;AACL;AACiB;AACsC;AACoB;AAC0B;AA+FnM;IAAA;IAA8B,CAAC;IAAlB,cAAc;QA5F1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,sEAAiB;gBACjB,8DAAa;gBACb,oEAAgB;gBAChB,0EAAmB;gBACnB,wDAAU;gBACV,kEAAe;gBACf,0DAAW;gBACX,0DAAW;gBACX,wEAAkB;gBAClB,8DAAa;gBACb,sEAAiB;gBACjB,4DAAY;gBACZ,+DAAc;gBACd,kEAAe;gBACf,8DAAa;gBACb,8DAAa;gBACb,8DAAa;gBACb,4DAAY;gBACZ,wDAAU;gBACV,4DAAY;gBACZ,8EAAqB;gBACrB,kEAAY;gBACZ,0DAAW;gBACX,gEAAc;gBACd,kEAAmB;gBACnB,qEAAgB;gBAChB,kEAAY;gBACZ,4DAAY;gBACZ,gEAAc;gBACd,wEAAkB;gBAClB,sEAAiB;gBACjB,gEAAc;gBACd,wEAAkB;gBAClB,sEAAiB;gBACjB,0DAAW;gBACX,sEAAiB;gBACjB,+DAAc;gBACd,gEAAc;gBACd,gEAAc;gBACd,sEAAiB;gBACjB,8DAAa;gBACb,8DAAa;gBACb,4DAAgB;aACjB;YACD,SAAS,EAAE;gBACT,mGAAmB;gBACnB,uGAAqB;gBACrB,2GAAuB;gBACvB,4HAA+B;aAChC;YACD,YAAY,EAAE;gBACZ,uEAAiB;gBACjB,sIAAkB;gBAClB,kFAAkB;gBAClB,qJAA4B;gBAC5B,qJAA4B;gBAC5B,kJAA2B;gBAC3B,gJAAqB;gBACrB,6GAAuB;gBACvB,gLAA+B;gBAC/B,uGAAqB;gBACrB,yGAAyB;gBACzB,mGAAuB;gBACvB,0GAAqB;gBACrB,uLAAmC;gBACnC,6KAA8B;gBAC9B,qGAAmB;gBACnB,iGAAmB;gBACnB,yHAAsB;gBACtB,uFAAc;gBACd,4HAAuB;gBACvB,kGAAe;gBACf,qGAAgB;gBAChB,sGAAmB;gBACnB,4FAAgB;gBAChB,2GAAqB;gBACrB,gHAAsB;gBACtB,8IAAwB;gBACxB,2IAAuB;gBACvB,kKAAsB;gBACtB,iIAA4B;gBAC5B,0GAAqB;gBACrB,sLAAiC;gBACjC,gNAAoC;aACrC;YACD,eAAe,EAAE;gBACf,sIAAkB;gBAClB,gJAAqB;aACtB;SACF,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ;;;;;;;;;;;;ACzL3B,oCAAoC,yBAAyB,iBAAiB,eAAe,aAAa,gBAAgB,KAAK,0BAA0B,cAAc,eAAe,mBAAmB,KAAK,S;;;;;;;;;;;ACA9M,sLAAsL,eAAe,yTAAyT,eAAe,sR;;;;;;;;;;;;ACA7gB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;GAGG;;;;;;;;;;AAEuE;AACR;AACR;AAGW;AAGL;AASA;AAEvB;AAQzC;IAOE,+BAAoB,cAA8B,EAAU,eAAgC,EACxE,WAAwB,EAAU,cAA8B,EAAU,MAAc;QADxF,mBAAc,GAAd,cAAc,CAAgB;QAAU,oBAAe,GAAf,eAAe,CAAiB;QACxE,gBAAW,GAAX,WAAW,CAAa;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QALrG,SAAI,GAAmB,EAAE,CAAC;QAEvB,WAAM,GAAG,CAAC,CAAC;IAIrB,CAAC;IAED,wCAAQ,GAAR;QACE,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAES,6CAAa,GAAvB,UAAwB,KAAK;QAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IACD;;OAEG;IACH,+CAAe,GAAf;QAAA,iBA2BC;QA1BC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE;aACjC,SAAS,CAAC,gBAAM;YACf,IAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;YAChC,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAI,CAAC,eAAe,CAAC,eAAe,EAAG,MAAM,CAAC;iBAC5E,SAAS,CAAC,UAAC,IAAU;gBAClB,IAAI,IAAI,CAAC,IAAI,KAAK,WAAW,EAAE;oBAC7B,KAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;iBACvC;qBAAM,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;oBAClC,KAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;iBACvC;gBACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9B,KAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAC1C,KAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;gBACtC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;YAC7D,CAAC,EACD,aAAG;gBACD,KAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;QACT,CAAC,EAAE,aAAG;YACJ,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,EAAE;gBACtC,KAAI,CAAC,MAAM,GAAG,CAAC,CAAC;aACjB;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACxB,KAAI,CAAC,MAAM,GAAG,CAAC,CAAC;aACjB;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACH,uCAAO,GAAP;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3B,UAAU,CAAC;YACT,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QAC3B,CAAC,EAAE,EAAE,CAAC,CAAC;IACT,CAAC;IAzDqB;QAArB,iEAAW,CAAC,OAAO,CAAC;;oEAAmB;IAD7B,qBAAqB;QANjC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,SAAS,EAAE,CAAC,+DAAmB,CAAC;;;SAGjC,CAAC;yCAQoC,wEAAc,EAA2B,0EAAe;YAC3D,kEAAW,EAA0B,wEAAc,EAAkB,sDAAM;OARjG,qBAAqB,CA2DjC;IAAD,4BAAC;CAAA;AA3DiC;;;;;;;;;;;;AChClC,+B;;;;;;;;;;;ACAA,+eAA+e,qDAAqD,sOAAsO,iCAAiC,sPAAsP,YAAY,mBAAmB,6KAA6K,iCAAiC,+IAA+I,+CAA+C,sGAAsG,6DAA6D,yQAAyQ,aAAa,4QAA4Q,YAAY,mBAAmB,gMAAgM,aAAa,mLAAmL,2BAA2B,2JAA2J,2BAA2B,gfAAgf,2BAA2B,GAAG,gCAAgC,GAAG,+BAA+B,0NAA0N,8CAA8C,yGAAyG,+CAA+C,6gBAA6gB,+CAA+C,GAAG,oDAAoD,GAAG,mDAAmD,ugCAAugC,uDAAuD,+NAA+N,YAAY,uEAAuE,YAAY,mBAAmB,uLAAuL,YAAY,0TAA0T,0BAA0B,qFAAqF,+DAA+D,0OAA0O,aAAa,qRAAqR,YAAY,mBAAmB,wMAAwM,aAAa,iMAAiM,2BAA2B,mKAAmK,2BAA2B,yUAAyU,yBAAyB,+GAA+G,0BAA0B,onEAAonE,OAAO,oHAAoH,mJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5uU;AACvB;AACM;AACnB;AACf;AACwC;AACpB;AAE4B;AACK;AAQ9F;IAyBE,sCAAoB,eAAgC,EAAU,WAAwB,EAAU,gBAAkC,EAC9G,WAA+B,EAAU,MAAc,EAAU,EAAe,EAChF,kBAA6C;QAF7C,oBAAe,GAAf,eAAe,CAAiB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAC9G,gBAAW,GAAX,WAAW,CAAoB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,OAAE,GAAF,EAAE,CAAa;QAChF,uBAAkB,GAAlB,kBAAkB,CAA2B;QAxBvD,sBAAiB,GAAG,EAAE,CAAC;QAEvB,wBAAmB,GAAkB,EAAE,CAAC;QACxC,oBAAe,GAAG,KAAK,CAAC;QAGxB,iBAAY,GAAG,IAAI,0DAAY,EAAO,CAAC;QACvC,SAAI,GAAmB,EAAE,CAAC;QAEpC,2BAA2B;QACjB,WAAM,GAAuB,IAAI,0DAAY,EAAQ,CAAC;QAKtD,UAAK,GAAG,KAAK,CAAC;IAUxB,CAAC;IAED,+CAAQ,GAAR;QAAA,iBAwEC;QAvEC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAC,IAAU;YAC7C,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YAEjB,IAAM,YAAY,GAAG,EAAE,CAAC;YACxB,KAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,KAAI,CAAC,IAAI,CAAC,EAAE,CAAC;iBACrD,SAAS,CAAC,gBAAM;gBACf,KAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC;gBAClC,4EAA4E;gBAC5E,KAAI,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,gBAAM;oBAC3D,MAAM,CAAC,OAAO,CAAC,UAAS,IAAI;wBAAb,iBAiBd;wBAhBC,IAAM,IAAI,GAAG,IAAI,mGAAyB,CAAC,IAAI,CAAC,CAAC;wBACjD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;wBACvC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;wBAClC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,0DAAW,CAAC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EACtF,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;4BACzD,yDAAU,CAAC,YAAY,CAAC,CAAC,CAAC,yDAAU,CAAC,aAAa,CAAC,CAAC;wBACxD,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,aAAG;4BAC9C,IAAI,GAAG,EAAE;gCACP,IAAM,CAAC,GAAG,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC;gCACnD,IAAM,OAAO,GAAG,EAAE,CAAC;gCACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oCACjC,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,EAAE;wCAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;qCAAE;iCAC/D;gCACD,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;6BACrC;wBACH,CAAC,CAAC,CAAC;oBACL,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC;oBAEd,KAAI,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,gBAAM;wBAC3D,MAAM,CAAC,OAAO,CAAC,UAAU,IAAI;4BAAd,iBAed;4BAdC,IAAI,IAAI,GAAG,IAAI,mGAAyB,CAAC,IAAI,CAAC,CAAC;4BAC/C,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;4BACvC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;4BAEtD,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,0DAAW,CAAC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EACtF,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gCACzD,yDAAU,CAAC,YAAY,CAAC,CAAC,CAAC,yDAAU,CAAC,aAAa,CAAC,CAAC;4BACxD,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,aAAG;gCAC9C,IAAM,OAAO,GAAG,EAAE,CAAC;gCACnB,IAAI,CAAC,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;oCACxC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;oCAChC,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;iCACrC;4BACH,CAAC,CAAC,CAAC;wBACL,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC;wBACd,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;oBAChD,CAAC,CAAC,CAAC;oBAEH,sCAAsC;oBACtC,KAAI,CAAC,yBAAyB,EAAE,CAAC;oBAEjC,gBAAgB;oBAChB,oCAAoC;oBACpC,WAAW,CAAC;wBACV,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;oBAC7B,CAAC,EAAE,KAAK,CAAC,CAAC;oBAEV,sDAAsD;oBACtD,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,4BAA4B,EAAE,CAAC;oBAEtD,+CAA+C;oBAC/C,WAAW,CAAC;wBACV,KAAI,CAAC,QAAQ,EAAE,CAAC;oBAClB,CAAC,EAAE,QAAQ,CAAC,CAAC;gBACf,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QAEP,CAAC,CAAC,CAAC;IAEL,CAAC;IAED;;;OAGG;IACK,mEAA4B,GAApC;QAAA,iBA0CC;QAzCC,OAAO,WAAW,CAAC;YACjB,IAAI,CAAC,KAAI,CAAC,KAAK,IAAI,KAAI,CAAC,mCAAmC,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;gBACxE,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,mCAAmC,EAAE,CAAC;gBACpE,IAAM,cAAY,GAAG,EAAE,CAAC;gBACxB,IAAI,GAAG,UAAC;gBACR,KAAY,UAAsB,EAAtB,UAAI,CAAC,iBAAiB,EAAtB,cAAsB,EAAtB,IAAsB,EAAE;oBAA/B,GAAG;oBACN,cAAY,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,0DAAW,CAAC,KAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EACpF,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,yDAAU,CAAC,YAAY,CAAC,CAAC,CAAC,yDAAU,CAAC,aAAa,CAAC,CAAC;oBAC5E,KAAoB,UAAY,EAAZ,QAAG,CAAC,QAAQ,EAAZ,cAAY,EAAZ,IAAY,EAAE;wBAA7B,IAAM,KAAK;wBACd,cAAY,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,0DAAW,CAAC,KAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EACxF,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,yDAAU,CAAC,YAAY,CAAC,CAAC,CAAC,yDAAU,CAAC,aAAa,CAAC,CAAC;qBAC/E;iBACF;gBAED,KAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,cAAI;oBACjC,cAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,aAAG;wBAC9C,IAAI,GAAG,EAAE;4BACP,IAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;4BACxB,IAAM,OAAO,GAAG,EAAE,CAAC;4BACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCACjC,IAAI,cAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,EAAE;oCAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;iCAAE;6BAC/D;4BACD,KAAI,CAAC,eAAe,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;yBAC1C;oBACH,CAAC,CAAC,CAAC;4CACQ,KAAK;wBACd,cAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,aAAG;4BAC/C,IAAM,OAAO,GAAG,EAAE,CAAC;4BACnB,IAAI,CAAC,GAAG,IAAI,cAAY,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;gCACzC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;gCACjC,KAAI,CAAC,eAAe,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;6BAC1C;wBACH,CAAC,CAAC,CAAC;oBACL,CAAC;oBARD,KAAoB,UAAa,EAAb,SAAI,CAAC,QAAQ,EAAb,cAAa,EAAb,IAAa;wBAA5B,IAAM,KAAK;gCAAL,KAAK;qBAQf;gBACH,CAAC,CAAC,CAAC;gBAEH,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,EAAE,CAAC,KAAK,CAAC,cAAY,CAAC,CAAC;gBACnD,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,aAAa,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC;aAChC;QACH,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED;;;;OAIG;IACK,mDAAY,GAApB,UAAqB,UAAU;QAA/B,iBA6CC;QA5CC,mDAAmD;QACnD,IAAI,UAAU,GAAG,IAAI,CAAC;QACtB,KAAK,IAAM,EAAE,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACvC,IAAM,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;YACxC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC5B,KAAoB,UAAa,EAAb,SAAI,CAAC,QAAQ,EAAb,cAAa,EAAb,IAAa,EAAE;oBAA9B,IAAM,KAAK;oBACd,IAAI,KAAK,CAAC,eAAe,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,IAAI,CAAC,QAAQ,EAAE;wBAChG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,8CAA8C,EAAC,CAAC,CAAC;wBACzH,UAAU,GAAG,KAAK,CAAC;qBACpB;iBACF;aACF;YACD,IAAI,IAAI,CAAC,eAAe,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACxF,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,8CAA8C,EAAC,CAAC,CAAC;gBACzH,UAAU,GAAG,KAAK,CAAC;aACpB;SACF;QACD,sEAAsE;QACtE,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC,SAAS,CAAC,gBAAM;gBACpF,gBAAgB;gBAChB,KAAI,CAAC,qBAAqB,CAAC;oBACzB,IAAI,KAAI,CAAC,KAAK,EAAE;wBACd,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,4BAA4B,EAAE,CAAC;wBACtD,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;qBACpB;oBACD,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;gBAC/B,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC;oBACnB,QAAQ,EAAE,SAAS;oBACnB,OAAO,EAAE,EAAE;oBACX,MAAM,EAAE,EAAE;iBACb,CAAC,CAAC;YACH,CAAC,EACD,aAAG;gBACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;oBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;iBAAE;gBAC3C,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC;oBACrB,QAAQ,EAAE,OAAO;oBACjB,OAAO,EAAE,OAAO;oBAChB,MAAM,EAAE,oFAAoF;iBAC7F,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IAED;;OAEG;IACI,mDAAY,GAAnB;QAAA,iBAKC;QAJC,qBAAqB;QACrB,IAAI,CAAC,qBAAqB,CAAC;YACzB,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACK,4DAAqB,GAA7B,UAA8B,IAAc;QAA5C,iBAmBC;QAlBC,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;aACrD,SAAS,CAAC,gBAAM;YACf,KAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC;YAClC,IAAM,SAAS,GAAG,EAAE,CAAC;YACrB,IAAI,KAAK,CAAC;YACV,KAAK,KAAK,IAAI,KAAI,CAAC,iBAAiB,EAAE;gBACpC,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;aAC1B;YACD,mEAAmE;YACnE,IAAI,EAAE,CAAC;YACP,KAAW,UAAwB,EAAxB,UAAI,CAAC,mBAAmB,EAAxB,cAAwB,EAAxB,IAAwB,EAAE;gBAAhC,EAAE;gBACL,IAAI,KAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,KAAK,SAAS,EAAE;oBAC5C,SAAS,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;iBACtB;aACF;YACD,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;YACpC,IAAI,EAAE,CAAC;QACT,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACI,0EAAmC,GAA1C;QACE,IAAM,GAAG,GAAG,KAAK,EAA6B,CAAC;QAC/C,IAAI,IAAI,CAAC;QACT,IAAI,EAAE,CAAC;QACP,IAAI,IAAI,CAAC;QACT,IAAI,KAAK,CAAC;QACV,IAAI,YAAY,GAAG,IAAI,CAAC;QACxB,KAAK,EAAE,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACjC,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;YAClC,IAAG,IAAI,CAAC,SAAS,KAAK,EAAE;gBACtB,SAAS;YACX,IAAI,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,EAAE;gBAC9C,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAChB;iBAAM;gBACL,YAAY,GAAG,IAAI,CAAC;gBACpB,KAAc,UAAa,EAAb,SAAI,CAAC,QAAQ,EAAb,cAAa,EAAb,IAAa,EAAE;oBAAxB,KAAK;oBACR,IAAI,IAAI,CAAC,+BAA+B,CAAC,KAAK,CAAC,EAAE;wBAC/C,IAAI,YAAY,EAAE;4BAChB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;4BACxC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;4BACnB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;4BACf,YAAY,GAAG,KAAK,CAAC;yBACtB;wBACD,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;qBAC1C;iBACF;aACF;SACF;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED;;;;OAIG;IACK,sEAA+B,GAAvC,UAAwC,IAA+B;QACrE,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC;IAC9H,CAAC;IAED;;;;OAIG;IACI,yDAAkB,GAAzB,UAA0B,gBAAgB;QAA1C,iBAQC;QAPC,IAAI,CAAC,qBAAqB,CAAC;YACzB,IAAM,EAAE,GAAG,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC;YACjC,KAAK,IAAM,EAAE,IAAI,gBAAgB,EAAE;gBACjC,EAAE,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,EAAE,CAAC,CAAC;aAC/B;YACD,KAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACI,gEAAyB,GAAhC;QACE,IAAM,GAAG,GAAG,KAAK,EAAU,CAAC;QAC5B,IAAI,EAAE,CAAC;QACP,IAAI,QAAQ,CAAC;QACb,IAAI,KAAK,CAAC;QACV,KAAK,EAAE,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACjC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;YACtC,IAAI,QAAQ,CAAC,SAAS,KAAK,EAAE;gBAC3B,SAAS;YACX,IAAI,IAAI,CAAC,2BAA2B,CAAC,QAAQ,CAAC,EAAE;gBAC9C,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aAC1B;YACD,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE;gBAC7D,KAAc,UAAiB,EAAjB,aAAQ,CAAC,QAAQ,EAAjB,cAAiB,EAAjB,IAAiB,EAAE;oBAA5B,KAAK;oBACR,yHAAyH;oBACzH,IAAI,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,EAAE;wBAC3C,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;wBACzB,MAAM;qBACP;iBACF;aACF;SACF;QACD,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;QAC1B,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;YAClB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;IACH,CAAC;IAED;;;OAGG;IACK,kEAA2B,GAAnC,UAAoC,IAA+B;QACjE,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,eAAe,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IAC5H,CAAC;IAED;;;OAGG;IACO,oDAAa,GAAvB,UAAwB,SAAS;QAAjC,iBAmBC;QAlBC,+HAA+H;QAC/H,kCAAkC;QAClC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,SAAS,CAAC,UAAU,CAAC,CAAC;aAC7D,SAAS,CAAC,gBAAM;YACb,KAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;YACtC,KAAI,CAAC,WAAW,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;YAC3C,KAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3B,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QAC3B,CAAC,EACD,aAAG;YACD,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gBACb,QAAQ,EAAE,OAAO;gBACjB,OAAO,EAAE,OAAO;gBAChB,MAAM,EAAE,GAAG,CAAC,OAAO,CAAC;aACrB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IAET,CAAC;IAzWqB;QAArB,iEAAW,CAAC,OAAO,CAAC;;2EAAmB;IAQ9B;QAAT,4DAAM,EAAE;;sEAAwC;IAIvC;QAAT,4DAAM,EAAE;kCAAS,0DAAY;gEAAkC;IAEvD;QAAR,2DAAK,EAAE;kCAAe,wDAAS;sEAAC;IAftB,4BAA4B;QALxC,+DAAS,CAAC;YACT,QAAQ,EAAE,2BAA2B;;;SAGtC,CAAC;yCA0BqC,0EAAe,EAAuB,kEAAW,EAA4B,qEAAgB;YACjG,gFAAkB,EAAkB,sDAAM,EAAc,0DAAW;YAC5D,8FAAyB;OA3BtD,4BAA4B,CA4WxC;IAAD,mCAAC;CAAA;AA5WwC;;;;;;;;;;;;ACjBzC,+B;;;;;;;;;;;ACAA,mtEAAmtE,ytCAAytC,63BAA63B,OAAO,k3BAAk3B,04CAA04C,66CAA66C,4lCAA4lC,gEAAgE,6DAA6D,wBAAwB,wBAAwB,8CAA8C,wBAAwB,qBAAqB,8CAA8C,wBAAwB,0DAA0D,+MAA+M,qW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnjT;AACO;AAC3B;AACM;AACnB;AACf;AACwC;AACpB;AAIhB;AAC2D;AAOxG;IAmBE,+BAAoB,eAAgC,EAAU,WAAwB,EAAU,gBAAkC,EAC9G,WAA+B,EAAU,MAAc,EAAU,EAAe;QADhF,oBAAe,GAAf,eAAe,CAAiB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAC9G,gBAAW,GAAX,WAAW,CAAoB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,OAAE,GAAF,EAAE,CAAa;QALpG,eAAU,GAAG,KAAK,CAAC;QACnB,iBAAY,GAAG,0CAA0C,CAAC;QAChD,iBAAY,GAAG,IAAI,0DAAY,EAAO,CAAC;IAIjD,CAAC;IAED,wCAAQ,GAAR;QAAA,iBAsCC;QArCC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAC,IAAU;YAC7C,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACf,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAI,CAAC,IAAI,CAAC,EAAE,CAAC;iBACnC,SAAS,CAAC,UAAC,WAAwB;gBAClC,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;gBAC/B,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,EAAE,CAAC,KAAK,CAAC;oBAChC,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;iBACnD,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QAET,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAEhC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAC5G,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnD,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnD,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjC,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnD,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnD,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC5B,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,iFAAsB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YACxI,kBAAkB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,8EAAmB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SACpH,CAAC,CAAC;IAEL,CAAC;IAGS,yCAAS,GAAnB,UAAoB,QAAQ;QAC1B,OAAO,CAAC,yBAAyB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IACpD,CAAC;IAED;;;OAGG;IACO,+CAAe,GAAzB,UAA0B,UAAU;QAApC,iBAuBC;QAtBG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,UAAU,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,aAAa,CAAC,CAAC;YACrG,+GAA+G;YAC/G,6BAA6B;aACvB,SAAS,CAAC,aAAG;YAEV,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAI,CAAC,IAAI,CAAC,EAAE,CAAC;iBACnC,SAAS,CAAC,UAAC,WAAwB;gBAClC,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;gBAC/B,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,kBAAkB,EAAE,MAAM,EAAE,wCAAwC,EAAC,CAAC,CAAC;gBAC7H,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC5B,CAAC,CAAC,CAAC;QACP,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC;gBACnB,QAAQ,EAAE,OAAO;gBACjB,OAAO,EAAE,wBAAwB;gBACjC,MAAM,EAAE,2DAA2D;aACpE,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IAEX,CAAC;IAED;;;OAGG;IACO,4CAAY,GAAtB,UAAuB,UAAU;QAAjC,iBAyBC;QAxBC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,UAAU,CAAC,OAAO,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC;aACrF,SAAS,CAAC,gBAAM;YACb,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC;gBACrB,QAAQ,EAAE,SAAS;gBACnB,OAAO,EAAE,uBAAuB;gBAChC,MAAM,EAAE,6CAA6C;aACtD,CAAC,CAAC;YACH,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,KAAI,CAAC,MAAM,EAAE,CAAC;QAEhB,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,IAAI,GAAG,CAAC,MAAM,KAAK,0DAAQ,EAAE;gBAC3B,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,sCAAsC,EAAC,CAAC,CAAC;aAClH;iBAAM;gBACL,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC;oBACrB,QAAQ,EAAE,OAAO;oBACjB,OAAO,EAAE,OAAO;oBAChB,MAAM,EAAE,0FAA0F;iBACnG,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACT,CAAC;IAED,IAAI;IACH;;;MAGE;IACO,+CAAe,GAAzB,UAA0B,UAAU;QAApC,iBAyBC;QAxBC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,UAAU,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC;aACxF,SAAS,CAAC,gBAAM;YACb,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC;gBACrB,QAAQ,EAAE,SAAS;gBACnB,OAAO,EAAE,kBAAkB;gBAC3B,MAAM,EAAE,wCAAwC;aACjD,CAAC,CAAC;YACJ,6BAA6B;YAC5B,gBAAgB;QAElB,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,IAAI,GAAG,CAAC,MAAM,KAAK,0DAAQ,EAAE;gBAC3B,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,0BAA0B,EAAC,CAAC,CAAC;aACtG;iBAAM;gBACL,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC;oBACrB,QAAQ,EAAE,OAAO;oBACjB,OAAO,EAAE,OAAO;oBAChB,MAAM,EAAE,yFAAyF;iBAClG,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACT,CAAC;IAED;;;OAGG;IACO,gDAAgB,GAA1B,UAA2B,UAAU;QAArC,iBA4BC;QA3BC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,UAAU,CAAC,WAAW,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC;aAC1F,SAAS,CAAC,gBAAM;YACb,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC;gBACrB,QAAQ,EAAE,SAAS;gBACnB,OAAO,EAAE,mBAAmB;gBAC5B,MAAM,EAAE,yCAAyC;aAClD,CAAC,CAAC;YACJ,6BAA6B;YAC5B,gBAAgB;QAElB,CAAC,EACD,aAAG;YACD;;;;oBAIQ;YACR,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aACxC;YACC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC;gBACrB,QAAQ,EAAE,OAAO;gBACjB,OAAO,EAAE,OAAO;gBAChB,MAAM,EAAE,sFAAsF;aAC/F,CAAC,CAAC;YACL,GAAG;QACL,CAAC,CAAC,CAAC;IACT,CAAC;IAED;;;OAGG;IACO,8CAAc,GAAxB,UAAyB,UAAU;QAAnC,iBA4BC;QA3BC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,UAAU,CAAC,SAAS,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC;aACtF,SAAS,CAAC,gBAAM;YACb,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC;gBACrB,QAAQ,EAAE,SAAS;gBACnB,OAAO,EAAE,iBAAiB;gBAC1B,MAAM,EAAE,uCAAuC;aAChD,CAAC,CAAC;YACJ,6BAA6B;YAC5B,gBAAgB;QAElB,CAAC,EAEA,aAAG;YACL;;;;wBAIY;YACR,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC1C,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC;gBACrB,QAAQ,EAAE,OAAO;gBACjB,OAAO,EAAE,OAAO;gBAChB,MAAM,EAAE,yFAAyF;aAClG,CAAC,CAAC;YACN,IAAI;QACL,CAAC,CAAC,CAAC;IACT,CAAC;IAMS,6CAAa,GAAvB,UAAwB,SAAS;QAC/B,+JAA+J;QAC/J,+HAA+H;QAFjI,iBA4BC;QAxBC,+HAA+H;QAE/H,kCAAkC;QAClC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,SAAS,CAAC,UAAU,CAAC,CAAC;aAC7D,SAAS,CAAC,gBAAM;YACf,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;YAC7C,KAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;YACtC,KAAI,CAAC,WAAW,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;YAC3C,KAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3B,UAAU,CAAC;gBACT,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;YAC3B,CAAC,EAAE,GAAG,CAAC,CAAC;QACV,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC;gBACrB,QAAQ,EAAE,OAAO;gBACjB,OAAO,EAAE,OAAO;gBAChB,MAAM,EAAE,GAAG,CAAC,OAAO,CAAC;aACrB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IAEP,CAAC;IAED;;OAEG;IACO,sCAAM,GAAhB;QACE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACvC,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QACtC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QAC3C,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;QAC9C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3B,UAAU,CAAC;YACT,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QAC3B,CAAC,EAAE,EAAE,CAAC,CAAC;QACP,4BAA4B;IAE9B,CAAC;IAED;;;OAGG;IACH,mDAAmB,GAAnB,UAAoB,EAAU;QAA9B,iBAYC;QAXC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC5C,qBAAqB;YACrB,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;YACrD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtB,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,iBAAiB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,kBAAkB,EAAE;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,kDAAkD,CAAC,CAAC;YAChE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IArSqB;QAArB,iEAAW,CAAC,OAAO,CAAC;;oEAAmB;IAGC;QAAxC,+DAAS,CAAC,mHAA4B,CAAC;kCAAkB,mHAA4B;kEAAC;IAa7E;QAAT,4DAAM,EAAE;;+DAAwC;IAjBtC,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAoBqC,0EAAe,EAAuB,kEAAW,EAA4B,qEAAgB;YACjG,gFAAkB,EAAkB,sDAAM,EAAc,0DAAW;OApBzF,qBAAqB,CAwSjC;IAAD,4BAAC;CAAA;AAxSiC;;;;;;;;;;;;ACnBlC,+GAA+G,mPAAmP,0BAA0B,cAAc,wJ;;;;;;;;;;;ACA1Y,sCAAsC,gBAAgB,iBAAiB,0CAA0C,2BAA2B,EAAE,gBAAgB,0BAA0B,gBAAgB,iBAAiB,uBAAuB,WAAW,cAAc,YAAY,aAAa,iBAAiB,wCAAwC,kBAAkB,wBAAwB,2CAA2C,kBAAkB,EAAE,iBAAiB,0CAA0C,EAAE,iCAAiC,kBAAkB,4BAA4B,kCAAkC,kCAAkC,EAAE,qBAAqB,mCAAmC,mCAAmC,EAAE,qCAAqC,mCAAmC,qCAAqC,EAAE,uBAAuB,8BAA8B,EAAE,uBAAuB,8BAA8B,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAh9B;;;GAGG;AACkE;AACZ;AACS;AACR;AACc;AACR;AACiB;AASjF;IAGE,0BAAoB,MAAc,EAAU,eAAgC,EACxD,WAAwB,EAAU,WAA+B,EAAU,cAA8B,EACzG,EAAe,EAAU,KAAqB;QAFlE,iBASC;QATmB,WAAM,GAAN,MAAM,CAAQ;QAAU,oBAAe,GAAf,eAAe,CAAiB;QACxD,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAoB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QACzG,OAAE,GAAF,EAAE,CAAa;QAAU,UAAK,GAAL,KAAK,CAAgB;QAEhE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,kBAAQ;YACpC,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,MAAM,GAAG,IAAI,eAAe,CAAC,QAAQ,CAAC,CAAC;YAC3C,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAQ,GAAR;IAEA,CAAC;IAED;;OAEG;IACH,sCAAW,GAAX;QAAA,iBAYC;QAXC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC;aACtC,SAAS,CAAC,gBAAM;YACf,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,UAAU,CAAC;gBACL,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7B,CAAC,EACD,IAAI,CAAC,CAAC;QACZ,CAAC,EACC,aAAG;YACH,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACP,CAAC;IAjCU,gBAAgB;QAN5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;YAGvB,aAAa,EAAE,+DAAiB,CAAC,IAAI;SACtC,CAAC;yCAI4B,sDAAM,EAA2B,0EAAe;YAC3C,kEAAW,EAAuB,gFAAkB,EAA0B,wEAAc;YACrG,0DAAW,EAAiB,8DAAc;OALvD,gBAAgB,CAkC5B;IAAD,uBAAC;CAAA;AAlC4B;;;;;;;;;;;;ACnB7B,mPAAmP,slBAAslB,4KAA4K,cAAc,mIAAmI,+cAA+c,6KAA6K,cAAc,mIAAmI,slBAAslB,cAAc,mIAAmI,ytBAAytB,OAAO,mIAAmI,+KAA+K,cAAc,wIAAwI,mdAAmd,0KAA0K,cAAc,mIAAmI,soBAAsoB,kLAAkL,cAAc,mIAAmI,khBAAkhB,u2BAAu2B,cAAc,wMAAwM,iBAAiB,6WAA6W,mGAAmG,cAAc,qBAAqB,8VAA8V,mRAAmR,iCAAiC,8OAA8O,YAAY,mBAAmB,2KAA2K,iCAAiC,8GAA8G,qBAAqB,+CAA+C,8EAA8E,2NAA2N,mCAAmC,qRAAqR,YAAY,mBAAmB,kKAAkK,mCAAmC,8GAA8G,2BAA2B,2BAA2B,iHAAiH,2BAA2B,iLAAiL,8CAA8C,+EAA+E,+CAA+C,uNAAuN,sBAAsB,mHAAmH,uHAAuH,0BAA0B,cAAc,yGAAyG,cAAc,kF;;;;;;;;;;;ACAj7V,2BAA2B,gBAAgB,iBAAiB,0CAA0C,2BAA2B,EAAE,WAAW,eAAe,iBAAiB,EAAE,iBAAiB,iBAAiB,eAAe,EAAE,kBAAkB,wBAAwB,EAAE,oBAAoB,wBAAwB,EAAE,mBAAmB,0BAA0B,gBAAgB,gCAAgC,6BAA6B,wBAAwB,uBAAuB,WAAW,cAAc,YAAY,aAAa,iBAAiB,wCAAwC,kBAAkB,wBAAwB,2CAA2C,kBAAkB,EAAE,iBAAiB,iBAAiB,gBAAgB,oBAAoB,uBAAuB,EAAE,2BAA2B,iBAAiB,EAAE,qBAAqB,4BAA4B,wBAAwB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAl5B;;;;GAIG;AACwD;AACK;AAChB;AACT;AAC+B;AACS;AACnB;AAEnB;AACZ;AAC2B;AACI;AACR;AACJ;AAKhD,KAAK;AACoF;AACL;AAOpF;IAuBE,6BAAoB,IAAgB,EACf,MAAc,EACf,eAAgC,EAChC,WAA+B,EAC/B,EAAe,EACf,SAAoC;QALpC,SAAI,GAAJ,IAAI,CAAY;QACf,WAAM,GAAN,MAAM,CAAQ;QACf,oBAAe,GAAf,eAAe,CAAiB;QAChC,gBAAW,GAAX,WAAW,CAAoB;QAC/B,OAAE,GAAF,EAAE,CAAa;QACf,cAAS,GAAT,SAAS,CAA2B;QAvBhD,QAAG,GAAG,MAAM,CAAC;QACX,kBAAa,GAAG,WAAW,CAAC;QAC9B,gBAAW,GAAG,SAAS,CAAC;QACtB,SAAI,GAAmB,EAAE,CAAC;QAM1B,eAAU,GAAc,SAAS,CAAC;QAO5C,iBAAY,GAAG,0CAA0C,CAAC;IAQ1D,CAAC;IAED,sCAAQ,GAAR;QAAA,iBAwDC;QAvDC,KAAK;QACL,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QAGvB,iCAAiC;QACjC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC5B,QAAQ,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;YACjJ,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC5H,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC3H,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAC5G,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACjG,kBAAkB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,8EAAmB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACnH,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC/C,CAAC,CAAC;QAEH,+BAA+B;QAC/B,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,WAAW,EAAC,CAAC,CAAC;QACzD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAC,CAAC,CAAC;QAErD,KAAK;QACL,IAAI,YAAY,GAAG,EAAE,CAAC;QAEzB,IAAI,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,gBAAM;YAClD,MAAM,CAAC,OAAO,CAAC,UAAU,IAAI;gBAC3B,IAAI,IAAI,GAAG,IAAI,oGAAyB,CAAC,IAAI,CAAC,CAAC;gBAC5C,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;gBAC7C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;gBAElC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,0DAAW,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,yDAAU,CAAC,YAAY,CAAC,CAAC,CAAC,yDAAU,CAAC,aAAa,CAAC,CAAC;YACrI,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC;YAEd,KAAI,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,gBAAM;gBAC/C,MAAM,CAAC,OAAO,CAAC,UAAU,IAAI;oBAAd,iBAcpB;oBAZO,IAAI,IAAI,GAAG,IAAI,oGAAyB,CAAC,IAAI,CAAC,CAAC;oBAC/C,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;oBACvC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;oBAE5D,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,0DAAW,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,yDAAU,CAAC,YAAY,CAAC,CAAC,CAAC,yDAAU,CAAC,aAAa,CAAC,CAAC;oBACtI,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,aAAG;;wBACxC,IAAI,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,eAAe,EAAE;4BACnD,IAAI,CAAC,GAAG,EAAE;gCACR,KAAI,CAAC,UAAU,CAAC,UAAU,WAAE,GAAC,IAAI,CAAC,SAAS,IAAG,KAAK,MAAE,CAAC;6BACvD;yBACF;oBACH,CAAC,CAAC,CAAC;gBACX,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC;gBACd,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;YAC7C,CAAC,CAAC,CAAC;QACL,CAAC,EAAE,aAAG;YACJ,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;IACF,CAAC;IAES,uCAAS,GAAnB,UAAoB,QAAQ;QAC1B,OAAO,CAAC,yBAAyB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IACpD,CAAC;IAES,4CAAc,GAAxB,UAAyB,KAAa,EAAE,QAAgB,EAAE,QAAgB,EAAE,SAAiB,EAAE,SAAiB,EAAE,OAAe,EAAE,IAAgB;QACjJ,IAAI,YAAY,GAAG,EAAE,CAAC;QAEtB,IAAI,QAAQ,KAAK,EAAE,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,QAAQ,CAAC,MAAM,GAAG,EAAE,EAAE;YAClE,YAAY,GAAG,kBAAkB,CAAC;SACnC;aAAM,IAAI,SAAS,KAAK,EAAE,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,MAAM,GAAG,EAAE,EAAE;YAC5E,YAAY,GAAG,mBAAmB,CAAC;SACpC;aAAM,IAAI,OAAO,KAAK,EAAE,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,OAAO,CAAC,MAAM,GAAG,EAAE,EAAE;YACtE,OAAO,GAAG,iBAAiB,CAAC;SAC7B;aAAM,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,gCAAgC,CAAC,EAAE;YACzD,YAAY,GAAG,sBAAsB,CAAC;SACvC;aAAM,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YAC9B,YAAY,GAAG,2BAA2B,CAAC;SAC5C;aAAM,IAAI,QAAQ,KAAK,SAAS,EAAE;YACjC,YAAY,GAAG,wBAAwB,CAAC;SACzC;aAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,KAAK,IAAI,CAAC,QAAQ,EAAE,EAA3B,CAA2B,CAAC,CAAC,MAAM,IAAI,CAAC,EAAE;YACzE,YAAY,GAAG,cAAc,CAAC;SAC/B;aAAM,IAAI,IAAI,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,EAAE;YAC1E,YAAY,GAAG,2DAA2D,CAAC;SAC5E;aAAM,IAAI,YAAY,KAAK,EAAE,EAAE;YAC9B,IAAI,CAAC,QAAQ,GAAG;gBACd,QAAQ,EAAE,QAAQ;gBAClB,SAAS,EAAE,SAAS;gBACpB,OAAO,EAAE,OAAO;gBAChB,KAAK,EAAE,KAAK;gBACZ,QAAQ,EAAE,QAAQ;gBAClB,IAAI,EAAE,IAAI;aACX;YACD,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;SACtB;aAAM;YAEL,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gBACb,QAAQ,EAAE,OAAO;gBACjB,OAAO,EAAE,OAAO;gBAChB,MAAM,EAAE,YAAY;aACrB,CAAC,CAAC;SACJ;IACH,CAAC;IAED;;;;;;;;OAQG;IACO,wCAAU,GAApB,UAAqB,KAAa;QAAlC,iBAsFC;QArFC,IAAI,UAAU,GAAW,IAAI,CAAC;QAC9B,IAAI,UAAU,GAAG,EAAE,CAAC;QAEpB,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACrC,IAAI,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;YACzC,IAAI,IAAI,CAAC,eAAe,EAAE;gBACrB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE;oBACd,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;wBACb,QAAQ,EAAE,OAAO;wBACjB,OAAO,EAAE,OAAO;wBAChB,MAAM,EAAE,EAAE,GAAG,YAAY;qBAC1B,CAAC,CAAC;oBACH,UAAU,GAAG,KAAK,CAAC;iBACpB;qBAAM;oBACX,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;iBACrB;aACC;iBAAM,IAAI,KAAK,CAAC,EAAE,CAAC;gBAAE,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACxC;QACD,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;YACzB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gBACb,QAAQ,EAAE,OAAO;gBACjB,OAAO,EAAE,OAAO;gBAChB,MAAM,EAAE,gBAAgB;aACzB,CAAC,CAAC;SACJ;aAAM,IAAI,UAAU,EAAE;YACrB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,UAAU,CAAC;iBACxL,SAAS,CAAC,gBAAM;gBACb,sCAAsC;gBACtC,IAAM,OAAO,GAAG,8CAAM,EAAE,CAAC;gBACzB,IAAM,WAAW,GAAG,8CAAM,EAAE,CAAC;gBAC7B,IAAM,SAAS,GAAG,8CAAM,EAAE,CAAC;gBAC3B,IAAM,UAAU,GAAY,IAAI,+DAAO,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;gBAChE,IAAM,cAAc,GAAgB,IAAI,uEAAW,CAAC,WAAW,EAAE,aAAa,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;gBAE3F,KAAI,CAAC,eAAe,CAAC,cAAc,CAAC,KAAI,CAAC,eAAe,CAAC,eAAe,EAAE,IAAI,2DAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,SAAS,CAAC,CAAC;qBAC5I,SAAS,CAAC,oBAAU;oBACjB,KAAI,CAAC,eAAe,CAAC,cAAc,CAAC,KAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,IAAI,kEAAS,CAAC,SAAS,EAAE,WAAW,EAAE,OAAO,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC;yBACxI,SAAS,CAAC,gBAAM;oBACf,CAAC,EACC,aAAG;wBACH,OAAO,CAAC,GAAG,CAAC,0CAA0C,EAAE,GAAG,CAAC,CAAC;oBAC/D,CAAC,CAAC,CAAC;oBAEP,KAAI,CAAC,eAAe,CAAC,cAAc,CAAC,KAAI,CAAC,eAAe,CAAC,oBAAoB,EAAE,cAAc,CAAC;yBAC3F,SAAS,CAAC,gBAAM;oBACf,CAAC,EACC,aAAG;wBACH,OAAO,CAAC,GAAG,CAAC,0CAA0C,EAAE,GAAG,CAAC,CAAC;oBAC/D,CAAC,CAAC,CAAC;oBAGP,KAAI,CAAC,eAAe,CAAC,cAAc,CAAC,KAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,UAAU,CAAC;yBACpF,SAAS,CAAC,gBAAM;oBACf,CAAC,EACC,aAAG;wBACH,OAAO,CAAC,GAAG,CAAC,0CAA0C,EAAE,GAAG,CAAC,CAAC;oBAC/D,CAAC,CAAC,CAAC;oBAEP,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;wBACb,QAAQ,EAAE,SAAS;wBACnB,OAAO,EAAE,SAAS;wBAClB,MAAM,EAAE,6BAA6B;qBACtC,CAAC,CAAC;oBACH,UAAU,CAAC;wBACT,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,EAAC,QAAQ,EAAE,OAAO,EAAC,CAAC,CAAC;oBACnD,CAAC,EAAE,IAAI,CAAC,CAAC;gBACX,CAAC,EACD,aAAG;oBACD,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;wBACb,QAAQ,EAAE,OAAO;wBACjB,OAAO,EAAE,OAAO;wBAChB,MAAM,EAAE,gFAAgF;qBACzF,CAAC,CAAC;oBACH,OAAO,CAAC,GAAG,CAAC,oCAAoC,EAAE,GAAG,CAAC,CAAC;gBACzD,CAAC,CAAC,CAAC;YACT,CAAC,EACD,aAAG;gBACD,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;oBACb,QAAQ,EAAE,OAAO;oBACjB,OAAO,EAAE,OAAO;oBAChB,MAAM,EAAE,GAAG,CAAC,OAAO,CAAC;iBACrB,CAAC,CAAC;gBACH,OAAO,CAAC,GAAG,CAAC,oCAAoC,EAAE,GAAG,CAAC,CAAC;YACzD,CAAC,CAAC,CAAC;SACR;IACH,CAAC;IA/MoB;QAApB,+DAAS,CAAC,wDAAQ,CAAC;kCAAW,wDAAQ;yDAAC;IApB7B,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAwB0B,+DAAU;YACP,sDAAM;YACE,0EAAe;YACnB,gFAAkB;YAC3B,0DAAW;YACJ,+FAAyB;OA5B7C,mBAAmB,CAqO/B;IAAD,0BAAC;CAAA;AArO+B;;;;;;;;;;;;AChChC,+MAA+M,mBAAmB,gIAAgI,4bAA4b,qBAAqB,8YAA8Y,0BAA0B,wf;;;;;;;;;;;ACA3tC,gDAAgD,gBAAgB,iBAAiB,0CAA0C,2BAA2B,EAAE,kBAAkB,0BAA0B,+BAA+B,4BAA4B,uBAAuB,gCAAgC,6BAA6B,wBAAwB,uBAAuB,WAAW,cAAc,YAAY,aAAa,iBAAiB,wCAAwC,kBAAkB,wBAAwB,2CAA2C,kBAAkB,EAAE,iBAAiB,iBAAiB,+BAA+B,4BAA4B,uBAAuB,oBAAoB,uBAAuB,EAAE,aAAa,iBAAiB,0CAA0C,uCAAuC,kCAAkC,EAAE,qCAAqC,kCAAkC,iBAAiB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAp+B;;;GAGG;AACwF;AAClD;AACyB;AACR;AACc;AACR;AAEf;AAUjD;IAOE,iCAAqB,MAAc,EAAU,eAAgC,EACzD,WAAwB,EAAU,WAA+B,EAAU,cAA8B;QADxG,WAAM,GAAN,MAAM,CAAQ;QAAU,oBAAe,GAAf,eAAe,CAAiB;QACzD,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAoB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QANnH,SAAI,GAAmB,EAAE,CAAC;QAC5B,kBAAa,GAAG,WAAW,CAAC;QAC5B,gBAAW,GAAG,SAAS,CAAC;IAKhC,CAAC;IAED,0CAAQ,GAAR;IAEA,CAAC;IAED;;;OAGG;IACH,8CAAY,GAAZ,UAAa,KAAa;QAA1B,iBA0BC;QAzBC,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,KAAK,CAAC;aACzC,SAAS,CAAC,gBAAM;YACb,KAAI,CAAC,IAAI,CAAC,IAAI,CACd,EAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,4FAA4F,EAAC,CAAC,CAAC;YACpJ,UAAU,CAAC;gBACT,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7B,CAAC,EACC,IAAI,CAAC,CAAC;QACV,CAAC,EACC,aAAG;YACH,IAAI,GAAG,CAAC,MAAM,KAAK,8DAAY,EAAE;gBAC/B,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;oBACb,QAAQ,EAAE,OAAO;oBACjB,OAAO,EAAE,OAAO;oBAChB,MAAM,EAAE,GAAG,CAAC,OAAO,CAAC;iBACrB,CAAC,CAAC;aACJ;iBAAM;gBACL,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;oBACb,QAAQ,EAAE,OAAO;oBACjB,OAAO,EAAE,OAAO;oBAChB,MAAM,EAAE,+DAA+D;iBACxE,CAAC,CAAC;aACJ;YACD,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;IACT,CAAC;IA7CU,uBAAuB;QANnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;YAG/B,aAAa,EAAE,+DAAiB,CAAC,IAAI;SACtC,CAAC;yCAQ6B,sDAAM,EAA2B,0EAAe;YAC5C,kEAAW,EAAuB,gFAAkB,EAA0B,wEAAc;OARlH,uBAAuB,CA8CnC;IAAD,8BAAC;CAAA;AA9CmC;;;;;;;;;;;;ACrBpC,mTAAmT,iFAAiF,sBAAsB,YAAY,0MAA0M,cAAc,kG;;;;;;;;;;;ACA9nB,sCAAsC,iBAAiB,kBAAkB,0CAA0C,2BAA2B,iCAAiC,EAAE,gBAAgB,0BAA0B,qBAAqB,sBAAsB,uBAAuB,WAAW,cAAc,YAAY,aAAa,iBAAiB,wCAAwC,iBAAiB,kBAAkB,EAAE,gBAAgB,8BAA8B,EAAE,4CAA4C,kBAAkB,4BAA4B,kCAAkC,EAAE,mCAAmC,kCAAkC,iBAAiB,EAAE,gCAAgC,mCAAmC,qCAAqC,EAAE,gDAAgD,mCAAmC,qCAAqC,EAAE,kCAAkC,wBAAwB,yBAAyB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAj3B;AACvD;AAEK;AACtB;AAGO;AACiB;AACO;AACK;AACH;AACpB;AACA;AAkBhE;IAOE,uBAAoB,aAA4B,EAAU,mBAAwC,EAAU,MAAc,EAAU,wBAAkD,EAAU,gBAAkC,EAAU,KAAqB;QAA7O,kBAAa,GAAb,aAAa,CAAe;QAAU,wBAAmB,GAAnB,mBAAmB,CAAqB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,6BAAwB,GAAxB,wBAAwB,CAA0B;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAHvP,aAAQ,GAAmB,EAAE,CAAC;QAChC,uBAAkB,GAAG,EAAE,CAAC;IAGhC,CAAC;IAED,gCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED;;;;OAIG;IACK,+BAAO,GAAf;QACE,OAAO;YACL,KAAK,EAAE,OAAO;YACd,OAAO,EAAE,QAAQ;YACjB,MAAM,EAAE,eAAe;YACvB,WAAW,EAAE,qEAAc;SAC5B;IACH,CAAC;IAED;;;;OAIG;IACK,oCAAY,GAApB;QACE,OAAO;YACL,KAAK,EAAE,YAAY;YACnB,OAAO,EAAE,cAAc;YACvB,MAAM,EAAE,YAAY;YACpB,WAAW,EAAE,sFAAmB;SACjC;IACH,CAAC;IAED;;;;OAIG;IACK,uCAAe,GAAvB;QACE,OAAO;YACL,KAAK,EAAE,eAAe;YACtB,OAAO,EAAE,sBAAsB;YAC/B,MAAM,EAAE,mBAAmB;YAC3B,WAAW,EAAE,6FAAsB;SACpC;IACH,CAAC;IAEA;;;;MAIE;IACK,2CAAmB,GAA3B;QACE,OAAO;YACL,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,kCAAkC;YAC3C,MAAM,EAAE,YAAY;YACpB,SAAS,EAAE,KAAK;YAChB,YAAY,EAAE,MAAM;SACrB;IACH,CAAC;IAED;;;;OAIG;IACK,iCAAS,GAAjB;QACE,OAAO;YACL,KAAK,EAAE,SAAS;YAChB,OAAO,EAAE,UAAU;YACnB,MAAM,EAAE,oBAAoB;YAC5B,WAAW,EAAE,4EAAgB;SAC9B;IACH,CAAC;IAED;;;;OAIG;IACK,wCAAgB,GAAxB;QACE,OAAO;YACL,KAAK,EAAE,gBAAgB;YACvB,OAAO,EAAE,kBAAkB;YAC3B,SAAS,EAAE,KAAK;YAChB,WAAW,EAAE,kGAAuB;SACrC;IACH,CAAC;IAED;;;;OAIG;IACK,uCAAe,GAAvB;QACE,OAAO;YACL,KAAK,EAAE,eAAe;YACtB,OAAO,EAAE,iBAAiB;YAC1B,SAAS,EAAE,KAAK;YAChB,WAAW,EAAE,+FAAsB;SACpC;IACH,CAAC;IAED;;;;OAIG;IACK,sCAAc,GAAtB;QACE,OAAO;YACL,KAAK,EAAE,cAAc;YACrB,OAAO,EAAE,gBAAgB;YACzB,SAAS,EAAE,KAAK;YAChB,WAAW,EAAE,2EAAgB;SAC9B;IACH,CAAC;IAED;;;;OAIG;IACK,sCAAc,GAAtB;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC;QACvC,IAAI,GAAG,IAAI,IAAI;YAAE,GAAG,GAAG,EAAE,CAAC;QAC1B,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,8BAA8B;QACvD,OAAO,GAAG,CAAC;IACb,CAAC;IAGD;;;OAGG;IACK,mCAAW,GAAnB;QACE,IAAI,UAAU,GAAG,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC7C,KAAK,IAAI,QAAQ,IAAI,UAAU,EAAE;YAC/B,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;gBAChC,IAAM,MAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;gBAC9B,IAAI,OAAM,CAAC,MAAI,CAAC,KAAK,QAAQ,EAAE;oBAC7B,IAAI,CAAC,kBAAkB,CAAC,MAAI,CAAC,GAAG,CAAC,GAAG,MAAI,CAAC;iBAC1C;aACF;SACF;QAED,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,EAAE,CAAC;QACxB,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,kBAAkB,EAAE;YACvC,IAAI,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;YAExC,kBAAkB;YAClB,IAAI,CAAC,OAAO,GAAG,CAAC,UAAS,GAAG;gBAC1B,OAAO;oBACL,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBAC1B,CAAC;YACH,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEnB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC/B;IACH,CAAC;IAEO,oCAAY,GAApB;QAAA,iBAMC;QALC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;QAExC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAC3B,UAAC,SAAS,IAAK,YAAI,CAAC,WAAW,CAAC,KAAI,CAAC,cAAc,EAAE,CAAC,EAAvC,CAAuC,CACvD,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,uCAAe,GAAvB;QACE,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,YAAY,CAAC,KAAK,EAAE,EAAE;SAChD;IACH,CAAC;IAEF;;;;QAII;IACK,mCAAW,GAAnB,UAAoB,GAAU;QAC5B,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAE7F,IAAI,QAAQ,IAAI,IAAI,EAAE;YACpB,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,QAAQ,CAAC;YACnC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;SAClC;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;gBACjB,QAAQ,EAAE,OAAO;gBACjB,OAAO,EAAE,OAAO;gBAChB,MAAM,EAAE,SAAS,GAAG,GAAG,GAAG,iBAAiB;aAC5C,CAAC,CAAC;SACJ;IACH,CAAC;IAEO,mCAAW,GAAnB,UAAoB,GAAU;QAC5B,OAAO,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;IACtC,CAAC;IAED;;;;OAIG;IACK,qCAAa,GAArB,UAAsB,GAAU;QAC9B,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAEjC,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACvC,IAAM,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;QACrC,IAAI,SAAS,IAAI,IAAI,EAAE;YACrB,IAAM,OAAO,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;YACjF,IAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;SACxD;aAAM;YACL,IAAI,QAAQ,CAAC,UAAU,IAAI,IAAI,EAAE;gBAC/B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;aAChD;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;oBACjB,QAAQ,EAAE,OAAO;oBACjB,OAAO,EAAE,OAAO;oBAChB,MAAM,EAAE,kBAAkB,GAAG,GAAG,GAAG,mBAAmB;iBACvD,CAAC,CAAC;aACJ;SACF;IACH,CAAC;IA3OuB;QAAvB,+DAAS,CAAC,WAAW,CAAC;;oDAAW;IACZ;QAArB,+DAAS,CAAC,SAAS,CAAC;;kDAAS;IACc;QAA3C,+DAAS,CAAC,KAAK,EAAE,EAAC,IAAI,EAAE,8DAAgB,EAAC,CAAC;kCAAM,8DAAgB;8CAAC;IAHvD,aAAa;QAhBzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;YAGpB,aAAa,EAAE,+DAAiB,CAAC,IAAI;YACrC,SAAS,EAAE,CAAC,+DAAmB,EAAE,gEAAa,CAAC;SAChD,CAAC;QAEF;;;;;;UAME;;yCASmC,gEAAa,EAA+B,+DAAmB,EAAkB,sDAAM,EAAoC,sEAAwB,EAA4B,8DAAgB,EAAiB,8DAAc;OAPtP,aAAa,CA8OzB;IAAD,oBAAC;CAAA;AA9OyB;;;;;;;;;;;;AC/B1B,sDAAsD,cAAc,mDAAmD,smBAAsmB,iRAAiR,6XAA6X,mtCAAmtC,w9B;;;;;;;;;;;ACA9jF,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAoE;AAYpE;IAEE;IACA,CAAC;IAED,mCAAQ,GAAR;IAEA,CAAC;IAPU,gBAAgB;QAR5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;YAGvB,aAAa,EAAE,+DAAiB,CAAC,IAAI;SACtC,CAAC;;OAGW,gBAAgB,CAQ5B;IAAD,uBAAC;CAAA;AAR4B;;;;;;;;;;;;ACZ7B,8JAA8J,0aAA0a,cAAc,0fAA0f,cAAc,kdAAkd,2BAA2B,4VAA4V,0BAA0B,0JAA0J,2BAA2B,yGAAyG,+DAA+D,8BAA8B,4E;;;;;;;;;;;ACA5zE,uCAAuC,gBAAgB,iBAAiB,0CAA0C,2BAA2B,EAAE,iBAAiB,0BAA0B,gBAAgB,gCAAgC,6BAA6B,wBAAwB,uBAAuB,WAAW,cAAc,YAAY,aAAa,iBAAiB,wCAAwC,kBAAkB,wBAAwB,2CAA2C,kBAAkB,EAAE,iBAAiB,+BAA+B,4BAA4B,uBAAuB,oBAAoB,uBAAuB,EAAE,aAAa,iBAAiB,0CAA0C,uCAAuC,kCAAkC,EAAE,wBAAwB,oBAAoB,iBAAiB,gBAAgB,eAAe,mBAAmB,iBAAiB,WAAW,YAAY,cAAc,aAAa,EAAE,4DAA4D,gBAAgB,mBAAmB,oBAAoB,WAAW,YAAY,gBAAgB,iBAAiB,0CAA0C,EAAE,kDAAkD,iBAAiB,sBAAsB,EAAE,EAAE,0CAA0C,iBAAiB,sBAAsB,EAAE,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA12C;;;;GAIG;AACkE;AAC5B;AACyB;AACR;AACc;AACR;AAEf;AAqBjD;IAQE,wBAAqB,MAAc,EAAU,eAAgC,EACzD,WAAwB,EAAU,WAA+B,EAAU,cAA8B;QADxG,WAAM,GAAN,MAAM,CAAQ;QAAU,oBAAe,GAAf,eAAe,CAAiB;QACzD,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAoB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAPnH,SAAI,GAAmB,EAAE,CAAC;QAC5B,kBAAa,GAAG,WAAW,CAAC;QAC5B,gBAAW,GAAG,SAAS,CAAC;IAMhC,CAAC;IAED,iCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED;;;;;OAKG;IACH,8BAAK,GAAL,UAAM,QAAgB,EAAE,QAAgB;QAAxC,iBA4BC;QA3BC,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,EAAE;YAC1B,OAAO;SAAE;QACT,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,QAAQ,CAAC;aAC3C,SAAS,CAAC,gBAAM;YACb,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;YAC/B,KAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,EACC,aAAG;YACL,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC;YAC7B,KAAI,CAAC,UAAU,IAAI,CAAC,CAAC;YACrB,IAAI,GAAG,CAAC,MAAM,KAAK,8DAAY,EAAE;gBAC7B,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;oBACb,QAAQ,EAAE,OAAO;oBACjB,OAAO,EAAE,OAAO;oBAChB,MAAM,EAAE,GAAG,CAAC,OAAO,CAAC;iBACrB,CAAC,CAAC;aACJ;iBAAM;gBACL,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;oBACb,QAAQ,EAAE,OAAO;oBACjB,OAAO,EAAE,OAAO;oBAChB,MAAM,EAAE,6DAA6D;iBACtE,CAAC,CAAC;aACJ;YACH,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACT,CAAC;IAED;;OAEG;IACK,qCAAY,GAApB;QAAA,iBAiBC;QAhBC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,eAAe,EAAG,IAAI,CAAC,MAAM,CAAC;aACjF,SAAS,CAAC,UAAC,IAAU;YAClB,IAAI,IAAI,CAAC,IAAI,KAAK,KAAI,CAAC,aAAa,EAAE;gBACpC,KAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;aACvC;iBAAM,IAAI,IAAI,CAAC,IAAI,KAAK,KAAI,CAAC,WAAW,EAAE;gBACzC,KAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;aACvC;YACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9B,KAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC1C,KAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;YACtC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,0CAA0C;QACxG,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,wCAAwC,EAAE,GAAG,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;IAET,CAAC;IAzEU,cAAc;QAN1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;YAGrB,aAAa,EAAE,+DAAiB,CAAC,IAAI;SACtC,CAAC;yCAS6B,sDAAM,EAA2B,0EAAe;YAC5C,kEAAW,EAAuB,gFAAkB,EAA0B,wEAAc;OATlH,cAAc,CAgF1B;IAAD,qBAAC;CAAA;AAhF0B;;;;;;;;;;;;ACjC3B,8M;;;;;;;;;;;ACAA,wCAAwC,iBAAiB,iBAAiB,uBAAuB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;ACA9B;AAUrE;IAEE;IAEA,CAAC;IAED,yCAAQ,GAAR;IAEA,CAAC;IARU,sBAAsB;QAPlC,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;YAGvB,aAAa,EAAE,+DAAiB,CAAC,IAAI;SACtC,CAAC;;OAEW,sBAAsB,CAUlC;IAAD,6BAAC;CAAA;AAVkC;;;;;;;;;;;;ACVnC,6MAA6M,mBAAmB,sOAAsO,2bAA2b,qBAAqB,29BAA29B,qBAAqB,4wBAA4wB,2BAA2B,gU;;;;;;;;;;;ACA7qF,+CAA+C,gBAAgB,iBAAiB,0CAA0C,2BAA2B,EAAE,iBAAiB,0BAA0B,+BAA+B,4BAA4B,uBAAuB,gCAAgC,6BAA6B,wBAAwB,uBAAuB,WAAW,cAAc,YAAY,aAAa,iBAAiB,wCAAwC,kBAAkB,wBAAwB,2CAA2C,kBAAkB,EAAE,iBAAiB,iBAAiB,+BAA+B,4BAA4B,uBAAuB,oBAAoB,uBAAuB,EAAE,aAAa,iBAAiB,0CAA0C,uCAAuC,kCAAkC,EAAE,oCAAoC,kCAAkC,iBAAiB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAj+B;;;GAGG;AACkE;AACZ;AACS;AACR;AACc;AACR;AAEf;AAEgC;AACnB;AAQ9D;IASE,gCAAoB,MAAc,EAAU,eAAgC,EACxD,WAAwB,EAAU,WAA+B,EAAU,cAA8B,EACzG,EAAe,EAAU,KAAqB;QAFlE,iBASC;QATmB,WAAM,GAAN,MAAM,CAAQ;QAAU,oBAAe,GAAf,eAAe,CAAiB;QACxD,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAoB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QACzG,OAAE,GAAF,EAAE,CAAa;QAAU,UAAK,GAAL,KAAK,CAAgB;QATxD,SAAI,GAAmB,EAAE,CAAC;QAC5B,kBAAa,GAAG,WAAW,CAAC;QAC5B,gBAAW,GAAG,SAAS,CAAC;QASjC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,kBAAQ;YACpC,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,MAAM,GAAG,IAAI,eAAe,CAAC,QAAQ,CAAC,CAAC;YAC9C,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACjG,kBAAkB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,8EAAmB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SACpH,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACH,+CAAc,GAAd,UAAe,QAAgB;QAA/B,iBA0BC;QAzBC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC;aACjD,SAAS,CAAC,gBAAM;YACb,KAAI,CAAC,IAAI,CAAC,IAAI,CACd,EAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,gBAAgB,EAAE,MAAM,EAAE,sFAAsF,EAAC,CAAC,CAAC;YAClJ,UAAU,CAAC;gBACP,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7B,CAAC,EACD,IAAI,CAAC,CAAC;QACV,CAAC,EACC,aAAG;YACH,IAAI,GAAG,CAAC,MAAM,KAAK,8DAAY,EAAE;gBAC/B,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;oBACb,QAAQ,EAAE,OAAO;oBACjB,OAAO,EAAE,OAAO;oBAChB,MAAM,EAAE,GAAG,CAAC,OAAO,CAAC;iBACrB,CAAC,CAAC;aACJ;iBAAM;gBACL,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;oBACb,QAAQ,EAAE,OAAO;oBACjB,OAAO,EAAE,OAAO;oBAChB,MAAM,EAAE,GAAG,CAAC,OAAO,CAAC;iBACrB,CAAC,CAAC;aACJ;YACD,OAAO,CAAC,GAAG,CAAC,kCAAkC,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IACT,CAAC;IAzDU,sBAAsB;QANlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;YAG9B,aAAa,EAAE,+DAAiB,CAAC,IAAI;SACtC,CAAC;yCAU4B,sDAAM,EAA2B,0EAAe;YAC3C,kEAAW,EAAuB,gFAAkB,EAA0B,wEAAc;YACrG,0DAAW,EAAiB,8DAAc;OAXvD,sBAAsB,CA0DlC;IAAD,6BAAC;CAAA;AA1DkC;;;;;;;;;;;;;ACtBnC;AAAA;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,iBAAiB,EAAE,OAAO;IAC1B,6CAA6C;IAC7C,QAAQ,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC;IACnC,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;IACjC,WAAW,EAAG,MAAM,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC;IAC1C,yBAAyB;IACzB,WAAW,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC;IACzC,aAAa,EAAG,MAAM,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC;IAC9C,yBAAyB,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,2BAA2B,CAAC;CACtE,CAAC;;;;;;;;;;;;;AChBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAC/B;AAE1B;AAC2B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,wBAAwB;AACxB,IAAM,WAAW,GAAG;IAClB,qGAAqG;IACrG,GAAG,EAAE,qEAAW,CAAC,WAAW,EAAE,KAAK,EAAE,qEAAW,CAAC,aAAa,EAAE,QAAQ,EAAE,qEAAW,CAAC,yBAAyB;CAChH;AAED,IAAM,QAAQ,GAAG,iEAAQ,CAAC,WAAW,CAAC,CAAC;AAEvC,oDAAoD;AACpD,QAAQ,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,gBAAgB,EAAE,CAAC,CAAC,OAAO,CAAC,cAAI;IACtD,IAAI,CAAC,IAAI,EAAE;QACT,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;KAC1B;SAAM;QACL,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;KAC9B;IAED,gDAAgD;IAChD,gGAAsB,EAAE;SACrB,eAAe,CAAC,yDAAS,CAAC;SAC1B,IAAI,CAAC,iBAAO,IAAI,cAAO,CAAC,GAAG,CAAC,OAAO,CAAC,EAApB,CAAoB,CAAC;SACrC,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;IAEpC,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;IAClD,YAAY,CAAC,OAAO,CAAC,mBAAmB,EAAE,QAAQ,CAAC,YAAY,CAAC,CAAC;IAEjE,WAAW,CAAC;QACV,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;aACpB,OAAO,CAAC,mBAAS;YAClB,IAAI,SAAS,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,SAAS,CAAC,CAAC;aAC3C;iBAAM;gBACL,OAAO,CAAC,IAAI,CAAC,iCAAiC,EAC3C,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,GAAG,QAAQ,CAAC,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC;aACzG;QACH,CAAC,CAAC;aACC,KAAK,CAAC;YACP,OAAO,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC,EAAE,MAAM,CAAC,CAAC;AACb,CAAC,CAAC;KACC,KAAK,CAAC;IACP,OAAO,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"containerACPArea\\\">\\r\\n\\t<div style=\\\"padding-top: 5px; color: white; font-size: 30px; font-family: sans-serif; background-color: rgba(0,0,0,0.5)\\\">\\r\\n\\t\\t<div style=\\\"text-align: center;\\\">\\r\\n\\t\\t\\tADMIN CONTROL PANEL 3.0\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"acp-card ui-grid\\\">\\r\\n\\t\\t\\t<div class=\\\"panelMenu\\\">\\r\\n\\t\\t\\t\\t<p-panelMenu [multiple]=\\\"false\\\" #panelMenu></p-panelMenu>\\r\\n\\t\\t\\t</div>   \\r\\n\\t\\t\\t<div class=\\\"acpContent\\\">\\r\\n\\t\\t\\t\\t<p-scrollPanel [style]=\\\"{height: '100%'}\\\">\\r\\n\\t\\t\\t\\t\\t<ng-container #tab></ng-container>\\r\\n\\t\\t\\t\\t</p-scrollPanel>\\t\\r\\n\\t\\t\\t</div>  \\r\\n\\t\\t\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \".containerACPArea {\\n  width: 100%;\\n  height: 100%;\\n  background-image: url(\\\"/development/clickdigital/assets/img/bckacp.jpg\\\");\\n  background-size: cover; }\\n\\n.acp-card {\\n  align-content: center;\\n  position: absolute;\\n  width: auto;\\n  height: auto;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  margin-top: 40px;\\n  margin-bottom: 40px;\\n  margin-left: 10%;\\n  margin-right: 10%;\\n  background: rgba(255, 255, 255, 0.6);\\n  border: 0.5px;\\n  border-style: solid;\\n  border-color: rgba(255, 255, 255, 0.3);\\n  padding: 0px; }\\n\\n.ui-panelmenu {\\n  height: 100% !important; }\\n\\n.acp-card .panelMenu {\\n  float: left;\\n  border: 1px solid gray;\\n  height: 100%;\\n  background: rgba(0, 0, 0, 0.6);\\n  text-align: center; }\\n\\n.acp-card .acpContent {\\n  float: left;\\n  padding-left: 15px;\\n  height: 100%;\\n  display: inline-block; }\\n\\n.ui-menuitem-text {\\n  color: black !important; }\\n\\n.ui-menuitem-icon {\\n  color: black !important; }\\n\"","import { Component, OnInit, ViewEncapsulation, ViewContainerRef, ComponentFactoryResolver, ViewChild} from '@angular/core';\r\nimport { Message, MenuItem } from 'primeng/api';\r\nimport { TabMenuModule } from 'primeng/tabmenu';\r\nimport { ActivatedRoute, Router, NavigationStart} from '@angular/router';\r\n\r\nimport { UserACPComponent } from './user-management/user-acp.component';\r\nimport { PolicyACPComponent } from './policy-management/policy-acp.component';\r\nimport { LogACPComponent } from './log-management/logACP.component';\r\n\r\n@Component({\r\n  selector: 'app-acp',\r\n  templateUrl: './acp.component.html',\r\n  styleUrls: ['./acp.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\n/**\r\n*\tadd new menu item:\r\n*\tStep 1a: declare method (for menu items), important the suffix \"MI\" must be included in the method name\r\n*   Step 1b: or declare method (for submenus), important the suffix \"MI\" is not contained in the method name\r\n*\tStep 2: return an object in the properties similar to MenuModule (if you chose step 1a: attributes not contained in MenuModule, e.g. \"component\", must be specified)\r\n*/\r\n\r\nexport class ACPComponent implements OnInit { \r\n  @ViewChild('panelMenu') panelMenu;\r\n  @ViewChild('tab', {read: ViewContainerRef}) tab: ViewContainerRef;\r\n  private availableMenuItems = {};\r\n  \r\n  constructor(private router: Router, private componentFactoryResolver: ComponentFactoryResolver, private viewContainerRef: ViewContainerRef, private route: ActivatedRoute) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\tthis.initTabMenu();\r\n\tthis.initMenuItem();\r\n  }\r\n  \r\n  /**\r\n   * this method returns an object which is responsible for creating the menu item \"User Management\"\r\n   * the menu item contains submenus: \"Overview\", \"Details\" (currently not in use), \"Add User\"\r\n   *\r\n   * @return object \r\n   */\r\n  private userMI() {\r\n\treturn {\r\n\t  'key': 'user',\r\n\t  'label': 'User Management',\r\n\t  'icon': 'fa fa-user',\r\n\t  'items': [\r\n        this.userOverview(), this.userDetails(), this.userAdd()\r\n      ],\r\n\t  'component': UserACPComponent\r\n\t}\r\n  }\r\n  \r\n  /**\r\n   * this method ensures that the \"Overview\" section is visible and all others are hidden\r\n   *\r\n   * @return object \r\n   */\r\n  private userOverview() {\r\n    return {\r\n\t  'key': 'overview',\r\n\t  'label': 'Overview',\r\n\t  'icon': 'fa fa-dashboard'\r\n\t}\r\n  }\r\n  \r\n  /**\r\n   * this method ensures that the \"Details\" section is visible and all others are hidden\r\n   * [currently not in use]\r\n   *\r\n   * @return object \r\n   */\r\n  private userDetails() {\r\n    return {\r\n\t  'key': 'details',\r\n\t  'label': 'Details',\r\n\t  'icon': 'fa fa-info',\r\n\t  'visible': false\r\n\t}\r\n  }\r\n  \r\n  /**\r\n   * this method ensures that the \"Add User\" section is visible and all others are hidden\r\n   * \r\n   * @return object \r\n   */\r\n  private userAdd() {\r\n    return {\r\n\t  'key': 'add',\r\n\t  'label': 'Add User',\r\n\t  'icon': 'fa fa-plus'\r\n\t}\r\n  }\r\n\r\n  /**\r\n   * this method returns an object which is responsible for creating the menu item \"Policy Management\"\r\n   * the menu item contains submenus: \"Overview\", \"Add Element\", \"Export\", \"Import\", \"Settings\" (currently not in use)\r\n   *\r\n   * @return object \r\n   */\r\n  private policyMI() {\r\n\treturn {\r\n\t  'key': 'policy',\r\n\t  'label': 'Policy Management',\r\n\t  'icon': 'fa fa-user-secret',\r\n\t  'expanded': false,\r\n\t  'items': [\r\n        this.policyOverview(), this.policyAdd(), this.policyExport(), this.policyImport(), this.policySettings()\r\n      ],\r\n\t  'component': PolicyACPComponent\r\n\t}\r\n  }\r\n\r\n  /**\r\n   * this method ensures that the \"Overview\" section is visible and all others are hidden\r\n   * \r\n   * @return object \r\n   */\r\n  private policyOverview() {\r\n    return {\r\n\t  'key': 'overview',\r\n\t  'label': 'Overview',\r\n\t  'icon': 'fa fa-dashboard'\r\n\t}\r\n  }\r\n  \r\n  /**\r\n   * this method ensures that the \"Add Element\" section is visible and all others are hidden\r\n   * \r\n   * @return object \r\n   */\r\n  private policyAdd() {\r\n    return {\r\n\t  'key': 'add',\r\n\t  'label': 'Add Element',\r\n\t  'icon': 'fa fa-plus'\r\n\t}\r\n  }\r\n\r\n  /**\r\n   * this method ensures that the \"Export\" section is visible and all others are hidden\r\n   * \r\n   * @return object \r\n   */\r\n  private policyExport() {\r\n    return {\r\n\t  'key': 'export',\r\n\t  'label': 'Export',\r\n\t  'icon': 'fas fa-arrow-up'\r\n\t}\r\n  }\r\n  \r\n  /**\r\n   * this method ensures that the \"Import\" section is visible and all others are hidden\r\n   * \r\n   * @return object \r\n   */\r\n  private policyImport() {\r\n    return {\r\n\t  'key': 'import',\r\n\t  'label': 'Import',\r\n\t  'icon': 'fas fa-arrow-down'\r\n\t}\r\n  }\r\n\r\n  /**\r\n   * this method ensures that the \"Settings\" section is visible and all others are hidden\r\n   * [currently not in use]\r\n   *\r\n   * @return object \r\n   */\r\n  private policySettings() {\r\n    return {\r\n\t  'key': 'settings',\r\n\t  'label': 'Settings (ACP4.0)',\r\n\t  'icon': 'fas fa-wrench',\r\n\t  'disabled': true,\r\n\t  'visible': false\r\n\t}\r\n  }\r\n  \r\n  /**\r\n   * this method returns an object which is responsible for creating the menu item \"Logs\"\r\n   * the menu item does not contain any submenus\r\n   *\r\n   * @return object \r\n   */\r\n  private logMI() {\r\n    return {\r\n      'key': 'logs',\r\n      'label': 'Logs',\r\n\t  'icon': 'fas fa-history',\r\n      'component':  LogACPComponent\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * in this method, any method that has a suffix \"MI\" is called and its return values are stored in the variable \"availableMenuItems\"\r\n   * in addition, for each menu item and sub-item an event listener is declared which ensures that the corresponding component is loaded and the URL is adjusted accordingly\r\n   */\r\n  private initTabMenu() {\r\n\tvar prototypes = Object.getPrototypeOf(this);\r\n\tfor (var funcName in prototypes) {\r\n\t  if (funcName.substr(-2) === 'MI') {\r\n\t\tconst item = this[funcName]();\r\n\t\tif (typeof(item) === 'object') {\r\n          item._showMenu = true;\r\n\t\t  this.availableMenuItems[item.key] = item;\r\n\t\t}\r\n\t  }\r\n\t}\r\n\t\r\n\tthis.panelMenu.model = [];\r\n\tfor (var obj in this.availableMenuItems) {\r\n      var item = this.availableMenuItems[obj];\r\n\t   \r\n\t  //Eventdeklaration\r\n\t  item.command = (function(key){\r\n\t\t  return function() {\r\n\t\t\tthis.loadComponent(key);\r\n\t\t\twindow.location.assign('/acp#' + key + '/overview');\r\n\t\t  }\r\n\t  })(obj).bind(this);\r\n\r\n\t  //Eventdeklaration: Kinder (max. 2D)\r\n      if (item.items != null) {\r\n        for (var child of item.items) {\r\n\t      child.command =  (function(key, childKey){\r\n\t\t    return function() {\r\n\t\t\t  window.location.assign('/acp#' + key + '/' + childKey);\r\n\t\t    }\r\n\t      })(obj, child.key).bind(this);\r\n\t    }\r\n      }\r\n\r\n\t  this.panelMenu.model.push(item);\r\n\t}\r\n  }\r\n\r\n  private initMenuItem() {\r\n\tthis.setMenuItem('');\r\n  }\r\n  \r\n  /**\r\n   * sets the currently viewed menu item and loads the corresponding component\r\n   *\r\n   * @param key which MenuItem is to be loaded\r\n   */\r\n  private setMenuItem(key:string) {\r\n\tconst menuItem = this.getMenuItem(key == '' ? Object.keys(this.availableMenuItems)[0] : key);\r\n\r\n\tif (menuItem != null) {\r\n\t  this.panelMenu.activeItem = menuItem;\r\n\t  this.loadComponent(menuItem.key);\r\n\t} \r\n  }\r\n\r\n  /**\r\n   * trivial\r\n   *\r\n   * @param key trivial\r\n   */\r\n  private getMenuItem(key:string) {\r\n    return this.availableMenuItems[key];\r\n  }\r\n  \r\n  /**\r\n   * mainly ensures that the content of the component is displayed \r\n   *\r\n   * @param key which MenuItem is to be loaded\r\n   */\r\n  private loadComponent(key:string) {\r\n\tthis.tab.remove(this.tab.length);\r\n\r\n\tconst component = this.getMenuItem(key).component;\r\n\tif (component != null) {\r\n\t  const factory = this.componentFactoryResolver.resolveComponentFactory(component);\r\n\t  const componentRef = this.tab.createComponent(factory);\r\n\t}\r\n  }\r\n  \r\n}\r\n","module.exports = \"<div class=\\\"containerLogACP\\\">\\r\\n\\t<p-table #dt [value]=\\\"logs\\\" [columns]=\\\"cols\\\" [rows]=\\\"10\\\" [loading]=\\\"loading\\\" [paginator]=\\\"true\\\"\\r\\n           (onLazyLoad)=\\\"loadLogs($event)\\\" [totalRecords]=\\\"100000\\\" [lazy]=\\\"true\\\">\\r\\n\\t\\t<ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t<th *ngFor=\\\"let col of columns\\\">\\r\\n\\t\\t\\t\\t\\t{{col.header}}\\r\\n\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t</tr>\\r\\n\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t<th *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\">\\r\\n\\t\\t\\t\\t\\t<p-calendar [inputStyle]=\\\"{'width': '220px', 'font-size': '12px'}\\\" appendTo=\\\"body\\\"  *ngSwitchCase=\\\"'date'\\\"\\r\\n                      [(ngModel)]=\\\"rangeDates\\\" selectionMode=\\\"range\\\" [readonlyInput]=\\\"true\\\" [showTime]=\\\"true\\\" (onSelect)=\\\"loadLogs($event)\\\"></p-calendar>\\r\\n\\t\\t\\t\\t\\t<input style=\\\"width: 100px;\\\" *ngSwitchCase=\\\"'username'\\\" pInputText type=\\\"text\\\" (input)=\\\"loadLogs($event)\\\" [(ngModel)]=\\\"text\\\">\\r\\n\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t</tr>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t<ng-template pTemplate=\\\"body\\\" let-log let-columns=\\\"columns\\\">\\r\\n\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t<td *ngFor=\\\"let col of columns\\\">\\r\\n\\t\\t\\t\\t\\t{{log[col.field]}}\\r\\n\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t</tr>\\r\\n\\t\\t</ng-template>\\r\\n\\t</p-table>  \\r\\n</div>\\r\\n\"","module.exports = \".ui-table {\\n  width: 925px; }\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { LazyLoadEvent, Message } from 'primeng/api';\r\nimport { Log } from '../../models/backend/log';\r\nimport { ACPService} from '../../services/acp.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-logACP',\r\n  templateUrl: './logACP.component.html',\r\n  styleUrls: ['./logACP.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [ACPService]\r\n})\r\n\r\nexport class LogACPComponent implements OnInit {\r\n  logs: Array<Log>;\r\n  cols: any;\r\n  loading: boolean;\r\n  from: Date = undefined;\r\n  till: Date = undefined;\r\n  text: string = '';\r\n  rangeDates: Date[];\r\n  protected msgs: Array<Message> = [];\r\n  rows: number = 10;\r\n\r\n  constructor(private acpservice: ACPService) {\r\n   \r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.cols = [\r\n      {field: 'date', header: 'Date and Time'},\r\n      {field: 'priority', header: 'Priority'},\r\n      {field: 'source', header: 'Source'},\r\n      {field: 'username', header: 'Associated User'},\r\n      {field: 'action', header: 'Action'},\r\n      {field: 'object', header: 'Affected Object'},\r\n      {field: 'status', header: 'Status'}\r\n    ];\r\n\r\n    this.loading = true;\r\n  }\r\n\r\n  /**\r\n   * This method loads logs depending on the event\r\n   *\r\n   * @param ev\r\n   */\r\n  loadLogs(ev: LazyLoadEvent) {\r\n    this.loading = true;\r\n    if (ev.first === undefined)\r\n      ev.first = 0;\r\n    if (ev.rows === undefined)\r\n      ev.rows = this.rows;\r\n\r\n    if (this.rangeDates !== undefined && this.rangeDates[1] !== undefined && this.text.length === 0) {\r\n      this.loadLogsDaterangeFilter(ev);\r\n    }else if (this.rangeDates !== undefined && this.rangeDates[1] !== undefined && this.text.length > 0) {\r\n      this.loadLogsUsernameDaterangeFilter(ev);\r\n    }else\r\n      this.loadLogsNoFilter(ev);\r\n  }\r\n\r\n  /**\r\n   * This method loads logs from the current log file\r\n   *\r\n   * @param ev\r\n   */\r\n  loadLogsNoFilter(ev: LazyLoadEvent) {\r\n    this.acpservice.getLogs(ev.first, ev.rows).subscribe(result => {\r\n      this.logs = result;\r\n      this.msgs.push({\r\n        severity: 'success',\r\n        summary: 'logs loaded successfully'\r\n      });\r\n      this.loading = false;\r\n    }, err => {\r\n      this.msgs.push({\r\n        severity: 'error',\r\n        summary: 'Error!'\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This method loads logs with a date range filter\r\n   *\r\n   * @param ev\r\n   */\r\n  loadLogsDaterangeFilter(ev: LazyLoadEvent) {\r\n    this.acpservice.getLogsDaterangeFilter(this.rangeDates[0], this.rangeDates[1], ev.first, ev.rows).subscribe(result => {\r\n      this.logs = result;\r\n      this.msgs.push({\r\n        severity: 'success',\r\n        summary: 'logs loaded successfully'\r\n      });\r\n      this.loading = false;\r\n    }, err => {\r\n      this.msgs.push({\r\n        severity: 'error',\r\n        summary: 'Error!'\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This method loads logs with a username and date range filter\r\n   *\r\n   * @param ev\r\n   */\r\n  loadLogsUsernameDaterangeFilter(ev: LazyLoadEvent) {\r\n    this.acpservice.getLogsUsernameDaterangeFilter(this.rangeDates[0], this.rangeDates[1], this.text, ev.first, ev.rows).subscribe(result => {\r\n      this.logs = result;\r\n      this.msgs.push({\r\n        severity: 'success',\r\n        summary: 'logs loaded successfully'\r\n      });\r\n      this.loading = false;\r\n    }, err => {\r\n      this.msgs.push({\r\n        severity: 'error',\r\n        summary: 'Error!',\r\n        detail: 'Error while loading logs'\r\n      });\r\n    });\r\n  }\r\n  \r\n}\r\n","module.exports = \"<p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"fa fa-exclamation-triangle\\\"></p-confirmDialog>\\r\\n<p-growl [value]=\\\"privacyMsgs\\\" [sticky]=\\\"true\\\"></p-growl>\\r\\n\\r\\n<div style=\\\"display: none\\\" #overview>\\r\\n\\t<div style=\\\"font-size: 15px; color: white\\\" *ngIf=\\\"sequenceList.length === 0\\\">\\r\\n\\t\\tempty\\r\\n\\t</div>\\r\\n\\t<div *ngFor=\\\"let currID of sequenceList; let i=index\\\" id=\\\"{{currID}}\\\">\\r\\n\\t\\t<div class=\\\"vertical-align\\\" *ngIf=\\\"availableElements[currID] != null\\\">\\r\\n\\t\\t\\t<p-fieldset [toggleable]=\\\"false\\\" [collapsed]=\\\"false\\\">\\r\\n\\t\\t\\t\\t<p-header>\\r\\n\\t\\t\\t\\t\\t<div style=\\\"border: none; font-weight: bold; background-color: black; color: white\\\" class=\\\"ui-message\\\">\\r\\n\\t\\t\\t\\t\\t  {{availableElements[currID].title}}\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</p-header>\\r\\n\\t\\t\\t\\t<div style=\\\"width: 650px;\\\">\\r\\n\\t\\t\\t\\t\\t{{availableElements[currID].descriptions.before}}<hr/>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"availableElements[currID].children.length == 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i>empty</i>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngFor=\\\"let child of availableElements[currID].children; let i=index\\\" id=\\\"{{child.id}}\\\">\\r\\n\\t\\t\\t\\t\\t\\t<p-fieldset *ngIf=\\\"availableElements[child.id] != null\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<p-header>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div style=\\\"border: none; font-weight: bold;\\\" class=\\\"ui-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{availableElements[child.id].title}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</p-header>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div style=\\\"width: 600px;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{child.descriptions.before}}\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-g-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<u>{{child.descriptions.submit}}</u><br/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-g-8\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button pButton icon=\\\"fas fa-wrench\\\" style=\\\"background-color: blue; margin-right: 5px;\\\" type=\\\"submit\\\" label=\\\"CHANGE\\\" (click)=\\\"prepareChangeArea(child.id)\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button pButton icon=\\\"fas fa-arrow-up\\\" style=\\\"background-color: green; margin-right: 5px;\\\" type=\\\"submit\\\" label=\\\"EXPORT\\\" (click)=\\\"prepareExportArea(child.id)\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button pButton icon=\\\"fa fa-trash\\\" style=\\\"background-color: red;\\\" type=\\\"submit\\\" label=\\\"REMOVE\\\" (click)=\\\"prepareRemoveArea(child.id)\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-g-4\\\" style=\\\"text-align: right; color: green; -ms-transform: translateY(25%); transform: translateY(25%);\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"child.inUse\\\">✔inUse </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"child.consentRequired\\\">✔consentRequired </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"child.preChecked\\\">✔preChecked </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</p-fieldset>\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<hr/>{{availableElements[currID].descriptions.after}}\\r\\n\\t\\t\\t\\t\\t<div class=\\\"ui-g-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<u>{{availableElements[currID].descriptions.submit}}</u><br/>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"ui-g-8\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<button pButton icon=\\\"fas fa-wrench\\\" style=\\\"background-color: blue; margin-right: 5px;\\\" type=\\\"submit\\\" label=\\\"CHANGE\\\" (click)=\\\"prepareChangeArea(currID)\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button pButton icon=\\\"fas fa-arrow-up\\\" style=\\\"background-color: green; margin-right: 5px;\\\" type=\\\"submit\\\" label=\\\"EXPORT\\\" (click)=\\\"prepareExportArea(currID)\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button pButton icon=\\\"fa fa-trash\\\" style=\\\"background-color: red;\\\" type=\\\"submit\\\" label=\\\"REMOVE\\\" (click)=\\\"prepareRemoveArea(currID)\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"ui-g-4\\\" style=\\\"text-align: right; color: green; -ms-transform: translateY(25%); transform: translateY(25%);\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"availableElements[currID].inUse\\\">✔inUse </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"availableElements[currID].consentRequired\\\">✔consentRequired</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"availableElements[currID].preChecked\\\">✔preChecked </span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</p-fieldset>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\t\\r\\n\\t<br/>\\r\\n\\t<br/>\\r\\n</div>\\r\\n\\r\\n<div style=\\\"display: none; width: 500px\\\" #add>\\r\\n\\t<form [formGroup]=\\\"addElementForm\\\" *ngIf=\\\"addElementForm != null\\\" (ngSubmit)=\\\"checkElementInsertion(addElementForm.value)\\\">\\r\\n\\t\\t<p-fieldset [toggleable]=\\\"false\\\">\\r\\n\\t\\t\\t<p-header>\\r\\n\\t\\t\\t\\t<div class=\\\"ui-g\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"ui-g-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t<button pButton type=\\\"button\\\" icon=\\\"fas fa-plus\\\" style=\\\"background-color: green; width: 50px; height: 65px; margin-top: 25px;\\\"></button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"ui-g-1\\\" style=\\\"width: 250px; text-align: right; color: green; -ms-transform: translateY(25%); transform: translateY(25%);\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText formControlName=\\\"id\\\" placeholder=\\\"id\\\" class=\\\"policyInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText formControlName=\\\"contextID\\\" placeholder=\\\"contextID\\\" class=\\\"policyInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText formControlName=\\\"priorVersion\\\" placeholder=\\\"priorVersion\\\" class=\\\"policyInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText formControlName=\\\"title\\\" placeholder=\\\"title\\\" class=\\\"policyInput\\\">\\t\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</p-header>\\r\\n\\t\\t\\t<div style=\\\"width: 400px;\\\">\\r\\n\\t\\t\\t\\t<textarea style=\\\"width: 100%; height: 100px;\\\" type=\\\"text\\\" InputTextareaModule formControlName=\\\"descriptionsBefore\\\" placeholder=\\\"descriptions.before\\\"></textarea>\\r\\n\\t\\t\\t\\t<br/><hr/>\\r\\n\\t\\t\\t\\t<b>sub-elements</b>\\r\\n\\t\\t\\t\\t<hr/>\\r\\n\\t\\t\\t\\t<textarea style=\\\"width: 100%; height: 100px;\\\" type=\\\"text\\\" InputTextareaModule formControlName=\\\"descriptionsAfter\\\" placeholder=\\\"descriptions.after\\\"></textarea>\\r\\n\\t\\t\\t\\t<p-calendar showTime=\\\"true\\\" hourFormat=\\\"24\\\"  formControlName=\\\"validFrom\\\" placeholder=\\\"validFrom\\\"></p-calendar>\\r\\n\\t\\t\\t\\t<div class=\\\"ui-g-25\\\">\\r\\n\\t\\t\\t\\t    <p-checkbox binary=\\\"true\\\" formControlName=\\\"inUse\\\" title=\\\"inUse\\\"></p-checkbox>\\r\\n\\t\\t\\t\\t\\t<p-checkbox binary=\\\"true\\\" formControlName=\\\"consentRequired\\\" title=\\\"consentRequired\\\"></p-checkbox>\\r\\n\\t\\t\\t\\t\\t<p-checkbox binary=\\\"true\\\" formControlName=\\\"preChecked\\\" title=\\\"preChecked\\\"></p-checkbox>\\r\\n\\t\\t\\t\\t\\t<input style=\\\"width: 100%\\\" type=\\\"text\\\" pInputText formControlName=\\\"descriptionsSubmit\\\" placeholder=\\\"descriptions.submit\\\">\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t<button pButton type=\\\"submit\\\" style=\\\"margin-right: 5px;\\\" label=\\\"Add Element\\\"></button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</p-fieldset>\\r\\n\\t</form>\\r\\n\\t<br/>\\r\\n</div>\\r\\n\\r\\n<div style=\\\"display: none\\\" #export>\\r\\n\\t<form [formGroup]=\\\"exportElementForm\\\" *ngIf=\\\"exportElementForm != null\\\" (ngSubmit)=\\\"checkBackupElementInsertion(exportElementForm.value)\\\">\\r\\n\\t\\t<p-selectButton formControlName=\\\"selectedTab\\\" [options]=\\\"exportTabOptions\\\"></p-selectButton>\\r\\n\\t\\t<div style=\\\"\\\" *ngIf=\\\"exportElementForm.controls.selectedTab.value === 'db'\\\">\\r\\n\\t\\t\\t<p-listbox formControlName=\\\"selectedBackupElement\\\" [options]=\\\"exportTabEntries\\\"></p-listbox>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf=\\\"exportElementForm.controls.selectedTab.value === 'tf'\\\">\\r\\n\\t\\t\\t<textarea type=\\\"text\\\" InputTextareaModule formControlName=\\\"backupContent\\\"></textarea><br/>\\r\\n\\t\\t\\t<input type=\\\"hidden\\\" pInputText formControlName=\\\"backupID\\\">\\r\\n\\t\\t\\t<input type=\\\"text\\\" pInputText formControlName=\\\"backupName\\\" placeholder=\\\"enter name for saving backup\\\">\\r\\n\\t\\t\\t<div style=\\\"color: black; font-weight: bold;\\\">\\r\\n\\t\\t\\t\\t<button *ngIf=\\\"this.exportElementForm.value.backupID === ''\\\" pButton style=\\\"background-color: green; margin-right: 5px;\\\" type=\\\"submit\\\" label=\\\"CREATE BACKUP\\\" [disabled]=\\\"!exportElementForm.valid\\\"></button>\\r\\n\\t\\t\\t\\t<button *ngIf=\\\"this.exportElementForm.value.backupID !== ''\\\" pButton style=\\\"background-color: blue; margin-right: 5px;\\\" type=\\\"submit\\\" label=\\\"CHANGE BACKUP\\\" [disabled]=\\\"!exportElementForm.valid\\\"></button>\\r\\n\\t\\t\\t\\t<button *ngIf=\\\"this.exportElementForm.value.backupID !== ''\\\" pButton style=\\\"background-color: green; margin-right: 5px;\\\" type=\\\"button\\\" label=\\\"CREATE COPY\\\" (click)=\\\"createBackupCopy(this.exportElementForm.value.backupID)\\\"></button>\\r\\n\\t\\t\\t\\t<button *ngIf=\\\"this.exportElementForm.value.backupID !== ''\\\" pButton style=\\\"background-color: red\\\" type=\\\"button\\\" label=\\\"REMOVE BACKUP\\\" (click)=\\\"removeBackupElement(this.exportElementForm.value.backupID)\\\"></button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<br/>\\r\\n\\t</form>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div style=\\\"display: none\\\" #import>\\r\\n\\t<form [formGroup]=\\\"importElementForm\\\" *ngIf=\\\"importElementForm != null\\\" (ngSubmit)=\\\"checkImportElementInsertion(importElementForm.value)\\\">\\r\\n\\t\\t<p-listbox formControlName=\\\"selectedBackupElement\\\" [options]=\\\"importTabEntries\\\"></p-listbox>\\r\\n\\t\\t<div style=\\\"color: black; font-weight: bold;\\\">\\r\\n\\t\\t\\t<p-fieldset [toggleable]=\\\"false\\\" [collapsed]=\\\"false\\\">\\r\\n\\t\\t\\t\\t<p-header>\\r\\n\\t\\t\\t\\t\\t<div style=\\\"border: none; font-weight: bold; background-color: blue; color: white\\\">\\r\\n\\t\\t\\t\\t\\t\\tMODES\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</p-header>\\r\\n\\t\\t\\t\\t<p-radioButton formControlName=\\\"mode\\\" name=\\\"mode\\\" label=\\\"DEFAULT\\\" value=\\\"default\\\"></p-radioButton><br/>\\r\\n\\t\\t\\t\\t<p-radioButton formControlName=\\\"mode\\\" name=\\\"mode\\\" label=\\\"OVERRIDE\\\" value=\\\"override\\\"></p-radioButton><br/>\\r\\n\\t\\t\\t\\t<p-radioButton formControlName=\\\"mode\\\" name=\\\"mode\\\" label=\\\"ONLY\\\" value=\\\"only\\\"></p-radioButton>\\r\\n\\t\\t\\t</p-fieldset>\\r\\n\\t\\t\\t<button pButton style=\\\"background-color: red\\\" type=\\\"submit\\\" label=\\\"LOAD BACKUP\\\" [disabled]=\\\"importElementForm.value.selectedBackupElement === ''\\\"></button>\\r\\n\\t\\t</div>\\r\\n\\t</form>\\r\\n</div>\\r\\n\\r\\n<div style=\\\"display: none\\\" #settings>\\r\\n\\td\\r\\n</div>\\r\\n\\r\\n<div style=\\\"display: none; width: 500px\\\" #change>\\r\\n\\t<form [formGroup]=\\\"changeElementForm\\\" *ngIf=\\\"changeElementForm != null\\\" (ngSubmit)=\\\"checkElementChanges(changeElementForm.value)\\\">\\r\\n\\t\\t<p-fieldset [toggleable]=\\\"false\\\">\\r\\n\\t\\t\\t<p-header>\\r\\n\\t\\t\\t\\t<div class=\\\"ui-g\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"ui-g-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t<button pButton type=\\\"button\\\" icon=\\\"fas fa-wrench\\\" style=\\\"background-color: blue; width: 50px; height: 65px; margin-top: 25px;\\\"></button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"ui-g-1\\\" style=\\\"width: 250px; text-align: right; color: green; -ms-transform: translateY(25%); transform: translateY(25%);\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" pInputText formControlName=\\\"_id\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText formControlName=\\\"id\\\" placeholder=\\\"id\\\" class=\\\"policyInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText formControlName=\\\"contextID\\\" placeholder=\\\"contextID\\\" class=\\\"policyInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText formControlName=\\\"priorVersion\\\" placeholder=\\\"priorVersion\\\" class=\\\"policyInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText formControlName=\\\"title\\\" placeholder=\\\"title\\\" class=\\\"policyInput\\\">\\t\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</p-header>\\r\\n\\t\\t\\t<div style=\\\"width: 400px;\\\">\\r\\n\\t\\t\\t\\t<textarea style=\\\"width: 100%; height: 100px;\\\" type=\\\"text\\\" InputTextareaModule formControlName=\\\"descriptionsBefore\\\" placeholder=\\\"descriptions.before\\\"></textarea>\\r\\n\\t\\t\\t\\t<br/><hr/>\\r\\n\\t\\t\\t\\t<b>sub-elements</b>\\r\\n\\t\\t\\t\\t<hr/>\\r\\n\\t\\t\\t\\t<textarea style=\\\"width: 100%; height: 100px;\\\" type=\\\"text\\\" InputTextareaModule formControlName=\\\"descriptionsAfter\\\" placeholder=\\\"descriptions.after\\\"></textarea>\\r\\n\\t\\t\\t\\t<p-calendar showTime=\\\"true\\\" hourFormat=\\\"24\\\"  formControlName=\\\"validFrom\\\" placeholder=\\\"validFrom\\\"></p-calendar>\\r\\n\\t\\t\\t\\t<div class=\\\"ui-g-25\\\">\\r\\n\\t\\t\\t\\t    <p-checkbox binary=\\\"true\\\" formControlName=\\\"inUse\\\" title=\\\"inUse\\\"></p-checkbox>\\r\\n\\t\\t\\t\\t\\t<p-checkbox binary=\\\"true\\\" formControlName=\\\"consentRequired\\\" title=\\\"consentRequired\\\"></p-checkbox>\\r\\n\\t\\t\\t\\t\\t<p-checkbox binary=\\\"true\\\" formControlName=\\\"preChecked\\\" title=\\\"preChecked\\\"></p-checkbox>\\r\\n\\t\\t\\t\\t\\t<input style=\\\"width: 100%\\\" type=\\\"text\\\" pInputText formControlName=\\\"descriptionsSubmit\\\" placeholder=\\\"descriptions.submit\\\">\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t<button pButton type=\\\"submit\\\" style=\\\"margin-right: 5px;\\\" label=\\\"Change Element\\\"></button>\\r\\n\\t\\t\\t\\t<button pButton type=\\\"button\\\" label=\\\"Back\\\" (click)=\\\"goBack()\\\"></button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</p-fieldset>\\r\\n\\t</form>\\r\\n</div>\\r\\n\"","module.exports = \"textarea {\\n  width: 450px;\\n  min-height: 200px; }\\n\\n.policyInput {\\n  min-width: 400px; }\\n\\n.ui-listbox {\\n  width: 450px;\\n  min-height: 200px; }\\n\\n.ui-widget-overlay {\\n  z-index: 0 !important; }\\n\"","import { Component, OnInit, ViewEncapsulation, ViewContainerRef, ComponentFactoryResolver, ViewChild} from '@angular/core';\r\nimport { Message, MenuItem, ConfirmationService } from 'primeng/api';\r\nimport {ConfirmDialogModule} from 'primeng/confirmdialog';\r\nimport { TabMenuModule } from 'primeng/tabmenu';\r\nimport { ActivatedRoute, Router, NavigationStart} from '@angular/router';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport {ListboxModule} from 'primeng/listbox';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\n\r\nimport {DataPrivacyElementBackend} from '../../models/backend/dataprivacyelementbackend';\r\nimport {ACPService} from '../../services/acp.service';\r\n\r\n@Component({\r\n  selector: 'app-policy-acp',\r\n  templateUrl: './policy-acp.component.html',\r\n  styleUrls: ['./policy-acp.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [ConfirmationService, ACPService]\r\n})\r\n\r\nexport class PolicyACPComponent implements OnInit { \r\n  @ViewChild('overview') overview;\r\n  @ViewChild('add') add;\r\n  @ViewChild('import') import;\r\n  @ViewChild('export') export;\r\n  @ViewChild('settings') settings;\r\n  @ViewChild('change') change;\r\n  protected privacyMsgs: Array<Message> = [];\r\n  private children: string[];\r\n  private arguments;\r\n  private importTabEntries;\r\n  private exportTabOptions;\r\n  private exportTabEntries;\r\n  \r\n  protected addElementForm: FormGroup;\r\n  protected changeElementForm: FormGroup;\r\n  protected exportElementForm: FormGroup;\r\n  protected importElementForm: FormGroup;\r\n  protected availableElements;\r\n  protected availableBackupElements;\r\n  protected sequenceList;\r\n\r\n  constructor(private confirmationService: ConfirmationService, private route: ActivatedRoute, private fb: FormBuilder, private acpS: ACPService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\tthis.children = ['overview', 'add', 'import', 'export', 'settings', 'change'];\r\n\tthis.availableElements = {};\r\n\tthis.availableBackupElements = {};\r\n    this.sequenceList = [];\r\n\t\r\n\tthis.initAddArea();\r\n\tthis.initExportArea();\r\n\tthis.initChangeArea();\r\n\t\r\n\t//event listener for updating the displayed content (for the \"policy\" area)\r\n\tthis.route.fragment.subscribe(\r\n\t  (fragments) => {\r\n        let url = this.getPreparedURL();\r\n        if (url[0] === 'policy') {\r\n\t\t  var key = url[1];\r\n\t\t  for (var currentKey of this.children) this[currentKey].nativeElement.style.display = \"none\";\r\n\t\t  if (this[key] != null) { \r\n\t\t    var callName = 'update' + key.charAt(0).toUpperCase() + key.slice(1) + 'Area';\r\n\t\t\tif (this[callName] != null) {\r\n\t\t      this[callName](...this.arguments);\r\n\t\t\t  this.arguments = [];\r\n\t\t    }\r\n\t\t\tthis[key].nativeElement.style.display = \"\";\r\n\t\t  } else {\r\n\t\t    this.privacyMsgs.push({\r\n\t\t\t  severity: 'error',\r\n\t\t\t  summary: 'Error',\r\n\t\t\t  detail: 'component of <b>' + key + '</b> is undefined'\r\n\t\t    });\r\n\t\t  }\r\n\t\t}\r\n      }\r\n\t);\r\n  }\r\n  \r\n  /* ---------------------------- SAMPLES ----------------------------*/\r\n  /**\r\n   * adjusts the URL accordingly to enable the trigger for updating content\r\n   *\r\n   * @param key which page should be displayed?\r\n   */\r\n  private show(key:string = '', ...args) {\r\n    key = key === '' ? this.children[0] : key;\r\n\tthis.arguments = args;\r\n\tif (key !== this.getPreparedURL()[1]) window.location.assign('/acp#policy/' + key);\r\n  }\r\n  \r\n  /**\r\n   * trivial\r\n   */\r\n  protected goBack() {\r\n    window.history.back();\r\n  }\r\n\r\n  /**\r\n   * URL content is adapted so that further processing of the fragments can function without problems\r\n   */\r\n  protected getPreparedURL():string[] {\r\n\tlet url = this.route.snapshot.fragment;\r\n\tif (url == null) url = '';\r\n    url = url.split('?')[0]; //Parameterangaben abschneiden\r\n\r\n\treturn url.split('/');\r\n  }\r\n  \r\n  /**\r\n   * this method ensures that the privacy elements are loaded\r\n   * the special thing about this method is that the upper elements are loaded separately from the lower elements to avoid loading sequence problems\r\n   */\r\n  protected loadPrivacyElements() {\r\n\tthis.sequenceList = [];\r\n\tthis.availableElements = {};\r\n\t\r\n\tthis.acpS.getAllPrivacyElements('root').subscribe(result => {\r\n\t  result.forEach(function (obj) {\r\n\t    let item = new DataPrivacyElementBackend(obj);\r\n        this.availableElements[obj.id] = item;\r\n\t\tthis.sequenceList.push([obj.id]);\r\n\t  }.bind(this));\r\n\t  \r\n\t  this.acpS.getAllPrivacyElements('leaf').subscribe(result => {\r\n        result.forEach(function (obj) {\r\n\t\t \r\n        let item = new DataPrivacyElementBackend(obj);\r\n        this.availableElements[obj.id] = item;\r\n        this.availableElements[obj.contextID].addChild(item); \r\n\t\t  \r\n        }.bind(this));\r\n\t  });\r\n\t});\r\n  }\r\n  \r\n  /* ---------------------------- OVERVIEW AREA ----------------------------*/\r\n  private updateOverviewArea() {\r\n    this.loadPrivacyElements();\r\n  }\r\n  \r\n  /**\r\n   * input values are initialized according to the expected contents\r\n   * PAGE[OVERVIEW]:BUTTON@`CHANGE` (prepareChangeArea(privacyID))-> PAGE[CHANGE]:INPUTS@AVAIL_ELEMS[PRIVACYID]\r\n   * \r\n   * @param privacyID\r\n   */\r\n  private prepareChangeArea(privacyID:string) {\r\n\tthis.show('change');\r\n\t\r\n\tlet elem = this.availableElements[privacyID];\r\n\tthis.changeElementForm.patchValue({\r\n\t  _id: elem.id,\r\n\t  id: elem.id,\r\n\t  priorVersion: elem.priorVersion,\r\n      contextID: elem.contextID,\r\n      title: elem.title,\r\n      descriptionsBefore: elem.descriptions.before,\r\n      descriptionsAfter: elem.descriptions.after,\r\n      descriptionsSubmit: elem.descriptions.submit,\r\n      validFrom: elem.validFrom,\r\n      inUse: elem.inUse,\r\n      consentRequired: elem.consentRequired,\r\n      preChecked: elem.preChecked\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * input values are initialized according to the expected contents\r\n   * PAGE[OVERVIEW]:BUTTON@`EXPORT` (prepareExportArea(privacyID))-> PAGE[EXPORT]:INPUTS@AVAIL_BACKUP_ELEMS[PRIVACYID]\r\n   * \r\n   * @param privacyID\r\n   */\r\n  private prepareExportArea(privacyID:string) {\r\n\tthis.show('export', 1);\r\n\tthis.acpS.getPrivacyElement(privacyID).subscribe(result => {\r\n\t  this.exportElementForm.patchValue({\r\n\t\tbackupID: '',\r\n\t    backupName: '',\r\n        backupContent: this.convertPrivacyElementsToJSON(result)\r\n      });\r\n\t});\r\n  }\r\n  \r\n  /**\r\n   * input values are initialized according to the expected contents\r\n   * PAGE[OVERVIEW]:BUTTON@`REMOVE` (prepareRemoveArea(privacyID))-> (PAGE[OVERVIEW]:CONFIRM@`Are you sure ...` (accept)-> PAGE[OVERVIEW]:AVAIL_BACKUP_ELEMS\\AVAIL_BACKUP_ELEMS[PRIVACYID])\r\n   * \r\n   * @param privacyID\r\n   */\r\n  private prepareRemoveArea(privacyID:string) {\r\n    this.confirmationService.confirm({\r\n\t  message: 'Are you sure that you want to perform this action?',\r\n      accept: () => {\r\n\t\tthis.acpS.removePrivacyElement(privacyID).subscribe(result => {\r\n\t\t  this.privacyMsgs.push({\r\n            severity: 'success',\r\n            summary: 'The element has been removed',\r\n            detail: this.availableElements[privacyID].title\r\n          });\r\n\t\t  if (this.availableElements[privacyID] != null) {\r\n\t\t    document.getElementById(privacyID).remove();\r\n\t\t    delete this.availableElements[privacyID];\r\n\t\t  }\r\n\t\t  this.show('overview');\r\n\t\t}, err => {\r\n\t\t  this.privacyMsgs.push({\r\n            severity: 'error',\r\n            summary: 'Error!'\r\n          });\r\n\t\t});\r\n      }\r\n    });\r\n  }\r\n  \r\n  /* ---------------------------- ADD AREA ----------------------------*/\r\n  /**\r\n   * input values are initialized according to the expected contents\r\n   */\r\n  private initAddArea() {\r\n    let formControls = {};\r\n\tformControls['id'] = new FormControl('', Validators.nullValidator);\r\n\tformControls['contextID'] = new FormControl('', Validators.nullValidator);\r\n\tformControls['priorVersion'] = new FormControl('', Validators.nullValidator);\r\n\tformControls['title'] = new FormControl('', Validators.nullValidator);\r\n\tformControls['descriptionsBefore'] = new FormControl('', Validators.nullValidator);\r\n\tformControls['descriptionsAfter'] = new FormControl('', Validators.nullValidator);\r\n\tformControls['descriptionsSubmit'] = new FormControl('', Validators.nullValidator);\r\n\tformControls['validFrom'] = new FormControl('', Validators.nullValidator);\r\n\tformControls['inUse'] = new FormControl(true, Validators.nullValidator);\r\n\tformControls['consentRequired'] = new FormControl(true, Validators.nullValidator);\r\n\tformControls['preChecked'] = new FormControl('', Validators.nullValidator);\r\n\tthis.addElementForm = this.fb.group(formControls);\r\n  }\r\n  \r\n  private updateAddArea() {\r\n    this.initAddArea();\r\n  }\r\n  \r\n  /**\r\n   * this method checks the inputs and inserts a new data privacy element if the inputs are correct\r\n   * \r\n   * @param data the user inputs\r\n   */\r\n  private checkElementInsertion(data) {\r\n    const privacyElement = {\r\n\t  id: data.id,\r\n\t  priorVersion: data.priorVersion,\r\n\t  contextID: data.contextID,\r\n\t  title: data.title,\r\n\t  descriptions: {\r\n\t\tbefore: data.descriptionsBefore,\r\n\t\tafter: data.descriptionsAfter,\r\n\t\tsubmit: data.descriptionsSubmit\r\n\t  },\r\n\t  consentRequired: data.consentRequired,\r\n\t  preChecked: data.preChecked,\r\n\t  inUse: data.inUse,\r\n      validFrom: data.validFrom == null ? 0 : data.validFrom \r\n    };\r\n\r\n    this.acpS.addPrivacyElement(privacyElement).subscribe(result => {\r\n\t   this.privacyMsgs.push({\r\n          severity: 'success',\r\n          summary: 'The element has been added',\r\n          detail: privacyElement.title\r\n        });\r\n\t\tthis.show('overview');\r\n\t  }, err => {\r\n\t    this.privacyMsgs.push({\r\n          severity: 'error',\r\n          summary: 'Error!'\r\n        });\r\n      }\r\n\t);\r\n  }\r\n  \r\n  /* ---------------------------- EXPORT AREA ----------------------------*/\r\n  /**\r\n   * this method checks the inputs and inserts a new data privacy element if the inputs are correct\r\n   */\r\n  private initExportArea() {\r\n    this.exportTabOptions = [\r\n\t  {label:'Database', value:'db'},\r\n      {label:'TextField', value:'tf'}\r\n\t];\r\n\r\n    let formControls = {};\r\n    formControls['selectedTab'] = new FormControl('', Validators.nullValidator);\r\n\tformControls['selectedBackupElement'] = new FormControl('', Validators.nullValidator);\r\n\tformControls['backupID'] = new FormControl('', Validators.nullValidator);\r\n\tformControls['backupName'] = new FormControl('', Validators.compose([Validators.required, Validators.minLength(2)]));\r\n\tformControls['backupContent'] = new FormControl('', Validators.nullValidator);\r\n    this.exportElementForm = this.fb.group(formControls);\r\n\t\r\n\tthis.exportTabEntries = [\r\n       {label: 'Current DB State', value: 'current'}\r\n    ];\r\n\t\r\n\tthis.acpS.getAllPrivacyBackups().subscribe(result => {\r\n\t  result.forEach(function (backupElement) {\r\n        this.availableBackupElements[backupElement.id] = backupElement;\r\n\t    this.exportTabEntries.push({label: backupElement.name, value: backupElement.id});\r\n      }.bind(this));\r\n    });\r\n\t\r\n\tthis.exportElementForm.controls.selectedBackupElement.valueChanges.subscribe(key => {\r\n\t  if (key === undefined) return;\r\n\t  if (key === 'current') {\r\n        this.acpS.getAllPrivacyElements().subscribe(dpElements => {\r\n          this.exportElementForm.patchValue({\r\n\t\t\tbackupID: '',\r\n\t\t\tbackupName: '',\r\n\t\t\tbackupContent: this.convertPrivacyElementsToJSON(dpElements)\r\n          });\r\n          this.setExportTab(1);\r\n\t\t});\r\n\t  } else {\r\n\t    this.exportElementForm.patchValue({\r\n\t\t  backupID: this.availableBackupElements[key].id,\r\n\t\t  backupName: this.availableBackupElements[key].name,\r\n\t\t  backupContent: JSON.stringify(this.availableBackupElements[key].content)\r\n        });\r\n\t\tthis.setExportTab(1);\r\n\t  }\r\n      \r\n      this.setExportTabSelectedItem();\r\n\t});\r\n  }\r\n  \r\n  private updateExportArea(selectedTabIndex:number) {\r\n    this.setExportTab(selectedTabIndex);\r\n  }\r\n  \r\n  private setExportTab(index = 0) {\r\n    this.exportElementForm.controls.selectedTab.patchValue(this.exportTabOptions[index].value);\r\n  }\r\n  \r\n  private setExportTabSelectedItem(index = null) {\r\n    this.exportElementForm.controls.selectedBackupElement.patchValue(index == null ? undefined : this.exportTabEntries[index]);\r\n  }\r\n\r\n  /**\r\n   * this method checks the inputs and inserts a new privacy backup element if the inputs are correct\r\n   * \r\n   * @param data the user inputs\r\n   */\r\n  private checkBackupElementInsertion(data) {\r\n\tlet backupElement = {\r\n\t  id: data.backupID === '' ? 'null' : data.backupID,\r\n\t  content: data.backupContent,\r\n\t  description: '',\r\n\t  name: data.backupName,\r\n\t  creationDate: new Date()\r\n\t};\r\n\ttry {\r\n      backupElement.content = JSON.parse(backupElement.content);\r\n\t  this.acpS.updatePrivacyBackup(backupElement.id, backupElement).subscribe(result => {\r\n\t    this.privacyMsgs.push({\r\n          severity: 'success',\r\n          summary: (backupElement.id === 'null' ? 'The backup has been added' : 'The backup has been changed'),\r\n          detail: backupElement.name\r\n        });\r\n\t    this.initExportArea();\r\n\t\tthis.setExportTab();\r\n\t  }, err => {\r\n\t  });\r\n    } catch (e) {\r\n      this.privacyMsgs.push({\r\n        severity: 'error',\r\n        summary: 'Error!'\r\n      });\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * this method creates a copy of an existing privacy backup element\r\n   *\r\n   * @param backupID\r\n   */\r\n  private createBackupCopy(backupID:string) {\r\n\tthis.checkBackupElementInsertion({\r\n\t  backupID: '',\r\n\t  backupName: this.availableBackupElements[backupID].name + ' Copy',\r\n\t  backupContent: JSON.stringify(this.availableBackupElements[backupID].content)\r\n\t});\r\n  }\r\n  \r\n  /**\r\n   * this method remove an existing privacy backup element if the inputs are correct\r\n   *\r\n   * @param backupID\r\n   */\r\n  private removeBackupElement(backupID:string) {\r\n    this.confirmationService.confirm({\r\n\t  message: 'Are you sure that you want to perform this action?',\r\n      accept: () => {\r\n\t\tthis.acpS.removePrivacyBackup(backupID).subscribe(result => {\r\n\t\t  this.privacyMsgs.push({\r\n            severity: 'success',\r\n            summary: 'The element has been removed',\r\n            detail: backupID\r\n          });\r\n\t\t  for (var i in this.exportTabEntries) {\r\n\t\t\tvar selItem = this.exportTabEntries[i];\r\n\t\t\tif (selItem.value === backupID) {\r\n\t\t\t  this.exportTabEntries.splice(i, 1);\r\n\t\t\t  break;\r\n\t\t\t}\r\n\t\t  }\r\n\t\t  this.setExportTab();\r\n\t\t}, err => {\r\n\t\t  this.privacyMsgs.push({\r\n            severity: 'error',\r\n            summary: 'Error!'\r\n          });\r\n\t\t});\r\n      }\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * converts a DataPrivacyElementBackend type object to JSON format\r\n   * \r\n   * @param dpElements DataPrivacyElementBackend\r\n   */\r\n  private convertPrivacyElementsToJSON(dpElements) {\r\n\tvar result = '{';\r\n\tfor (var currentElement of dpElements) {\r\n\t  result += '\"' + currentElement.id + '\":' + JSON.stringify(currentElement) + ',';\r\n\t}\r\n\tresult = result.substr(0, result.length-1);\r\n\tresult += '}';\r\n\treturn result;\r\n  }\r\n  \r\n   \r\n  /* ---------------------------- IMPORT AREA ----------------------------*/\r\n  /**\r\n   * this method checks the inputs and inserts a new data privacy element if the inputs are correct\r\n   */\r\n  private initImportArea() {\r\n\tthis.importTabEntries = [];\r\n\t\r\n\tlet formControls = {};\r\n\tformControls['selectedBackupElement'] = new FormControl('', Validators.nullValidator);\r\n\tformControls['backupID'] = new FormControl('', Validators.nullValidator);\r\n\tformControls['backupName'] = new FormControl('', Validators.compose([Validators.required, Validators.minLength(2)]));\r\n\tformControls['backupContent'] = new FormControl('', Validators.nullValidator);\r\n\tformControls['mode'] = new FormControl('default', Validators.nullValidator);\r\n    this.importElementForm = this.fb.group(formControls);\r\n\t\r\n\tthis.acpS.getAllPrivacyBackups().subscribe(result => {\r\n\t  if (result.length == 0) {\r\n\t\tthis.importElementForm.controls.backupContent.disable();\r\n\t  }\r\n\t  result.forEach(function (backupElement) {\r\n        this.availableBackupElements[backupElement.id] = backupElement;\r\n\t    this.importTabEntries.push({label: backupElement.name, value: backupElement.id});\r\n      }.bind(this));\r\n    });\r\n  }\r\n   \r\n  private updateImportArea() {\r\n    this.initImportArea();\r\n  }\r\n  \r\n  private setImportTabSelectedItem(index = null) {\r\n    this.importElementForm.controls.selectedBackupElement.patchValue(index == null ? undefined : this.importTabEntries[index]);\r\n  }\r\n  \r\n  /**\r\n   * this method checks the inputs and imports a privacy backup element if user has accepted the hint\r\n   * \r\n   * @param data the user inputs\r\n   */\r\n  private checkImportElementInsertion(data) {\t\r\n    this.confirmationService.confirm({\r\n\t  message: 'Are you sure that you want to perform this action?',\r\n      accept: () => {\r\n\t\tthis.acpS.importPrivacyBackup(data.selectedBackupElement, data.mode).subscribe(result => {\r\n\t\t  this.privacyMsgs.push({\r\n            severity: 'success',\r\n            summary: 'successful',\r\n            detail: 'The backup was imported successfully.'\r\n          });\r\n\t\t  this.show('overview');\r\n\t\t}, err => {\r\n\t\t  this.privacyMsgs.push({\r\n            severity: 'error',\r\n            summary: 'Error!'\r\n          });\r\n\t\t});\r\n      }\r\n    });\r\n  }\r\n  \r\n  /* ---------------------------- CHANGE AREA ----------------------------*/\r\n  /**\r\n   * this method checks the inputs and inserts a new data privacy element if the inputs are correct\r\n   */\r\n  private initChangeArea() {\r\n\tlet formControls = {};\r\n\tformControls['_id'] = new FormControl('', Validators.nullValidator);\r\n    formControls['id'] = new FormControl('', Validators.nullValidator);\r\n\tformControls['contextID'] = new FormControl('', Validators.nullValidator);\r\n\tformControls['priorVersion'] = new FormControl('', Validators.nullValidator);\r\n\tformControls['title'] = new FormControl('', Validators.nullValidator);\r\n\tformControls['descriptionsBefore'] = new FormControl('', Validators.nullValidator);\r\n\tformControls['descriptionsAfter'] = new FormControl('', Validators.nullValidator);\r\n\tformControls['descriptionsSubmit'] = new FormControl('', Validators.nullValidator);\r\n\tformControls['validFrom'] = new FormControl('', Validators.nullValidator);\r\n\tformControls['inUse'] = new FormControl(true, Validators.nullValidator);\r\n\tformControls['consentRequired'] = new FormControl(true, Validators.nullValidator);\r\n\tformControls['preChecked'] = new FormControl('', Validators.nullValidator);\r\n    this.changeElementForm = this.fb.group(formControls);\r\n  }\r\n  \r\n  private updateChangeArea() {\r\n   \r\n  }\r\n  /**\r\n   * this method checks the inputs and change the data privacy element if the inputs are correct\r\n   * \r\n   * @param data the user inputs\r\n   */\r\n  private checkElementChanges(data) {\r\n    let privacyID = data._id;\r\n\r\n\tconst privacyElement = {\r\n\t  id: data.id,\r\n\t  priorVersion: data.priorVersion,\r\n\t  contextID: data.contextID,\r\n\t  title: data.title,\r\n\t  descriptions: {\r\n\t\tbefore: data.descriptionsBefore,\r\n\t\tafter: data.descriptionsAfter,\r\n\t\tsubmit: data.descriptionsSubmit\r\n\t  },\r\n\t  consentRequired: data.consentRequired,\r\n\t  preChecked: data.preChecked,\r\n\t  inUse: data.inUse,\r\n      validFrom: data.validFrom == null ? 0 : data.validFrom\r\n    };\r\n\r\n\tthis.acpS.updatePrivacyElement(privacyID, privacyElement).subscribe(result => {\r\n      this.privacyMsgs.push({\r\n        severity: 'success',\r\n        summary: 'The element has been changed',\r\n        detail: privacyElement.title\r\n      });\r\n\t  this.initChangeArea();\r\n      this.goBack();\r\n\t}, err => {\r\n\t  this.privacyMsgs.push({\r\n        severity: 'error',\r\n        summary: 'Error!'\r\n      });\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"fa fa-exclamation-triangle\\\"></p-confirmDialog>\\r\\n<p-growl [value]=\\\"userMsgs\\\" [sticky]=\\\"true\\\"></p-growl>\\r\\n\\r\\n<div style=\\\"display: none\\\" #overview>\\r\\n\\t<div *ngFor=\\\"let user of users; let i=index\\\" id=\\\"{{user.userId}}\\\">\\r\\n\\t\\t<div class=\\\"vertical-align\\\" *ngIf=\\\"user != null\\\">\\r\\n\\t\\t\\t<p-fieldset [toggleable]=\\\"false\\\" [collapsed]=\\\"false\\\">\\r\\n\\t\\t\\t\\t<p-header>\\r\\n\\t\\t\\t\\t\\t<div style=\\\"border: none; font-weight: bold; background-color: blue; color: white\\\" class=\\\"ui-message\\\">\\r\\n\\t\\t\\t\\t\\t  {{user.username}}\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</p-header>\\r\\n\\t\\t\\t\\t<table>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<td style=\\\"font-weight: bold\\\">ID</td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{user.userId}}</td>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<td style=\\\"font-weight: bold\\\">Creation date</td>\\r\\n\\t\\t\\t\\t\\t\\t<td>---</td>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<td style=\\\"font-weight: bold\\\">Role</td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{user.role}}</td>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<td style=\\\"font-weight: bold\\\">E-Mail</td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{user.email}}</td>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<td style=\\\"font-weight: bold\\\">First name</td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{user.firstname}}</td>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<td style=\\\"font-weight: bold\\\">Last name</td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{user.lastname}}</td>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t<div class=\\\"ui-g-12\\\">\\r\\n\\t\\t\\t\\t\\t<button pButton icon=\\\"fas fa-wrench\\\" style=\\\"background-color: black; margin-right: 5px;\\\" type=\\\"submit\\\" label=\\\"CHANGE\\\" (click)=\\\"prepareChangeArea(user.userId)\\\"></button>\\r\\n\\t\\t\\t\\t\\t<button pButton icon=\\\"fa fa-refresh\\\" style=\\\"background-color: green;\\\" type=\\\"submit\\\" label=\\\"RESET PASSWORD\\\" (click)=\\\"prepareResetPasswordArea(user.userId)\\\"></button>\\r\\n\\t\\t\\t\\t\\t<button pButton icon=\\\"fa fa-trash\\\" style=\\\"background-color: red;\\\" type=\\\"submit\\\" label=\\\"REMOVE\\\" (click)=\\\"prepareRemoveArea(user.userId)\\\"></button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</p-fieldset>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\t\\r\\n\\t<br/>\\r\\n\\t<br/>\\r\\n</div>\\r\\n\\r\\n<div style=\\\"display: none\\\" #change>\\r\\n\\t<form [formGroup]=\\\"changeUserForm\\\" *ngIf=\\\"changeUserForm != null\\\" (ngSubmit)=\\\"checkUserChanges(changeUserForm.value)\\\">\\r\\n\\t\\t<p-fieldset [toggleable]=\\\"false\\\">\\r\\n\\t\\t\\t<p-header>\\r\\n\\t\\t\\t\\t<div style=\\\"border: none; font-weight: bold; background-color: blue; color: white;\\\" class=\\\"ui-message\\\">\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText formControlName=\\\"username\\\" class=\\\"userHeaderInput\\\">\\t\\r\\n\\t\\t\\t\\t\\t<div style=\\\"border: none; color: red; font-weight: bold;\\\" class=\\\"ui-message\\\" *ngIf=\\\"!changeUserForm.controls.username.valid&&changeUserForm.controls.username.dirty\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i style=\\\"color: red\\\" class=\\\"fa fa-exclamation-circle \\\"></i> \\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</p-header>\\r\\n\\t\\t\\t<table>\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t<td style=\\\"font-weight: bold\\\">ID</td>\\r\\n\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText formControlName=\\\"id\\\" class=\\\"userInput\\\">\\r\\n\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t<td style=\\\"font-weight: bold\\\">Role</td>\\r\\n\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t<p-dropdown placeholder=\\\"Select a role\\\" [options]=\\\"role\\\" formControlName=\\\"role\\\" [autoWidth]=\\\"false\\\"></p-dropdown>\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"border: none; color: red; font-weight: bold;\\\" class=\\\"ui-message\\\" *ngIf=\\\"!changeUserForm.controls.role.valid&&changeUserForm.controls.role.dirty\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<i style=\\\"color: red\\\" class=\\\"fa fa-exclamation-circle\\\"></i> invalid\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t<td style=\\\"font-weight: bold\\\">E-Mail</td>\\r\\n\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText formControlName=\\\"email\\\" class=\\\"userInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"border: none; color: red; font-weight: bold;\\\" class=\\\"ui-message\\\" *ngIf=\\\"!changeUserForm.controls.email.valid&&changeUserForm.controls.email.dirty\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<i style=\\\"color: red\\\" class=\\\"fa fa-exclamation-circle\\\"></i> invalid\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t<td style=\\\"font-weight: bold\\\">First name</td>\\r\\n\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText formControlName=\\\"firstname\\\" class=\\\"userInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"border: none; color: red; font-weight: bold;\\\" class=\\\"ui-message\\\" *ngIf=\\\"!changeUserForm.controls.firstname.valid&&changeUserForm.controls.firstname.dirty\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<i style=\\\"color: red\\\" class=\\\"fa fa-exclamation-circle\\\"></i> invalid\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t<td style=\\\"font-weight: bold\\\">Last name</td>\\r\\n\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText formControlName=\\\"lastname\\\" class=\\\"userInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"border: none; color: red; font-weight: bold;\\\" class=\\\"ui-message\\\" *ngIf=\\\"!changeUserForm.controls.lastname.valid&&changeUserForm.controls.lastname.dirty\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<i style=\\\"color: red\\\" class=\\\"fa fa-exclamation-circle\\\"></i> invalid\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t<td style=\\\"font-weight: bold\\\">Confirmed</td>\\r\\n\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t<p-checkbox binary=\\\"true\\\" formControlName=\\\"confirmed\\\" title=\\\"confirmed\\\"></p-checkbox>\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"border: none; color: red; font-weight: bold;\\\" class=\\\"ui-message\\\" *ngIf=\\\"!changeUserForm.controls.confirmed.valid&&changeUserForm.controls.confirmed.dirty\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<i style=\\\"color: red\\\" class=\\\"fa fa-exclamation-circle\\\"></i> invalid\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</table>\\r\\n\\t\\t\\t<button pButton type=\\\"submit\\\" style=\\\"margin-right: 5px;\\\" label=\\\"Change User\\\" [disabled]=\\\"!changeUserForm.valid\\\"></button>\\r\\n\\t\\t\\t<button pButton type=\\\"button\\\" label=\\\"Back\\\" (click)=\\\"goBack()\\\"></button>\\r\\n\\t\\t</p-fieldset>\\r\\n\\t</form>\\r\\n</div>\\r\\n\\r\\n<div style=\\\"display: none\\\" #add>\\r\\n\\t<form [formGroup]=\\\"addUserForm\\\" *ngIf=\\\"addUserForm != null\\\" (ngSubmit)=\\\"checkUserCreation(addUserForm.value)\\\">\\r\\n\\t\\t<p-fieldset [toggleable]=\\\"false\\\">\\r\\n\\t\\t\\t<p-header>\\r\\n\\t\\t\\t\\t<div style=\\\"border: none; font-weight: bold; background-color: blue; color: white;\\\" class=\\\"ui-message\\\">\\r\\n\\t\\t\\t\\t\\tADD USER\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</p-header>\\r\\n\\t\\t\\t<table>\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t<td style=\\\"font-weight: bold\\\">Role</td>\\r\\n\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t<p-dropdown placeholder=\\\"Select a role\\\" [options]=\\\"role\\\" formControlName=\\\"role\\\" [autoWidth]=\\\"false\\\"></p-dropdown>\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!addUserForm.controls.role.valid&&addUserForm.controls.role.dirty\\\">\\r\\n\\t\\t\\t\\t\\t\\t  invalid\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t<td style=\\\"font-weight: bold\\\">Username</td>\\r\\n\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText formControlName=\\\"username\\\" class=\\\"userInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!addUserForm.controls.username.valid&&addUserForm.controls.username.dirty\\\">\\r\\n\\t\\t\\t\\t\\t\\t  invalid\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t<td style=\\\"font-weight: bold\\\">Password</td>\\r\\n\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText formControlName=\\\"password\\\" class=\\\"userInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!addUserForm.controls.password.valid&&addUserForm.controls.password.dirty\\\">\\r\\n\\t\\t\\t\\t\\t\\t  invalid\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t<td style=\\\"font-weight: bold\\\">E-Mail</td>\\r\\n\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText formControlName=\\\"email\\\" class=\\\"userInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!addUserForm.controls.email.valid&&addUserForm.controls.email.dirty\\\">\\r\\n\\t\\t\\t\\t\\t\\t  invalid\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t<td style=\\\"font-weight: bold\\\">First name</td>\\r\\n\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText formControlName=\\\"firstname\\\" class=\\\"userInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!addUserForm.controls.firstname.valid&&addUserForm.controls.firstname.dirty\\\">\\r\\n\\t\\t\\t\\t\\t\\t  invalid\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t<td style=\\\"font-weight: bold\\\">Last name</td>\\r\\n\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText formControlName=\\\"lastname\\\" class=\\\"userInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!addUserForm.controls.lastname.valid&&addUserForm.controls.lastname.dirty\\\">\\r\\n\\t\\t\\t\\t\\t\\t  invalid\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t<td style=\\\"font-weight: bold\\\">Confirmed</td>\\r\\n\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t<p-checkbox binary=\\\"true\\\" formControlName=\\\"confirmed\\\" title=\\\"confirmed\\\"></p-checkbox>\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!addUserForm.controls.confirmed.valid&&addUserForm.controls.confirmed.dirty\\\">\\r\\n\\t\\t\\t\\t\\t\\t  invalid\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</table>\\r\\n\\t\\t\\t<button pButton type=\\\"submit\\\" style=\\\"margin-right: 5px;\\\" label=\\\"Create User\\\" [disabled]=\\\"!addUserForm.valid\\\"></button>\\r\\n\\t\\t</p-fieldset>\\r\\n\\t</form>\\r\\n</div>\\r\\n\"","module.exports = \"textarea {\\n  width: 450px;\\n  min-height: 200px; }\\n\\n.userHeaderInput {\\n  min-width: 200px;\\n  background: none;\\n  border: none;\\n  color: white;\\n  font-weight: bold; }\\n\\n.userInput {\\n  min-width: 300px; }\\n\\n.ui-listbox {\\n  width: 450px;\\n  min-height: 200px; }\\n\\n.ui-widget-overlay {\\n  z-index: 0 !important; }\\n\\n.ui-fieldset {\\n  min-width: 500px !important; }\\n\\n.ui-dropdown {\\n  min-width: 300px !important; }\\n\"","import { Component, OnInit, ViewEncapsulation, ViewContainerRef, ComponentFactoryResolver, ViewChild} from '@angular/core';\r\nimport { Message, MenuItem, ConfirmationService, SelectItem } from 'primeng/api';\r\nimport {ConfirmDialogModule} from 'primeng/confirmdialog';\r\nimport { TabMenuModule } from 'primeng/tabmenu';\r\nimport { ActivatedRoute, Router, NavigationStart} from '@angular/router';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport {ListboxModule} from 'primeng/listbox';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\n\r\nimport {DatabaseService} from '../../services/database.service';\r\nimport uuidv4 from 'uuid/v4';\r\nimport {ProjectDB} from '../../models/database/project';\r\nimport {DashboardDB} from '../../models/database/dashboard';\r\nimport {SheetDB} from '../../models/database/sheet';\r\nimport {User} from '../../models/frontend/user';\r\nimport {CONFLICT} from 'http-status-codes';\r\nimport {Widget} from '../../models/frontend/widget';\r\nimport {WidgetDB} from '../../models/database/widget';\r\n\r\n\r\nimport {DataPrivacyElementBackend} from '../../models/backend/dataprivacyelementbackend';\r\nimport {ACPService} from '../../services/acp.service';\r\n\r\n@Component({\r\n  selector: 'app-user-acp',\r\n  templateUrl: './user-acp.component.html',\r\n  styleUrls: ['./user-acp.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [ConfirmationService, ACPService]\r\n})\r\n\r\nexport class UserACPComponent implements OnInit { \r\n  @ViewChild('overview') overview;\r\n  @ViewChild('change') change;\r\n  @ViewChild('add') add;\r\n  protected userMsgs: Array<Message> = [];\r\n  private children: string[];\r\n  private arguments;\r\n  private users;\r\n  \r\n  protected role: Array<SelectItem>;\r\n  protected ROLEDEVELOPER = 'developer';\r\n  private ROLEENDUSER = 'enduser';\r\n  \r\n  protected changeUserForm: FormGroup;\r\n  protected addUserForm: FormGroup;\r\n  \r\n  emailPattern = '^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$';\r\n  constructor(private confirmationService: ConfirmationService, private route: ActivatedRoute, private databaseService: DatabaseService, private fb: FormBuilder, private acpS: ACPService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\tthis.children = ['overview', 'change', 'add'];\r\n\tthis.users = [];\r\n\t\r\n\tthis.initChangeArea();\r\n\tthis.initAddArea();\r\n\t\r\n\t//event listener for updating the displayed content (for the \"user\" area)\r\n\tthis.route.fragment.subscribe(\r\n\t  (fragments) => {\r\n        let url = this.getPreparedURL();\r\n        if (url[0] === 'user') {\r\n\t\t  var key = url[1];\r\n\t\t  for (var currentKey of this.children) this[currentKey].nativeElement.style.display = \"none\";\r\n\t\t  if (this[key] != null) { \r\n\t\t    var callName = 'update' + key.charAt(0).toUpperCase() + key.slice(1) + 'Area';\r\n\t\t\tif (this[callName] != null) {\r\n\t\t      this[callName](...this.arguments);\r\n\t\t\t  this.arguments = [];\r\n\t\t    }\r\n\t\t\tthis[key].nativeElement.style.display = \"\";\r\n\t\t  } else {\r\n\t\t\tthis.userMsgs.push({\r\n\t\t\t  severity: 'error',\r\n\t\t\t  summary: 'Error',\r\n\t\t\t  detail: 'component of <b>' + key + '</b> is undefined'\r\n\t\t    });\r\n\t\t  }\t\t\t  \r\n\t\t}\r\n      }\r\n\t);\r\n  }\r\n  \r\n  /* ---------------------------- SAMPLES ----------------------------*/\r\n  /**\r\n   * adjusts the URL accordingly to enable the trigger for updating content\r\n   *\r\n   * @param key which page should be displayed?\r\n   */\r\n  private show(key:string = '', ...args) {\r\n    key = key === '' ? this.children[0] : key;\r\n\tthis.arguments = args;\r\n\tif (key !== this.getPreparedURL()[1]) window.location.assign('/acp#user/' + key);\r\n  }\r\n  \r\n  /**\r\n   * trivial\r\n   */\r\n  protected goBack() {\r\n    window.history.back();\r\n  }\r\n  \r\n  /**\r\n   * URL content is adapted so that further processing of the fragments can function without problems\r\n   *\r\n   * @return string url without parameters\r\n   */\r\n  protected getPreparedURL():string[] {\r\n\tlet url = this.route.snapshot.fragment;\r\n\tif (url == null) url = '';\r\n    url = url.split('?')[0]; //Parameterangaben abschneiden\r\n\t\r\n\treturn url.split('/');\r\n  }\r\n  \r\n  protected getUser(userID:string) {\r\n    for (var user of this.users) {\r\n      if (user.userId === userID) return user;\r\n\t}\r\n\treturn null;\r\n  }\r\n  \r\n  /* ---------------------------- OVERVIEW AREA ----------------------------*/\r\n  private updateOverviewArea() {\r\n    this.acpS.getAllUsers().subscribe(result => {\r\n       this.users = result;\r\n\t   \r\n\t});\r\n  }\r\n  \r\n  /**\r\n   * input values are initialized according to the expected contents\r\n   * PAGE[OVERVIEW]:BUTTON@`CHANGE` (prepareChangeArea(userID))-> PAGE[CHANGE]:INPUTS@USERS[userID]\r\n   * \r\n   * @param userID\r\n   */\r\n  private prepareChangeArea(userID: string) {\r\n\tthis.show('change');\r\n\t\r\n\tlet user = this.getUser(userID);\r\n\tthis.changeUserForm.patchValue({\r\n\t  id: user.userId,\r\n      username: user.username,\r\n      role: user.role,\r\n      email: user.email,\r\n      firstname: user.firstname,\r\n      lastname: user.lastname,\r\n\t  confirmed: user.confirmed\r\n    });  \r\n  }\r\n  \r\n  /**\r\n   * input values are initialized according to the expected contents\r\n   * PAGE[OVERVIEW]:BUTTON@`RESET PASSWORD` (prepareResetPasswordArea(userID))-> (PAGE[OVERVIEW]:CONFIRM@`Are you sure ...` (accept)-> PAGE[OVERVIEW])\r\n   * \r\n   * @param userID\r\n   */\r\n  private prepareResetPasswordArea(userID: string) {\r\n\tthis.confirmationService.confirm({\r\n\t  message: 'Are you sure that you want to perform this action?',\r\n      accept: () => {\r\n\t\tthis.acpS.resetUserPassword(userID).subscribe(result => {\r\n\t\t  this.userMsgs.push({\r\n            severity: 'success',\r\n            summary: 'successful',\r\n            detail: '...'\r\n          });\r\n\t\t  this.show('overview');\r\n\t\t}, err => {\r\n\t\t  this.userMsgs.push({\r\n            severity: 'error',\r\n            summary: 'Error!'\r\n          });\r\n\t\t});\r\n      }\r\n    }); \r\n  }\r\n  \r\n  /**\r\n   * input values are initialized according to the expected contents\r\n   * PAGE[OVERVIEW]:BUTTON@`REMOVE` (prepareRemoveArea(userID))-> (PAGE[OVERVIEW]:CONFIRM@`Are you sure ...` (accept)-> PAGE[OVERVIEW]:USERS\\USERS[userID])\r\n   * \r\n   * @param userID\r\n   */\r\n  private prepareRemoveArea(userID: string) {\r\n\tthis.confirmationService.confirm({\r\n\t  message: 'Are you sure that you want to perform this action?',\r\n      accept: () => {\r\n\t\tthis.acpS.removeUser(userID).subscribe(result => {\r\n\t\t  this.userMsgs.push({\r\n            severity: 'success',\r\n            summary: 'successful',\r\n            detail: 'User was removed!'\r\n          });\r\n\t\t  document.getElementById(userID).remove();\r\n\t\t  this.show('overview');\r\n\t\t}, err => {\r\n\t\t  this.userMsgs.push({\r\n            severity: 'error',\r\n            summary: 'Error!'\r\n          });\r\n\t\t});\r\n      }\r\n    });  \r\n  }\r\n  \r\n  \r\n  /* ---------------------------- CHANGE AREA ----------------------------*/\r\n  private initChangeArea() {\r\n\tlet formControls = {};\r\n    formControls['id'] = new FormControl({value: '', disabled: true}, Validators.nullValidator);\r\n\tformControls['username'] = new FormControl('', Validators.compose([Validators.required, Validators.minLength(6)]));\r\n\tformControls['role'] = new FormControl('', Validators.required);\r\n\tformControls['email'] = new FormControl('', Validators.compose([Validators.required, Validators.pattern(this.emailPattern)]));\r\n\tformControls['firstname'] = new FormControl('', Validators.compose([Validators.required, Validators.minLength(2), Validators.maxLength(32)]));\r\n\tformControls['lastname'] = new FormControl('', Validators.compose([Validators.required, Validators.minLength(2), Validators.maxLength(64)]));\r\n\tformControls['confirmed'] = new FormControl({value: '', disabled: true}, Validators.nullValidator);\r\n    this.changeUserForm = this.fb.group(formControls);\r\n\t\r\n\tthis.role = [];\r\n\tthis.role.push({label: 'Enduser', value: 'enduser'});\r\n    this.role.push({label: 'Developer', value: 'developer'});\r\n  }\r\n  \r\n  private updateChangeArea() {\r\n    \r\n  }\r\n  \r\n  /**\r\n   * this method checks the inputs and change user properties if the inputs are correct\r\n   * \r\n   * @param data the user inputs\r\n   */\r\n  private checkUserChanges(data) {\r\n\tlet userID = this.changeUserForm.controls.id.value;\r\n\t\r\n\tlet user = {\r\n\t  role: data.role.toString(),\r\n\t  userId: userID,\r\n\t  email: data.email,\r\n\t  username: data.username,\r\n\t  firstname: data.firstname,\r\n\t  lastname: data.lastname,\r\n\t  password: data.password,\r\n\t  checkedSettings: [],\r\n\t  confirmed: data.confirmed\r\n\t};\r\n\r\n\tthis.acpS.updateUser(userID, user).subscribe(result => {\r\n      this.userMsgs.push({\r\n        severity: 'success',\r\n        summary: 'user has been changed',\r\n        detail: user.username\r\n      });\r\n\t  this.initChangeArea();\r\n      this.goBack();\r\n\t}, err => {\r\n\t  this.userMsgs.push({\r\n        severity: 'error',\r\n        summary: 'Error!'\r\n      });\r\n    });\r\n  }\r\n  \r\n  /* ---------------------------- ADD AREA ----------------------------*/\r\n  private initAddArea() {\r\n\tlet formControls = {};\r\n\tformControls['username'] = new FormControl('', Validators.compose([Validators.required, Validators.minLength(6)]));\r\n\tformControls['password'] = new FormControl('', Validators.compose([Validators.required, Validators.minLength(6)]));\r\n\tformControls['role'] = new FormControl('', Validators.required);\r\n\tformControls['email'] = new FormControl('', Validators.compose([Validators.required, Validators.pattern(this.emailPattern)]));\r\n\tformControls['firstname'] = new FormControl('', Validators.compose([Validators.required, Validators.minLength(2), Validators.maxLength(32)]));\r\n\tformControls['lastname'] = new FormControl('', Validators.compose([Validators.required, Validators.minLength(2), Validators.maxLength(64)]));\r\n\tformControls['confirmed'] = new FormControl({value: false, disabled: true}, Validators.nullValidator);\r\n    this.addUserForm = this.fb.group(formControls);\r\n  }\r\n  \r\n  private updateAddArea() {\r\n    \r\n  }\r\n  \r\n  /**\r\n   * this method checks the inputs and create a the user if the inputs are correct\r\n   * \r\n   * @param data the user inputs\r\n   */\r\n  private checkUserCreation(data) {\r\n\tlet user = {\r\n\t  role: data.role.toString(),\r\n\t  userId: \"\",\r\n\t  email: data.email,\r\n\t  username: data.username,\r\n\t  firstname: data.firstname,\r\n\t  lastname: data.lastname,\r\n\t  password: data.password,\r\n\t  checkedSettings: [],\r\n\t  confirmed: data.confirmed\r\n\t};\r\n    this.acpS.addUser(user).subscribe(result => {\r\n            //KOPIERT AUS create-user\r\n            const sheetId = uuidv4();\r\n            const dashboardId = uuidv4();\r\n            const projectId = uuidv4();\r\n            const startSheet: SheetDB = new SheetDB(sheetId, 'Sheet 1', []);\r\n            const startDashboard: DashboardDB = new DashboardDB(dashboardId, 'Dashboard 1', [sheetId]);\r\n\r\n            this.databaseService.insertDocument(this.databaseService.USERSCOLLECTION, new User(result['userId'], user.role, projectId))\r\n              .subscribe(resultUser => {\r\n                  this.databaseService.insertDocument(this.databaseService.PROJECTSCOLLECTION, new ProjectDB(projectId, 'Project 1', 'omega', [dashboardId]))\r\n                    .subscribe(result => {\r\n                      }\r\n                      , err => {\r\n                      });\r\n\r\n                  this.databaseService.insertDocument(this.databaseService.DASHBOARDSCOLLECTION, startDashboard)\r\n                    .subscribe(result => {\r\n                      }\r\n                      , err => {\r\n                      });\r\n\r\n\r\n                  this.databaseService.insertDocument(this.databaseService.SHEETSSCOLLECTION, startSheet)\r\n                    .subscribe(result => {\r\n                      }\r\n                      , err => {\r\n                      });\r\n\r\n                  this.userMsgs.push({\r\n                    severity: 'success',\r\n                    summary: 'Success',\r\n                    detail: 'User has been added!'\r\n                  });\r\n                  this.show('overview');\r\n                },\r\n                err => {\r\n                  this.userMsgs.push({\r\n                    severity: 'error',\r\n                    summary: 'Error',\r\n                    detail: 'Error while creating user. Please try again later or contact the administrator.'\r\n                  });\r\n                });\r\n          },\r\n          err => {\r\n            if (err.status === CONFLICT) {\r\n\r\n               //**\r\n               if(err.getMessage().equals('Email is already registered.')) {\r\n                this.userMsgs.push({severity: 'error', summary: 'Conflict', detail: 'Email address is already registered.'});\r\n              }\r\n              else\r\n                this.userMsgs.push({severity: 'error', summary: 'Conflict', detail: 'Username is already existed.'});\r\n\r\n            } else {\r\n              this.userMsgs.push({\r\n                severity: 'error',\r\n                summary: 'Error',\r\n                detail: 'Error while creating user.Please try again later or contact the administrator.'\r\n              });\r\n            }\r\n          });\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {LoginComponent} from './user-management/login/login.component';\r\nimport {CreateUserComponent} from './user-management/create-user/create-user.component';\r\nimport {SkeletonModule} from \"./skeleton/skeleton.module\";\r\nimport {ForgotPasswordComponent} from './user-management/forgot-password/forgot-password.component';\r\nimport {ResetPasswordComponent} from './user-management/reset-password/reset-password.component';\r\n\r\n/*@*/\r\nimport {ACPComponent} from './acp/acp.component';\r\nimport {HomeComponent} from './user-management/home/home.component';\r\nimport { UnauthorizedComponent } from './skeleton/unauthorized/unauthorized.component';\r\n\r\n/*We are lazy-loading the skeleton module, because the skeleton module needs some information which are only available after user-management*/\r\n\r\nconst routes: Routes = [\r\n  /*@*/{path: '', component: HomeComponent},\r\n  {path: 'acp', component: ACPComponent},\r\n  {path: 'dashboard', loadChildren: () => SkeletonModule},\r\n  {path: 'resetPassword', component: ResetPasswordComponent},\r\n  {path: 'forgotPassword', component: ForgotPasswordComponent},\r\n  {path: 'unauthorized', component: UnauthorizedComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  providers: [],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule {\r\n}\r\n","module.exports = \"h1 {\\r\\n  color: #668BCC;\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n  font-size: 250%;\\r\\n}\\r\\n\"","module.exports = \"<!-- shows user-management-page, create-user page or (when logged in) the dashboards -->\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent implements OnInit {\r\n  constructor(private router: Router) {\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    // use it to navigate always to login page on refreh/reload\r\n   //this.router.navigate(['']);\r\n  }\r\n}\r\n","// Angular Modules\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {NgModule} from '@angular/core';\r\n// Our created Modules\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {SharedModule} from './models/shared.module';\r\n\r\n// Our Components\r\nimport {ACPComponent} from './acp/acp.component';\r\nimport {UserACPComponent} from './acp/user-management/user-acp.component';\r\nimport {PolicyACPComponent} from './acp/policy-management/policy-acp.component';\r\nimport {LogACPComponent} from './acp/log-management/logACP.component';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {CreateUserComponent} from './user-management/create-user/create-user.component';\r\nimport {LoginComponent} from './user-management/login/login.component';\r\nimport {SkeletonModule} from './skeleton/skeleton.module';\r\nimport {ConfirmDialogModule} from 'primeng/confirmdialog';\r\nimport {ConfirmComponent} from './user-management/confirm/confirm.component';\r\n\r\n\r\n// ngprime modules\r\nimport {AccordionModule} from 'primeng/accordion';\r\nimport {CardModule} from 'primeng/card';\r\nimport {ButtonModule} from 'primeng/button';\r\nimport {TabViewModule} from 'primeng/tabview';\r\nimport {ToolbarModule} from 'primeng/toolbar';\r\nimport {MenubarModule} from 'primeng/menubar';\r\nimport {PanelMenuModule} from 'primeng/panelmenu';\r\nimport {DropdownModule} from 'primeng/primeng';\r\nimport {SliderModule} from 'primeng/slider';\r\nimport {InputSwitchModule} from 'primeng/inputswitch';\r\nimport {TooltipModule} from 'primeng/tooltip'\r\nimport {OverlayPanelModule} from 'primeng/overlaypanel';\r\nimport {GrowlModule} from 'primeng/growl';\r\nimport {PanelModule} from 'primeng/panel';\r\nimport {MenuModule} from 'primeng/menu';\r\nimport {DialogModule} from 'primeng/dialog';\r\nimport {SidebarModule} from 'primeng/sidebar';\r\nimport {TieredMenuModule} from 'primeng/tieredmenu';\r\nimport {ScrollPanelModule} from 'primeng/scrollpanel';\r\nimport {CalendarModule} from 'primeng/calendar';\r\nimport {SelectButtonModule} from 'primeng/selectbutton';\r\nimport {ListboxModule} from 'primeng/primeng';\r\nimport {RadioButtonModule} from 'primeng/radiobutton';\r\nimport {TableModule} from 'primeng/table';\r\nimport { CookieLawModule } from 'angular2-cookie-law';\r\nimport {ProgressSpinnerModule} from 'primeng/progressspinner';\r\n/*@*/\r\nimport { HomeComponent } from './user-management/home/home.component';\r\nimport { PrivacyPolicyComponent } from './user-management/privacyPolicy/privacyPolicy.component';\r\nimport { TabMenuModule } from 'primeng/tabmenu';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { FieldsetModule } from 'primeng/fieldset';\r\nimport {ForgotPasswordComponent} from './user-management/forgot-password/forgot-password.component';\r\nimport {ResetPasswordComponent} from './user-management/reset-password/reset-password.component';\r\nimport { ImprintComponent } from './user-management/imprint/imprint.component';\r\nimport { UnauthorizedComponent } from './skeleton/unauthorized/unauthorized.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CreateUserComponent,\r\n\tPrivacyPolicyComponent,\r\n    ACPComponent,\r\n    UserACPComponent,\r\n    PolicyACPComponent,\r\n    LogACPComponent,\r\n\tHomeComponent,\r\n    LoginComponent,\r\n\tForgotPasswordComponent,\r\n    ResetPasswordComponent,\r\n\tImprintComponent,\r\n    ConfirmComponent,\r\n    UnauthorizedComponent\r\n  ],\r\n  imports: [\r\n    OverlayPanelModule,\r\n    ScrollPanelModule,\r\n    SidebarModule,\r\n    TieredMenuModule,\r\n    MenuModule,\r\n    AccordionModule,\r\n    PanelModule,\r\n    GrowlModule,\r\n    TooltipModule,\r\n    InputSwitchModule,\r\n    SliderModule,\r\n    DropdownModule,\r\n    PanelMenuModule,\r\n    MenubarModule,\r\n    ToolbarModule,\r\n    TabViewModule,\r\n    ButtonModule,\r\n    CardModule,\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    SkeletonModule,\r\n    ConfirmDialogModule,\r\n    SharedModule.forRoot(),\r\n    ReactiveFormsModule,\r\n    DialogModule,\r\n    CalendarModule,\r\n    SelectButtonModule,\r\n    ListboxModule,\r\n    RadioButtonModule,\r\n    TableModule,\r\n\tTabMenuModule,\r\n\tCheckboxModule,\r\n\tFieldsetModule,\r\n\tCookieLawModule,\r\n    ProgressSpinnerModule\r\n  ],\r\n  entryComponents: [\r\n    UserACPComponent,\r\n    PolicyACPComponent,\r\n    LogACPComponent,\r\n    PrivacyPolicyComponent,\r\n\tLoginComponent,\r\n\tCreateUserComponent,\r\n    ForgotPasswordComponent,\r\n    ResetPasswordComponent,\r\n\tImprintComponent,\r\n    ConfirmComponent,\r\n    UnauthorizedComponent\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n  constructor() {}\r\n\r\n}\r\n","import {FormControl} from '@angular/forms';\r\n\r\n\r\nexport function matchOtherValidator (otherControlName: string) {\r\n\r\n  let thisControl: FormControl;\r\n  let otherControl: FormControl;\r\n\r\n  return function matchOtherValidate(control: FormControl) {\r\n\r\n    if (!control.parent) {\r\n      return null;\r\n    }\r\n\r\n    // Initializing the validator.\r\n    if (!thisControl) {\r\n      thisControl = control;\r\n      otherControl = control.parent.get(otherControlName) as FormControl;\r\n      if (!otherControl) {\r\n        throw new Error('matchOtherValidator(): other control is not found in parent group');\r\n      }\r\n      otherControl.valueChanges.subscribe(() => {\r\n        thisControl.updateValueAndValidity();\r\n      });\r\n    }\r\n\r\n    if (!otherControl) {\r\n      return null;\r\n    }\r\n\r\n    if (otherControl.value !== thisControl.value) {\r\n      return {\r\n        matchOther: true\r\n      };\r\n    }\r\n\r\n    return null;\r\n\r\n  }\r\n}\r\n\r\nexport function notMatchOtherValidator (otherControlName: string) {\r\n\r\n  let thisControl: FormControl;\r\n  let otherControl: FormControl;\r\n\r\n  return function notMatchOtherValidate(control: FormControl) {\r\n\r\n    if (!control.parent){\r\n      return null;\r\n    }\r\n\r\n    //Initializing the validator\r\n    if (!thisControl) {\r\n      thisControl = control;\r\n      otherControl = control.parent.get(otherControlName) as FormControl;\r\n      if (!otherControl) {\r\n        throw new Error('notMatchOtherValidator(): other control is not found in parent group');\r\n      }\r\n      otherControl.valueChanges.subscribe(() => {\r\n        thisControl.updateValueAndValidity();\r\n      });\r\n    }\r\n\r\n    if (!otherControl) {\r\n      return null;\r\n    }\r\n\r\n    if (! (otherControl.value !== thisControl.value)) {\r\n      return {\r\n        notMatchOther: true\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","/**\r\n * This class represents a dataprivacyelement in the view of the backend\r\n */\r\n\r\ninterface ObjectConfig {\r\n  /**\r\n   * A unique id to identify a sheet\r\n   */\r\n  id: string;\r\n  /**\r\n   * \r\n   */\r\n  userId?: string;\r\n   /**\r\n   * \r\n   */\r\n  priorVersion?: string;\r\n  /**\r\n   * \r\n   */\r\n  contextID?: string;\r\n  /**\r\n   * \r\n   */\r\n  title: string;\r\n  /**\r\n   * \r\n   */\r\n  descriptions: DescriptionConfig;\r\n   /**\r\n   * \r\n   */\r\n  children: DataPrivacyElementBackend[]\r\n  /**\r\n   * \r\n   */\r\n  consentRequired?: boolean;\r\n  /**\r\n   * \r\n   */\r\n  preChecked?: boolean;\r\n  /**\r\n   * \r\n   */\r\n  inUse?: boolean;\r\n  validFrom: number;\r\n}\r\n\r\ninterface DescriptionConfig {\r\n  /**\r\n   * \r\n   */\r\n  before?: string;\r\n  /**\r\n   * \r\n   */\r\n  after?: string;\r\n  /**\r\n   * \r\n   */\r\n  submit?: string;\r\n}\r\n\r\n\r\nexport class DataPrivacyElementBackend{\r\n  id: string; //ID\r\n  userId: string = \"\";\r\n  priorVersion: string = \"\"; //Verweis auf die vorherige Version\r\n  contextID: string = \"\"; //statt children Verweis auf Elternknoten, verdeutliche ich an diesem Beispiel\r\n  title: string = \"\";\r\n  descriptions: DescriptionConfig = {\r\n    before: \"\",\r\n\tafter: \"\",\r\n\tsubmit: \"\"\r\n  };\r\n  children: DataPrivacyElementBackend[] = []; //nur im frontend wichtig, wegen\r\n  consentRequired: boolean = true;\r\n  preChecked: boolean = false;\r\n  inUse: boolean = false;\r\n  validFrom: Date;\r\n  \r\n  constructor(objectConfig: ObjectConfig) {\r\n    this.id = objectConfig.id;\r\n\tthis.userId = objectConfig.userId;\r\n\tthis.title = objectConfig.title;\r\n\tif (objectConfig.hasOwnProperty('priorVersion')) this.priorVersion = objectConfig.priorVersion;\r\n\tif (objectConfig.hasOwnProperty('contextID')) this.contextID = objectConfig.contextID;\r\n\tif (objectConfig.descriptions.hasOwnProperty('before')) this.descriptions.before = objectConfig.descriptions.before;\r\n\tif (objectConfig.descriptions.hasOwnProperty('after')) this.descriptions.after = objectConfig.descriptions.after;\r\n\tif (objectConfig.descriptions.hasOwnProperty('submit')) this.descriptions.submit = objectConfig.descriptions.submit;\r\n\tif (objectConfig.hasOwnProperty('consentRequired')) this.consentRequired = objectConfig.consentRequired;\r\n\tif (objectConfig.hasOwnProperty('preChecked')) this.preChecked = objectConfig.preChecked;\r\n\tif (objectConfig.hasOwnProperty('inUse')) this.inUse = objectConfig.inUse;\r\n\tif (objectConfig.hasOwnProperty('validFrom')) this.validFrom = new Date(objectConfig.validFrom);\r\n  }\r\n  \r\n  addChild(child: DataPrivacyElementBackend) {\r\n    this.children.push(child);\r\n  }\r\n}\r\n","/**\r\n * @ author Chinaedu Onwukwe\r\n * This class represents a platform in the view of the backend\r\n */\r\n\r\nexport class Platform {\r\n  public name: string;\r\n  public ip: string;\r\n  public port: string;\r\n  public username: string;\r\n  public password: string;\r\n  public platformId: string;\r\n  public userId: string;\r\n  public projectId: string;\r\n  public externalPlatformId: string;\r\n\r\n\r\n  constructor(name: string, ip: string, port: string, username: string, password: string, platformId: string, userId: string, projectId: string, externalPlatformId: string) {\r\n    this.name = name;\r\n    this.ip = ip;\r\n    this.port = port;\r\n    this.username = username;\r\n    this.password = password;\r\n    this.platformId = platformId;\r\n    this.userId = userId;\r\n    this.projectId = projectId;\r\n    this.externalPlatformId = externalPlatformId;\r\n  }\r\n}\r\n","/**\r\n * @author Chinaedu Onwukwe, Janina Hüther\r\n * This class models a dashboard. A user can create multiple dashboards.\r\n * A dashboard inherits one or multiple {@link SheetDB}.\r\n */\r\nimport {SheetDB} from './sheet';\r\n\r\nexport class DashboardDB {\r\n  /**\r\n   * The unique identifier of a dashboard\r\n   */\r\n  id: string;\r\n  /**\r\n   * The name of the dashboard\r\n   */\r\n  name: string;\r\n  /**\r\n   * One or multiple {@link SheetDB#id}\r\n   */\r\n  sheets: Array<string>;\r\n\r\n  /**\r\n   * Constructor to initialize all parameters\r\n   * @param id The unique identifier of a dashboard\r\n   * @param name The name of the dashboard\r\n   * @param sheets One or multiple {@link SheetDB#id}\r\n   */\r\n  constructor(id: string, name: string, sheets: Array<string>) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.sheets = sheets;\r\n  }\r\n}\r\n","/**\r\n * @author Chinaedu Onwukwe, Janina Hüther\r\n * This class models a project. A Project is the highest type of models. A user can create and delete different projects.\r\n * A project inherits {@link DashboardDB}.\r\n */\r\nimport {DashboardDB} from './dashboard';\r\n\r\nexport class ProjectDB {\r\n  /**\r\n   * The unique identifier for a project\r\n   */\r\n  id: string;\r\n  /**\r\n   * The name of a project\r\n   */\r\n  name: string;\r\n  /**\r\n   * The theme of a project\r\n   */\r\n  theme: string;\r\n  /**\r\n   * One or multiple {@link DashboardDB#id}\r\n   */\r\n  dashboards: Array<string>;\r\n\r\n  /**\r\n   * Constructor to initialize all paramters.\r\n   * @param id The unique identifier for a project\r\n   * @param name The name of a project\r\n   * @param theme The theme of a project\r\n   * @param dashboards One or multiple {@link DashboardDB}\r\n   */\r\n  constructor(id: string, name: string, theme: string, dashboards: Array<string>) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.theme = theme;\r\n    this.dashboards = dashboards;\r\n  }\r\n\r\n}\r\n","/**\r\n * @author Chinaedu Onwukwe, Janina Hüther\r\n * This class models a sheet. On a sheet different {@link WidgetDB}\r\n * can be displayed, edited and dragged around\r\n */\r\nimport { WidgetDB } from './widget';\r\n\r\nexport class SheetDB {\r\n  /**\r\n   * A unique id to identify a sheet\r\n   */\r\n  id: string;\r\n  /**\r\n   * The name of a sheet\r\n   */\r\n  name: string;\r\n\r\n  /**\r\n   * An array with the {@link WidgetDB#id} (s) for modelling the database\r\n   */\r\n  widgets:  Array<string>;\r\n\r\n  /**\r\n   * Constructor to initialize all parameters.\r\n   * @param id A unique id to identify a sheet\r\n   * @param name The name of a sheet\r\n   * @param widgetIds An array with the {@link WidgetDB} (s)\r\n   * @param widgets An array with the {@link WidgetDB#id} of the inherited widgets\r\n   */\r\n  constructor(id: string, name: string, widgets: Array<string>) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.widgets = widgets;\r\n  }\r\n}\r\n","/**\r\n * @author Chinaedu Onwukwe, Janina Hüther\r\n * This class models a bar chart widget\r\n */\r\nimport {GridsterItem} from \"angular-gridster2\";\r\nimport {ChartDeviceEntity} from './chartDeviceEntity';\r\nimport {ChartWidget} from \"./chartwidget\";\r\nimport {AxesOptions} from \"./linechartwidget\";\r\nimport {st} from \"@angular/core/src/render3\";\r\n\r\nexport class BarChartWidget extends ChartWidget {\r\n  // for labeling chart axes\r\n  axesOptions: AxesOptions;\r\n  // in a time span, which value should be visualized? max, min or average?\r\n  calculationType: Calculation;\r\n  // to determine how to calculate: percentage or count of values\r\n  frequencyType: Frequency;\r\n  // numeric values or states as input.\r\n  isNumerical: boolean;\r\n\r\n  constructor(id: string, name: string, additionalInfo: string,  position: GridsterItem, isDeveloped: boolean,\r\n              type: string, deviceEntities: Array<ChartDeviceEntity>, chartType: string, isMonoVis: boolean, isNumerical: boolean,\r\n              calculationType: Calculation, frequencyType: Frequency, axesOptions: AxesOptions,\r\n              numberOfValues?: number, startDate?: Date, endDate?: Date, interval?: string) {\r\n    super(id, name, additionalInfo, position, isDeveloped, type, deviceEntities, chartType, isMonoVis, numberOfValues, startDate, endDate, interval);\r\n    this.axesOptions = axesOptions;\r\n    this.calculationType = calculationType;\r\n    this.isNumerical = isNumerical;\r\n    this.frequencyType = frequencyType;\r\n  }\r\n\r\n}\r\n\r\nexport enum Calculation {\r\n  Avg = \"average\",\r\n  Min = \"minimum\",\r\n  Max = \"maximum\"\r\n}\r\nexport enum Frequency {\r\n  Count = \"count\",\r\n  Percentage = \"percentage\",\r\n}\r\n\r\n\r\n","import {DeviceEntity} from \"./deviceEntity\";\r\n\r\nexport class BubbleChartDeviceEntity{\r\n  color: string = '';\r\n  label: string = '';\r\n // c coordinate of bubble\r\n  x: DeviceEntity;\r\n  // y coordinate of bubble\r\n  y: DeviceEntity;\r\n  // radius of bubble\r\n  r: DeviceEntity;\r\n  location: string;\r\n  entityType: string;\r\n\r\n  constructor(entityType: string, color: string, label: string, x: DeviceEntity, y: DeviceEntity,\r\n              r: DeviceEntity, location: string) {\r\n    this.color = color;\r\n    this.label = label;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.r = r;\r\n    this.location = location;\r\n    this.entityType = entityType;\r\n  }\r\n}\r\n\r\n\r\n\r\nexport enum Calculation {\r\n  Avg = \"average\",\r\n  Min = \"minimum\",\r\n  Max = \"maximum\"\r\n}\r\n","\r\nimport {GridsterItem} from \"angular-gridster2\";\r\nimport {Widget} from \"./widget\";\r\nimport {BubbleChartDeviceEntity, Calculation} from \"./bubbleChartDeviceEntity\";\r\n\r\n\r\nexport class BubbleChartWidget extends Widget {\r\n\r\n  deviceEntities: Array<BubbleChartDeviceEntity> = [];\r\n  chartType: string = 'bubble';\r\n  startDate: Date;\r\n  endDate: Date;\r\n  locations: Array<String>;\r\n  colorPalette: String;\r\n  // x coordinate of bubble\r\n  x: IBubbleProperty;\r\n  // y coordinate of bubble\r\n  y: IBubbleProperty;\r\n  // radius of bubble\r\n  r: IBubbleProperty;\r\n\r\n  constructor(id: string, name: string, additionalInfo: string,  position: GridsterItem, isDeveloped: boolean,\r\n              type: string, deviceEntities: Array<BubbleChartDeviceEntity>, chartType: string,\r\n              startDate: Date, endDate: Date,locations: Array<String>, colorPalette: String) {\r\n    super(id, name, additionalInfo, position, isDeveloped, type);\r\n    this.deviceEntities = deviceEntities;\r\n    this.chartType = chartType;\r\n    this.startDate = startDate;\r\n    this.endDate = endDate;\r\n    this.locations = locations;\r\n    this.colorPalette = colorPalette;\r\n\r\n  }\r\n\r\n}\r\n\r\nexport interface IBubbleProperty {\r\n  label: string;\r\n  calculation: Calculation;\r\n  type: string;\r\n}\r\n\r\n\r\n","import {DeviceEntity} from \"./deviceEntity\";\r\n\r\nexport class ChartDeviceEntity  extends DeviceEntity{\r\n  lineType: string = '';\r\n  // to determine if line should be shown or only dots should be visualized\r\n  showLine: boolean = true;\r\n  // to determin if area under line should be filled or not\r\n  fillArea: boolean = true;\r\n  // color of line\r\n  color: string = '';\r\n  // label of line\r\n  label: string = '';\r\n  // unit of line\r\n  unit: string = '';\r\n  axis: string = '';\r\n\r\n  constructor(deviceId: string, entityId: string, lineType: string, fillArea: boolean, showLine: boolean, color: string, label: string, unit: string, axis: string) {\r\n    super(deviceId, entityId);\r\n    this.lineType = lineType;\r\n    this.fillArea = fillArea;\r\n    this.showLine = showLine;\r\n    this.color = color;\r\n    this.label = label;\r\n    this.unit = unit;\r\n    this.axis = axis;\r\n  }\r\n}\r\n","/**\r\n * @author Chinaedu Onwukwe, Janina Hüther\r\n * This class models a chart base widget\r\n */\r\nimport { Widget } from './widget';\r\nimport {GridsterItem} from \"angular-gridster2\";\r\nimport {ChartDeviceEntity} from './/chartdeviceEntity';\r\n\r\nexport class ChartWidget extends Widget {\r\n  /**\r\n   * An array with the ids of the devices and\r\n   * its sensors which are visualized\r\n   */\r\n  deviceEntities: Array<ChartDeviceEntity> = [];\r\n  chartType: string;\r\n  isRealtime: boolean;\r\n  isMonoVis: boolean;\r\n  isTimeBased: boolean;\r\n  // for realtime data\r\n  numberOfValues?: number;\r\n  // for historical data\r\n  startDate?: Date;\r\n  endDate?: Date;\r\n  interval?: string;\r\n\r\n  constructor(id: string, name: string, additionalInfo: string,  position: GridsterItem, isDeveloped: boolean, type: string, deviceEntities: Array<ChartDeviceEntity>,\r\n              chartType: string,isMonoVis: boolean, numberOfValues?: number, startDate?: Date, endDate?: Date, interval?: string) {\r\n    super(id, name, additionalInfo, position, isDeveloped, type);\r\n    this.deviceEntities = deviceEntities;\r\n    this.chartType = chartType;\r\n    this.isMonoVis = isMonoVis;\r\n    this.numberOfValues = numberOfValues;\r\n    this.startDate = startDate;\r\n    this.endDate = endDate;\r\n    this.interval = interval;\r\n  }\r\n}\r\n\r\n","/**\r\n * @author Chinaedu Onwukwe, Janina Hüther\r\n * This class models a dashboard. A user can create multiple dashboards.\r\n * A dashboard inherits one or multiple {@link Sheet}.\r\n */\r\nimport {Sheet} from './sheet';\r\n\r\nexport class Dashboard {\r\n  /**\r\n   * The unique identifier of a dashboard\r\n   */\r\n  id: string;\r\n  /**\r\n   * The name of the dashboard\r\n   */\r\n  name: string;\r\n  /**\r\n   * One or multiple {@link Sheet#id}\r\n   */\r\n  sheets: Array<Sheet>;\r\n\r\n  /**\r\n   * Constructor to initialize all parameters\r\n   * @param id The unique identifier of a dashboard\r\n   * @param name The name of the dashboard\r\n   * @param sheets One or multiple {@link Sheet#id}\r\n   */\r\n  constructor(id: string, name: string, sheets: Array<Sheet>) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.sheets = sheets;\r\n  }\r\n}\r\n","export class DeviceEntity {\r\n  deviceId: string='';\r\n  entityId: string='';\r\n\r\n  constructor(deviceId: string, entityId: string) {\r\n    this.entityId = entityId;\r\n    this.deviceId = deviceId;\r\n  }\r\n}\r\n","/**\r\n * @author Chinaedu Onwukwe, Janina Hüther\r\n * This class models a base device control widget.\r\n * It can control a the status of device (e.g. light ON or OFF)\r\n */\r\nimport { Widget } from './widget';\r\nimport {GridsterItem} from \"angular-gridster2\";\r\n\r\nexport class DeviceControlWidget extends  Widget {\r\n  /**\r\n   * The id of the device to control.\r\n   */\r\n  deviceId: string;\r\n  /**\r\n   * The id of the entity of the device to control.\r\n   */\r\n  entityId: string;\r\n  /**\r\n   * Indicates whether to orientate the content to bottom or to right.\r\n   */\r\n  controlPosition: string;\r\n  /**\r\n   * Value of the font size\r\n   */\r\n  fontSize: number;\r\n\r\n  /**\r\n   * An icon can be displayed on the widget.\r\n   */\r\n  icon: string;\r\n\r\n  constructor(id: string, name: string, additionalInfo: string, position: GridsterItem, isDeveloped: boolean, type: string, deviceId: string, entityId: string, controlPosition: string, fontSize: number, icon: string) {\r\n    super(id, name, additionalInfo, position, isDeveloped, type);\r\n    this.deviceId = deviceId;\r\n    this.entityId = entityId;\r\n    this.controlPosition = controlPosition;\r\n    this.fontSize = fontSize;\r\n    this.icon = icon;\r\n  }\r\n}\r\n","import {GridsterItem} from \"angular-gridster2\";\r\nimport {ChartDeviceEntity} from './chartDeviceEntity';\r\nimport {Widget} from \"./widget\";\r\nimport {st} from \"@angular/core/src/render3\";\r\nimport {DeviceEntity} from \"./deviceEntity\";\r\n\r\nexport class Doughnutchartwidget extends Widget {\r\n\r\n  deviceEntities: Array<DoughnutChartDeviceEntity>;\r\n  chartType: string;\r\n  isCircleFull: string;\r\n  distribution: string;\r\n  colorPalette: string;\r\n  startDate: Date;\r\n  endDate: Date;\r\n\r\n  constructor(id: string, name: string, additionalInfo: string,  position: GridsterItem, isDeveloped: boolean,\r\n              type: string, deviceEntities: Array<DoughnutChartDeviceEntity>, chartType: string,\r\n              isCircleFull: string, distribution: string, colorPalette: string, startDate: Date, endDate?: Date) {\r\n    super(id, name, additionalInfo, position, isDeveloped, type);\r\n    this.deviceEntities = deviceEntities;\r\n    this.chartType = chartType;\r\n    this.isCircleFull = isCircleFull;\r\n    this.distribution = distribution;\r\n    this.startDate = startDate;\r\n    this.endDate = endDate;\r\n    this.colorPalette = colorPalette;\r\n  }\r\n\r\n}\r\n\r\nexport class DoughnutChartDeviceEntity  extends DeviceEntity {\r\n  label: string;\r\n  unit: string;\r\n\r\n  constructor(deviceId: string, entityId: string, label: string, unit: string) {\r\n    super(deviceId, entityId);\r\n    this.label = label;\r\n    this.unit = unit;\r\n  }\r\n}\r\n","/**\r\n * @author Chinaedu Onwukwe\r\n * This class helps to communicate with the database\r\n */\r\nexport class Fieldvalue {\r\n  field: string;\r\n  value;\r\n\r\n  constructor(field: string, value) {\r\n    this.field = field;\r\n    this.value = value;\r\n  }\r\n\r\n}\r\n","/**\r\n * @author Yasin Kaymak\r\n * This class models a history chart widget to display history data\r\n */\r\nimport {Widget} from './widget';\r\nimport {GridsterItem} from  \"angular-gridster2\";\r\nimport {AnomalyEntity} from './realtimeanomalywidget';\r\nimport {AxesOptions} from './linechartwidget';\r\n\r\nexport class HistoryAnomalyWidget extends Widget {\r\n  /**\r\n   * The start point of the to visualize data\r\n   */\r\n  startDate: Date;\r\n  /**\r\n   * The end point of the to visualize data\r\n   */\r\n  endDate: Date;\r\n  // The interval of values\r\n  interval: string;\r\n\r\n  deviceEntities: Array<AnomalyEntity>;\r\n  chartType: string;\r\n  axesOptions: AxesOptions;\r\n\r\n  constructor(id: string, name: string, additionalInfo: string, position: GridsterItem, isDeveloped: boolean, type: string, deviceEntities: Array<AnomalyEntity>,\r\n              chartType: string, axesOptions: AxesOptions, startDate: Date, endDate: Date, interval: string) {\r\n    super(id, name, additionalInfo, position, isDeveloped, type);\r\n    this.startDate = startDate;\r\n    this.endDate = endDate;\r\n    this.interval = interval;\r\n    this.deviceEntities = deviceEntities;\r\n    this.chartType = chartType;\r\n    this.axesOptions = axesOptions;\r\n  }\r\n}\r\n","/**\r\n * @author Chinaedu Onwukwe, Janina Hüther\r\n * This class models a chart base widget\r\n */\r\nimport {GridsterItem} from \"angular-gridster2\";\r\nimport {ChartDeviceEntity} from './chartdeviceEntity';\r\nimport {ChartWidget} from \"./chartwidget\";\r\nimport {st} from \"@angular/core/src/render3\";\r\n\r\nexport class LineChartWidget extends ChartWidget {\r\n  /**\r\n   * An array with the ids of the devices and\r\n   * its sensors which are visualized\r\n   */\r\n  isRealtime: boolean;\r\n  isMonoVis: boolean;\r\n  isTimeBased: boolean;\r\n  axesOptions: AxesOptions;\r\n\r\n  constructor(id: string, name: string, additionalInfo: string,  position: GridsterItem, isDeveloped: boolean,\r\n              type: string, deviceEntities: Array<ChartDeviceEntity>, chartType: string, isMonoVis: boolean, isRealtime: boolean, isTimeBased: boolean, axesOptions: AxesOptions,\r\n              numberOfValues?: number, startDate?: Date, endDate?: Date, interval?: string) {\r\n    super(id, name, additionalInfo, position, isDeveloped, type, deviceEntities, chartType, isMonoVis, numberOfValues, startDate, endDate, interval);\r\n    this.axesOptions = axesOptions;\r\n    this.isMonoVis = isMonoVis;\r\n    this.isTimeBased = isTimeBased;\r\n    this.isRealtime = isRealtime;\r\n  }\r\n}\r\n\r\nexport class AxesOptions {\r\n  xLabel: string;\r\n  yLabel: string;\r\n  xLabelVisible: boolean;\r\n  yLabelVisible: boolean;\r\n\r\n  constructor(xLabels: string, yLabels: string, xLabelVisible: boolean, yLabelVisible: boolean) {\r\n    this.xLabel = xLabels;\r\n    this.yLabel = yLabels;\r\n    this.xLabelVisible = xLabelVisible;\r\n    this.yLabelVisible = yLabelVisible;\r\n  }\r\n}\r\n","\r\nimport {GridsterItem} from \"angular-gridster2\";\r\nimport {Widget} from \"./widget\";\r\nimport {DeviceEntity} from \"./deviceEntity\";\r\n\r\n\r\nexport class PolarAreaChartWidget extends Widget {\r\n\r\n  deviceEntities: Array<IPolarChartDeviceEntity> = [];\r\n  chartType: string = 'polarArea';\r\n  startDate: Date;\r\n  endDate: Date;\r\n  calculationType: Calculation;\r\n  deviceType: string;\r\n  location: string;\r\n  colorPalette: string;\r\n\r\n  constructor(id: string, name: string, additionalInfo: string,  position: GridsterItem, isDeveloped: boolean,\r\n              type: string, deviceEntities: Array<IPolarChartDeviceEntity>, chartType: string,\r\n              startDate: Date, endDate: Date, calculationType: Calculation, deviceType: string, location: string,\r\n              colorPalette: string) {\r\n    super(id, name, additionalInfo, position, isDeveloped, type);\r\n    this.deviceEntities = deviceEntities;\r\n    this.chartType = chartType;\r\n    this.startDate = startDate;\r\n    this.endDate = endDate;\r\n    this.calculationType = calculationType;\r\n    this.deviceType = deviceType;\r\n    this.location = location;\r\n    this.colorPalette = colorPalette;\r\n  }\r\n\r\n}\r\n\r\nexport interface IPolarChartDeviceEntity {\r\n  deviceId: string;\r\n  entityId: string;\r\n  //label: string;\r\n}\r\n\r\nexport interface ILocation {\r\n  id: string;\r\n  name: string;\r\n  label: string;\r\n}\r\n\r\nexport enum Distribution {\r\n  TimeInterval = \"timeInterval\",\r\n  Location = \"location\",\r\n  Occupant = \"occupant\"\r\n}\r\n\r\nexport enum SensorType {\r\n  Motion = \"motion\",\r\n  Temperature = \"temperature\",\r\n  Humidity = \"humidity\",\r\n  Pressure = \"pressure\",\r\n  Energy = \"energy\",\r\n  Luminance = \"luminance\",\r\n  Mass = \"mass\",\r\n  Power = \"power\",\r\n  Acceleration = \"acceleration\",\r\n  Gyroscope = \"gyrocope\",\r\n  Length = \"length\",\r\n  Volume = \"volume\",\r\n  Acoustic = \"acoustic\",\r\n  LightIntensity = \"light intensity\",\r\n  Magnetic = \"magnetic\",\r\n  Position = \"position\",\r\n  Force = \"force\",\r\n  Flow = \"flow\"\r\n}\r\n\r\nexport enum ActuatorType {\r\n  Switch = \"switch\",\r\n  Dimmer = \"dimmer\",\r\n  Color = \"color\",\r\n  Command = \"command\"\r\n}\r\n\r\nexport enum Calculation {\r\n  Avg = \"average\",\r\n  Min = \"minimum\",\r\n  Max = \"maximum\"\r\n}\r\n\r\nexport interface IPolarAreaDropdownElem {\r\n  deviceEntity: DeviceEntity;\r\n  sensorList: Array<ISensorListElem>;\r\n}\r\n\r\nexport interface ISensorListElem {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\n","/**\r\n * @author Chinaedu Onwukwe, Janina Hüther\r\n * This class models a project. A Project is the highest type of models. A user can create and delete different projects.\r\n * A project inherits {@link Dashboard}.\r\n */\r\nimport {Dashboard} from './dashboard';\r\n\r\nexport class Project {\r\n  /**\r\n   * The unique identifier for a project\r\n   */\r\n  id: string;\r\n  /**\r\n   * The name of a project\r\n   */\r\n  name: string;\r\n  /**\r\n   * The theme of a project\r\n   */\r\n  theme: string;\r\n  /**\r\n   * One or multiple {@link Dashboard#id}\r\n   */\r\n  dashboards: Array<Dashboard>;\r\n\r\n  /**\r\n   * Constructor to initialize all paramters.\r\n   * @param id The unique identifier for a project\r\n   * @param name The name of a project\r\n   * @param theme The theme of a project\r\n   * @param dashboards One or multiple {@link Dashboard}\r\n   */\r\n  constructor(id: string, name: string, theme: string, dashboards: Array<Dashboard>) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.theme = theme;\r\n    this.dashboards = dashboards;\r\n  }\r\n\r\n}\r\n","/**\r\n * @author Chinaedu Onwukwe, Janina Hüther\r\n * This class models a real time data widget to display real time data\r\n */\r\nimport {ChartWidget} from './chartwidget';\r\nimport {Widget} from './widget';\r\nimport {AxesOptions} from './linechartwidget';\r\nimport {GridsterItem} from \"angular-gridster2\";\r\n\r\nexport class RealtimeAnomalyWidget extends Widget {\r\n  /**\r\n   * The number of values which a displayed at once in the graph\r\n   */\r\n  numberOfValues: number;\r\n  axesOptions: AxesOptions;\r\n  chartType: string;\r\n  deviceEntities: Array<AnomalyEntity>;\r\n\r\n  constructor(id: string, name: string, additionalInfo: string, position: GridsterItem, isDeveloped: boolean,\r\n              type: string, deviceEntities: Array<AnomalyEntity>,\r\n              chartType: string, axesOptions: AxesOptions, numberOfValues: number) {\r\n    super(id, name, additionalInfo, position, isDeveloped, type);\r\n    this.axesOptions = axesOptions;\r\n    this.deviceEntities = deviceEntities;\r\n    this.chartType = chartType;\r\n    this.numberOfValues = numberOfValues;\r\n  }\r\n}\r\n\r\nexport class AnomalyEntity {\r\n  deviceId: string;\r\n  entityId: string;\r\n  label: string;\r\n  unit: string;\r\n  axis: string;\r\n\r\n  constructor(deviceId: string, entityId: string, label: string, unit: string, axis: string,){\r\n    this.deviceId = deviceId;\r\n    this.entityId = entityId;\r\n    this.label = label;\r\n    this.unit = unit;\r\n    this.axis = axis;\r\n  }\r\n}\r\n","export class Condition   {\r\n\r\n   ID = 0;\r\n   command = '';\r\n   state: any = ''; // ON or OFF\r\n   time = '';\r\n   // for example: [\"\", \"TUE\", \"\", \"\", \"FRI\", \"SAT\", \"SUN\"] for save value is needed\r\n   days: Array<string> = ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'];\r\n   location = '';\r\n   weather = '';\r\n   activity = '';\r\n   trafficsituation = '';\r\n   temperature = 0;\r\n   operator = '';\r\n   telephonenumber = 0;\r\n   email = '';\r\n   communicationtype = '';\r\n   notification = '';\r\n   physical = false;\r\n   servicetype = '';\r\n   entry = '';\r\n   living = false;\r\n   human = false;\r\n   itemtype = '';\r\n   place = '';\r\n}\r\n","export class DataNotification {\r\n  ID = 0;\r\n  name: string;\r\n  relation: string;\r\n  relationID: number;\r\n  notified: boolean;\r\n  event: string;\r\n  date: Date;\r\n  userId: string;\r\n}\r\n","import { RuleAction } from './ruleaction';\r\n\r\n// Rule module for matching with JSON Object  from frontend received by backend\r\nexport class Rule {\r\n\r\n  ID = 0;\r\n  name: string;\r\n  description: string;\r\n  notify: boolean;\r\n  active: boolean;\r\n  rootTGID: number;\r\n  ruleActions: Array<RuleAction>;\r\n  userId = '';\r\n  platformID = ''; // for save value is needed\r\n  projectID = ''; // for save value is needed\r\n\r\n  setRuleData(rule: any): void {\r\n    this.ID = rule.ID;\r\n    this.name = rule.name;\r\n    this.description = rule.description;\r\n    this.notify = rule.notify;\r\n    this.active = rule.active;\r\n    this.rootTGID = rule.rootTGID;\r\n    this.ruleActions = rule.ruleActions;\r\n    this.platformID = rule.platformID;\r\n    this.projectID = rule.projectID;\r\n    this.userId = rule.userId;\r\n  }\r\n}\r\n","import { Condition } from './condition';\r\n\r\n// Action template for matching with JSON Object  from frontend received by backend\r\nexport class RuleAction {\r\n  name: string;\r\n  ID = 0;\r\n  // for save value is needed\r\n  deviceID = '7_openHabknx:device:38d73ce2';\r\n  // for save value is needed\r\n  sensorID = 'knx:device:38d73ce2:schlafzimmerlicht_switch';\r\n  condition: Condition = new Condition();\r\n}\r\n","import { Condition } from './condition';\r\n\r\n// Trigger template for matching with JSON Object  from frontend received by backend\r\nexport class Trigger {\r\n\r\n  ID = 0;\r\n  name = ''; // to save trigger this value has not to be null or ''\r\n  triggerclass = '';\r\n  deviceID = ''; // to save trigger this value has not to be null or ''\r\n  sensorID = ''; // to save trigger this value has not to be null or ''\r\n  condition: Condition = new Condition();\r\n}\r\n","import { Trigger } from './trigger';\r\n\r\n// Triggergroup template for matching with JSON Object  from frontend received by backend\r\nexport class  Triggergroup {\r\n\r\n  ID: number;\r\n  name = 'default-name'; // for save value is needed\r\n  operator = ''; // OR or AND\r\n  leftchild = 0;\r\n  rightchild = 0;\r\n  trigger: Trigger = new Trigger();\r\n  triggerclass: string;\r\n  userId: string;\r\n  projectID: string;\r\n  getTriggerGroup(): any {\r\n    return this;\r\n  }\r\n}\r\n","export const weekdays = [\r\n  {\r\n    pos: 0,\r\n    value: 'MON',\r\n    label: 'Monday'\r\n  }, {\r\n    pos: 1,\r\n    value: 'TUE',\r\n    label: 'Tuesday'\r\n  }, {\r\n    pos: 2,\r\n    value: 'WED',\r\n    label: 'Wednesday'\r\n  }, {\r\n    pos: 3,\r\n    value: 'THU',\r\n    label: 'Thursday'\r\n  }, {\r\n    pos: 4,\r\n    value: 'FRI',\r\n    label: 'Friday'\r\n  }, {\r\n    pos: 5,\r\n    value: 'SAT',\r\n    label: 'Saturday'\r\n  }, {\r\n    pos: 6,\r\n    value: 'SUN',\r\n    label: 'Sunday'\r\n  }\r\n];\r\n","import {GridsterItem} from \"angular-gridster2\";\r\nimport {Widget} from './widget';\r\n\r\nexport class RuleManagementWidget extends Widget {\r\n\r\n  constructor(id: string, name: string, additionalInfo: string, position: GridsterItem, isDeveloped: boolean,\r\n              type: string) {\r\n      super(id, name, additionalInfo, position, isDeveloped, type);\r\n  }\r\n\r\n}\r\n","import {GridsterItem} from \"angular-gridster2\";\r\nimport {Widget} from './widget';\r\n\r\nexport class RuleNotificationWidget extends Widget {\r\n\r\n  constructor(id: string, name: string, additionalInfo: string, position: GridsterItem, isDeveloped: boolean,\r\n              type: string) {\r\n      super(id, name, additionalInfo, position, isDeveloped, type);\r\n  }\r\n\r\n}\r\n","import {GridsterItem} from \"angular-gridster2\";\r\nimport {Widget} from './widget';\r\n\r\nexport class RuleSharingWidget extends Widget {\r\n\r\n  constructor(id: string, name: string, additionalInfo: string, position: GridsterItem, isDeveloped: boolean,\r\n              type: string) {\r\n      super(id, name, additionalInfo, position, isDeveloped, type);\r\n  }\r\n\r\n}\r\n","/**\r\n * @author Chinaedu Onwukwe, Janina Hüther\r\n * This class models a sheet. On a sheet different {@link Widget}\r\n * can be displayed, edited and dragged around\r\n */\r\nimport { Widget } from './widget';\r\n\r\nexport class Sheet {\r\n  /**\r\n   * A unique id to identify a sheet\r\n   */\r\n  id: string;\r\n  /**\r\n   * The name of a sheet\r\n   */\r\n  name: string;\r\n\r\n  /**\r\n   * An array with the {@link Widget#id} (s) for modelling the database\r\n   */\r\n  widgets:  Array<Widget>;\r\n\r\n  /**\r\n   * Constructor to initialize all parameters.\r\n   * @param id A unique id to identify a sheet\r\n   * @param name The name of a sheet\r\n   * @param widgetIds An array with the {@link Widget} (s)\r\n   * @param widgets An array with the {@link Widget#id} of the inherited widgets\r\n   */\r\n  constructor(id: string, name: string, widgets: Array<Widget>) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.widgets = widgets;\r\n  }\r\n}\r\n","/**\r\n * @author Chinaedu Onwukwe, Janina Hüther\r\n * This class models a toggle widget.\r\n * It can control a the status of device (e.g. light to 70%) by a slider.\r\n */\r\n\r\nimport { DeviceControlWidget } from './devicecontrolwidget';\r\nimport {GridsterItem} from \"angular-gridster2\";\r\n\r\nexport class SliderWidget extends  DeviceControlWidget {\r\n  /**\r\n   * The value of the entity\r\n   */\r\n  value: number;\r\n  /**\r\n   * The minimal possible value for the entity\r\n   */\r\n  minValue: number;\r\n  /**\r\n   * The maximal possible value for the entity\r\n   */\r\n  maxValue: number;\r\n\r\n  constructor(id: string, name: string, additionalInfo: string, position: GridsterItem, isDeveloped: boolean,\r\n              type: string, deviceId: string,\r\n              entityId: string, controlPosition: string, fontSize: number, icon: string, value: number, minValue: number, maxValue: number) {\r\n    super(id, name, additionalInfo, position, isDeveloped, type, deviceId, entityId, controlPosition, fontSize, icon);\r\n    this.value = value;\r\n    this.minValue = minValue;\r\n    this.maxValue = maxValue;\r\n\r\n  }\r\n\r\n}\r\n","/**\r\n * @author Chinaedu Onwukwe, Janina Hüther\r\n * This class models a state widget.\r\n * It can control the status of an entity (e.g. light color to green or blue or pink) by a selector.\r\n */\r\n\r\nimport { DeviceControlWidget } from './devicecontrolwidget';\r\nimport {GridsterItem} from \"angular-gridster2\";\r\n\r\nexport class StateWidget extends  DeviceControlWidget {\r\n  /**\r\n   * The value of the entity\r\n   */\r\n  value: number;\r\n\r\n\r\n  constructor(id: string, name: string, additionalInfo: string, position: GridsterItem, isDeveloped: boolean,\r\n              type: string, deviceId: string,\r\n              entityId: string, controlPosition: string, fontSize: number, icon: string, value: number) {\r\n    super(id, name, additionalInfo, position, isDeveloped, type, deviceId, entityId, controlPosition, fontSize, icon);\r\n    this.value = value;\r\n  }\r\n\r\n}\r\n","/**\r\n * @author Chinaedu Onwukwe, Janina Hüther\r\n * This class models a toggle widget.\r\n * It can control a the status of device (e.g. light ON or OFF) by a switch.\r\n */\r\n\r\nimport { DeviceControlWidget } from './devicecontrolwidget';\r\nimport {GridsterItem} from \"angular-gridster2\";\r\n\r\nexport class ToggleWidget extends  DeviceControlWidget {\r\n  /**\r\n   * The value of the entity\r\n   */\r\n  value: boolean;\r\n  /**\r\n   * The on label for the toggle\r\n   */\r\n  toggleLabelOn: string;\r\n\r\n  /**\r\n   * The off label for the toggle\r\n   */\r\n  toggleLabelOff: string;\r\n\r\n  constructor(id: string, name: string, additionalInfo: string, position: GridsterItem, isDeveloped: boolean,\r\n              type: string, deviceId: string,\r\n              entityId: string, controlPosition: string, fontSize: number, icon: string, value: boolean,\r\n              toggleLabelOn: string, toggleLabelOff: string) {\r\n    super(id, name, additionalInfo, position, isDeveloped, type, deviceId, entityId, controlPosition, fontSize, icon);\r\n    this.value = value;\r\n    this.toggleLabelOn = toggleLabelOn;\r\n    this.toggleLabelOff = toggleLabelOff;\r\n  }\r\n\r\n}\r\n","/**\r\n * This class represents a user\r\n */\r\nexport class User {\r\n  id: string;\r\n  role: string;\r\n  /**\r\n   * Ids of the user's {@link Project} (s)\r\n   */\r\n  projects: Array<string> = [];\r\n\r\n  constructor(id: string, role: string, projectId: string) {\r\n    this.id = id;\r\n    this.role = role;\r\n    this.projects.push(projectId);\r\n  }\r\n\r\n}\r\n","/**\r\n * @author Chinaedu Onwukwe, Janina Hüther\r\n * This class models a base device control widget.\r\n * It can control a the status of device (e.g. light ON or OFF)\r\n */\r\nimport { Widget } from './widget';\r\nimport {GridsterItem} from \"angular-gridster2\";\r\n\r\nexport class ValueViewWidget extends  Widget {\r\n  /**\r\n   * The id of the device to control\r\n   */\r\n  deviceId: string;\r\n  /**\r\n   * The id of the entity of the device to control\r\n   */\r\n  entityId: string;\r\n  fontSize: number;\r\n  controlPosition: string;\r\n  entityType: string;\r\n  value: string;\r\n\r\n  constructor(id: string, name: string, additionalInfo: string, position: GridsterItem, isDeveloped: boolean, type: string, deviceId: string,\r\n              entityId: string, fontSize: number, entityType: string, controlPosition: string) {\r\n    super(id, name, additionalInfo, position, isDeveloped, type);\r\n    this.deviceId = deviceId;\r\n    this.entityId = entityId;\r\n    this.fontSize = fontSize;\r\n    this.entityType = entityType;\r\n    this.controlPosition = controlPosition;\r\n  }\r\n}\r\n\r\n/**\r\n * This enum represents what type of entity should be represented.\r\n */\r\nexport enum EntityType {\r\n  action = 'action',\r\n  sensor = 'sensor'\r\n}\r\n","/**\r\n * @author Chinaedu Onwukwe, Janina Hüther\r\n * This class models a base widget. A widget can be modified in different ways. It is drag-  and dropable.\r\n * It can control a device or visualize the state(s) of a device or rules.\r\n */\r\nimport { GridsterItem } from 'angular-gridster2';\r\n\r\nexport class Widget {\r\n  id: string;\r\n  name: string;\r\n  additionalInfo?: string;\r\n  position: GridsterItem;\r\n  isDeveloped: boolean;\r\n  icon?: string;\r\n  type: string;\r\n\r\n  constructor(id: string, name: string, additionalInfo: string, position: GridsterItem, isDeveloped: boolean, type: string) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.additionalInfo = additionalInfo;\r\n    this.position = position;\r\n    this.isDeveloped = isDeveloped;\r\n    this.type = type;\r\n  }\r\n}\r\n\r\n/**\r\n * This class lists all available types of widgets ClickDigital offers.\r\n */\r\nexport enum WidgetType {\r\n  ruleView = 'RuleViewWidget',\r\n  tableView = 'TableViewWidget',\r\n  toggleDeviceControl = 'ToggleControlWidget',\r\n  sliderDeviceControl = 'SliderControlWidget',\r\n  stateDeviceControl = 'StateWidget',\r\n  lineChartVisualization = 'LineChartWidget',\r\n  barChartVisualization = 'BarChartWidget',\r\n  bubbleChartVisualization = 'BubbleChartWidget',\r\n  doughnutChartVisualization = 'DoughnutChartWidget',\r\n  polarAreaChartVisualization = 'PolarAreaChartWidget',\r\n  realtimeValueVisualization = 'RealtimeValueWidget',\r\n  deviceControl = 'DeviceControlWidget',\r\n  deleteDevice = 'DeleteDeviceWidget',\r\n  addDevice = 'AddDeviceWidget',\r\n  ruleManagementView = 'RuleManagementViewWidget',\r\n  ruleNotificationView = 'RuleNotificationViewWidget',\r\n  ruleSharingViewWidget = 'RuleSharingViewWidget',\r\n  realtimeAnomaly = 'RealtimeAnomalyWidget',\r\n  historyAnomaly = 'HistoryAnomalyWidget'\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\n\r\n\r\nimport {DatabaseService} from '../services/database.service';\r\nimport {DataService} from '../services/data.service';\r\nimport {DeviceManagerService} from '../services/devicemanager.service';\r\nimport {RuleManagerService} from '../services/rulemanager.service';\r\nimport {UserManagerService} from '../services/usermanager.service';\r\nimport {VisualManagerService} from '../services/visualmanager.service';\r\nimport {ProjectService} from '../services/project.service';\r\nimport {AnomalyManagerService} from '../services/anomalymanager.service';\r\n\r\nimport {DataPrivacyManagerService} from '../services/dataprivacymanager.service';\r\nimport { SessionService } from '../services/session.service';\r\n\r\n/* Module to share Services between the modules, because it wouldn't work if you just\r\nput the services in both of the providers arrays in the modules.. */\r\n@NgModule({\r\n  declarations: [],\r\n  exports: []\r\n})\r\nexport class SharedModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: SharedModule,\r\n      providers: [DatabaseService, DataService, UserManagerService,\r\n        DeviceManagerService, RuleManagerService, VisualManagerService, ProjectService,AnomalyManagerService,  DataPrivacyManagerService, SessionService]\r\n    };\r\n  }\r\n}\r\n","/**\r\n * @ author Hamza Al Haddouchi\r\n */\r\n \r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment} from '../../environments/environment';\r\n\r\n\r\nconst BACKENDURL = `${environment.httpMode}${environment.baseUrl}${environment.contextRoot}`;\r\nconst AUTH = 'Bearer '.concat(localStorage.getItem('ang-token'));\r\n\r\n\r\nconst URL_ACP_MANAGER = `${BACKENDURL}/acp/`;\r\n\r\nconst USER \t\t\t\t\t \t= URL_ACP_MANAGER + 'user/';\r\nconst USER_GET_SINGLE\t\t\t= USER + '';\r\nconst USER_ADD\t\t\t\t\t= USER + 'add/';\r\nconst USER_GET_ALL\t\t\t\t= USER + 'all/';\r\nconst USER_UPDATE\t\t\t\t= '/update';\r\nconst USER_RESET_PASSWORD\t\t= '/resetPassword';\r\nconst USER_REMOVE\t\t\t\t= '/remove';\r\n\r\nconst PRIVACY \t\t\t  \t\t= URL_ACP_MANAGER + 'privacy/';\r\nconst PRIVACY_GET_SINGLE  \t\t= PRIVACY + '';\r\nconst PRIVACY_ADD \t\t  \t\t= PRIVACY + 'add/';\r\nconst PRIVACY_GET_ALL     \t\t= PRIVACY + 'all/';\r\nconst PRIVACY_REMOVE_ALL  \t\t= PRIVACY + 'removeAll/';\r\nconst PRIVACY_UPDATE \t \t\t= '/update';\r\nconst PRIVACY_REMOVE \t  \t\t= '/remove';\r\n\r\nconst PRIVACY_BACKUP \t\t\t= URL_ACP_MANAGER + 'privacyBackup/';\r\nconst PRIVACY_BACKUP_GET_ALL\t= PRIVACY_BACKUP + 'all/';\r\nconst PRIVACY_BACKUP_UPDATE\t\t= '/update';\r\nconst PRIVACY_BACKUP_REMOVE\t\t= '/remove';\r\nconst PRIVACY_BACKUP_IMPORT\t\t= '/import/';\r\n\r\nconst URL_LOG_MANAGER = URL_ACP_MANAGER + 'logs/';\r\nconst URL_GET_LOGS_NO_FILTER = URL_LOG_MANAGER + 'getLogsNoFilter/';\r\nconst URL_GET_LOGS_USERNAME_FILTER = URL_LOG_MANAGER + 'getLogsUsernameFilter/';\r\nconst URL_GET_LOGS_DATERANGE_FILTER = URL_LOG_MANAGER + 'getLogsDaterangeFilter/';\r\nconst URL_GET_LOGS_USERNAME_DATERANGE_FILTER = URL_LOG_MANAGER + 'getLogsUsernameDaterangeFilter/';\r\n\r\n\r\n@Injectable()\r\nexport class ACPService {\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  /* ---------------------------- USER ----------------------------*/\r\n  /**\r\n    Path: /acp/user/add/\r\n  */\r\n  addUser(user): any {\r\n    return this.http.post(USER_ADD, user, {headers: {Authorization: AUTH }, withCredentials: true })\r\n           .pipe(map((res: Response) => res));\r\n  }\r\n  \r\n  /**\r\n    Path: /acp/user/{id}/update\r\n  */\r\n  updateUser(id: string, newObj): any {\r\n\treturn this.http.post(USER + id + USER_UPDATE, newObj, {headers: {Authorization: AUTH }, withCredentials: true })\r\n           .pipe(map((res: Response) => res));\r\n  }\r\n  \r\n  /**\r\n    Path: /acp/user/{id}\r\n  */\r\n  getUser(id: string) {\r\n    return this.http.get(USER_GET_SINGLE + id, {headers: {Authorization: AUTH }, withCredentials: true })\r\n\t       .pipe(map((res: Response) => res));\r\n  }\r\n  \r\n  /**\r\n    Path: /acp/user/all/{fromType}\r\n  */\r\n  getAllUsers(fromType: string = 'default'): any {\r\n    return this.http.get(USER_GET_ALL + fromType, {headers: {Authorization: AUTH }, withCredentials: true })\r\n\t       .pipe(map((res: Response) => res));\r\n  }\r\n  \r\n  /**\r\n    Path: /acp/user/{id}/resetPassword\r\n  */\r\n  resetUserPassword(id: string): any {\r\n    return this.http.get(USER + id + USER_RESET_PASSWORD, {headers: {Authorization: AUTH }, withCredentials: true })\r\n\t       .pipe(map((res: Response) => res));\r\n  }\r\n  \r\n  /**\r\n    Path: /acp/user/{id}/remove\r\n  */\r\n  removeUser(id: string): any {\r\n    return this.http.get(USER + id + USER_REMOVE, {headers: {Authorization: AUTH }, withCredentials: true })\r\n\t       .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  /* ---------------------------- PRIVACY ----------------------------*/\r\n  \r\n  /**\r\n    Path: /acp/privacy/add/\r\n  */\r\n  addPrivacyElement(obj): any {\r\n    return this.http.post(PRIVACY_ADD, obj, {headers: {Authorization: AUTH }, withCredentials: true })\r\n           .pipe(map((res: Response) => res));\r\n  }\r\n  \r\n  /**\r\n    Path: /acp/privacy/{id}/update\r\n  */\r\n  updatePrivacyElement(id: string, newObj): any {\r\n\treturn this.http.post(PRIVACY + id + PRIVACY_UPDATE, newObj, {headers: {Authorization: AUTH }, withCredentials: true })\r\n           .pipe(map((res: Response) => res));\r\n  }\r\n  \r\n\r\n  /**\r\n    Path: /acp/privacy/{id}\r\n  */\r\n  getPrivacyElement(id: string) {\r\n    return this.http.get(PRIVACY_GET_SINGLE + id, {headers: {Authorization: AUTH }, withCredentials: true })\r\n\t       .pipe(map((res: Response) => res));\r\n  }\r\n  \r\n  /**\r\n    Path: /acp/privacy/all/{fromType}\r\n  */\r\n  getAllPrivacyElements(fromType: string = 'default'): any {\r\n    return this.http.get(PRIVACY_GET_ALL + fromType, {headers: {Authorization: AUTH }, withCredentials: true })\r\n\t       .pipe(map((res: Response) => res));\r\n  }\r\n  \r\n \r\n  /**\r\n    Path: /acp/privacy/{id}/remove\r\n  */\r\n  removePrivacyElement(id: string): any {\r\n    return this.http.get(PRIVACY + id + PRIVACY_REMOVE, {headers: {Authorization: AUTH }, withCredentials: true })\r\n\t       .pipe(map((res: Response) => res));\r\n  }\r\n  \r\n\r\n  /**\r\n    Path: /acp/privacy/removeAll/{fromType}\r\n  */\r\n  removeAllPrivacyElements(fromType: string = 'default'): any {\r\n    return this.http.get(PRIVACY_REMOVE_ALL + fromType, {headers: {Authorization: AUTH }, withCredentials: true })\r\n\t       .pipe(map((res: Response) => res));\r\n  }\r\n  \r\n  /* ---------------------------- PRIVACY_BACKUP ----------------------------*/\r\n  \r\n   /**\r\n    Path: /acp/privacyBackup/{id}/update\r\n  */\r\n  updatePrivacyBackup(id: string, newObj): any {\r\n\treturn this.http.post(PRIVACY_BACKUP + id + PRIVACY_BACKUP_UPDATE, newObj, {headers: {Authorization: AUTH }, withCredentials: true })\r\n           .pipe(map((res: Response) => res));\r\n  }\r\n  \r\n  /**\r\n    Path: /acp/privacyBackup/all/{fromType}\r\n  */\r\n  getAllPrivacyBackups(fromType: string = 'default'): any {\r\n    return this.http.get(PRIVACY_BACKUP_GET_ALL + fromType, {headers: {Authorization: AUTH }, withCredentials: true })\r\n\t       .pipe(map((res: Response) => res));\r\n  }\r\n  \r\n  /**\r\n    Path: /acp/privacyBackup/{id}/remove\r\n  */\r\n  removePrivacyBackup(id: string): any {\r\n    return this.http.get(PRIVACY_BACKUP + id + PRIVACY_BACKUP_REMOVE, {headers: {Authorization: AUTH }, withCredentials: true })\r\n\t       .pipe(map((res: Response) => res));\r\n  }\r\n  \r\n  /**\r\n    Path: /acp/privacyBackup/{id}/import/{mode}\r\n  */\r\n  importPrivacyBackup(id: string, mode: string): any {\r\n\treturn this.http.get(PRIVACY_BACKUP + id + PRIVACY_BACKUP_IMPORT + mode, {headers: {Authorization: AUTH }, withCredentials: true })\r\n\t       .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  /* ---------------------------- LOGS ----------------------------*/\r\n\r\n\r\n  getLogs(offset: number, rows: number): any {\r\n    return this.http.get(URL_GET_LOGS_NO_FILTER + offset + '/' + rows, {headers: {Authorization: AUTH }})\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  getLogsDaterangeFilter(from: Date, till: Date, offset: number, rows: number): any {\r\n    return this.http.get(URL_GET_LOGS_DATERANGE_FILTER + from.getTime() + '/' + till.getTime() + '/'\r\n      + offset + '/' + rows, {headers: {Authorization: AUTH }})\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  getLogsUsernameDaterangeFilter(from: Date, till: Date, username: string, offset: number, rows: number): any {\r\n    return this.http.get(URL_GET_LOGS_USERNAME_DATERANGE_FILTER + from.getTime() + '/' + till.getTime() + '/' + username + '/'\r\n      + offset + '/' + rows, {headers: {Authorization: AUTH }})\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n}\r\n","\r\nimport {map} from 'rxjs/operators';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { environment} from \"../../environments/environment\";\r\n\r\n\r\nconst BACKENDURL = `${environment.httpMode}${environment.baseUrl}${environment.contextRoot}`;\r\nconst AUTH = 'Bearer '.concat(localStorage.getItem('ang-token'));\r\n\r\nconst URLANOMALYMANAGER = `${BACKENDURL}/anomalyManager/`;\r\nconst nowData = '/getSensorWithAnomalyScoreDataNow?deviceId=';\r\nconst timeData = '/getSensorWithAnomalyScoreDataOverTime?deviceId=';\r\nconst socketData = '/getSensorWithAnomalyScoreDataSocket?deviceId=';\r\nconst startNetwork = '/startAnomalyNetworkRealtime?deviceId=';\r\nconst deleteNetwork = '/deleteNetwork?deviceId=';\r\n\r\nconst sensor = '&sensorId=';\r\nconst trainingstart = '&startTrainingTime=';\r\nconst start = '&startTime=';\r\nconst end = '&endTime=';\r\nconst interval = '&interval=';\r\nconst value = '&result=';\r\nconst nowDate = '&dateTime=';\r\n\r\n@Injectable()\r\nexport class AnomalyManagerService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  /* Requests to start a new HTM Network with training*/\r\n  startAnomalyNetworkRealtime(deviceId: string, sensorId: string, userId: string, projectId: string, startTrainingTime: string, dateTime: string, intervalId: string): any {\r\n    return this.http.get(`${URLANOMALYMANAGER + userId}/${projectId}${startNetwork}${deviceId}${sensor}${sensorId}${trainingstart}${startTrainingTime}${nowDate}${dateTime}${interval}${intervalId}`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  /* Requests to start a new HTM Network with training*/\r\n  deleteNetwork(deviceId: string, sensorId: string, userId: string, projectId: string): any {\r\n    return this.http.get(`${URLANOMALYMANAGER + userId}/${projectId}${deleteNetwork}${deviceId}${sensor}${sensorId}`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n\r\n  /* Requests sensor data just for this moment */\r\n  getSensorWithAnomalyScoreDataNow(deviceId: string, sensorId: string, userId: string, projectId: string): any {\r\n    return this.http.get(`${URLANOMALYMANAGER + userId}/${projectId}${nowData}${deviceId}${sensor}${sensorId}`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  // TODO Backend sends json, change so that Backend sends Modells so this request no need\r\n  /* Requests sensor data just for this moment */\r\n  getSensorWithAnomalyScoreDataSocket(deviceId: string, sensorId: string, userId: string, projectId: string, result: number, dateTime: string): any {\r\n    return this.http.get(`${URLANOMALYMANAGER + userId}/${projectId}${socketData}${deviceId}${sensor}${sensorId}${value}${result}${nowDate}${dateTime}`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  /* Requests sensor data over time */\r\n  getSensorWithAnomalyScoreDataOverTime(deviceId: string, sensorId: string, startTrainingTime: string, startTime: string, endTime: string, intervalId: string, userId: string, projectId: string): any {\r\n    return this.http.get(`${URLANOMALYMANAGER + userId}/${projectId}${timeData}${deviceId}${sensor}${sensorId}${trainingstart}${startTrainingTime}${start}${startTime}${end}${endTime}${interval}${intervalId}`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {CompactType} from 'angular-gridster2';\r\nimport {User} from '../models/frontend/user';\r\nimport {Project} from '../models/frontend/project';\r\n\r\n\r\n@Injectable()\r\n/* Makes it possible to communicate between not related components */\r\nexport class DataService {\r\n  private userDataBS = new BehaviorSubject<User>(undefined);\r\n  private projectDataBS = new BehaviorSubject<Project>(undefined);\r\n  private dashboardIdBS = new BehaviorSubject<string>(undefined);\r\n  private sheetIdBS = new BehaviorSubject<string>(undefined);\r\n  private refreshMenuBS = new BehaviorSubject<string>(undefined);\r\n  private refreshChart = new BehaviorSubject<{label: string, value: number, widgetId: string, deviceId: string, entityId: string}>(undefined);\r\n  private refreshAnomaly = new BehaviorSubject<{label: string, value: number, anomalyscore: number, widgetId: string, deviceId: string, entityId: string}>(undefined);\r\n  private dashboardID = new BehaviorSubject<number>(1);\r\n  private deletedWidgetID = new BehaviorSubject<number>(-1);\r\n  private theme = new BehaviorSubject<string>(undefined);\r\n  private loginObject = new BehaviorSubject<object>(undefined);\r\n  private loginStatus = new BehaviorSubject<number>(0);\r\n  private loginUUID = new BehaviorSubject<string>(undefined);\r\n  private projectID = new BehaviorSubject<number>(1);\r\n  private currentPage = new BehaviorSubject<number>(1);\r\n  private compactTyp = new BehaviorSubject<CompactType>(CompactType.None);\r\n  private visualizationData = new BehaviorSubject<Array<string>>(undefined);\r\n\r\n  currentCompactTyp = this.compactTyp.asObservable();\r\n  currentDashboardID = this.dashboardID.asObservable();\r\n  currentDeletedWidgetID = this.deletedWidgetID.asObservable();\r\n  currentProjectID = this.projectID.asObservable();\r\n  currentSheet = this.currentPage.asObservable();\r\n  currentLoginObject = this.loginObject.asObservable();\r\n\r\n  currentLoginUUID = this.loginUUID.asObservable();\r\n  currentTheme = this.theme.asObservable();\r\n\r\n  refreshChartNow = this.refreshChart.asObservable();\r\n  refreshAnomalyNow = this.refreshAnomaly.asObservable();\r\n\r\n  /**\r\n   * current project\r\n   */\r\n  projectData = this.projectDataBS.asObservable();\r\n  /**\r\n   * current user\r\n   */\r\n  userData = this.userDataBS.asObservable();\r\n  currentDashboardId = this.dashboardIdBS.asObservable();\r\n  currentSheetId = this.sheetIdBS.asObservable();\r\n  refreshMenu = this.refreshMenuBS.asObservable();\r\n  currentLoginStatus = this.loginStatus.asObservable();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  refreshRealtimeChart(label: string, value: number, widgetId: string, deviceId: string, entityId: string): void {\r\n    this.refreshChart.next({label: label, value: value, widgetId: widgetId, deviceId: deviceId, entityId: entityId});\r\n  }\r\n\r\n  refreshAnomalyRealtimeChart(label: string, value: number, anomalyscore: number, widgetId: string, deviceId: string, entityId: string): void {\r\n    this.refreshAnomaly.next({label: label, value: value, anomalyscore: anomalyscore,  widgetId: widgetId, deviceId: deviceId, entityId: entityId});\r\n  }\r\n\r\n  changeRefreshMenu(message: string): void {\r\n    this.refreshMenuBS.next(message);\r\n  }\r\n\r\n  changeCurrentSheetId(message: string): void {\r\n    this.sheetIdBS.next(message);\r\n  }\r\n\r\n  changeProjectData(message: Project): void {\r\n    this.projectDataBS.next(message);\r\n  }\r\n\r\n  changeUserData(message: User): void {\r\n    this.userDataBS.next(message);\r\n  }\r\n\r\n  changeCurrentDashboardId(message: string): void {\r\n    this.dashboardIdBS.next(message);\r\n  }\r\n\r\n  changeCompactTyp(message: CompactType): void {\r\n    this.compactTyp.next(message);\r\n  }\r\n\r\n  changeDeletedWidgetID(message: number): void {\r\n    this.deletedWidgetID.next(message);\r\n  }\r\n\r\n\r\n  changeLoginStatus(message: number): void {\r\n    this.loginStatus.next(message);\r\n  }\r\n\r\n  changeLoginObject(message: object): void {\r\n    this.loginObject.next(message);\r\n  }\r\n\r\n  changeLoginUUID(message: string): void {\r\n    this.loginUUID.next(message);\r\n  }\r\n\r\n  changeTheme(message: string): void {\r\n    this.theme.next(message);\r\n  }\r\n\r\n  changeVisualizationData(message: Array<string>): void {\r\n    this.visualizationData.next(message);\r\n  }\r\n\r\n  refreshRealtimeAnomaly(label: string, value: number, anomalyscore: number, widgetId: string, deviceId: string, entityId: string): void {\r\n    this.refreshAnomaly.next({label: label, value: value, anomalyscore: anomalyscore, widgetId: widgetId, deviceId: deviceId, entityId: entityId});\r\n  }\r\n}\r\n","import { map } from 'rxjs/operators';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { DataService } from './data.service';\r\nimport { User } from '../models/frontend/user';\r\nimport { Fieldvalue } from '../models/frontend/fieldvalue';\r\nimport {Widget} from \"../models/frontend/widget\";\r\nimport { environment} from \"../../environments/environment\";\r\n\r\n\r\nconst BACKENDURL = `${environment.httpMode}${environment.baseUrl}${environment.contextRoot}`;\r\nconst AUTH = 'Bearer '.concat(localStorage.getItem('ang-token'));\r\nconst newLink = `${BACKENDURL}/database/`;\r\nconst find = '_find';\r\nconst uuid = '/_uuids';\r\nconst IDTAG = '&id=';\r\n\r\n/**\r\n * @author Chinaedu Onwukwe\r\n * This class is an interface to the MongoDatabase backend REST interface\r\n */\r\n@Injectable()\r\nexport class DatabaseService {\r\n\r\n  readonly USERSCOLLECTION = 'Users';\r\n  readonly PROJECTSCOLLECTION = 'Projects';\r\n  readonly DASHBOARDSCOLLECTION = 'Dashboards';\r\n  readonly SHEETSSCOLLECTION = 'Sheets';\r\n  readonly WIDGETSCOLLECTION = 'Widgets';\r\n\r\n  constructor(private dataService: DataService, private http: HttpClient) {\r\n  }\r\n\r\n\r\n  // -------------------------------------------------------------------------------------------------\r\n  // -----------------------NEW MONGO DB PART : TODO replace above-----------------------------\r\n\r\n  insertDocument(collection: string, document: any): any {\r\n    return this.http.post(`${newLink}${collection}/insert`, document, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  getDocument(collection: string, documentIdentifier: string): any {\r\n    return this.http.get(`${newLink}${collection}/${documentIdentifier}`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  getDocuments(collection: string, documentIdentifiers: Array<string>): any {\r\n    let link = `${newLink}${collection}?id=`;\r\n    for (let i = 0; i < documentIdentifiers.length; i++) {\r\n      if (i + 1 === documentIdentifiers.length) {\r\n        link += (documentIdentifiers[i]);\r\n      } else {\r\n        link += (documentIdentifiers[i] + IDTAG);\r\n      }\r\n    }\r\n\r\n    return this.http.get(link, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  updateDocument(collection: string, documentIdentifier: string, fieldvalue: Fieldvalue): any {\r\n    return this.http.put(`${newLink}${collection}/${documentIdentifier}/update`, fieldvalue, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  pushToDocumentsList(collection: string, documentIdentifier: string, fieldvalue: Fieldvalue): any {\r\n    return this.http.put(`${newLink}${collection}/${documentIdentifier}/push`, fieldvalue, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  popFromDocumentsList(collection: string, documentIdentifier: string, fieldvalue: Fieldvalue): any {\r\n    return this.http.put(`${newLink}${collection}/${documentIdentifier}/pop`, fieldvalue, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  deleteDocument(collection: string, documentIdentifier: string): any {\r\n    return this.http.delete(`${newLink}${collection}/${documentIdentifier}/delete`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n}\r\n","import { map } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment} from \"../../environments/environment\";\r\n\r\nconst BACKENDURL = `${environment.httpMode}${environment.baseUrl}${environment.contextRoot}`;\r\nconst AUTH = 'Bearer '.concat(localStorage.getItem('ang-token'));\r\n\r\nconst URLPRIVACYMANAGER = `${BACKENDURL}/dataprivacy/`;\r\nconst editSettings       = '/edit';\r\nconst addPrivacyElement  = 'add/';\r\nconst addPrivacyElements = 'addAll/';\r\nconst getAllElements     = 'getAllElements/';\r\nconst getAllRootElements = 'getAllRootElements/';\r\nconst getAllLeafElements = 'getAllLeafElements/';\r\nconst getPrivacySettings = 'userSettings/';\r\n\r\n@Injectable()\r\nexport class DataPrivacyManagerService {\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  addPrivacyElement(obj): any {\r\n    return this.http.post(URLPRIVACYMANAGER + addPrivacyElement, obj, {headers: {Authorization: AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  addPrivacyElements(obj): any {\r\n\treturn this.http.post(URLPRIVACYMANAGER + addPrivacyElements, obj, {headers: {Authorization: AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  getPrivacySettings(id: string): any {\r\n    return this.http.get(URLPRIVACYMANAGER + getPrivacySettings + id, {headers: {Authorization: AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  editPrivacySettings(id: string, settings): any {\r\n    return this.http.put(URLPRIVACYMANAGER + getPrivacySettings + id + editSettings, settings, {headers: {Authorization: AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  getAllElements(type: string = ''): any {\r\n\treturn this.http.get(URLPRIVACYMANAGER + getAllElements + type, {headers: {Authorization: AUTH }, withCredentials: true }).pipe(map((res: Response) => res));\r\n  }\r\n\r\n  getElement(id: string): any {\r\n    return this.http.get(URLPRIVACYMANAGER + id, {headers: {Authorization: AUTH }, withCredentials: true }).pipe(map((res: Response) => res));\r\n  }\r\n  \r\n  getAllRootElements(): any {\r\n    return this.http.get(URLPRIVACYMANAGER + getAllRootElements, {headers: {Authorization: AUTH }, withCredentials: true }).pipe(map((res: Response) => res));\r\n  }\r\n  \r\n  getAllLeafElements(): any {\r\n    return this.http.get(URLPRIVACYMANAGER + getAllLeafElements, {headers: {Authorization: AUTH }, withCredentials: true }).pipe(map((res: Response) => res));\r\n  }\r\n}\r\n","\r\nimport {map} from 'rxjs/operators';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {Platform} from '../models/backend/platform';\r\nimport {environment} from \"../../environments/environment\";\r\n\r\nconst BACKENDURL = `${environment.httpMode}${environment.baseUrl}${environment.contextRoot}`;\r\n// const AUTH = `${environment.Authorization}`;\r\nconst AUTH = 'Bearer '.concat(localStorage.getItem('ang-token'));\r\nconst URLDEVICEMANAGER = `${BACKENDURL}/devicemanager/`;\r\nconst URLSYSTEMMANAGER = `${BACKENDURL}/system/`;\r\n\r\nconst ADDDEVICE = '/addDevice';\r\nconst DELETEDEVICE = '/deleteDevice?internalDeviceId=';\r\nconst UPDATEDEVICE = '/updateDevice?internalDeviceId=';\r\nconst GETALLDEVICES = '/getAllDevices';\r\nconst GETAllDEVICESBYPLATFORM = '/getAllDevicesByPlatform';\r\nconst CHANGEACTIONSTATE = '/changeActionState?valueState=';\r\nconst GETDEVICEBYID = '/getDeviceById?internalDeviceId=';\r\nconst GETDEVICEBYTAG = '/getDeviceByTag?tags=';\r\nconst TAGLINK = '&tags=';\r\nconst SEARCHFORPLATFORMS = '/searchForDevices?platformId=';\r\nconst GETAVAILABLEPLATFORMS = '/getAvailablePlatforms';\r\nconst DELETEPLATFORM = '/deletePlatform?platformId=';\r\nconst GETALLPLATFORMS = '/getConnectedPlatforms';\r\nconst GETALLPLATFORMSFROMALLPROJECTS = '/getConnectedPlatformsFromAllProjects';\r\nconst CONNECTPLATFORM = '/connectPlatform';\r\nconst GETACTIONVALUEORSTATE = '/getActionValueOrState';\r\nconst ENTITYTYPE = '/getDevicesByEntityType?type=';\r\nconst LOCATION = '/getDevicesByLocation?location='\r\n\r\n@Injectable()\r\nexport class DeviceManagerService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  connectPlatform(platform: Platform): any {\r\n\r\n    return this.http.post(`${URLSYSTEMMANAGER + platform.userId}/${platform.projectId}${CONNECTPLATFORM}`, platform, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  deletePlatform(id: string, userId: string, projectId: string): any {\r\n\r\n    return this.http.delete(`${URLSYSTEMMANAGER + userId}/${projectId}${DELETEPLATFORM}${id}`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  searchForPlatforms(userId: string, projectId: string): any {\r\n    return this.http.get(`${URLSYSTEMMANAGER + userId}/${projectId}${GETAVAILABLEPLATFORMS}`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  getAllPlatforms(userId: string, projectId): any {\r\n    return this.http.get(`${URLSYSTEMMANAGER + userId}/${projectId}${GETALLPLATFORMS}`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  changeAiotesBridge(ipAdress: string, port: number, systemIp: string, clickdigitalPort: number, userId: string, projectId): any {\r\n    return this.http.get(`${URLSYSTEMMANAGER + userId}/${projectId}/changeAiotesAddress?ip=${ipAdress}&port=${port}&systemIp=${systemIp}&cdPort=${clickdigitalPort}`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  addDevice(name: string, platformId: string, deviceInfo: Array<string>, serialNumber: string, tags: Array<string>, location: string,\r\n            userId: string, projectId: string, externalDeviceId): any {\r\n    const obj: object = {name, platformId, deviceInfo, serialNumber, tags, location, externalDeviceId};\r\n\r\n    return this.http.post(`${URLDEVICEMANAGER + userId}/${projectId}${ADDDEVICE}`, obj, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  getAllDevices(userId: string, projectid: string): any {\r\n    return this.http.get(`${URLDEVICEMANAGER + userId}/${projectid}${GETALLDEVICES}`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  getAllDevicesByPlatform(platformId: string, userId: string, projectId: string): any {\r\n    return this.http.get(`${URLDEVICEMANAGER + userId}/${projectId}${GETAllDEVICESBYPLATFORM}?platformId=${platformId}`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  searchForDevices(platformId: string, userId: string, projectId: string): any {\r\n    return this.http.get(`${URLDEVICEMANAGER + userId}/${projectId}${SEARCHFORPLATFORMS}${platformId}`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  getDeviceById(id: string, userId: string, projectId: string): any {\r\n    const newId: string = id.replace(\"#\", \"%23\");\r\n    return this.http.get(`${URLDEVICEMANAGER + userId}/${projectId}${GETDEVICEBYID}${newId}`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  getAllPlatformsFromAllProjects(userId: string): any {\r\n    return this.http.get(`${URLSYSTEMMANAGER + userId}${GETALLPLATFORMSFROMALLPROJECTS}`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  getAllLocations(userId: string, projectId: string): any {\r\n    return this.http.get(`${URLDEVICEMANAGER}getAllLocations`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  getAllSensorTypes(userId: string, projectId: string): any {\r\n    return this.http.get(`${URLDEVICEMANAGER}getSensorTypes`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  getAllActuatorTypes(userId: string, projectId: string): any {\r\n    return this.http.get(`${URLDEVICEMANAGER}getActuatorTypes`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  getAllDeviceTypes(userId: string, projectId: string): any {\r\n    return this.http.get(`${URLDEVICEMANAGER + userId}/${projectId}/getAllEntityTypes`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  getDevicesByEntityType(type: string, userId: string, projectid: string): any {\r\n    return this.http.get(`${URLDEVICEMANAGER + userId}/${projectid}${ENTITYTYPE}${type}`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  getDevicesByLocation(location: string, userId: string, projectid: string): any {\r\n    return this.http.get(`${URLDEVICEMANAGER + userId}/${projectid}${LOCATION}${location}`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n\r\n  DeleteDevice(id: string, userId: string, projectId: string): any {\r\n    return this.http.delete(`${URLDEVICEMANAGER + userId}/${projectId}${DELETEDEVICE}${id}`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  UpdateDevice(id: string, userId: string, projectId: string): any {\r\n    return this.http.get(`${URLDEVICEMANAGER + userId}/${projectId}${UPDATEDEVICE}${id}`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  ChangeActionState(userId: string, projectId: string, deviceId: string, actionId: string,  valueState: number): any {\r\n\r\n    return this.http.get(`${URLDEVICEMANAGER + userId}/${projectId}/${deviceId}/${actionId}${CHANGEACTIONSTATE}${valueState}`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  GetActionValueOrState(actionId: string, deviceId: string, userId: string, projectId: string): any {\r\n    return this.http.get(`${URLDEVICEMANAGER + userId}/${projectId}${GETACTIONVALUEORSTATE}?actionId=${actionId}&deviceId=${deviceId}`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  SetSensorType(deviceId: string, sensorId: string, type: string, userId: string, projectId: string): any {\r\n    return this.http.post(`${URLDEVICEMANAGER + userId}/${projectId}/setSensorType?sensorId=${sensorId}&deviceId=${deviceId}&type=${type}`, null,{headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  SetActuatorType(deviceId: string, actuatorId: string, type: string, userId: string, projectId: string): any {\r\n    return this.http.post(`${URLDEVICEMANAGER + userId}/${projectId}/setSensorType?actuatorId=${actuatorId}&deviceId=${deviceId}&type=${type}`, null,{headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n}\r\n","import {map} from 'rxjs/operators';\r\n\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\n\r\nimport {DataService} from './data.service';\r\nimport {User} from '../models/frontend/user';\r\nimport {Fieldvalue} from '../models/frontend/fieldvalue';\r\nimport {WidgetDB} from '../models/database/widget';\r\nimport {Project} from '../models/frontend/project';\r\nimport {DashboardDB} from '../models/database/dashboard';\r\nimport {Widget, WidgetType} from '../models/frontend/widget';\r\nimport {ProjectDB} from '../models/database/project';\r\nimport {SheetDB} from '../models/database/sheet';\r\nimport {Dashboard} from '../models/frontend/dashboard';\r\nimport {Sheet} from '../models/frontend/sheet';\r\nimport uuidv4 from 'uuid/v4';\r\n\r\nimport {DatabaseService} from './database.service';\r\nimport {Router} from '@angular/router';\r\nimport {UserManagerService} from './usermanager.service';\r\nimport {DeviceManagerService} from './devicemanager.service';\r\nimport {DataPrivacyManagerService} from './dataprivacymanager.service';\r\nimport {ToggleWidget} from '../models/frontend/togglewidget';\r\nimport {BarChartWidget, Calculation, Frequency} from \"../models/frontend/barchartwidget\";\r\nimport {AxesOptions} from \"../models/frontend/linechartwidget\";\r\nimport {SliderWidget} from '../models/frontend/sliderwidget';\r\nimport {LineChartWidget} from \"../models/frontend/linechartwidget\";\r\nimport {Doughnutchartwidget, DoughnutChartDeviceEntity} from \"../models/frontend/doughnutchartwidget\";\r\nimport {BubbleChartDeviceEntity} from \"../models/frontend/bubbleChartDeviceEntity\";\r\nimport {BubbleChartWidget} from \"../models/frontend/bubblechartwidget\";\r\nimport {GridsterItem} from 'angular-gridster2';\r\nimport {DeviceEntity} from '../models/frontend/deviceEntity';\r\nimport {ChartDeviceEntity} from '../models/frontend/chartDeviceEntity';\r\nimport {EntityType, ValueViewWidget} from '../models/frontend/valueviewwidget';\r\nimport {StateWidget} from '../models/frontend/statewidget';\r\nimport {RuleManagementWidget} from '../models/frontend/rulemanagementwidget';\r\nimport {RuleNotificationWidget} from '../models/frontend/rulenotificationwidget';\r\nimport {RuleSharingWidget} from '../models/frontend/rulesharingwidget';\r\nimport {RuleCreationService} from '../skeleton/dashboard/rules/service/rule-creation.service';\r\nimport {RuleManagementService} from '../skeleton/dashboard/rules/service/rule-management.service';\r\nimport {ManagementComponent} from \"../skeleton/dashboard/rules/management/management.component\";\r\nimport {AnomalyEntity, RealtimeAnomalyWidget} from \"../models/frontend/realtimeanomalywidget\";\r\nimport {HistoryAnomalyWidget} from \"../models/frontend/historyanomalywidget\";\r\nimport {Distribution, PolarAreaChartWidget, SensorType} from \"../models/frontend/polarareachartwidget\";\r\n\r\n@Injectable()\r\nexport class ProjectService {\r\n  private user: User;\r\n  private project: Project;\r\n  protected currentDashboardId: string;\r\n  protected currentSheetId: string;\r\n\r\n  constructor(\r\n    private dataService: DataService, private databaseService: DatabaseService,\r\n    private router: Router, private usermanager: UserManagerService,\r\n    private devicemanager: DeviceManagerService, private dataprivacymanager: DataPrivacyManagerService) {\r\n\r\n    this.dataService.userData.subscribe((user: User) => this.user = user);\r\n    this.dataService.projectData\r\n      .subscribe((project: Project) => this.project = project);\r\n\r\n    this.dataService.currentDashboardId\r\n      .subscribe(dashboardId => this.currentDashboardId = dashboardId);\r\n\r\n    this.dataService.currentSheetId\r\n      .subscribe(sheetId => this.currentSheetId = sheetId);\r\n  }\r\n\r\n  /**\r\n   * This method changes the current project\r\n   * @param id the id of the project to change to\r\n   */\r\n  public loadNewProject(id: string, isRouted: boolean): void {\r\n    let project: Project;\r\n    this.databaseService.getDocument(this.databaseService.PROJECTSCOLLECTION, id)\r\n      .subscribe((projectDB: ProjectDB) => {\r\n          project = new Project(projectDB.id, projectDB.name, projectDB.theme, []);\r\n          for (const dashboardId of projectDB.dashboards) {\r\n            this.databaseService.getDocument(this.databaseService.DASHBOARDSCOLLECTION, dashboardId)\r\n              .subscribe((dashboardDB: DashboardDB) => {\r\n                const dashboard = new Dashboard(dashboardDB.id, dashboardDB.name, []);\r\n                for (const sheetId of dashboardDB.sheets) {\r\n                  this.databaseService.getDocument(this.databaseService.SHEETSSCOLLECTION, sheetId)\r\n                    .subscribe((sheetDB: SheetDB) => {\r\n                      const sheet = new Sheet(sheetDB.id, sheetDB.name, []);\r\n                      for (const widgetId of sheetDB.widgets) {\r\n                        this.databaseService.getDocument(this.databaseService.WIDGETSCOLLECTION, widgetId)\r\n                          .subscribe(widget => {\r\n                            //check widget type\r\n                            switch (widget.type) {\r\n                              case WidgetType.ruleManagementView:\r\n                                sheet.widgets.push(new RuleManagementWidget(widget.id, widget.name, widget.additionalInfo, widget.position,\r\n                                  widget.isDeveloped, widget.type));\r\n                                break;\r\n                              case WidgetType.ruleNotificationView:\r\n                                sheet.widgets.push(new RuleNotificationWidget(widget.id, widget.name, widget.additionalInfo, widget.position,\r\n                                  widget.isDeveloped, widget.type));\r\n                                break;\r\n                              case WidgetType.ruleSharingViewWidget:\r\n                                sheet.widgets.push(new RuleSharingWidget(widget.id, widget.name, widget.additionalInfo, widget.position,\r\n                                  widget.isDeveloped, widget.type));\r\n                                break;\r\n                              case WidgetType.toggleDeviceControl:\r\n                                sheet.widgets.push(new ToggleWidget(widget.id, widget.name, widget.additionalInfo, widget.position,\r\n                                  widget.isDeveloped, widget.type, widget.deviceId, widget.entityId,\r\n                                  widget.controlPosition, widget.fontSize, widget.icon, widget.value, widget.toggleLabelOn, widget.toggleLabelOff));\r\n                                break;\r\n                              case WidgetType.stateDeviceControl:\r\n                                sheet.widgets.push(new StateWidget(widget.id, widget.name, widget.additionalInfo, widget.position,\r\n                                  widget.isDeveloped, widget.type, widget.deviceId, widget.entityId,\r\n                                  widget.controlPosition, widget.fontSize, widget.icon, widget.value));\r\n                                break;\r\n                              case WidgetType.sliderDeviceControl:\r\n                                sheet.widgets.push(new SliderWidget(widget.id, widget.name, widget.additionalInfo, widget.position,\r\n                                  widget.isDeveloped, widget.type, widget.deviceId, widget.entityId,\r\n                                  widget.controlPosition, widget.fontSize, widget.icon, widget.value, widget.minValue, widget.maxValue));\r\n                                break;\r\n                              case WidgetType.lineChartVisualization:\r\n                                sheet.widgets.push(new LineChartWidget(widget.id, widget.name, widget.additionalInfo, widget.position,\r\n                                  widget.isDeveloped, widget.type, widget.deviceEntities, widget.chartType, widget.isMonoVis, widget.isRealtime, widget.isTimeBased, widget.axesOptions,\r\n                                  widget.numberOfValues, widget.startDate, widget.endDate, widget.interval));\r\n                                break;\r\n                              case WidgetType.barChartVisualization:\r\n                                sheet.widgets.push(new BarChartWidget(widget.id, widget.name, widget.additionalInfo, widget.position,\r\n                                  widget.isDeveloped, widget.type, widget.deviceEntities, widget.chartType, widget.isMonoVis,\r\n                                  widget.isNumerical, widget.calculationType, widget.frequencyType, widget.axesOptions,\r\n                                  widget.numberOfValues, widget.startDate, widget.endDate, widget.interval));\r\n                                break;\r\n                              case WidgetType.bubbleChartVisualization:\r\n                                sheet.widgets.push(new BubbleChartWidget(widget.id, widget.name, widget.additionalInfo, widget.position,\r\n                                  widget.isDeveloped, widget.type, widget.deviceEntities, widget.chartType, widget.startDate, widget.endDate,\r\n                                  widget.locations, widget.colorPalette));\r\n                                break;\r\n                              case WidgetType.doughnutChartVisualization:\r\n                                sheet.widgets.push(new Doughnutchartwidget(widget.id, widget.name, widget.additionalInfo, widget.position,\r\n                                  widget.isDeveloped, widget.type, widget.deviceEntities, widget.chartType, widget.isCircleFull,\r\n                                  widget.distribution, widget.colorPalette, widget.startDate, widget.endDate));\r\n                                break;\r\n                              case WidgetType.polarAreaChartVisualization:\r\n                                sheet.widgets.push(new PolarAreaChartWidget(widget.id, widget.name, widget.additionalInfo, widget.position,\r\n                                  widget.isDeveloped, widget.type, widget.deviceEntities, widget.chartType, widget.startDate, widget.endDate,\r\n                                  widget.calculationType, widget.deviceType, widget.distribution, widget.colorPalette));\r\n                                break;\r\n                              case WidgetType.realtimeValueVisualization:\r\n                                sheet.widgets.push(new ValueViewWidget(widget.id, widget.name, widget.additionalInfo,\r\n                                  widget.position, widget.isDeveloped, widget.type, widget.deviceId, widget.entityId,\r\n                                  widget.fontSize, widget.entityType, widget.controlPosition));\r\n                                break;\r\n                              case WidgetType.realtimeAnomaly:\r\n                                sheet.widgets.push(new RealtimeAnomalyWidget(widget.id, widget.name, widget.additionalInfo, widget.position,\r\n                                  widget.isDeveloped, widget.type, widget.deviceEntities, widget.chartType, widget.axesOptions, widget.numberOfValues));\r\n                                break;\r\n                              case WidgetType.historyAnomaly:\r\n                                sheet.widgets.push(new HistoryAnomalyWidget(widget.id, widget.name, widget.additionalInfo, widget.position,\r\n                                  widget.isDeveloped, widget.type, widget.deviceEntities, widget.chartType, widget.axesOptions, widget.startDate,\r\n                                  widget.endDate, widget.interval));\r\n                                break;\r\n                              default:\r\n                                sheet.widgets.push(new Widget(widget.id, widget.name, widget.additionalInfo,\r\n                                  widget.position, widget.isDeveloped, widget.type));\r\n                                break;\r\n                            }\r\n                          });\r\n                      }\r\n                      console.log(\"sheet: \", sheet);\r\n                      dashboard.sheets.push(sheet);\r\n                    });\r\n                }\r\n                project.dashboards.push(dashboard);\r\n              });\r\n          }\r\n          setTimeout(() => {\r\n            this.dataService.changeCurrentDashboardId(project.dashboards[0].id);\r\n            this.dataService.changeCurrentSheetId(project.dashboards.find(x => x.id === this.currentDashboardId).sheets[0].id);\r\n            this.dataService.changeProjectData(project);\r\n            console.log('Changed', project);\r\n            this.dataService.changeRefreshMenu(Math.random().toString());\r\n\r\n            if (isRouted) {\r\n              console.log(\"routed in loadNewPorject\");\r\n              this.router.navigate(['dashboard']);\r\n            }\r\n          }, 500);\r\n\r\n        },\r\n        err => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']);\r\n          }\r\n          console.log('Error loading project data from database ', err);\r\n        });\r\n  }\r\n\r\n  public generateProject(): void {\r\n    const newSheet: Sheet = new Sheet(uuidv4(), 'Sheet 1', []);\r\n    const newDashboard: Dashboard = new Dashboard(uuidv4(), 'Dashboard 1', [newSheet]);\r\n    const newProject: Project = new Project(uuidv4(), `Project ${this.user.projects.length + 1}`, 'omega', [newDashboard]);\r\n\r\n    this.databaseService.insertDocument(this.databaseService.SHEETSSCOLLECTION, new SheetDB(newSheet.id, newSheet.name, []))\r\n      .subscribe(result => {\r\n          this.databaseService.insertDocument(this.databaseService.DASHBOARDSCOLLECTION, new DashboardDB(newDashboard.id, newDashboard.name, [newDashboard.sheets[0].id]))\r\n            .subscribe(result => {\r\n                this.databaseService.insertDocument(this.databaseService.PROJECTSCOLLECTION, new ProjectDB(newProject.id, newProject.name, newProject.theme, [newProject.dashboards[0].id]))\r\n                  .subscribe(result => {\r\n                      this.databaseService.pushToDocumentsList(this.databaseService.USERSCOLLECTION, this.user.id, new Fieldvalue('projects', newProject.id))\r\n                        .subscribe(result => {\r\n                            console.log(this.user);\r\n                            console.log(this.user.id);\r\n                            this.databaseService.getDocument(this.databaseService.USERSCOLLECTION, this.user.id)\r\n                              .subscribe((user: User) => {\r\n                                  this.dataService.changeUserData(user);\r\n                                  this.dataService.changeCurrentDashboardId(newDashboard.id);\r\n                                  this.dataService.changeCurrentSheetId(newSheet.id);\r\n                                  this.dataService.changeProjectData(newProject);\r\n                                  this.dataService.changeRefreshMenu(Math.random().toString());\r\n                                },\r\n                                err => {\r\n                                  if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n                                    this.router.navigate(['unauthorized']);\r\n                                  }\r\n                                  console.log('Error while getting document from database ', err);\r\n                                });\r\n                          },\r\n                          err => {\r\n                            if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n                              this.router.navigate(['unauthorized']);\r\n                            }\r\n                            console.log('Error while inserting into database ', err);\r\n                          });\r\n                    },\r\n                    err => {\r\n                      if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n                        this.router.navigate(['unauthorized']);\r\n                      }\r\n                      console.log('Error while inserting into database ', err);\r\n                    });\r\n              },\r\n              err => {\r\n                if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n                  this.router.navigate(['unauthorized']);\r\n                }\r\n                console.log('Error while inserting into database ', err);\r\n              });\r\n        },\r\n        err => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']);\r\n          }\r\n          console.log('Error while inserting into database ', err);\r\n        });\r\n  }\r\n\r\n  public deleteProject(): void {\r\n\r\n    // if it is the last project, create a new one and focus this one\r\n    // TODO delete project id from the project ids of collection User\r\n    // TODO delete from database collections: Projects, all Dashboards, all Sheets, all widgets and change observable project data to the new first project of the user\r\n    // deleting all dashboards which are part of the project\r\n    for (let dashboard of this.project.dashboards) {\r\n      this.deleteDashboard(dashboard.id);\r\n    }\r\n    // delete project from user\r\n    this.databaseService.popFromDocumentsList(this.databaseService.USERSCOLLECTION, this.user.id, new Fieldvalue('projects', this.project.id))\r\n      .subscribe(result => {\r\n          //then delete project and its content\r\n          this.databaseService.deleteDocument(this.databaseService.PROJECTSCOLLECTION, this.project.id)\r\n            .subscribe(result => {\r\n              //delete all platforms\r\n                this.devicemanager.getAllPlatforms(this.user.id, this.project.id)\r\n                  .subscribe(platforms => {\r\n                      platforms.forEach(platform => {\r\n                        this.devicemanager.deletePlatform(platform.platformId, this.user.id, this.project.id).subscribe(result => {\r\n\r\n                          },\r\n                          err => {\r\n                            if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n                              this.router.navigate(['unauthorized']); }\r\n                            console.log('DeleteDevice could not been sent to backend server');\r\n                            console.log(err);\r\n                          });\r\n\r\n                      });\r\n                    },\r\n                    error => {\r\n                      if (error['error'] === 'Session invalid' || error['error'] === 'No session found') {\r\n                        this.router.navigate(['unauthorized']);\r\n                      }\r\n                      console.log('Error deleting Dashboard', error);\r\n                    });\r\n                if (this.user.projects.length === 0) {\r\n                  this.generateProject();\r\n                } else {\r\n                  this.dataService.changeUserData(this.user);\r\n                  this.loadNewProject(this.user.projects[0], false);\r\n                }\r\n              },\r\n              error => {\r\n                if (error['error'] === 'Session invalid' || error['error'] === 'No session found') {\r\n                  this.router.navigate(['unauthorized']);\r\n                }\r\n                console.log('Error deleting Dashboard', error);\r\n              });\r\n        },\r\n        error => {\r\n          if (error['error'] === 'Session invalid' || error['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']);\r\n          }\r\n          console.log('Error deleting Dashboard', error);\r\n        });\r\n  }\r\n\r\n  public deleteDashboard(dashId: string): void {\r\n    // delete all sheets from dashboard\r\n    for (let sheet of this.project.dashboards.find(x => x.id === dashId).sheets) {\r\n      this.deleteSheet(sheet.id);\r\n    }\r\n    // delete dashboard id from project\r\n    this.databaseService.popFromDocumentsList(this.databaseService.PROJECTSCOLLECTION, this.project.id, new Fieldvalue('dashboards', dashId))\r\n      .subscribe(result => {\r\n          //then delete dashboard and its content\r\n          this.databaseService.deleteDocument(this.databaseService.DASHBOARDSCOLLECTION, dashId)\r\n            .subscribe(result => {\r\n                const index = this.project.dashboards.findIndex(x => x.id === dashId);\r\n                if (index !== undefined) {\r\n                  this.project.dashboards.splice(index, 1);\r\n                  this.dataService.changeCurrentDashboardId(this.project.dashboards[0].id);\r\n                  this.dataService.changeCurrentSheetId(this.project.dashboards[0].sheets[0].id);\r\n                  this.dataService.changeRefreshMenu(uuidv4());\r\n                } else {\r\n                  console.log('Error deleting Dashboard. Dashboard not found');\r\n                }\r\n              },\r\n              error => {\r\n                if (error['error'] === 'Session invalid' || error['error'] === 'No session found') {\r\n                  this.router.navigate(['unauthorized']);\r\n                }\r\n                console.log('Error deleting Dashboard', error);\r\n              });\r\n        },\r\n        error => {\r\n          if (error['error'] === 'Session invalid' || error['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']);\r\n          }\r\n          console.log('Error deleting Dashboard', error);\r\n        });\r\n  }\r\n\r\n  public deleteSheet(sheetId: string): void {\r\n    // deleting all widgets which are part of the sheet\r\n    const widgets = this.project.dashboards.find(x => x.id === this.currentDashboardId).sheets.find(x => x.id === sheetId).widgets;\r\n    if (widgets != undefined) {\r\n      for (const widget of widgets) {\r\n        this.deleteWidget(widget.id);\r\n      }\r\n    } else {\r\n      console.log('no widgets in sheet.');\r\n    }\r\n    // delete sheet id from dashboard\r\n    this.databaseService.popFromDocumentsList(this.databaseService.DASHBOARDSCOLLECTION, this.currentDashboardId, new Fieldvalue('sheets', sheetId))\r\n      .subscribe(result => {\r\n          // then delete sheet and its content\r\n          this.databaseService.deleteDocument(this.databaseService.SHEETSSCOLLECTION, sheetId)\r\n            .subscribe(result => {\r\n                const index = this.project.dashboards.find(x => x.id === this.currentDashboardId).sheets.findIndex(x => x.id === sheetId);\r\n                if (index !== undefined) {\r\n                  this.project.dashboards.find(x => x.id === this.currentDashboardId).sheets.splice(index, 1);\r\n                  if (this.project.dashboards.find(x => x.id === this.currentDashboardId).sheets.length === 0) {\r\n                    this.generateSheet();\r\n                  }\r\n                  this.dataService.changeCurrentSheetId(this.project.dashboards[0].sheets[0].id);\r\n                  this.dataService.changeRefreshMenu(uuidv4());\r\n                  this.dataService.changeProjectData(this.project);\r\n                } else {\r\n                  console.log('Error deleting Sheet. Sheet not found');\r\n                }\r\n              },\r\n              error => {\r\n                if (error['error'] === 'Session invalid' || error['error'] === 'No session found') {\r\n                  this.router.navigate(['unauthorized']);\r\n                }\r\n                console.log('Error deleting Sheet', error);\r\n              });\r\n        },\r\n        error => {\r\n          if (error['error'] === 'Session invalid' || error['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']);\r\n          }\r\n          console.log('Error deleting Sheet', error);\r\n        });\r\n  }\r\n\r\n  /**\r\n   * This method adds a new sheet to the current {@link Dashboard} and saves it to the database\r\n   * as a new entity as well as an id in the corresponding dashboard entity\r\n   */\r\n  public generateSheet(): void {\r\n    const d: Dashboard = this.project.dashboards.find(x => x.id === this.currentDashboardId);\r\n    if (d !== undefined) {\r\n      const newSheet: Sheet = new Sheet(uuidv4(), `Sheet ${d.sheets.length + 1}`, []);\r\n      this.databaseService.insertDocument(this.databaseService.SHEETSSCOLLECTION, new SheetDB(newSheet.id, newSheet.name, []))\r\n        .subscribe(result => {\r\n            this.databaseService.pushToDocumentsList(this.databaseService.DASHBOARDSCOLLECTION, this.currentDashboardId, new Fieldvalue('sheets', newSheet.id))\r\n              .subscribe(result => {\r\n                  d.sheets.push(newSheet);\r\n                },\r\n                err => {\r\n                  if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n                    this.router.navigate(['unauthorized']);\r\n                  }\r\n                  console.log('Error while inserting into database ', err);\r\n                });\r\n          },\r\n          err => {\r\n            if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n              this.router.navigate(['unauthorized']);\r\n            }\r\n            console.log('Error while inserting into database ', err);\r\n          });\r\n    } else {\r\n      console.log('Error adding sheet. No corresponding dashboard found');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method deletes a widget from the project data and from the database\r\n   * @param {string} id\r\n   */\r\n  public deleteWidget(id: string): void {\r\n    const s: Sheet = this.project.dashboards.find(x => x.id === this.currentDashboardId).sheets.find(x => x.id === this.currentSheetId);\r\n    if (s !== undefined) {\r\n      // delete Widget in Widget Datatable\r\n      this.databaseService.deleteDocument(this.databaseService.WIDGETSCOLLECTION, id).subscribe(result => {\r\n          // delete WidgetId in Sheet Datatable\r\n          this.databaseService.popFromDocumentsList(this.databaseService.SHEETSSCOLLECTION, this.currentSheetId, new Fieldvalue('widgets', id))\r\n            .subscribe(result => {\r\n                // delete Widget from Sheet in Projectobject\r\n                const index = this.project.dashboards.find(x => x.id === this.currentDashboardId).sheets.find(x =>\r\n                  x.id === this.currentSheetId).widgets.findIndex(w => w.id === id);\r\n                if (index !== undefined) {\r\n                  this.project.dashboards.find(x => x.id === this.currentDashboardId).sheets.find(x =>\r\n                    x.id === this.currentSheetId).widgets.splice(index, 1);\r\n                }\r\n                this.dataService.changeProjectData(this.project);\r\n              },\r\n              err => {\r\n                if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n                  this.router.navigate(['unauthorized']);\r\n                }\r\n                console.log('Error while inserting into database ', err);\r\n              });\r\n        },\r\n        err => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']);\r\n          }\r\n          console.log('Error while inserting into database ', err);\r\n        });\r\n    } else {\r\n      console.log('Error adding sheet. No corresponding dashboard found');\r\n    }\r\n  }\r\n\r\n  // New Widget Generator Method to replace redundant methods\r\n  // consumes widget types as strings\r\n  public generateWidget(widgetType: string): void {\r\n    let widget;\r\n\r\n    const s: Sheet = this.project.dashboards.find(x => x.id === this.currentDashboardId).sheets.find(x => x.id === this.currentSheetId);\r\n    const EMPTYID = '';\r\n    const DEFAULTFONTSIZE = 20;\r\n    const BOTTOMCONTROLPOSITION = 'bottom';\r\n    const RIGHTCONTROLPOSITION = 'right';\r\n    const EMPTYSTRING = '';\r\n    if (s !== undefined) {\r\n      switch (widgetType) {\r\n        case WidgetType.ruleManagementView:\r\n          widget = new RuleManagementWidget(uuidv4(), widgetType, EMPTYSTRING, this.setPosition(widgetType),\r\n            true, widgetType);\r\n          break;\r\n        case WidgetType.ruleNotificationView:\r\n          widget = new RuleNotificationWidget(uuidv4(), widgetType, EMPTYSTRING, this.setPosition(widgetType),\r\n            true, widgetType);\r\n          break;\r\n        case WidgetType.ruleSharingViewWidget:\r\n          widget = new RuleSharingWidget(uuidv4(), widgetType, EMPTYSTRING, this.setPosition(widgetType),\r\n            true, widgetType);\r\n          break;\r\n        case WidgetType.toggleDeviceControl:\r\n          widget = new ToggleWidget(uuidv4(), widgetType, EMPTYSTRING, this.setPosition(widgetType),\r\n            true, widgetType, undefined, undefined, RIGHTCONTROLPOSITION,\r\n            DEFAULTFONTSIZE, undefined, true, 'On', 'Off');\r\n          break;\r\n        case WidgetType.stateDeviceControl:\r\n          widget = new StateWidget(uuidv4(), widgetType, EMPTYSTRING, this.setPosition(widgetType),\r\n            true, widgetType, undefined, undefined, RIGHTCONTROLPOSITION,\r\n            DEFAULTFONTSIZE, undefined, undefined);\r\n          break;\r\n        case WidgetType.sliderDeviceControl:\r\n          widget = new SliderWidget(uuidv4(), widgetType, EMPTYSTRING, this.setPosition(widgetType),\r\n            true, widgetType, undefined, undefined, RIGHTCONTROLPOSITION, DEFAULTFONTSIZE, undefined,\r\n            50, 0, 100);\r\n          break;\r\n        case WidgetType.lineChartVisualization:\r\n          widget = new LineChartWidget(uuidv4(), widgetType, EMPTYSTRING, this.setPosition(widgetType),\r\n            true, widgetType, [new ChartDeviceEntity('', '', 'solid', true,\r\n              true, '#1976D2', '', '', '')], 'line', true, true, true, new AxesOptions('x', 'y', true, true), 5,\r\n            undefined, undefined, undefined);\r\n          break;\r\n        case WidgetType.barChartVisualization:\r\n          widget = new BarChartWidget(uuidv4(), widgetType, EMPTYSTRING, this.setPosition(widgetType),\r\n            true, widgetType, [new ChartDeviceEntity('', '', 'solid', true,\r\n              true, '#1976D2', '', '', '')], 'line', true, true, Calculation.Avg, Frequency.Count,\r\n            new AxesOptions('x', 'y', true, true), 5,\r\n            undefined, undefined, \"day\");\r\n          break;\r\n        case WidgetType.bubbleChartVisualization:\r\n          widget = new BubbleChartWidget(uuidv4(), widgetType, EMPTYSTRING, this.setPosition(widgetType),\r\n            true, widgetType, [], 'bubble', undefined, undefined, [], \"cold\");\r\n          break;\r\n        case WidgetType.polarAreaChartVisualization:\r\n          widget = new PolarAreaChartWidget(uuidv4(), widgetType, EMPTYSTRING, this.setPosition(widgetType),\r\n            true, widgetType, [], 'polarArea', undefined, undefined,\r\n            Calculation.Avg, SensorType.Motion, Distribution.Occupant, \"cold\");\r\n          break;\r\n        case WidgetType.doughnutChartVisualization:\r\n          widget = new Doughnutchartwidget(uuidv4(), widgetType, EMPTYSTRING, this.setPosition(widgetType),\r\n            true, widgetType, [new DoughnutChartDeviceEntity('', '', '', '')], 'doughnut', \"true\", undefined,\r\n            \"cold\", undefined, undefined);\r\n          break;\r\n        case WidgetType.realtimeValueVisualization:\r\n          widget = new ValueViewWidget(uuidv4(), widgetType, EMPTYSTRING, this.setPosition(widgetType), true, widgetType,\r\n            EMPTYID, EMPTYID, DEFAULTFONTSIZE, '', BOTTOMCONTROLPOSITION);\r\n          break;\r\n        case WidgetType.realtimeAnomaly:\r\n          widget = new RealtimeAnomalyWidget(uuidv4(), widgetType, EMPTYSTRING, this.setPosition(widgetType),\r\n            true, widgetType, [new AnomalyEntity('', '', '', '',\r\n              '')], 'line', new AxesOptions('time', 'y', true, true), 5);\r\n          break;\r\n        case WidgetType.historyAnomaly:\r\n          widget = new HistoryAnomalyWidget(uuidv4(), widgetType, EMPTYSTRING, this.setPosition(widgetType),\r\n            true, widgetType, [new AnomalyEntity('', '', '', '',\r\n              '')], 'line', new AxesOptions('time', 'y', true, true), undefined,\r\n            undefined, 'P5D');\r\n          break;\r\n        // default Widget class\r\n        default:\r\n          widget = new Widget(uuidv4(), widgetType, EMPTYSTRING, this.setPosition(widgetType),\r\n            true, widgetType);\r\n          break;\r\n      }\r\n      console.log(\"widget: \", widget);\r\n\r\n      // insert Widget in Widget Datatable\r\n      this.databaseService.pushToDocumentsList(this.databaseService.SHEETSSCOLLECTION, this.currentSheetId, new Fieldvalue('widgets', widget.id)).subscribe(result => {\r\n          // insert WidgetId in Sheet Datatable\r\n          this.databaseService.insertDocument(this.databaseService.WIDGETSCOLLECTION, widget)\r\n            .subscribe(result => {\r\n                // add Widget to Sheet in Projectobject\r\n                console.log('sheet: ', this.currentSheetId);\r\n                this.project.dashboards.find(x => x.id === this.currentDashboardId).sheets.find(x => x.id === this.currentSheetId).widgets.push(widget);\r\n                this.dataService.changeProjectData(this.project);\r\n                console.log('project', this.project);\r\n              },\r\n              err => {\r\n                if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n                  this.router.navigate(['unauthorized']);\r\n                }\r\n                console.log('Error while inserting into database ', err);\r\n              });\r\n        },\r\n        err => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']);\r\n          }\r\n          console.log('Error while inserting into database ', err);\r\n        });\r\n    } else {\r\n      console.log('Error adding sheet. No corresponding dashboard found');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method sets the minimum size in the grid of a widget.\r\n   * @param {string} widgetType the type of widget\r\n   * @returns {GridsterItem}\r\n   */\r\n  protected setPosition(widgetType: string): GridsterItem {\r\n    switch (widgetType) {\r\n      case WidgetType.addDevice:\r\n        return {minItemRows: 12, minItemCols: 10, x: 0, y: 0, rows: 30, cols: 16};\r\n      case WidgetType.deleteDevice:\r\n      case WidgetType.toggleDeviceControl:\r\n      case WidgetType.stateDeviceControl:\r\n        return {minItemRows: 3, minItemCols: 10, x: 0, y: 0, rows: 10, cols: 30};\r\n      case WidgetType.sliderDeviceControl:\r\n        return {minItemRows: 3, minItemCols: 10, x: 0, y: 0, rows: 13, cols: 35};\r\n      case WidgetType.lineChartVisualization:\r\n      case WidgetType.barChartVisualization:\r\n      case WidgetType.doughnutChartVisualization:\r\n      case WidgetType.polarAreaChartVisualization:\r\n      case WidgetType.bubbleChartVisualization:\r\n        return {minItemRows: 12, minItemCols: 12, x: 0, y: 0, rows: 24, cols: 24};\r\n      case WidgetType.historyAnomaly:\r\n      case WidgetType.realtimeAnomaly:\r\n        return {minItemRows: 12, minItemCols: 12, x: 0, y: 0, rows: 28, cols: 28};\r\n      case WidgetType.realtimeValueVisualization:\r\n        return {minItemRows: 6, minItemCols: 6, x: 0, y: 0, rows: 20, cols: 16};\r\n      case WidgetType.ruleManagementView:\r\n      case WidgetType.ruleNotificationView:\r\n        return {minItemRows: 6, minItemCols: 25, x: 0, y: 0, rows: 25, cols: 44};\r\n      case WidgetType.ruleSharingViewWidget:\r\n        return {minItemRows: 12, minItemCols: 12, x: 0, y: 0, rows: 28, cols: 38};\r\n      //return {minItemRows: 20, minItemCols: 20, x: 0, y: 0, rows: 25, cols: 25, truemaxItemCols : 100 , maxItemRows:100};\r\n      // default Widget class\r\n      default:\r\n        return {minItemRows: 10, minItemCols: 10, x: 0, y: 0, rows: 10, cols: 10};\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","\r\nimport {map} from 'rxjs/operators';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n// Classes for JSON Objects\r\nimport { Triggergroup } from '../models/frontend/rule_module/triggergroup';\r\nimport { Rule } from '../models/frontend/rule_module/rule';\r\n// Classes for JSON Objects\r\nimport { Observable } from 'rxjs/Rx';\r\nimport 'rxjs/Rx';\r\nimport { DataNotification } from '../models/frontend/rule_module/datanotification';\r\nimport {RuleCreationService} from \"../skeleton/dashboard/rules/service/rule-creation.service\";\r\nimport {Project} from \"../models/frontend/project\";\r\nimport {DataService} from \"./data.service\";\r\n\r\nimport { environment} from \"../../environments/environment\";\r\n\r\n\r\nconst BACKENDURL = `${environment.httpMode}${environment.baseUrl}${environment.contextRoot}`;\r\nconst AUTH = 'Bearer '.concat(localStorage.getItem('ang-token'));\r\n\r\n// Strings for dynamic URL generating\r\nconst URLRULEMANAGER = `${BACKENDURL}/ruleManagement/`;\r\nconst createRule = 'createRule';\r\nconst updateRule = 'updateRule/';\r\nconst deleteRule = 'deleteRule/';\r\nconst rule = 'getRule?ID=';\r\nconst allRules = 'getAllRules';\r\nconst ruleStatus = 'getRuleStatus?ID=';\r\nconst activate = 'activateRule/';\r\nconst deactivate = 'deactivateRule/';\r\nconst createGroup = 'createTriggergroup';\r\nconst allGroups = 'getAllTriggergroups';\r\nconst byCategory = 'getAllTriggerByCategory';\r\nconst triggersByTGID = 'getTriggersByTGID/';\r\nconst deleteTriggergroups = 'deleteTriggergroups/';\r\nconst shareAllTriggergroup = 'shareAllTriggergroup/';\r\nconst createNotification = 'createNotification';\r\nconst allNotifications = 'getAllNotifications';\r\nconst deleteNotification = 'deleteNotification/';\r\nconst updateNotifications = 'updateNotifications/';\r\n\r\n@Injectable()\r\nexport class RuleManagerService {\r\n\r\n  project: Project;\r\n\r\n  constructor(private http: HttpClient,\r\n              private dataService: DataService,\r\n              private router: Router) {\r\n    if (!this.project) {\r\n      this.dataService.projectData\r\n        .subscribe(project => {\r\n          this.project = project;\r\n        });\r\n    }\r\n  }\r\n\r\n  addNewTriggerLeaf(userID: String, triggerLeaf: Triggergroup): any {\r\n    triggerLeaf.projectID = this.project.id;\r\n    return this.http.post(`${ URLRULEMANAGER}${createGroup}/${userID}`, triggerLeaf.getTriggerGroup(), {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .map(\r\n        (response: Triggergroup) => {\r\n          return response;\r\n        }\r\n      );\r\n  }\r\n\r\n  getTriggersByTGID(userID: String, TGID: number): Observable<Array<Triggergroup>> {\r\n    return this.http.get(`${URLRULEMANAGER}${triggersByTGID}${TGID}?userID=${userID}`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .map(\r\n        (response: Array<Triggergroup>) => {\r\n\r\n          return response;\r\n        }, (err: Response) => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']);\r\n          }\r\n          alert('There was an error during creating the trigger. Please talk to your system admin.');\r\n          return {};\r\n        });\r\n\r\n  }\r\n\r\n  shareAllTriggergroup(userID: string, rootTGID: number, triggers: Array<Triggergroup>): any {\r\n    return this.http.post(`${URLRULEMANAGER}${shareAllTriggergroup}${userID}/${rootTGID}`, triggers, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map(\r\n        (response: Response) => {\r\n\r\n          return response;\r\n        }, (err: Response) => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']);\r\n          }\r\n          alert('There was an error during creating the trigger. Please talk to your system admin.');\r\n          return {};\r\n        })\r\n      );\r\n  }\r\n\r\n  saveRule(userID: String, ruleValue: Rule): any {\r\n    return this.http.post(`${URLRULEMANAGER}${createRule}/${userID}`, ruleValue, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map(\r\n        (response: Response) => {\r\n\r\n          return response;\r\n        }, (err: Response) => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          alert('There was an error during creating the trigger. Please talk to your system admin.');\r\n          return {};\r\n        })\r\n      );\r\n  }\r\n\r\n  saveNotification(userID: String, notification: DataNotification): any {\r\n    return this.http.post(`${URLRULEMANAGER}${createNotification}/${userID}`, notification, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map(\r\n        (response: Response) => {\r\n\r\n          return response;\r\n        },(err: Response) => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          alert('There was an error during creating the trigger. Please talk to your system admin.');\r\n          return {};\r\n        })\r\n      );\r\n  }\r\n\r\n  updateRule(userID: String, ruleData: Rule): any {\r\n    const ruleValue: Rule = new Rule();\r\n    ruleValue.setRuleData(ruleData);\r\n\r\n    return this.http.put(`${URLRULEMANAGER}${updateRule}${userID}`, ruleValue, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map(\r\n        (response: Response) => {\r\n\r\n          return response;\r\n        },\r\n        (err: Response) => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          alert('There was an error during creating the trigger. Please talk to your system admin.');\r\n          return {};\r\n        })\r\n      );\r\n  }\r\n\r\n  updateNotifications(userID: String, notifications: Array<DataNotification>): any {\r\n    return this.http.put(`${URLRULEMANAGER}${updateNotifications}${userID}`, notifications, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map(\r\n        (response: Response) => {\r\n\r\n          return response;\r\n        },\r\n        (err: Response) => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          alert('There was an error during creating the trigger. Please talk to your system admin.');\r\n          return {};\r\n        })\r\n      );\r\n  }\r\n\r\n  activateRule(userID: String, ruleValue: Rule): any {\r\n    return this.http.get(`${URLRULEMANAGER + activate + ruleValue.ID + this.getQueryParameters(userID, ruleValue) }`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map(\r\n        (response: Response) => {\r\n\r\n          return response;\r\n        },\r\n        (err: Response) => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          alert('There was an error during creating the trigger. Please talk to your system admin.');\r\n          return {};\r\n        })\r\n      );\r\n  }\r\n\r\n  deactivateRule(userID: String, ruleValue: Rule): any {\r\n    return this.http.get(`${URLRULEMANAGER + deactivate + ruleValue.ID + this.getQueryParameters(userID, ruleValue)}`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map(\r\n        (response: Response) => {\r\n\r\n          return response;\r\n        },\r\n        (err: Response) => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          alert('There was an error during creating the trigger. Please talk to your system admin.');\r\n          return {};\r\n        })\r\n      );\r\n  }\r\n\r\n  deleteTriggers(userID: string, triggers: Array<Triggergroup>): any {\r\n    return this.http.put(URLRULEMANAGER + deleteTriggergroups + userID, triggers, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .subscribe(\r\n        (response: Response) => {\r\n          console.log('deleteTriggers response', response);\r\n\r\n          return response;\r\n        },\r\n        (err: Response) => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          alert('There was an error during creating the trigger. Please talk to your system admin.');\r\n          return {};\r\n        });\r\n  }\r\n\r\n  getQueryParameters(userID: String, data: any): String {\r\n    return `?userID=${userID}&platformID=${data.platformID}&projectID=${data.projectID}`;\r\n  }\r\n\r\n  deleteRule(userID: String, ruleValue: Rule): any {\r\n    return this.http.delete(`${URLRULEMANAGER}${deleteRule}${ruleValue.ID}${this.getQueryParameters(userID, ruleValue)}`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map(\r\n        (response: Response) => {\r\n\r\n          return response;\r\n        },\r\n        (err: Response) => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          alert('There was an error during creating the trigger. Please talk to your system admin.');\r\n          return {};\r\n        }\r\n      ));\r\n  }\r\n\r\n  deleteNotification(userID: String, notification: DataNotification): any {\r\n    return this.http.delete(`${URLRULEMANAGER}${deleteNotification}${userID}/${notification.ID}`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map(\r\n        (response: Response) => {\r\n\r\n          return response;\r\n        },\r\n        (err: Response) => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          alert('There was an error during creating the trigger. Please talk to your system admin.');\r\n          return {};\r\n        }\r\n      ));\r\n  }\r\n\r\n  getTriggergroupByCategory(userID: String, category: string): any {\r\n    return this.http.get(`${URLRULEMANAGER}${byCategory}/${userID}?category=${category}`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map(\r\n        (response: Response) => {\r\n\r\n          return response;\r\n        },\r\n        (err: Response) => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          alert('There was an error during creating the trigger. Please talk to your system admin.');\r\n          return {};\r\n        }\r\n      ));\r\n  }\r\n\r\n  getAllTriggergroups(userID: String): any {\r\n    return this.http.get(`${URLRULEMANAGER}${allGroups}/${userID}?projectID=${this.project.id}`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map(\r\n        (response: Response) => {\r\n\r\n          return response;\r\n        },\r\n        (err: Response) => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          alert('There was an error during creating the trigger. Please talk to your system admin.');\r\n          return {};\r\n        }\r\n      ));\r\n  }\r\n\r\n  getAllRules(userID: String): any {\r\n    console.log('getAllRules this.project',this.project);\r\n    return this.http.get(`${URLRULEMANAGER}${allRules}/${userID}?projectID=${this.project.id}`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map(\r\n        (response: Response) => {\r\n\r\n          return response;\r\n        },\r\n        (err: Response) => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          alert('There was an error during creating the trigger. Please talk to your system admin.');\r\n          return {};\r\n        }\r\n      ));\r\n  }\r\n\r\n  getAllNotifications(userID: String): any {\r\n    return this.http.get(`${URLRULEMANAGER}${allNotifications}/${userID}`, {headers:{'Authorization':AUTH }, withCredentials: true })\r\n      .pipe(map(\r\n        (response: Response) => {\r\n\r\n          return response;\r\n        },\r\n        (err: Response) => {\r\n            if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n              this.router.navigate(['unauthorized']); }\r\n            alert('There was an error during creating the trigger. Please talk to your system admin.');\r\n            return {};\r\n          }\r\n      ));\r\n  }\r\n}\r\n","import { map } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { UserBackend } from '../models/backend/user';\r\nimport { DatabaseService } from './database.service';\r\nimport { DataService } from './data.service';\r\nimport { ProjectService } from './project.service';\r\nimport { environment} from \"../../environments/environment\";\r\n\r\n\r\nconst BACKENDURL = `${environment.httpMode}${environment.baseUrl}${environment.contextRoot}`;\r\nconst AUTH = 'Bearer '.concat(localStorage.getItem('ang-token'));\r\nconst URLUSERSESSIONMANAGER = `${BACKENDURL}/session/`;\r\nconst restore = 'restore';\r\n\r\n/**\r\n * @author Philipp Grenz\r\n * This class is responsible for restoring sessions on page reload\r\n */\r\n@Injectable()\r\nexport class SessionService {\r\n\r\n  protected userId: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  restoreSession(): any {\r\n    return this.http.get(URLUSERSESSIONMANAGER , {headers: {Authorization: AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n}\r\n\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment';\r\nimport { UserBackend } from '../models/backend/user';\r\n\r\nconst BACKENDURL = `${environment.httpMode}${environment.baseUrl}${environment.contextRoot}`;\r\nconst AUTH = 'Bearer '.concat(localStorage.getItem('ang-token'));\r\nconst URLUSERMANAGER = `${BACKENDURL}/user/`;\r\nconst create = 'create';\r\nconst get = '/get';\r\nconst deleteUser = '/delete';\r\nconst logout = '/logout';\r\nconst login = 'login';\r\nconst editMail = '/editMailAddress';\r\nconst editUsername = '/editUsername';\r\nconst editFirstname = '/editFirstname';\r\nconst editSurname = '/editSurname';\r\n\r\nconst editPassword = '/editPassword';\r\nconst forgotPassword = 'forgotPassword';\r\nconst resetPassword = 'resetPassword';\r\nconst confirmEmail = 'confirm';\r\nconst getAllUsers = 'getAllUsers';\r\n\r\n/**\r\n * This class is responsible for sending REST Requests to the backend\r\n */\r\n@Injectable()\r\nexport class UserManagerService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  logoutUser(id: string): any {\r\n    return this.http.get(URLUSERMANAGER + id + logout, {headers: {Authorization: AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  loginUser(username: string, password: string): any {\r\n    return this.http.get(`${URLUSERMANAGER + login}?username=${username}&password=${password}`, {headers: {Authorization: AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n  getAllUsers(): any {\r\n    return this.http.get(URLUSERMANAGER + getAllUsers, {headers: {Authorization: AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  deleteUser(id: string, password: string): any {\r\n    return this.http.delete(`${URLUSERMANAGER + id + deleteUser}?password=${password}`, {headers: {Authorization: AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  editUserMail(id: string, email: string, password: string): any {\r\n    console.log('e', email);\r\n    return this.http.put(`${URLUSERMANAGER + id + editMail}?password=${password}` , email, {headers: {Authorization: AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  editUserPassword(id: string, password: string, oldpassword: string): any {\r\n    return this.http.put(`${URLUSERMANAGER + id + editPassword}?oldpassword=${oldpassword}`, password, {headers: {Authorization: AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  editUsername(id: string, username: string, password: string): any {\r\n     console.log('u', username);\r\n     return this.http.put(`${URLUSERMANAGER + id + editUsername}?password=${password}`, username, {headers: {Authorization: AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  editFirstname(id: string, firstname: string, password: string): any{\r\n    console.log('f', firstname);\r\n   return this.http.put(`${URLUSERMANAGER + id + editFirstname}?password=${password}`, firstname, {headers: {Authorization: AUTH }, withCredentials: true })\r\n     .pipe(map((res: Response) => res));\r\n }\r\n\r\n  editSurname(id: string, surname: string, password: string): any{\r\n    console.log('s', surname);\r\n    return this.http.put(`${URLUSERMANAGER + id + editSurname}?password=${password}`, surname, {headers: {Authorization: AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  createUser(role: string, username: string, email: string, firstname: string, lastname: string, password: string, checkedSettings: Array<string>): any {\r\n    const obj: object = {role, username, email, firstname, lastname, password, checkedSettings};\r\n\r\n    return this.http.post(URLUSERMANAGER + create, obj, {headers: {Authorization: AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  getUser(id: string): any {\r\n    return this.http.get(URLUSERMANAGER + id, {headers: {Authorization: AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  requestResetLinkUser(email: string): any {\r\n    return this.http.put(URLUSERMANAGER + forgotPassword, email, {headers: {Authorization: AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  resetPassword(password: string, token: string): any {\r\n    return this.http.put(`${URLUSERMANAGER + resetPassword}?token=${token}`, password, {headers: {Authorization: AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  confirmEmail(token: string): any {\r\n    return this.http.get(`${URLUSERMANAGER + confirmEmail}?token=${token}`, {headers: {Authorization: AUTH }, withCredentials: true })\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n}\r\n","\r\nimport {map} from 'rxjs/operators';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { environment} from \"../../environments/environment\";\r\n\r\nconst BACKENDURL = `${environment.httpMode}${environment.baseUrl}${environment.contextRoot}`;\r\nconst AUTH = 'Bearer '.concat(localStorage.getItem('ang-token'));\r\nconst URLVISUALMANAGER = `${BACKENDURL}/visualManager/`;\r\nconst nowData = '/getSensorDataNow?deviceId=';\r\nconst timeData = '/getSensorDataOverTime?deviceId=';\r\n\r\nconst sensor = '&sensorId=';\r\nconst start = '&startTime=';\r\nconst end = '&endTime=';\r\nconst interval = '&interval=';\r\n\r\n@Injectable()\r\nexport class VisualManagerService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  /* Requests device/sensor data just for this moment */\r\n  getNowData(deviceId: string, sensorId: string, userId: string, projectId: string): any {\r\n   // deviceId = '4_testdevice';\r\n    // sensorId = '4_testsensor';\r\n      return this.http.get(`${URLVISUALMANAGER + userId}/${projectId}${nowData}${deviceId}${sensor}${sensorId}`, {headers:{'Authorization':AUTH }, withCredentials: true }).pipe(map((res: Response) => res));\r\n  }\r\n\r\n  /* Requests device/sensor data over time */\r\n  getTimeData(deviceId: string, sensorId: string, startTime: string, endTime: string, intervalId: string, userId: string, projectId: string): any {\r\n    return this.http.get(`${URLVISUALMANAGER + userId}/${projectId}${timeData}${deviceId}${sensor}${sensorId}${start}${startTime}${end}${endTime}${interval}${intervalId}`, {headers:{'Authorization':AUTH }, withCredentials: true }).pipe(map((res: Response) => res));\r\n  }\r\n}\r\n","module.exports = \"#siteWrapper {\\r\\nheight: 100%;\\r\\n}\\r\\n\\r\\n#siteContainer {\\r\\n  position: absolute;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  bottom: 0;\\r\\n  top: 47px;\\r\\n}\\r\\n\\r\\n#sidebar {\\r\\n  position: absolute;\\r\\n  left: 0;\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n  width: 50px;\\r\\n}\\r\\n\\r\\n#mainContent {\\r\\n  position: absolute;\\r\\n  left: 50px;\\r\\n  right: 0;\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n}\\r\\n\\r\\n#tabView {\\r\\n  position: absolute;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n.middlecardSheet {\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n::ng-deep .ui-tabview {\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n::ng-deep .ui-tabview-panels {\\r\\n  height: calc(100% - 45px);\\r\\n}\\r\\n\\r\\n::ng-deep .ui-tabview-panel {\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n::ng-deep .ui-tabview-nav {\\r\\n  position: absolute;\\r\\n  bottom: 0;\\r\\n  overflow-x: auto;\\r\\n  left: 0;\\r\\n  display: inline-flex;\\r\\n  right: 50px;\\r\\n}\\r\\n\\r\\n#elseBlock {\\r\\n  align-content: center;\\r\\n}\\r\\n\\r\\n::ng-deep .ui-dropdown-label{\\r\\n  white-space: normal !important;\\r\\n}\\r\\n\\r\\n::ng-deep .ui-dropdown-item{\\r\\n  word-break: normal !important;\\r\\n}\\r\\n\"","module.exports = \"<div id=\\\"siteWrapper\\\" *ngIf=\\\"loginStatus > 0; else elseBlock\\\">\\r\\n  <div id=\\\"menuContainer\\\">\\r\\n    <main-menu (messageEvent)=\\\"notifyOfEvent($event)\\\"></main-menu>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"dataloaded\\\" id=\\\"siteContainer\\\">\\r\\n    <!-- Notifications-->\\r\\n    <p-growl [sticky]=\\\"false\\\" [(value)]=\\\"msgs\\\"></p-growl>\\r\\n    <!-- Dialog for confirmation messages-->\\r\\n    <p-confirmDialog></p-confirmDialog>\\r\\n\\r\\n    <div id=\\\"sidebar\\\">\\r\\n      <app-sidebar-content></app-sidebar-content>\\r\\n    </div>\\r\\n    <p-dialog *ngIf=\\\"displayRuleCreationDialog && !displayRuleEditDialog\\\"\\r\\n              header=\\\"Rule Creation\\\" [(visible)]=\\\"displayRuleCreationDialog\\\" [modal]=\\\"true\\\" [responsive]=\\\"true\\\"\\r\\n              [width]=\\\"window.innerWidth-200\\\" [height]=\\\"window.innerHeight-600\\\"\\r\\n              [contentStyle]=\\\"{'width':'100%','height':'100%'}\\\" [minHeight]=\\\"window.innerHeight\\\" [closable]=\\\"false\\\">\\r\\n      <app-rule-creation rule_function=\\\"create\\\"></app-rule-creation>\\r\\n    </p-dialog>\\r\\n    <p-dialog *ngIf=\\\"displayRuleEditDialog\\\"\\r\\n              header=\\\"Rule Update\\\" [(visible)]=\\\"displayRuleEditDialog\\\" [modal]=\\\"true\\\" [responsive]=\\\"true\\\"\\r\\n              [width]=\\\"window.innerWidth-200\\\"  [height]=\\\"window.innerHeight-600\\\"\\r\\n\\r\\n              [contentStyle]=\\\"{'width':'100%','height':'100%'}\\\" [minHeight]=\\\"window.innerHeight\\\">\\r\\n      <app-rule-creation rule_function=\\\"edit\\\" [rule]=\\\"editRule\\\"></app-rule-creation>\\r\\n    </p-dialog>\\r\\n    <div *ngIf=\\\"dataloaded\\\" id=\\\"mainContent\\\">\\r\\n\\r\\n\\r\\n      <ng-container *ngFor=\\\"let dashboard of project.dashboards; trackBy: dashboardTrack()\\\">\\r\\n        <ng-container *ngIf=\\\"dashboard.id === currentDashboardId\\\">\\r\\n\\r\\n          <p-tabView id=\\\"tabView\\\" [controlClose]=\\\"true\\\" (onChange)=\\\"setActiveTab()\\\"\\r\\n                     (onClose)=\\\"deleteConfirmation(currentSheetId)\\\" orientation=\\\"bottom\\\">\\r\\n\\r\\n            <ng-container id=\\\"tabPanelContainer\\\"\\r\\n                          *ngFor=\\\"let sheet of dashboard.sheets; trackBy: trackSheet(); let i= index\\\">\\r\\n\\r\\n              <p-tabPanel id={{sheet.id}} [header]=\\\"sheet.name\\\"  [selected]=\\\"i == 0\\\"> <!--[closable]=\\\"true\\\"-->\\r\\n                <!--tabbody-->\\r\\n                <div class=\\\"middlecardSheet\\\">\\r\\n                  <sheet-content style=\\\"{border: #7A7A7A 2em solid;}\\\"\\r\\n                                 *ngIf=\\\"sheet.id === currentSheetId\\\" (messageEvent)=\\\"notifyOfEvent($event)\\\"></sheet-content>\\r\\n                </div>\\r\\n              </p-tabPanel>\\r\\n            </ng-container>\\r\\n          </p-tabView>\\r\\n          <!--\\r\\n          <p-button (click)=\\\"this.projectService.generateSheet()\\\" style=\\\"position: fixed; right: 0.5em; bottom: 0.5em\\\"\\r\\n                    icon=\\\"fa fa-plus\\\"></p-button> -->\\r\\n\\r\\n        </ng-container>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- in case the user is not authorized to be here-->\\r\\n<ng-template #elseBlock>\\r\\n  <p-card title=\\\"Error!\\\" [style]=\\\"{width: '360px'}\\\" styleClass=\\\"ui-card-shadow\\\">\\r\\n    <p>You're not authorized to be here. Maybe you just need to login? </p>\\r\\n    <p-footer>\\r\\n      <button pButton [routerLink]=\\\"['']\\\">Login</button>\\r\\n    </p-footer>\\r\\n  </p-card>\\r\\n</ng-template>\\r\\n\\r\\n\"","import {Component, HostBinding, OnInit, ViewChild} from '@angular/core';\r\nimport {DatabaseService} from '../../services/database.service';\r\nimport {DataService} from '../../services/data.service';\r\nimport {OverlayContainer} from '@angular/cdk/overlay';\r\nimport { Router } from '@angular/router';\r\nimport {ConfirmationService, MenuItem, Message} from 'primeng/api';\r\nimport {TabPanel, TabView} from 'primeng/primeng';\r\nimport {User} from '../../models/frontend/user';\r\nimport {ProjectService} from '../../services/project.service';\r\nimport {Project} from '../../models/frontend/project';\r\nimport {EntityStatechangeResponse} from '../../models/backend/entitystatechangeresponse';\r\nimport {ValueViewWidget} from '../../models/frontend/valueviewwidget';\r\nimport {WidgetType} from '../../models/frontend/widget';\r\nimport {ThingStatusChangeResponse} from '../../models/backend/thingstatuschangedresponse';\r\nimport {DeviceManagerService} from '../../services/devicemanager.service';\r\nimport {Device} from '../../models/backend/device';\r\nimport {DeviceDiscoveredResponse} from '../../models/backend/devicediscoveredresponse';\r\nimport {RuleCreationService} from \"./rules/service/rule-creation.service\";\r\nimport {RuleManagementService} from \"./rules/service/rule-management.service\";\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  providers: [ConfirmationService],\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  @HostBinding('class') componentCssClass;\r\n\r\n  protected project: Project;\r\n  protected currentDashboardId: string;\r\n\r\n  protected user: User;\r\n  protected currentSheetId: string;\r\n  protected dataloaded = false;\r\n\r\n\r\n  // old values\r\n  protected dashboardID: number;\r\n  protected loginStatus: number;\r\n  public msgs: Array<Message>;\r\n  protected lastTabId: String;\r\n  // class variable\r\n  @ViewChild(TabView) tabView: TabView;\r\n  displayRuleCreationDialog = false;\r\n  displayRuleManagement = false;\r\n  displayRuleEditDialog = false;\r\n  window = window;\r\n  editRule : any;\r\n\r\n  constructor(private dataService: DataService,\r\n              protected projectService: ProjectService,\r\n              private overlayContainer: OverlayContainer,\r\n              private confirmationService: ConfirmationService,\r\n              private ruleCreationService: RuleCreationService,\r\n              private ruleManagementService: RuleManagementService,\r\n              private router: Router) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.msgs = [];\r\n    this.dataService.userData.subscribe(value => this.user = value);\r\n\r\n    this.dataService.currentLoginStatus\r\n      .subscribe(value => {\r\n        this.loginStatus = value;\r\n        if (value < 1) {\r\n          this.router.navigate(['unauthorized']);\r\n        }\r\n      });\r\n\r\n    this.dataService.projectData\r\n      .subscribe((project: Project) => {\r\n        this.project = project;\r\n        this.dataloaded = true;\r\n      });\r\n\r\n    this.dataService.currentDashboardId\r\n      .subscribe(dashboardId => this.currentDashboardId = dashboardId);\r\n\r\n    this.dataService.currentSheetId\r\n      .subscribe(sheetId => this.currentSheetId = sheetId);\r\n\r\n    this.dataService.currentTheme.subscribe(value => this.changeTheme(value));\r\n    this.ruleCreationService.displayManagementStatusUpdated.subscribe(display => {\r\n      this.displayRuleManagement = display;\r\n    });\r\n    this.ruleCreationService.displayStatusUpdated.subscribe(display => {\r\n      this.displayRuleCreationDialog = display;\r\n    });\r\n\r\n    this.ruleManagementService.editRuleStatusUpdated.subscribe(rule => {\r\n      if(rule){\r\n        this.editRule = rule;\r\n      }\r\n    });\r\n    this.ruleManagementService.displayRuleUpdateComponent.subscribe(display => {\r\n      this.displayRuleEditDialog = display;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This method sets the active tab closeable to offer the opportunity to delete a sheet.\r\n   * Furthermore it set the id of the active tab for global access.\r\n   */\r\n  setActiveTab(): void {\r\n    const tabPanel: TabPanel = this.tabView.findSelectedTab();\r\n\r\n    this.currentSheetId = (tabPanel.viewContainer.element.nativeElement as Element).id;\r\n    this.dataService.changeCurrentSheetId(this.currentSheetId);\r\n\r\n    let lastTabPanel: TabPanel;\r\n    for (let i = 0; i < this.tabView.tabs.length; i++) {\r\n      if (this.tabView.tabs[i].id === this.lastTabId) {\r\n        lastTabPanel = this.tabView.tabs[i];\r\n      }\r\n    }\r\n\r\n    tabPanel.closable = true;\r\n    if (lastTabPanel !== undefined) {\r\n      lastTabPanel.closable = false;\r\n    }\r\n    this.lastTabId = tabPanel.id;\r\n\r\n  }\r\n\r\n  changeTheme(theme): void {\r\n    if (theme !== undefined) {\r\n      this.overlayContainer.getContainerElement().classList.add(theme);\r\n      this.componentCssClass = theme;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method displays a confirmation window for deleting a sheet. By accepting\r\n   * the method {@link DashboardComponent#deleteSheet} gets called\r\n   * @param sheetid -the id of the sheet\r\n   */\r\n  protected deleteConfirmation(sheetid: string): void {\r\n    const tabPanel: TabPanel = this.tabView.tabs.find(i => (i.viewContainer.element.nativeElement as Element).id === sheetid);\r\n    this.confirmationService.confirm({\r\n      message: `Do you want to delete the sheet ${tabPanel.header} ?`,\r\n      header: 'Delete Sheet',\r\n      icon: 'fa fa-trash',\r\n      accept: () => {\r\n        // delete sheet\r\n        console.log('sheetid: ', sheetid);\r\n        this.projectService.deleteSheet(sheetid);\r\n      },\r\n      reject: () => {\r\n        this.msgs = [];\r\n        this.msgs = [{severity: 'info', summary: 'Canceled', detail: 'Canceled deletion.'}];\r\n      }\r\n    });\r\n  }\r\n\r\n  /*Tracking functions for ngFor Directive in dashboard.component.html*/\r\n  protected trackSheet(index, sheet): any {\r\n    return sheet ? sheet[index] : undefined;\r\n  }\r\n\r\n  dashboardTrack(index, item): any {\r\n    return item;\r\n  }\r\n\r\n  protected notifyOfEvent(event): void {\r\n    this.msgs = [];\r\n    this.msgs.push(event);\r\n  }\r\n\r\n}\r\n","export const ActionsFilterSchema: any = {\r\n  children : [\r\n    {\r\n      id: 1,\r\n      name: 'Entity Situation',\r\n      icon: 'universal-access',\r\n      children: [\r\n        {\r\n          name: 'All Devices',\r\n          children: []\r\n        },\r\n        {\r\n          name: 'Living',\r\n          children: [\r\n            {\r\n              name: 'Temperature',\r\n              condition_attribute: 'temperature',\r\n              living: true,\r\n              properties: [\r\n                {\r\n                  text: 'Then change temperature to (°C)',\r\n                  type: 'checkbox',\r\n                  type_options: 'slider',\r\n                  min: 0,\r\n                  max : 100\r\n                }\r\n              ],\r\n              children: []\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          name: 'Non Living',\r\n          children: [\r\n            {\r\n              name: 'Device',\r\n              children: [\r\n                {\r\n                  name: 'Light',\r\n                  living: false,\r\n                  condition_attribute: 'state',\r\n                  itemtype: 'Light',\r\n                  properties: [\r\n                    {\r\n                      text: 'Then change brightness to(%)',\r\n                      type: 'number',\r\n                      type_options: 'slider',\r\n                      min: 0,\r\n                      max : 100\r\n                    },\r\n                    {\r\n                      text: 'Then switch to',\r\n                      type: 'text',\r\n                      type_options: 'inputSwitch'\r\n                    }\r\n                  ],\r\n                  children: []\r\n                },\r\n                {\r\n                  name: 'Movement',\r\n                  condition_attribute: 'state',\r\n                  living: false,\r\n                  itemtype: 'Movement',\r\n                  properties: [\r\n                    {\r\n                      text: 'Then change movement detection',\r\n                      type: 'text',\r\n                      type_options: 'inputSwitch'\r\n                    }\r\n                  ],\r\n                  children: []\r\n                },\r\n                {\r\n                  name: 'Place',\r\n                  living: false,\r\n                  state: 'place',\r\n                  condition_attribute: 'place',\r\n                  properties: [\r\n                    {\r\n                      text: 'Then change device located',\r\n                      type: 'text',\r\n                      type_options: 'dropdown',\r\n                      selects: [\r\n                        {label: 'Apartment', value: 'Apartment'},\r\n                        {label: 'City', value: 'City'}\r\n                      ]\r\n                    }\r\n                  ],\r\n                  children: []\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Communication',\r\n      icon: 'wechat',\r\n      children: [\r\n        {\r\n          name: 'E-Mail',\r\n          condition_attribute: 'email',\r\n          properties: [\r\n            {\r\n              text: 'Then send E-Mail to',\r\n              type: 'text',\r\n              type_options: 'input'\r\n            }\r\n          ],\r\n          children: []\r\n        },\r\n        {\r\n          name: 'Telephone number',\r\n          condition_attribute: 'telephonenumber',\r\n          properties: [\r\n            {\r\n              text: 'Then dial telephone number',\r\n              type: 'number',\r\n              type_options: 'input'\r\n            }\r\n          ],\r\n          children: []\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Situation',\r\n      icon: 'automobile',\r\n      children: [\r\n        {\r\n          name: 'Activity',\r\n          condition_attribute: 'activity',\r\n          properties: [\r\n            {\r\n              text: 'Then activity is',\r\n              type: 'text',\r\n              type_options: 'input'\r\n            }\r\n          ],\r\n          children: []\r\n        },\r\n        {\r\n          name: 'Traffic Situation',\r\n          condition_attribute: 'trafficsituation',\r\n          properties: [\r\n            {\r\n              text: 'Then traffic situation is',\r\n              type: 'text',\r\n              type_options: 'dropdown',\r\n              selects: [\r\n                {label: 'Traffic High', value: 'high'},\r\n                {label: 'Traffic Middle', value: 'middle'},\r\n                {label: 'Traffic Low', value: 'low'}\r\n              ]\r\n            }\r\n          ],\r\n          children: []\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Service',\r\n      icon: 'cloud',\r\n      children: [\r\n        {\r\n          name: 'Physical Service',\r\n          condition_attribute: 'servicetype',\r\n          physical: true,\r\n          properties: [\r\n            {\r\n              text: 'Then physical service is',\r\n              type: 'text',\r\n              type_options: 'dropdown',\r\n              selects: [\r\n                {label: 'Post', value: 'Post'},\r\n                {label: 'Package', value: 'Package'}\r\n              ]\r\n            }\r\n          ],\r\n          children: []\r\n        },\r\n        {\r\n          name: 'Non Physical service',\r\n          condition_attribute: 'entry',\r\n          physical: false,\r\n          properties: [\r\n            {\r\n              text: 'Then non physical service is',\r\n              type: 'text',\r\n              type_options: 'dropdown',\r\n              selects: [\r\n                {label: 'Entry in Database', value: 'Entry in database'},\r\n                {label: 'Entry in Logs', value: 'Entry in logs'},\r\n                {label: 'Data from Web Service', value: 'Data from web service'}\r\n\r\n              ]\r\n            }\r\n          ],\r\n          children: []\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n};\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"ui-g\\\">\\r\\n  <div class=\\\"ui-lg-12 ui-md-12\\\">\\r\\n    <p-autoComplete [(ngModel)]=\\\"existingAction\\\"\\r\\n                    [suggestions]=\\\"actions\\\"\\r\\n                    field=\\\"name\\\"\\r\\n                    (completeMethod)=\\\"searchAction($event)\\\"\\r\\n                    [dropdown]=\\\"true\\\"\\r\\n                    [size]=\\\"73\\\"\\r\\n                    placeholder=\\\"Select action\\\"\\r\\n                    (onSelect)=\\\"addSelectedAction(existingAction);\\\">\\r\\n    </p-autoComplete>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { RuleCreationService } from '../../service/rule-creation.service';\r\nimport { RuleAction } from '../../../../../models/frontend/rule_module/ruleaction';\r\nimport { RuleManagerService } from '../../../../../services/rulemanager.service';\r\n\r\n@Component({\r\n  selector: 'app-action-combine',\r\n  templateUrl: './action-combine.component.html',\r\n  styleUrls: ['./action-combine.component.css']\r\n})\r\n\r\nexport class ActionCombineComponent implements OnInit {\r\n\r\n  actions: Array<any> = [];\r\n  existingAction: RuleAction;\r\n\r\n  constructor(private ruleCreationService: RuleCreationService,\r\n              private ruleManagerService: RuleManagerService) {\r\n  }\r\n\r\n  /**\r\n   * This function loads at the beginning all rules\r\n   * and sets all its related actions to the local action array list.\r\n   */\r\n  ngOnInit(): void {\r\n    this.ruleManagerService.getAllRules(this.ruleCreationService.loggedUserId)\r\n      .subscribe(response => {\r\n        for (const rule of response) {\r\n          this.actions = this.actions = this.actions.concat(rule.ruleActions);\r\n        }\r\n        this.actions = this.actions.concat(this.ruleCreationService.getAllLocalActions());\r\n        const Ids: Array<any> = [];\r\n        const actionsResult: Array<RuleAction> = [];\r\n        for (const action of this.actions) {\r\n          if (!Ids[action.ID]) {\r\n            Ids[action.ID] = action;\r\n            actionsResult.push(action);\r\n          }\r\n        }\r\n        this.actions = actionsResult;\r\n        this.ruleCreationService.allActionList = this.actions;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * This function is for existing actions filter\r\n   * @param event is selected component event\r\n   */\r\n  searchAction(event): void {\r\n    this.actions = this.ruleCreationService.filterAutocomplete(event.query, this.ruleCreationService.allActionList, 'name');\r\n  }\r\n\r\n  /**\r\n   * Selected action will be added to the action array\r\n   * In order to combine with different action, \"AND\" default operator value will be defined\r\n   * for every actions.\r\n   *\r\n   * @param selectedAction is selected existing action parameter\r\n   */\r\n  addSelectedAction(selectedAction: any): void {\r\n    this.ruleCreationService.actionList.push(selectedAction);\r\n    this.actions.push(selectedAction);\r\n    if (this.ruleCreationService.actionList.length > 0) {\r\n      this.ruleCreationService.selectActionOperatorList.push({id: 0, operator: 'AND'});\r\n    }\r\n    this.existingAction = undefined;\r\n    this.ruleCreationService.actionOverlay.hide();\r\n  }\r\n}\r\n","module.exports = \".new_action_button_size{\\r\\n  width:177px;\\r\\n}\\r\\n.save_action{\\r\\n  padding-left: 0px;\\r\\n}\\r\\n.type_option_elements{\\r\\n  padding-left: 9px;\\r\\n}\\r\\n\"","module.exports = \"<div style=\\\"font-size: 14px;\\\">\\r\\n  <p-messages [(value)]=\\\"messeges\\\"></p-messages>\\r\\n</div>\\r\\n<div class=\\\"ui-g\\\">\\r\\n  <div class=\\\"ui-g-4\\\" style=\\\"margin-top: 13px\\\">\\r\\n    <div *ngFor=\\\"let action of actionsFilterSchema.children; let actionIndex = index;\\\"><br *ngIf=\\\"actionIndex !== 0\\\">\\r\\n      <i class=\\\"fa fa-{{action.icon}}\\\" style=\\\"width:20px;vertical-align:middle\\\"></i>\\r\\n      <p-checkbox name=\\\"name\\\" value=\\\"{{action.name}}\\\" label=\\\"{{action.name}}\\\"\\r\\n                  [(ngModel)]=\\\"actionCheckboxSelectedValues[action.id]\\\"\\r\\n                  (click)=\\\"changeSelectedValues(actionCheckboxSelectedValues)\\\"></p-checkbox>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"ui-g-8\\\">\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <p-autoComplete [(ngModel)]=\\\"filterValue\\\" field=\\\"leafChild.name\\\"\\r\\n                      [suggestions]=\\\"filterResultData | toItem\\\" (completeMethod)=\\\"filterAction($event)\\\"\\r\\n                      (onDropdownClick)=\\\"clearFilterValue();\\\"\\r\\n                      [size]=\\\"42\\\"\\r\\n                      [minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n        <ng-template let-action pTemplate=\\\"item\\\">\\r\\n          <div class=\\\"ui-helper-clearfix\\\" style=\\\"border-bottom:1px solid #D5D5D5\\\">\\r\\n            <div style=\\\"font-size:16px;margin:10px 10px 0 0\\\">\\r\\n              <i class=\\\"fa fa-{{action.first_parent_icon}}\\\" style=\\\"width:20px;vertical-align:middle\\\"></i>\\r\\n              <span *ngIf=\\\"action.parents.length > 0\\\">\\r\\n              <span *ngFor=\\\"let parent of action.parents\\\">{{ parent.name }} - </span></span>\\r\\n              <span>{{ action.leafChild.name }}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </ng-template>\\r\\n      </p-autoComplete>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <div *ngIf=\\\"filterValue.leafChild && filterValue.leafChild.name\\\">\\r\\n        <p-autoComplete [(ngModel)]=\\\"selectedCondition\\\"\\r\\n                        [suggestions]=\\\"filterValue.leafChild.properties\\\"\\r\\n                        field=\\\"text\\\"\\r\\n                        (completeMethod)=\\\"searchCondition($event)\\\"\\r\\n                        [dropdown]=\\\"true\\\"\\r\\n                        [size]=\\\"42\\\"\\r\\n                        placeholder=\\\"Select Condition\\\">\\r\\n        </p-autoComplete>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12\\\" *ngIf=\\\"selectedCondition.text\\\">\\r\\n      <strong>{{ selectedCondition.text }}</strong>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 type_option_elements\\\">\\r\\n      <div *ngIf=\\\"selectedCondition.type_options === 'input'\\\">\\r\\n        <input type=\\\"{{selectedCondition.type}}\\\" pInputText [(ngModel)]=\\\"filterValue.leafChild.conditionValue\\\"/>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"selectedCondition.type_options === 'multiselect'\\\">\\r\\n        <p-multiSelect [options]=\\\"selectedCondition.selects\\\" [(ngModel)]=\\\"filterValue.leafChild.conditionValue\\\">\\r\\n        </p-multiSelect>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"selectedCondition.type_options === 'inputSwitch'\\\">\\r\\n        <p-inputSwitch [(ngModel)]=\\\"filterValue.leafChild.conditionValue\\\"></p-inputSwitch>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"selectedCondition.type_options === 'calender'\\\">\\r\\n        <p-calendar [(ngModel)]=\\\"filterValue.leafChild.conditionValue\\\" dateFormat=\\\"dd.mm.yy\\\"></p-calendar>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"selectedCondition.type_options === 'time'\\\">\\r\\n        <p-calendar [(ngModel)]=\\\"filterValue.leafChild.conditionValue\\\" [timeOnly]=\\\"true\\\"\\r\\n                    showTime=\\\"true\\\"></p-calendar>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"selectedCondition.type_options === 'dropdown'\\\">\\r\\n        <p-dropdown [options]=\\\"selectedCondition.selects\\\" placeholder=\\\"Select\\\"\\r\\n                    [(ngModel)]=\\\"filterValue.leafChild.conditionValue\\\"></p-dropdown>\\r\\n      </div>\\r\\n      <div style=\\\"padding-left:50px;\\\">\\r\\n        <div *ngIf=\\\"selectedCondition.type_options === 'checkbox'\\\">\\r\\n          <p-checkbox [(ngModel)]=\\\"filterValue.leafChild.conditionValue\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"selectedCondition.type_options === 'slider'\\\">\\r\\n        <div class=\\\"ui-lg-5\\\">\\r\\n          <span style=\\\"padding: 48%\\\">{{ filterValue.leafChild.conditionValue }}</span>\\r\\n          <p-slider [(ngModel)]=\\\"filterValue.leafChild.conditionValue\\\" [min]=\\\"selectedCondition.min\\\"\\r\\n                    [max]=\\\"selectedCondition.max\\\"></p-slider>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12\\\" *ngIf=\\\"filterValue.leafChild !== undefined && filterValue.leafChild.conditionValue !== undefined\\\">\\r\\n      <div class=\\\"ui-g-12 ui-md-12 ui-lg-6 save_action\\\">\\r\\n        <button pButton *ngIf=\\\"action_function !== 'edit'\\\" type=\\\"button\\\" label=\\\"Save action\\\"\\r\\n                (click)=\\\"saveNewAction(filterValue)\\\" class=\\\"new_action_button_size\\\"></button>\\r\\n        <button pButton *ngIf=\\\"action_function === 'edit'\\\" type=\\\"button\\\" label=\\\"Update action\\\"\\r\\n                (click)=\\\"updateAction(filterValue)\\\" class=\\\"new_action_button_size\\\"></button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Condition } from '../../../../../models/frontend/rule_module/condition';\r\nimport { RuleAction } from '../../../../../models/frontend/rule_module/ruleaction';\r\nimport { MenuItem, Message } from 'primeng/api';\r\nimport { ActionsFilterSchema } from '../../actions-schema';\r\nimport { RuleCreationService } from '../../service/rule-creation.service';\r\nimport { SearchDeviceService } from '../../service/search-device.service';\r\nimport { RuleManagementService } from '../../service/rule-management.service';\r\nimport { PlatformDeviceManagementService } from '../../service/platform-device-management.service';\r\n\r\n@Component({\r\n  selector: 'app-action',\r\n  templateUrl: './action.component.html',\r\n  styleUrls: ['./action.component.css'],\r\n  providers: [Condition, RuleAction, SearchDeviceService]\r\n\r\n})\r\n\r\nexport class ActionComponent implements OnInit {\r\n\r\n  @Input() action_function: string;\r\n  @Input() inputEditAction: RuleAction;\r\n  @Input() editActionIndex: number;\r\n  filteredActionConditionValues: any;\r\n\r\n  filterParents: Array<any> = [];\r\n  filterValue: any = {\r\n    parents: [],\r\n    leafChild: {}\r\n  };\r\n  messeges: Array<Message> = [];\r\n  items: Array<MenuItem>;\r\n  actionsFilterSchema = ActionsFilterSchema;\r\n  actionCheckboxSelectedValues: Array<any> = [];\r\n  selectedCondition: any = {};\r\n  actions: Array<any>;\r\n\r\n  filterData: Array<any> = [];\r\n  filterResultData: Array<any>;\r\n\r\n  constructor(private ruleCreationService: RuleCreationService,\r\n              private searchDeviceService: SearchDeviceService,\r\n              private ruleManagementService: RuleManagementService,\r\n              private platformDeviceManagement: PlatformDeviceManagementService) {\r\n  }\r\n\r\n  /**\r\n   * Changes checkbox category value\r\n   *\r\n   * @param selectedValues after checkbox is clicked\r\n   */\r\n  changeSelectedValues(selectedValues: any): void {\r\n    this.actionCheckboxSelectedValues = selectedValues;\r\n  }\r\n\r\n  /**\r\n   * This function sets end results of action Json  Schema.\r\n   * After recrusive search sets parents and last child values of all children.\r\n   *\r\n   * @param leafChild last child object\r\n   * @param parents all parents of this child\r\n   */\r\n  setElementByActionFilter(leafChild: any, parents: any): void {\r\n\r\n    const element = {leafChild: {}, parents: []};\r\n    let parent = {name: undefined, icon: undefined};\r\n    for (const parentValue of parents) {\r\n      if (parentValue.name) {\r\n        parent.name = parentValue.name;\r\n        parent.icon = parentValue.icon;\r\n        element.parents.push(parent);\r\n        parent = {name: undefined, icon: undefined};\r\n      }\r\n    }\r\n    element.leafChild = leafChild;\r\n    this.filterData.push(element);\r\n    this.filterResultData = this.filterData;\r\n  }\r\n\r\n  /**\r\n   * Here will be all action related data loaded for creating the rule as well as for updating the rule.\r\n   * If action_function has value ‘edit,’  then this component will be used for updating the rule.\r\n   */\r\n  ngOnInit(): void {\r\n    this.setActionFilter(this.actionsFilterSchema);\r\n    this.ruleCreationService.actionsFilterObservable.subscribe(\r\n      (filter: any) => {\r\n        this.actionsFilterSchema = filter;\r\n        this.filterParents = [];\r\n        this.filterData = [];\r\n        this.setActionFilter(this.actionsFilterSchema);\r\n      });\r\n    if (this.action_function === 'edit') {\r\n      this.ruleManagementService.editActionStatusUpdated\r\n        .subscribe((respondAction: any) => {\r\n          const respond = respondAction;\r\n          if (this.inputEditAction.ID === respond.action.ID && this.editActionIndex === respond.actionIndex) {\r\n            this.filterData = [];\r\n\r\n            const filterShema: any = {children: []};\r\n\r\n            this.actionsFilterSchema.children.forEach(child => {\r\n                filterShema.children.push(child);\r\n            });\r\n\r\n            this.setActionFilter(filterShema);\r\n\r\n            this.filterResultData.forEach((data: any) => {\r\n              if (data.leafChild && data.leafChild.properties) {\r\n                data.leafChild.properties.forEach(property => {\r\n                  if (respond.action.name.indexOf(property.text) !== -1) {\r\n\r\n                    if (respond.action.condition[data.leafChild.condition_attribute]) {\r\n                      this.filterValue = data;\r\n                      this.selectedCondition = property;\r\n                      this.addFilteredValue(this.filterValue);\r\n                      this.filterValue.leafChild.conditionValue = respond.action.condition[data.leafChild.condition_attribute];\r\n                    }\r\n                  }\r\n                });\r\n              }\r\n            });\r\n          }\r\n          const r = this.ruleCreationService.creationRule;\r\n          this.setActionFilter(this.actionsFilterSchema);\r\n          this.platformDeviceManagement\r\n            .addAllDevices(r.projectID, r.userId, r.platformID);\r\n        });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function sets actions form Action Json Scheme\r\n   *\r\n   * @param parent. Each recursive setActionFilter function gets old child as a parent parameter.\r\n   */\r\n  setActionFilter(parent: any): void {\r\n    this.filterParents.push(parent);\r\n    if (parent.children.length > 0) {\r\n      for (const child of parent.children) {\r\n        this.setActionFilter(child);\r\n      }\r\n      const size = this.filterParents.length;\r\n      this.filterParents = this.filterParents.slice(0, size - 1);\r\n    } else {\r\n      const size = this.filterParents.length;\r\n      this.filterParents = this.filterParents.slice(0, size - 1);\r\n      const lastParentIsChild = parent;\r\n      this.setElementByActionFilter(lastParentIsChild, this.filterParents);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears all selected values for action\r\n   */\r\n  clearFilterValue(): void {\r\n    this.filterValue.leafChild = {};\r\n    this.selectedCondition = {};\r\n  }\r\n\r\n  /**\r\n   * This filter function is for selected checkbox.\r\n   * Search the action for selected checkbox category\r\n   *\r\n   * @param event is clicked component event\r\n   */\r\n  filterAction(event): void {\r\n    this.filterResultData = [];\r\n    let isSet;\r\n    this.filterData.forEach((value: any) => {\r\n      const action = value;\r\n      let countCheckbox = 0;\r\n      for (const Id in this.actionCheckboxSelectedValues) {\r\n        if (Id && this.actionCheckboxSelectedValues[Id].length > 0) {\r\n          const actionName = this.actionCheckboxSelectedValues[Id][0];\r\n          if (action.parents.length > 0) {\r\n\r\n            if (action.parents[0].name === actionName) {\r\n              countCheckbox++;\r\n            }\r\n          } else {\r\n            if (action.leafChild.name === actionName) {\r\n              countCheckbox++;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (countCheckbox > 0 || this.actionCheckboxSelectedValues.length === 0) {\r\n        isSet = false;\r\n        for (const parent of action.parents) {\r\n          if (parent && parent.name && parent.name.toLowerCase()\r\n              .indexOf(event.query.toLowerCase()) === 0) {\r\n            if (!isSet) {\r\n              this.filterResultData.push(action);\r\n              isSet = true;\r\n            }\r\n          }\r\n        }\r\n        if (!isSet && action.leafChild.name.toLowerCase()\r\n            .indexOf(event.query.toLowerCase()) === 0) {\r\n          this.filterResultData.push(action);\r\n          isSet = true;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * After category and condition is selected, then\r\n   * condition values will be added\r\n   *\r\n   * @param actionConditionValues is user selected action condition values\r\n   */\r\n  addFilteredValue(actionConditionValues: any): void {\r\n    this.filteredActionConditionValues = actionConditionValues;\r\n  }\r\n\r\n  /**\r\n   * After action condition is selected,\r\n   * this function sets all attributes for back-end rule model.\r\n   *\r\n   * @param filterValue user selected value\r\n   * @returns RuleAction This class is for send rule request function\r\n   */\r\n  getAction(filterValue: any): RuleAction {\r\n\r\n    const leafChild = filterValue.leafChild;\r\n    let value = leafChild.conditionValue;\r\n    const condition: Condition = new Condition();\r\n    let action: RuleAction = new RuleAction();\r\n\r\n    if (value !== undefined) {\r\n\r\n      condition.days = undefined;\r\n      condition[leafChild.condition_attribute] = value;\r\n      action.condition = condition;\r\n\r\n      if (filterValue.parents[0] && filterValue.parents[0].name === 'Communication') {\r\n        condition.communicationtype = leafChild.name;\r\n        condition.notification = leafChild.name;\r\n      }\r\n      if (leafChild.physical) {\r\n        condition.physical = leafChild.physical;\r\n      }\r\n      if (leafChild.living) {\r\n        condition.living = leafChild.living;\r\n      }\r\n      if (leafChild.state) {\r\n        condition.state = leafChild.state;\r\n      }\r\n      if (leafChild.itemtype) {\r\n        condition.itemtype = leafChild.itemtype;\r\n      }\r\n    }\r\n\r\n    switch (condition.state) {\r\n      case 0 : {\r\n        condition.state = 'OFF';\r\n        value = condition.state;\r\n        break;\r\n      }\r\n      case 1 : {\r\n        condition.state = 'ON';\r\n        value = condition.state;\r\n        break;\r\n      }\r\n      default : {\r\n        break;\r\n      }\r\n    }\r\n    action.name = ` ${this.selectedCondition.text}  ${value} `;\r\n\r\n    action.condition = condition;\r\n    action = this.searchDeviceService.searchDeviceFromSelectedAction(action, leafChild, this.selectedCondition);\r\n\r\n    return action;\r\n  }\r\n\r\n  /**\r\n   * This function is filtering condition for each selected category\r\n   * This is second autocomplete component from new condition selection overlay\r\n   *\r\n   * @param event is clicked component event\r\n   */\r\n  searchCondition(event): void {\r\n    let allactions = this.filterValue.leafChild.properties;\r\n\r\n    if (allactions.length > 0) {\r\n      this.ruleCreationService.allactions = allactions;\r\n    } else {\r\n      allactions = this.ruleCreationService.allactions;\r\n    }\r\n\r\n    if (allactions && this.ruleCreationService.devices) {\r\n      const properties = this.ruleCreationService.filterAutocomplete(event.query, allactions, 'text');\r\n      this.filterValue.leafChild.properties = properties;\r\n    } else {\r\n      if (this.ruleCreationService.creationRule.projectID === '') {\r\n        this.messeges.push({\r\n          severity: 'error',\r\n          summary: '',\r\n          detail: 'Project is not selected'\r\n        });\r\n        setTimeout(() => {\r\n          this.messeges = [];\r\n        }, 4000);\r\n      } else {\r\n        this.messeges.push({\r\n          severity: 'error',\r\n          summary: '',\r\n          detail: 'Platform devices, which are connected to the project, are not configured'\r\n        });\r\n        setTimeout(() => {\r\n          this.messeges = [];\r\n        }, 4000);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * After action is created, then add new action to actionList\r\n   * @param RuleAction filterValue action value\r\n   */\r\n  saveNewAction(filterValue: RuleAction): void {\r\n    this.ruleCreationService.addAction(this.getAction(filterValue));\r\n    this.clearFilterValue();\r\n    this.ruleCreationService.actionOverlay.hide();\r\n  }\r\n\r\n  /**\r\n   * This function is for rule update component.\r\n   * If user changes the old action, the new action will be combined\r\n   * to the rule.\r\n   * @param RuleAction filterValue is action value\r\n   */\r\n  updateAction(filterValue: RuleAction): void {\r\n    const action: RuleAction = this.getAction(filterValue);\r\n    action.ID = this.inputEditAction.ID;\r\n    this.ruleCreationService.actionList.splice(this.editActionIndex, 1, action);\r\n\r\n    const resendData = {\r\n      action,\r\n      oldActionIndex: this.editActionIndex\r\n    };\r\n\r\n    this.ruleManagementService.changeExistingActionStatus.emit(resendData);\r\n    this.clearFilterValue();\r\n  }\r\n}\r\n","module.exports = \".rule_creation {\\r\\n  background-color: #cccccc;\\r\\n}\\r\\n.description-border {\\r\\n  border-style: solid;\\r\\n  border-color: #00a6dd;\\r\\n  border-top: none;\\r\\n  border-left: none;\\r\\n  border-right: none;\\r\\n  border-width: 2px;\\r\\n}\\r\\n.rule_create_button {\\r\\n  width: 110px !important;\\r\\n}\\r\\n.rule_creation_padding {\\r\\n  padding-top: 10px;\\r\\n  padding-left: 20px;\\r\\n  padding-right: 20px;\\r\\n}\\r\\n.rule_name {\\r\\n  padding-left: 12px;\\r\\n}\\r\\n.activation {\\r\\n  padding-left: 20px !important;\\r\\n}\\r\\n.rule_creation_label{\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n.condition_action_title {\\r\\n  background-color: #eff1f4;\\r\\n  padding-left: 24px;\\r\\n\\r\\n}\\r\\n.conditions, .actions {\\r\\n  border: solid;\\r\\n  border-top: none;\\r\\n  border-bottom: none;\\r\\n  border-left: none;\\r\\n  border-color: #cccccc;\\r\\n}\\r\\n.operator-box {\\r\\n  padding: 5px;\\r\\n}\\r\\n.operator-plus-box{\\r\\n  padding: 5px;\\r\\n}\\r\\n.remove-button {\\r\\n  border-color: white !important;\\r\\n  float: right;\\r\\n  color: black;\\r\\n  background-color: transparent;\\r\\n}\\r\\n.last_distance {\\r\\n  padding-bottom: 70px;\\r\\n}\\r\\n\"","module.exports = \"<p-growl [(value)]=\\\"messeges\\\" life=\\\"4000\\\"></p-growl>\\r\\n<div class=\\\"ui-g rule_creation\\\">\\r\\n  <div class=\\\"ui-lg-12 ui-md-12\\\">\\r\\n        <span class=\\\"ui-float-label rule_name\\\">\\r\\n        <div class=\\\"first rule_creation_label\\\">Name</div>\\r\\n        <input id=\\\"float-input-name\\\" type=\\\"text\\\" [(ngModel)]=\\\"creationRule.name\\\" pInputText\\r\\n               >\\r\\n       </span>\\r\\n  </div>\\r\\n  <div class=\\\"ui-lg-12 ui-md-12\\\">\\r\\n      <span class=\\\"ui-float-label rule_name\\\" size=\\\"200\\\">\\r\\n        <div class=\\\"first rule_creation_label\\\">Description</div>\\r\\n        <input id=\\\"float-input-description\\\" type=\\\"text\\\" [(ngModel)]=\\\"creationRule.description\\\" pInputText>\\r\\n       </span>\\r\\n  </div>\\r\\n  <div class=\\\"ui-lg-12 ui-md-12 activation\\\">\\r\\n    <div class=\\\"first rule_creation_label\\\">\\r\\n      <span>Rule Notification</span>\\r\\n    </div>\\r\\n    <p-inputSwitch [(ngModel)]=\\\"creationRule.notify\\\"></p-inputSwitch>\\r\\n  </div>\\r\\n  <div class=\\\"ui-lg-12 ui-md-12 activation\\\">\\r\\n    <div class=\\\"first rule_creation_label\\\">\\r\\n      <span>Rule Activation</span>\\r\\n    </div>\\r\\n    <p-inputSwitch [(ngModel)]=\\\"creationRule.active\\\"></p-inputSwitch>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"ui-lg-10 ui-md-10 description-border rule_creation_padding\\\">\\r\\n    <p-dropdown [options]=\\\"projects\\\"\\r\\n                [(ngModel)]=\\\"creationRule.projectID\\\"\\r\\n                (onClick)=\\\"projectSelected(creationRule.projectID);\\\"\\r\\n                placeholder=\\\"Select Project\\\"   [style]=\\\"{'width':'250px', 'margin-right':'10px'}\\\"></p-dropdown>\\r\\n    <p-dropdown [options]=\\\"platforms\\\"\\r\\n                [(ngModel)]=\\\"creationRule.platformID\\\"\\r\\n                (onClick)=\\\"addAllDevices(creationRule.platformID)\\\"\\r\\n                placeholder=\\\"Select platform\\\" [style]=\\\"{'width':'250px'}\\\"></p-dropdown>\\r\\n  </div>\\r\\n  <div class=\\\"ui-lg-2 ui-md-2 description-border\\\">\\r\\n    <button pButton type=\\\"button\\\" *ngIf=\\\"rule_function !== 'edit'\\\" class=\\\"rule_create_button ui-button-secondary\\\" label=\\\"Cancel\\\"\\r\\n            (click)=\\\"closeRuleCreationDisplay()\\\"></button>\\r\\n    <button pButton type=\\\"button\\\" *ngIf=\\\"rule_function === 'edit'\\\" class=\\\"rule_create_button ui-button-secondary\\\" label=\\\"Cancel\\\"\\r\\n            (click)=\\\"closeRuleUpdateDisplay()\\\"></button>\\r\\n\\r\\n\\r\\n    <p-splitButton label=\\\"Save\\\" *ngIf=\\\"rule_function === 'create'\\\"\\r\\n                   menuStyleClass=\\\"operatorMenu\\\"\\r\\n                   class=\\\"rule_create_button\\\"\\r\\n                   (onClick)=\\\"saveTriggerAndRule(true);\\\"\\r\\n                   [model]=\\\"saveRuleLables\\\">\\r\\n    </p-splitButton>\\r\\n    <p-splitButton label=\\\"Update\\\" *ngIf=\\\"rule_function === 'edit'\\\"\\r\\n                   menuStyleClass=\\\"operatorMenu\\\"\\r\\n                   class=\\\"rule_create_button\\\"\\r\\n                   (onClick)=\\\"updateTriggerAndRule(true);\\\"\\r\\n                   [model]=\\\"updateRuleLables\\\">\\r\\n    </p-splitButton>\\r\\n  </div>\\r\\n  <div class=\\\"ui-lg-6 ui-md-6 condition_action_title conditions\\\">\\r\\n    <strong>If: add one or more conditions</strong>\\r\\n    <br>\\r\\n    <p-scrollPanel [style]=\\\"{height: '90%', backgroundColor:'transparent', borderColor:'transparent'}\\\">\\r\\n      <div class=\\\"ui-lg-12 ui-md-12 conditions-body\\\" id=\\\"conditions\\\">\\r\\n        <div *ngFor=\\\"let trigger of triggerList; let triggerIndex = index\\\"  [ngClass]=\\\"{'last_distance': triggerIndex === triggerList.length - 1}\\\"\\r\\n             (drop)=\\\"drop($event,triggerIndex)\\\"\\r\\n             draggable=\\\"true\\\"\\r\\n             (dragstart)=\\\"drag($event,triggerList[triggerIndex],selectedOperatorList[triggerIndex-1],triggerIndex)\\\"\\r\\n             (dragover)=\\\"allowDrop($event)\\\">\\r\\n          <p-card [style]=\\\"{width:'96%'}\\\">\\r\\n            <div>{{ trigger.name }}</div>\\r\\n            <p-header>\\r\\n\\r\\n              <button pButton type=\\\"button\\\" icon=\\\"fa fa-trash\\\" class=\\\"remove-button ui-button-secondary\\\" iconPos=\\\"right\\\"\\r\\n                      (click)=\\\"removeTriggerOnlyThisRule(trigger,triggerIndex,removeTriggerOverlay,$event);\\\"></button>\\r\\n              <p-overlayPanel #removeTriggerOverlay [appendTo]=\\\"'body'\\\">\\r\\n                <h4> This condition can be used in another rule. </h4>\\r\\n                <h4> Do you want to remove for all rules ? </h4>\\r\\n                <button pButton type=\\\"button\\\" label=\\\"Remove all\\\" (click)=\\\"removeTriggerForAllRules(trigger,triggerIndex,removeTriggerOverlay,$event);\\\"></button>\\r\\n                <button pButton type=\\\"button\\\" label=\\\"Remove only this rule\\\" (click)=\\\"removeTriggerOnlyThisRule(trigger,triggerIndex,removeTriggerOverlay,$event);\\\" ></button>\\r\\n              </p-overlayPanel>\\r\\n              <button *ngIf=\\\"rule_function === 'edit'\\\" pButton type=\\\"button\\\" icon=\\\"fa fa-edit\\\" class=\\\"remove-button ui-button-secondary\\\" iconPos=\\\"right\\\"\\r\\n                      (click)=\\\"editTriggerOnlyThisRule(trigger,triggerIndex,editIconOverlay,updateTriggerOverlay,$event);\\\"></button>\\r\\n              <p-overlayPanel #editIconOverlay [appendTo]=\\\"'body'\\\">\\r\\n                <h4> This condition can be used in another rule. </h4>\\r\\n                <h4> Do you want to edit for all rules ? </h4>\\r\\n                <button pButton type=\\\"button\\\" label=\\\"Edit all\\\" (click)=\\\"editTriggerForAllRules(trigger,triggerIndex,editIconOverlay,updateTriggerOverlay,$event);\\\"></button>\\r\\n                <button pButton type=\\\"button\\\" label=\\\"Edit only this rule\\\" (click)=\\\"editTriggerOnlyThisRule(trigger,triggerIndex,editIconOverlay,updateTriggerOverlay,$event);\\\" ></button>\\r\\n              </p-overlayPanel>\\r\\n              <p-overlayPanel #updateTriggerOverlay [appendTo]=\\\"'body'\\\"\\r\\n                              [style]=\\\"{ 'border': '2px solid rgb(35, 153, 229)','background-color' : 'rgb(224, 224, 224)', 'padding-top' :'8px','padding-bottom' :'8px'}\\\">\\r\\n                <p-accordion [multiple]=\\\"true\\\"  [style]=\\\"{width: '730px'}\\\"  >\\r\\n\\r\\n                  <p-accordionTab header=\\\"Update Condition\\\" >\\r\\n                    <app-trigger  trigger_function=\\\"edit\\\" [inputEditTrigger]=\\\"trigger\\\" [editTriggerIndex]=\\\"triggerIndex\\\"></app-trigger>\\r\\n                  </p-accordionTab>\\r\\n                </p-accordion>\\r\\n              </p-overlayPanel>\\r\\n            </p-header>\\r\\n          </p-card>\\r\\n          <div *ngIf=\\\"triggerIndex === triggerList.length - 1\\\" class=\\\"ui-lg-offset-5 operator-plus-box\\\">\\r\\n            <p-splitButton icon=\\\"fa fa-plus\\\" [menuStyle]=\\\"{ marginBottom :'20px'}\\\"\\r\\n                           menuStyleClass=\\\"operatorMenu\\\"\\r\\n                           (onClick)=\\\"changeOperator($event, operators[0],triggerIndex);\\\"\\r\\n                           (onDropdownClick)=\\\"saveOperationEventAndIndex($event,triggerIndex)\\\"\\r\\n                           [model]=\\\"operatorLables\\\">\\r\\n            </p-splitButton>\\r\\n          </div>\\r\\n          <div class=\\\"ui-lg-offset-5 operator-plus-box\\\" *ngIf=\\\"triggerIndex !== triggerList.length - 1\\\">\\r\\n            <p-dropdown [options]=\\\"operators\\\"\\r\\n                        [placeholder]=\\\"selectedOperatorList[triggerIndex].operator\\\"\\r\\n                        [(ngModel)]=\\\"selectedOperatorList[triggerIndex]\\\"\\r\\n\\r\\n                        (onChange)=\\\"changeOperatorSelect(selectedOperatorList[triggerIndex],triggerIndex);\\\"\\r\\n                        optionLabel=\\\"operator\\\">\\r\\n            </p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"ui-lg-offset-5 operator-plus-box\\\">\\r\\n          <div *ngIf=\\\"triggerList === undefined || triggerList.length === 0\\\">\\r\\n            <button pButton type=\\\"button\\\" class=\\\"rule_create_button triggerOverlayButton\\\" class=\\\"plus-button\\\"\\r\\n                    icon=\\\"fa fa-plus\\\"\\r\\n                    (click)=\\\"addTriggerOverlay($event);\\\"></button>\\r\\n          </div>\\r\\n          <p-overlayPanel #triggerOverlay [appendTo]=\\\"'body'\\\"\\r\\n                          [style]=\\\"{ 'border': '2px solid rgb(35, 153, 229)','background-color' : 'rgb(224, 224, 224)', 'padding-top' :'8px','padding-bottom' :'8px'}\\\">\\r\\n            <p-accordion [multiple]=\\\"true\\\"  [style]=\\\"{width: '730px'}\\\"  >\\r\\n              <p-accordionTab   header=\\\"Existing Conditions\\\" >\\r\\n                <app-trigger-combine></app-trigger-combine>\\r\\n              </p-accordionTab>\\r\\n              <p-accordionTab header=\\\"New Condition\\\">\\r\\n                <app-trigger></app-trigger>\\r\\n\\r\\n              </p-accordionTab>\\r\\n            </p-accordion>\\r\\n          </p-overlayPanel>\\r\\n        </div>\\r\\n      </div>\\r\\n    </p-scrollPanel>\\r\\n  </div>\\r\\n  <div class=\\\"ui-lg-6 ui-md-6 condition_action_title actions\\\">\\r\\n    <strong>Then: add one or more actions</strong>\\r\\n    <br>\\r\\n    <p-scrollPanel [style]=\\\"{height: '90%', backgroundColor:'transparent', borderColor:'transparent'}\\\">\\r\\n      <div class=\\\"ui-lg-12 ui-md-12 actions-body\\\" id=\\\"actions\\\">\\r\\n        <div *ngFor=\\\"let action of actionList; let actionIndex = index\\\" >\\r\\n          <p-card [style]=\\\"{width:'96%'}\\\">\\r\\n            <div>{{ action.name }}</div>\\r\\n            <p-header>\\r\\n              <button pButton type=\\\"button\\\" icon=\\\"fa fa-trash\\\" class=\\\"remove-button ui-button-secondary\\\" iconPos=\\\"right\\\"\\r\\n                      (click)=\\\"removeAction(actionIndex);\\\"></button>\\r\\n              <button *ngIf=\\\"rule_function === 'edit'\\\" pButton type=\\\"button\\\" icon=\\\"fa fa-edit\\\" class=\\\"remove-button ui-button-secondary\\\" iconPos=\\\"right\\\"\\r\\n                      (click)=\\\"showEditActionOverlay(updateActionOverlay,$event,actionIndex,action)\\\"></button>\\r\\n              <p-overlayPanel #updateActionOverlay [appendTo]=\\\"'body'\\\"\\r\\n                              [style]=\\\"{ 'border': '2px solid rgb(35, 153, 229)','background-color' : 'rgb(224, 224, 224)', 'padding-top' :'8px','padding-bottom' :'8px'}\\\">\\r\\n                <p-accordion [multiple]=\\\"true\\\"  [style]=\\\"{width: '730px'}\\\"  >\\r\\n\\r\\n                  <p-accordionTab header=\\\"Update Action\\\" >\\r\\n                    <app-action  action_function=\\\"edit\\\" [inputEditAction]=\\\"action\\\" [editActionIndex]=\\\"actionIndex\\\"></app-action>\\r\\n                  </p-accordionTab>\\r\\n                </p-accordion>\\r\\n              </p-overlayPanel>\\r\\n            </p-header>\\r\\n          </p-card>\\r\\n          <div class=\\\"ui-lg-offset-5 operator-box\\\" *ngIf=\\\"actionIndex !== actionList.length - 1\\\">\\r\\n            <span>AND</span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"ui-lg-offset-5 operator-plus-box last_distance\\\" >\\r\\n          <button pButton type=\\\"button\\\" class=\\\"rule_create_button\\\" class=\\\"plus-button\\\" icon=\\\"fa fa-plus\\\"\\r\\n                  (click)=\\\"addActionOverlay($event,actionOverlay);\\\"></button>\\r\\n        </div>\\r\\n        <p-overlayPanel #actionOverlay [appendTo]=\\\"'body'\\\"\\r\\n                        [style]=\\\"{ 'border': '2px solid rgb(35, 153, 229)','background-color' : 'rgb(224, 224, 224)', 'padding-top' :'8px','padding-bottom' :'8px'}\\\">\\r\\n          <p-accordion [multiple]=\\\"true\\\"  [style]=\\\"{width: '730px'}\\\"  >\\r\\n            <p-accordionTab   header=\\\"Existing Actions\\\" >\\r\\n              <app-action-combine></app-action-combine>\\r\\n            </p-accordionTab>\\r\\n            <p-accordionTab header=\\\"New Action\\\">\\r\\n              <app-action></app-action>\\r\\n            </p-accordionTab>\\r\\n          </p-accordion>\\r\\n        </p-overlayPanel>\\r\\n      </div>\\r\\n    </p-scrollPanel>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { Condition } from '../../../../models/frontend/rule_module/condition';\r\nimport { Triggergroup } from '../../../../models/frontend/rule_module/triggergroup';\r\nimport { Trigger } from '../../../../models/frontend/rule_module/trigger';\r\nimport { RuleCreationService } from '../service/rule-creation.service';\r\nimport { Message } from 'primeng/components/common/api';\r\nimport { Rule } from '../../../../models/frontend/rule_module/rule';\r\nimport { RuleManagerService } from '../../../../services/rulemanager.service';\r\nimport { RuleAction } from '../../../../models/frontend/rule_module/ruleaction';\r\nimport { DeviceManagerService } from '../../../../services/devicemanager.service';\r\nimport { RuleManagementService } from '../service/rule-management.service';\r\nimport { DataService } from '../../../../services/data.service';\r\nimport { DataNotification } from '../../../../models/frontend/rule_module/datanotification';\r\nimport { RuleNotificationService } from '../service/rule-notification.service';\r\nimport { PlatformDeviceManagementService } from '../service/platform-device-management.service';\r\nimport { Project } from '../../../../models/frontend/project';\r\n\r\ninterface Operator {\r\n  triggerId: number;\r\n  operator: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-rule-creation',\r\n  templateUrl: './rule-creation.component.html',\r\n  styleUrls: ['./rule-creation.component.css'],\r\n  providers: [Triggergroup, Condition, Trigger, RuleAction]\r\n})\r\n\r\nexport class CreateRuleComponent implements OnInit {\r\n\r\n  @ViewChild('triggerOverlay') triggerOverlayRef: any;\r\n  @Input() rule_function: string;\r\n  @Input() rule: any;\r\n\r\n  messeges: Array<Message> = [];\r\n\r\n  selectedOperatorList: Array<Operator> = [];\r\n  operators: Array<Operator> = [{triggerId: 0, operator: 'AND'}, {triggerId: 0, operator: 'OR'}];\r\n\r\n  ruleDescription: string;\r\n  creationRule: Rule;\r\n\r\n  triggerList: Array<Triggergroup>;\r\n  indexedTriggerList: Array<any> = [];\r\n  indexedOperatorList: Array<any> = [];\r\n\r\n  actionList: Array<RuleAction>;\r\n\r\n  platforms: Array<any> = [];\r\n  projects: Array<any> = [];\r\n\r\n  dragTrigger: Triggergroup;\r\n  dragOperator: any;\r\n  dragTriggerIndex: number;\r\n  displayRuleCreationDialog = false;\r\n  triggerEventEmitter = new EventEmitter<number>();\r\n  triggerOperatorEvent: any;\r\n  operatorIndex: number;\r\n  editRuleValue: Rule;\r\n  userId: string;\r\n  generateNewTriggerTree = false;\r\n  editOverlayEvent: any;\r\n  updateTriggerList: any;\r\n\r\n  operatorLables = [\r\n    {\r\n      label: 'AND', command: () => {\r\n      this.changeOperator(undefined, this.operators[0], this.operatorIndex);\r\n    }\r\n    },\r\n    {\r\n      label: 'OR', command: () => {\r\n      this.changeOperator(undefined, this.operators[1], this.operatorIndex);\r\n    }\r\n    }];\r\n  updateRuleLables = [{\r\n    label: 'Update', command: () => {\r\n      this.updateTriggerAndRule(false);\r\n    }\r\n  },\r\n    {\r\n      label: 'Update and close ', command: () => {\r\n      this.updateTriggerAndRule(true);\r\n    }\r\n    }];\r\n\r\n  saveRuleLables = [{\r\n    label: 'Save and create new', command: () => {\r\n      this.saveTriggerAndRule(false);\r\n    }\r\n  },\r\n    {\r\n      label: 'Save and close ', command: () => {\r\n      this.saveTriggerAndRule(true);\r\n    }\r\n    }];\r\n\r\n  sendRequest = false;\r\n\r\n  constructor(private ruleCreationService: RuleCreationService,\r\n              private ruleManagerService: RuleManagerService,\r\n              private ruleManagementService: RuleManagementService,\r\n              private dataService: DataService,\r\n              private ruleNotificationService: RuleNotificationService,\r\n              private devicemanager: DeviceManagerService,\r\n              private platformDeviceManagement: PlatformDeviceManagementService) {\r\n\r\n    this.creationRule = this.ruleCreationService.creationRule;\r\n    this.selectedOperatorList = this.ruleCreationService.selectedOperatorList;\r\n    this.triggerList = this.ruleCreationService.triggerList;\r\n    this.actionList = this.ruleCreationService.actionList;\r\n    this.creationRule.active = false;\r\n    this.displayRuleCreationDialog = ruleCreationService.displayRuleCreationDialog;\r\n    this.updateTriggerList = this.ruleManagementService.updateTriggerList;\r\n    this.platforms = this.ruleCreationService.platforms;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    // Here checks if it is update rule component\r\n    if (this.rule_function === 'edit' && this.rule) {\r\n      this.editRuleValue = this.rule;\r\n\r\n      this.creationRule = this.editRuleValue;\r\n      this.ruleCreationService.creationRule = this.rule;\r\n      this.actionList = this.creationRule.ruleActions;\r\n      this.ruleCreationService.actionList = this.actionList;\r\n      const userId = this.rule.userId;\r\n\r\n      // Here gets all platforms dependent on user and projectID\r\n      if (userId && this.creationRule.projectID) {\r\n        this.devicemanager.getAllPlatforms(userId, this.creationRule.projectID)\r\n          .subscribe(platforms => {\r\n            this.platforms = [];\r\n            platforms.forEach(platform => {\r\n              this.platforms.push({label: platform.name, value: platform.platformId});\r\n              this.ruleCreationService.indexedPlatforms[platform.platformId] = platform;\r\n              this.ruleCreationService.platforms = this.platforms;\r\n\r\n            });\r\n          });\r\n      }\r\n      // Here will be defined all projects\r\n      this.ruleCreationService.projects.forEach(project => {\r\n        this.projects.push({label: project.name, value: project.id});\r\n      });\r\n      this.triggerList = [];\r\n      this.ruleCreationService.triggerList = [];\r\n      this.selectedOperatorList = [];\r\n      this.ruleCreationService.selectedOperatorList = [];\r\n      /**\r\n       * Update rule component needs to order trigger tree as a list.\r\n       * This function orderEditTriggers oders the triggers\r\n       */\r\n      this.ruleManagerService.getTriggersByTGID(userId, this.creationRule.rootTGID)\r\n        .subscribe(responseTriggers => {\r\n          this.orderEditTriggers(this.creationRule.rootTGID, responseTriggers);\r\n        });\r\n      // gets all devices dependent on project, plaform and user id.\r\n      this.platformDeviceManagement.addAllDevices(this.rule.projectID, this.rule.userId, this.rule.platformID);\r\n    } else {\r\n      this.ruleCreationService.projects.forEach(project => {\r\n        this.projects.push({label: project.name, value: project.id});\r\n      });\r\n      this.creationRule = new Rule();\r\n      this.ruleCreationService.triggerList = [];\r\n      this.ruleCreationService.actionList = [];\r\n      this.triggerList = this.ruleCreationService.triggerList;\r\n      this.actionList = this.ruleCreationService.actionList;\r\n    }\r\n\r\n    this.ruleCreationService.triggerOverlay = this.triggerOverlayRef;\r\n\r\n    // sets logged user id\r\n    this.dataService.userData.subscribe(resultUserData => {\r\n      this.ruleCreationService.loggedUserId = resultUserData.id;\r\n      this.userId = this.ruleCreationService.loggedUserId;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This function orders trigger binary tree as a list.\r\n   * This function is called only for Rule Update component.\r\n   * @param Triggergroup rootTriggerGroup is last/root triggergroup.\r\n   * @param Array<Triggergroup> indexedTriggerList is all triggergroups indexed by the triggergroup id.\r\n   */\r\n  orderTriggerOperator(rootTriggerGroup: Triggergroup, indexedTriggerList: Array<Triggergroup>): void {\r\n    if (rootTriggerGroup.rightchild !== 0 && rootTriggerGroup.leftchild !== 0) {\r\n      this.orderTriggerOperator(indexedTriggerList[rootTriggerGroup.leftchild], indexedTriggerList);\r\n      this.triggerList.push(indexedTriggerList[rootTriggerGroup.rightchild]);\r\n      this.selectedOperatorList.push({\r\n        triggerId: indexedTriggerList[rootTriggerGroup.ID].ID,\r\n        operator: indexedTriggerList[rootTriggerGroup.ID].operator\r\n      });\r\n      this.indexedOperatorList.push({\r\n        triggerId: indexedTriggerList[rootTriggerGroup.ID].ID,\r\n        operator: indexedTriggerList[rootTriggerGroup.ID].operator\r\n      });\r\n      this.ruleCreationService.selectedOperatorList = this.selectedOperatorList;\r\n    } else {\r\n      this.triggerList.push(rootTriggerGroup);\r\n      this.ruleCreationService.triggerList = this.triggerList;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function gets project connected platforms and adds all devices.\r\n   * @param string projectId\r\n   */\r\n  projectSelected(projectId: string): void {\r\n    if (projectId) {\r\n      this.ruleManagerService.project = this.findProject(projectId);\r\n\r\n      if (projectId && this.ruleCreationService.loggedUserId) {\r\n        this.devicemanager.getAllPlatforms(this.ruleCreationService.loggedUserId, this.creationRule.projectID)\r\n          .subscribe(platforms => {\r\n            this.creationRule.platformID = '';\r\n            this.ruleManagementService.updateTriggerListStatus.emit(true);\r\n            this.platforms = [];\r\n            platforms.forEach(platform => {\r\n              this.platforms.push({label: platform.name, value: platform.platformId});\r\n              this.ruleCreationService.indexedPlatforms[platform.platformId] = platform;\r\n              this.ruleCreationService.platforms = this.platforms;\r\n            });\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add devices connected to the project, user, platform\r\n   * @param String platformID is Platform Id\r\n   */\r\n  addAllDevices(platformID: String): void {\r\n    if (platformID) {\r\n      const r = this.creationRule;\r\n      const userId = this.ruleCreationService.loggedUserId;\r\n      this.platformDeviceManagement.addAllDevices(r.projectID, userId, r.platformID);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Serach project by project Id\r\n   *\r\n   * @param string projectId is filter parameter\r\n   * @returns any is Project Object\r\n   */\r\n  findProject(projectId: string): any {\r\n    for (const project of this.ruleCreationService.projects) {\r\n      if (project.id === projectId) {\r\n       return project;\r\n     }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Indexes trigger list by trigger Id\r\n   * @param number rootTGID is id of root triggergroup\r\n   * @param Array<Triggergroup> triggers is list of related triggers\r\n   */\r\n  orderEditTriggers(rootTGID: number, triggers: Array<Triggergroup>): void {\r\n    triggers.forEach((value: Triggergroup) => {\r\n      this.indexedTriggerList[value.ID] = value;\r\n    });\r\n\r\n    const rootTriggerGroup: Triggergroup = this.indexedTriggerList[rootTGID];\r\n    this.orderTriggerOperator(rootTriggerGroup, this.indexedTriggerList);\r\n  }\r\n\r\n  /**\r\n   * Drop function from Angular docu\r\n   * @param ev is clicked component.\r\n   */\r\n  allowDrop(ev): void {\r\n    ev.preventDefault();\r\n  }\r\n\r\n  /**\r\n   * Clears all rule values, triggers and actions.\r\n   */\r\n  clearRuleData(): void {\r\n    this.creationRule = new Rule();\r\n    this.triggerList = [];\r\n    this.actionList = [];\r\n    this.ruleCreationService.creationRule = this.creationRule;\r\n    this.ruleCreationService.triggerList = this.triggerList;\r\n    this.ruleCreationService.actionList = this.actionList;\r\n  }\r\n\r\n  /**\r\n   * Close Rule Creation Component Pop-up\r\n   * and clear all Rule values\r\n   */\r\n  closeRuleCreationDisplay(): void {\r\n\r\n    this.displayRuleCreationDialog = false;\r\n    this.ruleCreationService.displayStatusUpdated.emit(this.displayRuleCreationDialog);\r\n    this.clearRuleData();\r\n  }\r\n\r\n  /**\r\n   * Close Rule Update Component Pop-up\r\n   * and clear all Rule values\r\n   */\r\n  closeRuleUpdateDisplay(): void {\r\n    this.displayRuleCreationDialog = false;\r\n    this.ruleCreationService.displayStatusUpdated.emit(false);\r\n    this.ruleManagementService.displayStatusUpdated.emit(false);\r\n    this.ruleManagementService.displayRuleUpdateComponent.emit(false);\r\n    this.clearRuleData();\r\n  }\r\n\r\n  /**\r\n   * Checks if element is Empty\r\n   * @param element value\r\n   * @returns boolean is true is Empty\r\n   */\r\n  isEmptyArray(element): boolean {\r\n    return element === undefined;\r\n  }\r\n\r\n  /**\r\n   * Clears modified trigger(conditions).\r\n   * Dependent of the parameters will be the triggers data cleared.\r\n   *\r\n   * @param string functionType edit,remove\r\n   * @param string functionOptions new, old\r\n   * @param string nextoption all, only\r\n   * @param number triggerID is Trigger Id\r\n   */\r\n  clearUpdateTriggers(functionType: string, functionOptions: string, nextoption: string, triggerID: number): void {\r\n    for (const index of Object.keys(this.updateTriggerList)) {\r\n      const functionValue: any = this.updateTriggerList[index];\r\n      if (index !== 'addNew') {\r\n        for (const optionIndex of Object.keys(functionValue)) {\r\n          const optionValue: any = functionValue[optionIndex];\r\n          if (optionIndex === 'new') {\r\n            for (const optionNextIndex of Object.keys(optionValue)) {\r\n              const triggersList: any = optionValue[optionNextIndex];\r\n              if ((index !== functionType || optionIndex !== functionOptions || optionNextIndex !== nextoption)\r\n                && triggersList[triggerID]) {\r\n                triggersList.splice(triggerID, 1);\r\n                if (triggersList.every(this.isEmptyArray)) {\r\n                  this.updateTriggerList[index][optionIndex][optionNextIndex] = [];\r\n                }\r\n              }\r\n            }\r\n          } else {\r\n            if ((index !== functionType || optionIndex !== functionOptions) && optionValue[triggerID]) {\r\n              optionValue.splice(triggerID, 1);\r\n              if (optionValue.every(this.isEmptyArray)) {\r\n                this.updateTriggerList[index][optionIndex] = [];\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (functionType !== 'addNew' && this.updateTriggerList.addNew[triggerID]) {\r\n          this.updateTriggerList.addNew.splice(triggerID, 1);\r\n          if (this.updateTriggerList.addNew.every(this.isEmptyArray)) {\r\n            this.updateTriggerList.addNew = [];\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function edits the trigger\r\n   *\r\n   * @param number triggerIndex is idex of trigger\r\n   * @param trigger is modified trigger\r\n   * @param editIconOverlay is overlay of edit\r\n   * @param string functionType are edit, remove\r\n   * @param string functionOption are new, old\r\n   */\r\n  editTrigger(triggerIndex: number, trigger: any, editIconOverlay: any, functionType: string, functionOption: string): void {\r\n    const sendTrigger: any = {\r\n      triggerIndex,\r\n      trigger,\r\n      functionType,\r\n      functionOption\r\n    };\r\n\r\n    this.ruleManagementService.editTriggergroupStatusUpdated.emit(sendTrigger);\r\n\r\n    this.ruleManagementService.changeExistingTriggerGroupStatus.subscribe((changedTrigger: any) => {\r\n\r\n      if (changedTrigger.oldTriggerIndex === triggerIndex) {\r\n        editIconOverlay.hide(event);\r\n        this.indexedTriggerList[triggerIndex] = changedTrigger.trigger;\r\n        this.triggerList[triggerIndex] = this.indexedTriggerList[triggerIndex];\r\n        this.ruleCreationService.triggerList = this.triggerList;\r\n\r\n        if (!this.updateTriggerList.addNew[this.triggerList[triggerIndex].ID]) {\r\n\r\n          this.updateTriggerList[functionType][functionOption][this.triggerList[triggerIndex].ID] = this.triggerList[triggerIndex];\r\n          this.clearUpdateTriggers(functionType, functionOption, undefined, this.triggerList[triggerIndex].ID);\r\n\r\n        } else {\r\n          this.updateTriggerList[functionType]['new'][functionOption][this.triggerList[triggerIndex].ID] = this.triggerList[triggerIndex];\r\n          this.clearUpdateTriggers(functionType, 'new', functionOption, this.triggerList[triggerIndex].ID);\r\n\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This function edits the action\r\n   *\r\n   * @param number actionIndex\r\n   * @param action is modified action\r\n   * @param editActionIconOverlay is overlay of action edit icon\r\n   * @param string functionType  are edit, remove\r\n   * @param string functionOption are new, old\r\n   */\r\n  editAction(actionIndex: number, action: any, editActionIconOverlay: any, functionType: string, functionOption: string): void {\r\n    const sendAction: any = {\r\n      actionIndex,\r\n      action,\r\n      functionType,\r\n      functionOption\r\n    };\r\n\r\n    this.ruleManagementService.editActionStatusUpdated.emit(sendAction);\r\n\r\n    this.ruleManagementService.changeExistingActionStatus.subscribe((changedAction: any) => {\r\n\r\n      if (changedAction.oldActionIndex === actionIndex) {\r\n        editActionIconOverlay.hide(event);\r\n        this.ruleCreationService.actionList = this.actionList;\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * saves the operator for the triggers\r\n   * @param event is clicked component event\r\n   * @param number operatorIndex is trigger index\r\n   */\r\n  saveOperationEventAndIndex(event: any, operatorIndex: number): void {\r\n    this.triggerOperatorEvent = event;\r\n    this.operatorIndex = operatorIndex;\r\n  }\r\n\r\n  /**\r\n   * This function displays notification message\r\n   *\r\n   * @param severity is type error or success\r\n   * @param summary is title Rule Error\r\n   * @param message is notification message\r\n   */\r\n  showMessage(severity, summary, message): void {\r\n    this.messeges = [];\r\n    this.messeges.push({severity, summary, detail: message});\r\n  }\r\n\r\n  /**\r\n   * This function saves all combined triggers\r\n   *\r\n   * @param number index is trigger index\r\n   * @param Triggergroup triggergroup\r\n   */\r\n  saveCombineTriggers(index: number, triggergroup: Triggergroup): void {\r\n    if ((index + 1) < this.triggerList.length) {\r\n      const localTrigger: Triggergroup = new Triggergroup();\r\n      localTrigger.leftchild = triggergroup.ID;\r\n      localTrigger.rightchild = this.triggerList[index + 1].ID;\r\n      localTrigger.operator = this.selectedOperatorList[index].operator;\r\n      localTrigger.name = `(${ triggergroup.name } ${ this.selectedOperatorList[index].operator} ${this.triggerList[index + 1].name })`;\r\n      localTrigger.trigger = undefined;\r\n      this.ruleManagerService.addNewTriggerLeaf(this.userId, localTrigger)\r\n        .subscribe(response => {\r\n          this.saveCombineTriggers(index + 1, response);\r\n        });\r\n    } else {\r\n      this.triggerEventEmitter.emit(triggergroup.ID);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function checks if trigger length is one.\r\n   * If not saved combined triggers.\r\n   * If yes no combination is required and it saves one trigger.\r\n   */\r\n  saveTriggerTree(): void {\r\n    if (this.triggerList.length === 1) {\r\n      this.triggerEventEmitter.emit(this.triggerList[0].ID);\r\n    } else {\r\n      this.saveCombineTriggers(0, this.triggerList[0]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function saves the new notification\r\n   *\r\n   * @param string userId is logged user id\r\n   * @param Rule rule notification relation is rule\r\n   * @param string event is name of notification event\r\n   */\r\n  saveNotification(userId: string, rule: Rule, event: string): void {\r\n    const notification: DataNotification = new DataNotification();\r\n    notification.userId = userId;\r\n    notification.name = rule.name;\r\n    notification.event = event;\r\n    notification.date = new Date();\r\n    notification.relation = 'Rule';\r\n    notification.relationID = rule.ID;\r\n    this.ruleManagerService.saveNotification(userId, notification)\r\n      .subscribe(notificationResponse => {\r\n          this.ruleNotificationService.add(notificationResponse);\r\n        }\r\n      );\r\n  }\r\n\r\n  /**\r\n   * This function saves the rule\r\n   * @param rootTGID last/root triggergroup Id\r\n   * @param boolean close: if close is true then close the popup window\r\n   */\r\n  saveRule(rootTGID: any, close: boolean): void {\r\n    const ruleValue: Rule = new Rule();\r\n    const userId = this.ruleCreationService.loggedUserId;\r\n    this.creationRule.rootTGID = rootTGID;\r\n    this.creationRule.ruleActions = this.ruleCreationService.actionList;\r\n    this.creationRule.userId = userId;\r\n    ruleValue.setRuleData(this.creationRule);\r\n\r\n    this.ruleManagerService.saveRule(userId, ruleValue)\r\n      .subscribe(savedRule => {\r\n        this.creationRule = new Rule();\r\n        this.actionList = [];\r\n        this.triggerList = [];\r\n        this.saveNotification(userId, savedRule, 'created');\r\n        this.sendRequest = false;\r\n        this.showMessage('success', 'Rule Creation', `Rule has been created `);\r\n        if (close) {\r\n          setTimeout(() => {\r\n            this.closeRuleCreationDisplay();\r\n          }, 1000);\r\n        }\r\n      }, error => {\r\n        this.sendRequest = false;\r\n        this.showMessage('error', 'Rule Error', `Rule has not been created ${ error.error} `);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * This function updates the existing rule\r\n   *\r\n   * @param rootTGID last/root triggergroup Id\r\n   * @param boolean close: if close is true then close the popup window\r\n   */\r\n  updateRule(rootTGID: any, close: boolean): void {\r\n    const ruleValue: Rule = new Rule();\r\n    const userId = this.ruleCreationService.loggedUserId;\r\n    this.creationRule.rootTGID = rootTGID;\r\n    this.creationRule.ruleActions = this.ruleCreationService.actionList;\r\n    this.ruleCreationService.loadIndexedTriggers();\r\n    ruleValue.setRuleData(this.creationRule);\r\n    this.ruleManagerService.updateRule(userId, ruleValue)\r\n      .subscribe(updatedRule => {\r\n        this.sendRequest = false;\r\n        this.showMessage('success', 'Rule Update', `Rule has been updated `);\r\n        this.saveNotification(userId, ruleValue, 'updated');\r\n        if (close) {\r\n          setTimeout(() => {\r\n            this.closeRuleUpdateDisplay();\r\n          }, 1000);\r\n        }\r\n      }, error => {\r\n        this.sendRequest = false;\r\n        this.showMessage('error', 'Rule Error', `Rule has not been updated ${ error.error} `);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * This function validates the rule values.\r\n   * If some value is missing or is not correct, then\r\n   * notification message will show up.\r\n   *\r\n   * @param Rule creationRule main created rule\r\n   * @param Array<Triggergroup> triggerList rule related trigger list\r\n   * @param Array<RuleAction> actionList rule related action list\r\n   * @returns boolean returns true if everything is right. If not return false.\r\n   */\r\n  checkRuleData(creationRule: Rule, triggerList: Array<Triggergroup>, actionList: Array<RuleAction>): boolean {\r\n\r\n    if (!creationRule.name || !creationRule.description) {\r\n      this.showMessage('info', 'Rule Name', 'Please write rule name and description');\r\n\r\n      return false;\r\n    }\r\n    if (!creationRule.platformID) {\r\n      this.showMessage('info', 'Rule Platform', 'Please select rule platform');\r\n\r\n      return false;\r\n    }\r\n    if (!creationRule.projectID) {\r\n      this.showMessage('info', 'Rule Project', 'Please select project');\r\n\r\n      return false;\r\n    }\r\n    if (triggerList.length === 0) {\r\n      this.showMessage('info', 'Rule Trigger', 'Please add rule condition/action');\r\n\r\n      return false;\r\n    }\r\n    if (actionList.length === 0) {\r\n      this.showMessage('info', 'Rule Action', 'Please add rule action');\r\n\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Saves trigger tree and rule values\r\n   *\r\n   * @param boolean close: if close is true then close the popup window\r\n   */\r\n  saveTriggerAndRule(close: boolean): void {\r\n\r\n    if (this.checkRuleData(this.creationRule, this.triggerList, this.actionList)) {\r\n\r\n      if (!this.sendRequest) {\r\n        this.sendRequest = true;\r\n        if (this.triggerList.length === 1) {\r\n          this.saveRule(this.triggerList[0].ID, close);\r\n        } else {\r\n          this.saveTriggerTree();\r\n          this.triggerEventEmitter.subscribe(responseRootTGID => {\r\n            this.saveRule(responseRootTGID, close);\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns trigger index from trigger list\r\n   *\r\n   * @param Triggergroup trigger is search trigger\r\n   * @returns number is index from trigger list\r\n   */\r\n  findIndexOfTrigger(trigger: Triggergroup): number {\r\n    for (const index in this.triggerList) {\r\n      if (this.triggerList[index].ID === trigger.ID) {\r\n        return parseInt(index, 10);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates trigger tree and return root id.\r\n   *\r\n   * @returns any : true, false or root trigger id.\r\n   */\r\n  updateTriggers(): any {\r\n\r\n    const userId = this.ruleCreationService.loggedUserId;\r\n    const upData = this.updateTriggerList;\r\n    const sum: number = parseInt((upData.remove.all.length +\r\n      upData.remove.only.length +\r\n      upData.remove.new.all.length +\r\n      upData.remove.new.only.length +\r\n      upData.addNew.length +\r\n      upData.edit.only +\r\n      upData.edit.new.only), 10);\r\n\r\n    if (upData.remove.all.length > 0\r\n      || upData.remove.only.length > 0\r\n      || upData.edit.only.length > 0) {\r\n\r\n      if (upData.remove.all.length > 0) {\r\n        this.ruleManagerService.deleteTriggers(userId, upData.remove.all);\r\n      }\r\n      if (this.triggerList.length === 1) {\r\n\r\n        return this.triggerList[0].ID;\r\n      } else {\r\n        this.saveTriggerTree();\r\n\r\n        return true;\r\n      }\r\n    } else {\r\n      if (upData.edit.new.all.length > 0\r\n        || upData.edit.new.only.length > 0\r\n        || upData.addNew.length > 0) {\r\n        if (this.indexedTriggerList[this.creationRule.rootTGID].rightchild === 0) {\r\n          this.saveCombineTriggers(0, this.indexedTriggerList[this.creationRule.rootTGID]);\r\n\r\n          return true;\r\n        } else {\r\n          const righchildID = this.indexedTriggerList[this.creationRule.rootTGID].rightchild;\r\n          const index = this.findIndexOfTrigger(this.indexedTriggerList[righchildID]);\r\n          this.saveCombineTriggers(index, this.indexedTriggerList[this.creationRule.rootTGID]);\r\n\r\n          return true;\r\n        }\r\n      } else {\r\n\r\n        return this.creationRule.rootTGID;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Updates triggers and rule values\r\n   *\r\n   * @param boolean close: if close is true then close the popup window\r\n   */\r\n  updateTriggerAndRule(close: boolean): void {\r\n    if (this.checkRuleData(this.creationRule, this.triggerList, this.actionList)) {\r\n      this.creationRule.ruleActions = this.actionList;\r\n      const isNewTree = this.updateTriggers();\r\n\r\n      if (isNewTree === true) {\r\n        this.triggerEventEmitter.subscribe(responseRootTGID => {\r\n          this.updateRule(responseRootTGID, close);\r\n          this.ruleManagementService.clearUpdateTriggerList();\r\n          this.updateTriggerList = this.ruleManagementService.updateTriggerList;\r\n          this.ruleManagementService.updateTriggerListStatus.emit(true);\r\n        });\r\n      } else {\r\n        this.updateRule(isNewTree, close);\r\n        this.ruleManagementService.clearUpdateTriggerList();\r\n        this.updateTriggerList = this.ruleManagementService.updateTriggerList;\r\n        this.ruleManagementService.updateTriggerListStatus.emit(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Show the trigger Overlay component\r\n   *\r\n   * @param event is clicked component event\r\n   */\r\n  addTriggerOverlay(event: any): void {\r\n    if (!this.creationRule.projectID || !this.creationRule.platformID) {\r\n      this.showMessage('info', 'Rule Project/Platform', 'Please select rule project and platform');\r\n    } else {\r\n      if (event) {\r\n        this.triggerOverlayRef.show(event);\r\n      } else {\r\n        this.triggerOverlayRef.show(this.triggerOperatorEvent);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Change operator(AND,OR) for triggers.\r\n   *\r\n   * @param event is component element.\r\n   * @param Operator selectedOperator selected operator.\r\n   * @param number inputValue is index of changed operator list.\r\n   */\r\n  changeOperator(event: any, selectedOperator: Operator, inputValue: number): void {\r\n    if (event) {\r\n      this.triggerOperatorEvent = event;\r\n    }\r\n    this.selectedOperatorList[inputValue] = selectedOperator;\r\n    this.ruleCreationService.selectedOperatorList[inputValue] = selectedOperator;\r\n    this.addTriggerOverlay(undefined);\r\n  }\r\n\r\n  /**\r\n   * Changes the selected operator\r\n   *\r\n   * @param operator new Operator\r\n   * @param number index is indexed operatorList\r\n   */\r\n  changeOperatorSelect(operator: any, index: number): void {\r\n    const trId = this.indexedOperatorList[index].triggerId;\r\n    operator.triggerId = trId;\r\n    if (this.indexedTriggerList[trId].operator !== operator.operator) {\r\n      this.indexedTriggerList[trId].operator = operator.operator;\r\n      this.updateTriggerList.edit.all[trId] = this.indexedTriggerList[trId];\r\n      this.clearUpdateTriggers('edit', 'all', undefined, trId);\r\n      this.ruleManagementService.updateTriggerList = this.updateTriggerList;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Show action ovlerlay\r\n   *\r\n   * @param event is clicked component\r\n   * @param overlay of the action\r\n   */\r\n  addActionOverlay(event: any, overlay: any): void {\r\n    if (!this.creationRule.projectID || !this.creationRule.platformID) {\r\n      this.showMessage('info', 'Rule Project/Platform', 'Please select rule project and platform');\r\n    } else {\r\n      overlay.show(event);\r\n      this.ruleCreationService.actionOverlay = overlay;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes local trigger from trigger list by index.\r\n   *\r\n   * @param number index\r\n   */\r\n  removeTrigger(index: number): void {\r\n    this.triggerList.splice(index, 1);\r\n    this.selectedOperatorList.splice(index, 1);\r\n    this.ruleCreationService.triggerList = this.triggerList;\r\n  }\r\n\r\n  /**\r\n   * Remove trigger by index\r\n   *\r\n   * @param Triggergroup trigger removed\r\n   * @param number triggerIndex is trigger index\r\n   * @param removeTriggerOverlay overlay of condition\r\n   * @param event is component element\r\n   */\r\n  removeTriggerForAllRules(trigger: Triggergroup, triggerIndex: number, removeTriggerOverlay: any, event: any): void {\r\n\r\n    this.generateNewTriggerTree = true;\r\n    this.removeTrigger(triggerIndex);\r\n    removeTriggerOverlay.hide(event);\r\n\r\n    if (this.updateTriggerList.addNew[trigger.ID]) {\r\n      this.updateTriggerList.remove.new.all[trigger.ID] = trigger;\r\n      this.clearUpdateTriggers('remove', 'new', 'all', trigger.ID);\r\n    } else {\r\n      this.updateTriggerList.remove.all[trigger.ID] = trigger;\r\n      this.clearUpdateTriggers('remove', 'all', undefined, trigger.ID);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove trigger from one rule\r\n   *\r\n   * @param Triggergroup trigger removed\r\n   * @param number triggerIndex is trigger index\r\n   * @param removeTriggerOverlay overlay of condition\r\n   * @param event is component element\r\n   */\r\n  removeTriggerOnlyThisRule(trigger: Triggergroup, triggerIndex: number, removeTriggerOverlay: any, event: any): void {\r\n    this.generateNewTriggerTree = true;\r\n    this.removeTrigger(triggerIndex);\r\n    removeTriggerOverlay.hide(event);\r\n    if (this.updateTriggerList.addNew[trigger.ID]) {\r\n      this.updateTriggerList.remove.new.only[trigger.ID] = trigger;\r\n      this.clearUpdateTriggers('remove', 'new', 'only', trigger.ID);\r\n    } else {\r\n      this.updateTriggerList.remove.only[trigger.ID] = trigger;\r\n      this.clearUpdateTriggers('remove', 'only', undefined, trigger.ID);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Shows action overlay and edits action\r\n   *\r\n   * @param editActionIconOverlay is overlay component\r\n   * @param event is clicked component element\r\n   * @param number actionIndex is index of list\r\n   * @param RuleAction action is edit action\r\n   */\r\n  showEditActionOverlay(editActionIconOverlay: any, event: any, actionIndex: number, action: RuleAction): void {\r\n    editActionIconOverlay.show(event);\r\n    this.editAction(actionIndex, action, editActionIconOverlay, 'edit', 'only');\r\n  }\r\n\r\n  /**\r\n   * If trigger combines multiple triggers this function\r\n   * devides it as two trigger parts.\r\n   *\r\n   * @param number triggerIndex index devided triggers\r\n   * @param Triggergroup trigger clicked trigger\r\n   * @returns boolean is true if trigger is devided\r\n   */\r\n  divideTrigger(triggerIndex: number, trigger: Triggergroup): boolean {\r\n    if (trigger.leftchild !== 0 && trigger.rightchild !== 0) {\r\n      this.triggerList.splice(triggerIndex, 1, this.indexedTriggerList[trigger.leftchild]);\r\n      this.triggerList.splice(triggerIndex + 1, 0, this.indexedTriggerList[trigger.rightchild]);\r\n      this.selectedOperatorList.splice(triggerIndex, 0, {triggerId: trigger.ID, operator: trigger.operator});\r\n      this.ruleCreationService.triggerList = this.triggerList;\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Edit trigger for all rules\r\n   *\r\n   * @param Triggergroup trigger changed trigger\r\n   * @param number triggerIndex is index trigger\r\n   * @param editIconOverlay is overlay component of trigger\r\n   * @param upO upload Overlay\r\n   * @param event is clicked component\r\n   */\r\n  editTriggerForAllRules(trigger: Triggergroup, triggerIndex: number, editIconOverlay: any, upO: any, event: any): void {\r\n    upO.show(this.editOverlayEvent);\r\n    editIconOverlay.hide(event);\r\n    this.editTrigger(triggerIndex, trigger, upO, 'edit', 'all');\r\n  }\r\n\r\n  /**\r\n   * Edits trigger only one rule\r\n   *\r\n   * @param Triggergroup trigger changed trigger\r\n   * @param number triggerIndex is index trigger\r\n   * @param editIconOverlay is overlay component of trigger\r\n   * @param upO upload Overlay\r\n   * @param event is clicked component\r\n   */\r\n  editTriggerOnlyThisRule(trigger: Triggergroup, triggerIndex: number, editIconOverlay: any, upO: any, event): void {\r\n    if (!this.divideTrigger(triggerIndex, trigger)) {\r\n      this.generateNewTriggerTree = true;\r\n      upO.show(event);\r\n      this.editTrigger(triggerIndex, trigger, upO, 'edit', 'only');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function removes action locally\r\n   *\r\n   * @param number index of action list\r\n   */\r\n  removeAction(index: number): void {\r\n    this.actionList.splice(index, 1);\r\n    this.ruleCreationService.actionList = this.actionList;\r\n  }\r\n\r\n  /**\r\n   * Trigger can be dragged to another trigger\r\n   *\r\n   * @param ev grabbed trigger component\r\n   * @param Triggergroup trigger combined trigger\r\n   * @param selectedOperator dragged operator\r\n   * @param number index if trigger\r\n   */\r\n  drag(ev, trigger: Triggergroup, selectedOperator: any, index: number): void {\r\n    ev.dataTransfer.setData('text', ev.target.id);\r\n    this.dragTrigger = trigger;\r\n    this.dragOperator = selectedOperator;\r\n    this.dragTriggerIndex = index;\r\n  }\r\n\r\n  /**\r\n   * This function drops grabbed trigger\r\n   *\r\n   * @param ev droped trigger component event\r\n   * @param number index  is droped trigger index\r\n   */\r\n  drop(ev, index: number): void {\r\n    ev.preventDefault();\r\n    if (this.dragTrigger && this.dragOperator) {\r\n      const localTrigger: Triggergroup = new Triggergroup();\r\n      localTrigger.leftchild = this.triggerList[index].ID;\r\n      localTrigger.rightchild = this.dragTrigger.ID;\r\n      localTrigger.operator = this.dragOperator.operator;\r\n      localTrigger.name = `(${this.triggerList[index].name} ${this.dragOperator.operator} ${this.dragTrigger.name})`;\r\n      localTrigger.trigger = undefined;\r\n      this.ruleManagerService.addNewTriggerLeaf(this.userId, localTrigger)\r\n        .subscribe(response => {\r\n          localTrigger.ID = response.ID;\r\n          this.removeTrigger(this.dragTriggerIndex);\r\n          this.updateTriggerList.remove.only[this.triggerList[index].ID] = this.triggerList[index];\r\n          this.clearUpdateTriggers('remove', 'only', undefined, this.triggerList[index].ID);\r\n          this.triggerList.splice(index, 1, localTrigger);\r\n          this.triggerList[index] = localTrigger;\r\n          this.ruleCreationService.triggerList = this.triggerList;\r\n        });\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"ui-g\\\">\\r\\n  <div class=\\\"ui-lg-12 ui-md-12 ui-sm-12\\\">\\r\\n    <p-autoComplete [(ngModel)]=\\\"existingTrigger\\\"\\r\\n                    [suggestions]=\\\"triggers\\\"\\r\\n                    field=\\\"name\\\"\\r\\n                    (completeMethod)=\\\"search($event)\\\"\\r\\n                    [dropdown]=\\\"true\\\"\\r\\n                    [size]=\\\"73\\\"\\r\\n                    placeholder=\\\"Select Condition\\\"\\r\\n                    (onSelect)=\\\"addSelectedTrigger(existingTrigger);\\\"\\r\\n    >\\r\\n    </p-autoComplete>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { RuleCreationService } from '../../service/rule-creation.service';\r\nimport { RuleManagerService } from '../../../../../services/rulemanager.service';\r\nimport { Triggergroup } from '../../../../../models/frontend/rule_module/triggergroup';\r\nimport { Rule } from '../../../../../models/frontend/rule_module/rule';\r\nimport { SearchDeviceService } from '../../service/search-device.service';\r\nimport { RuleManagementService } from '../../service/rule-management.service';\r\n\r\n@Component({\r\n  selector: 'app-trigger-combine',\r\n  templateUrl: './trigger-combine.component.html',\r\n  styleUrls: ['./trigger-combine.component.css'],\r\n  providers: [SearchDeviceService]\r\n})\r\n\r\nexport class TriggerCombineComponent implements OnInit {\r\n\r\n  triggers: Array<Triggergroup> = [];\r\n  existingTrigger: Triggergroup;\r\n  creationRule: Rule;\r\n\r\n  constructor(private ruleCreationService: RuleCreationService,\r\n              private ruleManagerService: RuleManagerService,\r\n              private ruleManagementService: RuleManagementService) {\r\n    this.creationRule = this.ruleCreationService.creationRule;\r\n  }\r\n  /**\r\n   * This function loads at the beginning\r\n   * all triggers to the local trigger array list.\r\n   */\r\n  ngOnInit(): void {\r\n    this.ruleManagerService.getAllTriggergroups(this.ruleCreationService.loggedUserId)\r\n      .subscribe(response => {\r\n          this.triggers = response;\r\n          this.ruleCreationService.alltriggerList = this.triggers;\r\n        }\r\n      );\r\n\r\n    this.ruleManagementService.updateTriggerListStatus\r\n      .subscribe(setTriggers => {\r\n        if (setTriggers) {\r\n          this.ruleManagerService.getAllTriggergroups(this.ruleCreationService.loggedUserId)\r\n            .subscribe(response => {\r\n              this.triggers = response;\r\n              this.ruleCreationService.alltriggerList = this.triggers;\r\n            });\r\n        }\r\n      });\r\n  }\r\n  /**\r\n   * This function is for existing triggers filter\r\n   * @param event is selected component event\r\n   */\r\n  search(event): void {\r\n    this.triggers = this.ruleCreationService.filterAutocomplete(event.query, this.ruleCreationService.alltriggerList, 'name');\r\n  }\r\n  /**\r\n   * Selected trigger will be added to the trigger array.\r\n   *\r\n   * @param selectedTrigger is selected existing trigger parameter\r\n   */\r\n  addSelectedTrigger(selectedTrigger: Triggergroup): void {\r\n    this.ruleCreationService.triggerList.push(selectedTrigger);\r\n    this.triggers.push(selectedTrigger);\r\n    this.existingTrigger = undefined;\r\n    this.ruleManagementService.updateTriggerList.addNew[selectedTrigger.ID] = selectedTrigger;\r\n    this.ruleCreationService.triggerOverlay.hide();\r\n  }\r\n}\r\n","module.exports = \".new_condition_button_size{\\r\\n  width:177px;\\r\\n}\\r\\n.save_condition{\\r\\n  padding-left: 0px;\\r\\n}\\r\\n\"","module.exports = \"<div style=\\\"font-size: 14px;\\\">\\r\\n  <p-messages [(value)]=\\\"messeges\\\" ></p-messages>\\r\\n</div>\\r\\n<div class=\\\"ui-g\\\">\\r\\n  <div class=\\\"ui-g-4\\\" style=\\\"margin-top: 13px\\\">\\r\\n    <div *ngFor=\\\"let trigger of triggersFilterSchema.children; let filterIndex = index\\\"><br *ngIf=\\\"filterIndex !== 0\\\">\\r\\n      <i class=\\\"fa fa-{{trigger.icon}}\\\" style=\\\"width:20px;vertical-align:middle\\\"></i>\\r\\n      <p-checkbox name=\\\"name\\\" value=\\\"{{trigger.name}}\\\" label=\\\"{{trigger.name}}\\\"\\r\\n                  [(ngModel)]=\\\"triggerCheckboxSelectedValues[trigger.id]\\\"\\r\\n                  (click)=\\\"changeSelectedValues(triggerCheckboxSelectedValues)\\\"></p-checkbox>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"ui-g-8\\\">\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n    <p-autoComplete [(ngModel)]=\\\"filterValue\\\" field=\\\"leafChild.name\\\"\\r\\n                    [suggestions]=\\\"filterResultData | toItem\\\" (completeMethod)=\\\"filterTrigger($event)\\\"\\r\\n                    (onDropdownClick)=\\\"clearFilterValue();\\\"\\r\\n                    (onSelect)=\\\"addFilteredValue(filterValue);\\\"\\r\\n                    [size]=\\\"42\\\"\\r\\n                    [minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n      <ng-template let-trigger pTemplate=\\\"item\\\">\\r\\n        <div class=\\\"ui-helper-clearfix\\\" style=\\\"border-bottom:1px solid #D5D5D5\\\">\\r\\n          <div style=\\\"font-size:16px;margin:10px 10px 0 0\\\">\\r\\n            <i class=\\\"fa fa-{{trigger.first_parent_icon}}\\\" style=\\\"width:20px;vertical-align:middle;\\\"></i>\\r\\n            <span *ngIf=\\\"trigger.parents.length > 0\\\">\\r\\n              <span *ngFor=\\\"let parent of trigger.parents\\\">{{ parent.name }} - </span></span>\\r\\n            <span>{{ trigger.leafChild.name }}</span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </ng-template>\\r\\n    </p-autoComplete>\\r\\n  </div>\\r\\n  <div class=\\\"ui-g-12\\\">\\r\\n    <div *ngIf=\\\"filterValue.leafChild && filterValue.leafChild.name\\\">\\r\\n      <p-autoComplete [(ngModel)]=\\\"selectedCondition\\\"\\r\\n                      [suggestions]=\\\"filterValue.leafChild.properties\\\"\\r\\n                      field=\\\"text\\\"\\r\\n                      (completeMethod)=\\\"searchCondition($event)\\\"\\r\\n                      [dropdown]=\\\"true\\\"\\r\\n                      [size]=\\\"42\\\"\\r\\n                      placeholder=\\\"Select Condition\\\">\\r\\n      </p-autoComplete>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"ui-g-12\\\" *ngIf=\\\"selectedCondition.text\\\">\\r\\n      <strong>{{ selectedCondition.text }}</strong>\\r\\n  </div>\\r\\n  <div class=\\\"ui-g-12\\\" *ngIf=\\\"filterValue.leafChild\\\">\\r\\n    <div *ngIf=\\\"selectedCondition.type_options === 'input'\\\">\\r\\n      <input type=\\\"{{selectedCondition.type}}\\\" pInputText [(ngModel)]=\\\"filterValue.leafChild.conditionValue\\\"/>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"selectedCondition.type_options === 'multiselect'\\\">\\r\\n      <p-multiSelect [options]=\\\"selectedCondition.selects\\\" [(ngModel)]=\\\"filterValue.leafChild.conditionValue\\\" [filter]=\\\"false\\\">\\r\\n      </p-multiSelect>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"selectedCondition.type_options === 'inputSwitch'\\\">\\r\\n      <p-inputSwitch [(ngModel)]=\\\"filterValue.leafChild.conditionValue\\\" onLabel=\\\"Yes\\\" offLabel=\\\"No\\\"></p-inputSwitch>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"selectedCondition.type_options === 'calendar'\\\">\\r\\n      <p-calendar [(ngModel)]=\\\"filterValue.leafChild.conditionValue\\\" dateFormat=\\\"dd.mm.yy\\\"></p-calendar>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"selectedCondition.type_options === 'time'\\\">\\r\\n      <p-calendar [(ngModel)]=\\\"filterValue.leafChild.conditionValue\\\" [timeOnly]=\\\"true\\\"\\r\\n                  showTime=\\\"true\\\"></p-calendar>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"selectedCondition.type_options === 'dropdown'\\\">\\r\\n      <p-dropdown [options]=\\\"selectedCondition.selects\\\" placeholder=\\\"Select\\\"\\r\\n                  [(ngModel)]=\\\"filterValue.leafChild.conditionValue\\\"></p-dropdown>\\r\\n    </div>\\r\\n    <div style=\\\"padding-left:50px;\\\">\\r\\n      <div *ngIf=\\\"selectedCondition.type_options === 'checkbox'\\\">\\r\\n        <p-checkbox [(ngModel)]=\\\"filterValue.leafChild.conditionValue\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"selectedCondition.type_options === 'slider'\\\">\\r\\n      <div class=\\\"ui-lg-5\\\">\\r\\n        <span style=\\\"padding: 48%\\\">{{ filterValue.leafChild.conditionValue }}</span>\\r\\n        <p-slider [(ngModel)]=\\\"filterValue.leafChild.conditionValue\\\" [min]=\\\"selectedCondition.min\\\"\\r\\n                  [max]=\\\"selectedCondition.max\\\"></p-slider>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n    <div class=\\\"ui-g-12\\\" *ngIf=\\\"filterValue.leafChild !== undefined && filterValue.leafChild.conditionValue !== undefined\\\">\\r\\n      <div class=\\\"ui-g-12 ui-md-12 ui-lg-6 save_condition\\\">\\r\\n        <button pButton *ngIf=\\\"trigger_function !== 'edit'\\\" type=\\\"button\\\" label=\\\"Save condition\\\"\\r\\n                class=\\\"new_condition_button_size\\\" (click)=\\\"saveNewTrigger(filterValue);\\\"></button>\\r\\n        <button pButton *ngIf=\\\"trigger_function === 'edit'\\\" type=\\\"button\\\" label=\\\"Update condition\\\"\\r\\n                class=\\\"new_condition_button_size\\\" (click)=\\\"updateTrigger(filterValue)\\\"></button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, Input, OnInit } from '@angular/core';\r\nimport { TriggersFilterSchema } from '../../triggers-schema';\r\nimport { MenuItem, Message } from 'primeng/api';\r\nimport { Condition } from '../../../../../models/frontend/rule_module/condition';\r\nimport { Triggergroup } from '../../../../../models/frontend/rule_module/triggergroup';\r\nimport { Trigger } from '../../../../../models/frontend/rule_module/trigger';\r\nimport { RuleCreationService } from '../../service/rule-creation.service';\r\nimport { SearchDeviceService } from '../../service/search-device.service';\r\nimport { RuleManagerService } from '../../../../../services/rulemanager.service';\r\nimport { weekdays } from '../../../../../models/frontend/rule_module/weekdays';\r\nimport { RuleManagementService } from '../../service/rule-management.service';\r\nimport { DeviceManagerService } from '../../../../../services/devicemanager.service';\r\nimport { PlatformDeviceManagementService } from '../../service/platform-device-management.service';\r\n\r\n@Component({\r\n  selector: 'app-trigger',\r\n  templateUrl: './trigger.component.html',\r\n  styleUrls: ['./trigger.component.css'],\r\n  providers: [Triggergroup, Condition, Trigger, SearchDeviceService]\r\n})\r\n\r\nexport class TriggerComponent implements OnInit {\r\n\r\n  @Input() trigger_function: string;\r\n  @Input() inputEditTrigger: Triggergroup;\r\n  @Input() editTriggerIndex: number;\r\n  filteredTriggerConditionValues: any;\r\n  messeges: Array<Message> = [];\r\n  filterParents: Array<any> = [];\r\n  filterValue: any = {\r\n    parents: [],\r\n    leafChild: {\r\n    }\r\n  };\r\n\r\n  items: Array<MenuItem> = [];\r\n  triggersFilterSchema = TriggersFilterSchema;\r\n  triggerCheckboxSelectedValues: Array<any> = [];\r\n  selectedCondition: any = {};\r\n\r\n  filterData: Array<any> = [];\r\n  filterResultData: Array<any> = [];\r\n\r\n  constructor(private condition: Condition,\r\n              private ruleManagerService: RuleManagerService,\r\n              private ruleManagementService: RuleManagementService,\r\n              private ruleCreationService: RuleCreationService,\r\n              private searchDeviceService: SearchDeviceService,\r\n              private platformDeviceManagement: PlatformDeviceManagementService) {\r\n\r\n    this.triggersFilterSchema = this.ruleCreationService.triggersFilterSchema;\r\n  }\r\n\r\n  /**\r\n   * Here will be all triggers related data loaded for creating the rule as well as for updating the rule.\r\n   * If trigger_function has value ‘edit,’  then this component will be used for updating the rule.\r\n   */\r\n  ngOnInit(): void {\r\n    this.setTriggerFilter(this.triggersFilterSchema);\r\n    this.ruleCreationService.triggerFilterObservable.subscribe(\r\n      (filter: any) => {\r\n        this.triggersFilterSchema = filter;\r\n        this.filterParents = [];\r\n        this.filterData = [];\r\n        this.setTriggerFilter(this.triggersFilterSchema);\r\n      });\r\n\r\n    if (this.trigger_function === 'edit') {\r\n      this.ruleManagementService.editTriggergroupStatusUpdated\r\n        .subscribe((respondTrigger: any) => {\r\n          const respond = respondTrigger;\r\n          if (this.inputEditTrigger.ID === respond.trigger.ID && this.editTriggerIndex === respond.triggerIndex) {\r\n            this.filterData = [];\r\n\r\n            const filterShema: any = {children: []};\r\n            this.triggersFilterSchema.children.forEach(child => {\r\n              if (child.triggerClass === respond.trigger.trigger.triggerclass) {\r\n                filterShema.children.push(child);\r\n              }\r\n            });\r\n\r\n            this.setTriggerFilter(filterShema);\r\n\r\n            this.filterResultData.forEach((data: any) => {\r\n              if (data.leafChild && data.leafChild.properties) {\r\n                data.leafChild.properties.forEach(property => {\r\n\r\n                  if (respond.trigger.name.indexOf(property.text) !== -1) {\r\n\r\n                    if (respond.trigger.trigger.condition[data.leafChild.condition_attribute]) {\r\n                      this.filterValue = data;\r\n                      this.selectedCondition = property;\r\n                      this.addFilteredValue(this.filterValue);\r\n                      this.filterValue.leafChild.conditionValue = respond.trigger.trigger.condition[data.leafChild.condition_attribute];\r\n                    }\r\n                  }\r\n                });\r\n              }\r\n            });\r\n            const r = this.ruleCreationService.creationRule;\r\n            this.setTriggerFilter(this.triggersFilterSchema);\r\n            this.platformDeviceManagement\r\n              .addAllDevices(r.projectID, r.userId, r.platformID);\r\n\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Changes checkbox category value\r\n   *\r\n   * @param selectedValues after checkbox is clicked\r\n   */\r\n  changeSelectedValues(selectedValues: any): void {\r\n    this.triggerCheckboxSelectedValues = selectedValues;\r\n  }\r\n\r\n  /**\r\n   * This function sets end results of trigger Json  Schema.\r\n   * After recrusive search sets parents and last child values of all children.\r\n   *\r\n   * @param leafChild last child object\r\n   * @param parents all parents of this child\r\n   */\r\n  setElementByTriggerFilter(leafChild: any, parents: any): void {\r\n    const element = {leafChild: {}, parents: []};\r\n    let parent = {name: undefined, icon: undefined, triggerClass: undefined};\r\n    for (const parentValue of parents) {\r\n      if (parentValue.name) {\r\n        parent.name = parentValue.name;\r\n        parent.triggerClass = parentValue.triggerClass;\r\n        parent.icon = parentValue.icon;\r\n        element.parents.push(parent);\r\n        parent = {name: undefined, icon: undefined, triggerClass: undefined};\r\n      }\r\n    }\r\n\r\n    element.leafChild = leafChild;\r\n    this.filterData.push(element);\r\n\r\n    this.filterResultData = this.filterData;\r\n  }\r\n  /**\r\n   * This function sets triggers form Trigger Json Scheme\r\n   *\r\n   * @param parent. Each recursive setTriggerFilter function gets old child as a parent parameter.\r\n   */\r\n  setTriggerFilter(parent: any): void {\r\n    this.filterParents.push(parent);\r\n    if (parent.children.length > 0) {\r\n      for (const child of parent.children) {\r\n        this.setTriggerFilter(child);\r\n      }\r\n      const size = this.filterParents.length;\r\n      this.filterParents = this.filterParents.slice(0, size - 1);\r\n    } else {\r\n      const size = this.filterParents.length;\r\n      this.filterParents = this.filterParents.slice(0, size - 1);\r\n      const lastParentIsChild = parent;\r\n      this.setElementByTriggerFilter(lastParentIsChild, this.filterParents);\r\n    }\r\n  }\r\n  /**\r\n   * Clears all selected values for trigger\r\n   */\r\n  clearFilterValue(): void {\r\n    this.filterValue.leafChild = {};\r\n    this.selectedCondition = {};\r\n  }\r\n\r\n  addFilteredValue(triggerConditionValues: any): void {\r\n    this.filteredTriggerConditionValues = triggerConditionValues;\r\n  }\r\n  /**\r\n   * This function is filtering condition for each selected category\r\n   * This is second autocomplete component from new condition selection overlay\r\n   *\r\n   * @param event is clicked component event\r\n   */\r\n  searchCondition(event): void {\r\n    let allconditions = this.filteredTriggerConditionValues.leafChild.properties;\r\n\r\n    if (allconditions.length > 0) {\r\n      this.ruleCreationService.allconditions = allconditions;\r\n    } else {\r\n      allconditions = this.ruleCreationService.allconditions;\r\n    }\r\n    if (allconditions && this.ruleCreationService.devices) {\r\n\r\n      const properties = this.ruleCreationService.filterAutocomplete(event.query, allconditions, 'text');\r\n      this.filterValue.leafChild.properties = properties;\r\n    } else {\r\n      if (this.ruleCreationService.creationRule.projectID === '') {\r\n        this.messeges.push({\r\n          severity: 'error',\r\n          summary: '',\r\n          detail: 'Project is not selected'\r\n        });\r\n        setTimeout(() => {\r\n          this.messeges = [];\r\n        }, 4000);\r\n      } else {\r\n        this.messeges.push({\r\n          severity: 'error',\r\n          summary: '',\r\n          detail: 'Platform devices, which are connected to the project, are not configured'\r\n        });\r\n        setTimeout(() => {\r\n          this.messeges = [];\r\n        }, 4000);\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * This filter function is for selected checkbox.\r\n   * Search the trigger for selected checkbox category\r\n   *\r\n   * @param event is clicked component event\r\n   */\r\n  filterTrigger(event): void {\r\n    this.filterResultData = [];\r\n    let isSet;\r\n    this.filterData.forEach((triggerValue: any) => {\r\n      const trigger = triggerValue;\r\n      let countCheckbox = 0;\r\n      for (const Id in this.triggerCheckboxSelectedValues) {\r\n        if (Id && this.triggerCheckboxSelectedValues[Id].length > 0) {\r\n          const triggerName = this.triggerCheckboxSelectedValues[Id][0];\r\n          if (trigger.parents.length > 0) {\r\n\r\n            if (trigger.parents[0].name === triggerName) {\r\n              countCheckbox++;\r\n            }\r\n          } else {\r\n            if (trigger.leafChild.name === triggerName) {\r\n              countCheckbox++;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (countCheckbox > 0 || this.triggerCheckboxSelectedValues.length === 0) {\r\n        isSet = false;\r\n        for (const parent of trigger.parents) {\r\n          if (parent && parent.name && parent.name.toLowerCase()\r\n              .indexOf(event.query.toLowerCase()) === 0) {\r\n            if (!isSet) {\r\n              this.filterResultData.push(trigger);\r\n              isSet = true;\r\n            }\r\n          }\r\n        }\r\n        if (!isSet && trigger.leafChild.name.toLowerCase()\r\n            .indexOf(event.query.toLowerCase()) === 0) {\r\n          this.filterResultData.push(trigger);\r\n          isSet = true;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns week day as a index number\r\n   *\r\n   * @param day name of a week day\r\n   * @returns any weekday index\r\n   */\r\n  getDayIndex(day): any {\r\n    for (const conddayIndex in  this.condition.days) {\r\n      if (this.condition.days[conddayIndex] === day) {\r\n        return conddayIndex;\r\n      }\r\n    }\r\n\r\n    return -1;\r\n  }\r\n\r\n  /**\r\n   * Sets weekdays as indexed array\r\n   * @param daysArray weekdays array\r\n   * @returns any returns indexed weekdayes\r\n   */\r\n  setDaysOfWeek(daysArray): any {\r\n    const createDays = ['', '', '', '', '', '', ''];\r\n    for (const day of  daysArray) {\r\n      const index = this.getDayIndex(day);\r\n      createDays[index] = day;\r\n    }\r\n\r\n    return createDays;\r\n  }\r\n\r\n  /**\r\n   * Gets labels of the weekdays\r\n   * @param daysArray weekdays\r\n   * @returns any labels\r\n   */\r\n  setDaysOfWeekLabels(daysArray): any {\r\n    const labels: Array<string> = [];\r\n    for (const day of  daysArray) {\r\n      for (const weekday of  weekdays) {\r\n        if (day === weekday.value) {\r\n          labels.push(weekday.label);\r\n        }\r\n      }\r\n    }\r\n\r\n    return labels;\r\n  }\r\n  /**\r\n   * After condition/trigger is selected\r\n   * this function sets all attributes for back-end rule model.\r\n   *\r\n   * @param filterValue user selected value\r\n   * @returns RuleAction This class is for send rule request function\r\n   */\r\n  getTriggergroup(filterValue: any): Triggergroup {\r\n\r\n    const leafChild = filterValue.leafChild;\r\n    let value = leafChild.conditionValue;\r\n    let valueLabel: Array<string>;\r\n    const condition: Condition = new Condition();\r\n    let trigger: Trigger = new Trigger();\r\n    const triggergroup: Triggergroup = new Triggergroup();\r\n\r\n    if (value !== undefined) {\r\n\r\n      if (value && value.length > 0 && leafChild.condition_attribute === 'days') {\r\n        value = this.setDaysOfWeek(value);\r\n        valueLabel = this.setDaysOfWeekLabels(value);\r\n      } else {\r\n        condition.days = undefined;\r\n      }\r\n      condition[leafChild.condition_attribute] = value;\r\n\r\n      if (leafChild.condition_attribute === 'days') {\r\n        value = valueLabel.join(',');\r\n      }\r\n\r\n      trigger.condition = condition;\r\n      trigger.triggerclass = filterValue.parents[0] ? filterValue.parents[0].triggerClass : leafChild.name;\r\n\r\n      if (filterValue.parents[0] && filterValue.parents[0].name === 'Communication') {\r\n        condition.communicationtype = leafChild.name;\r\n        condition.notification = leafChild.name;\r\n      }\r\n      if (leafChild.physical) {\r\n        condition.physical = leafChild.physical;\r\n      }\r\n      if (leafChild.living) {\r\n        condition.living = leafChild.living;\r\n      }\r\n\r\n      switch (condition.state) {\r\n        case 0 : {\r\n          condition.state = 'OFF';\r\n          value = condition.state;\r\n          break;\r\n        }\r\n        case 1 : {\r\n          condition.state = 'ON';\r\n          value = condition.state;\r\n          break;\r\n        }\r\n        default : {\r\n          break;\r\n        }\r\n\r\n      }\r\n\r\n      if (leafChild.itemtype) {\r\n        condition.itemtype = leafChild.itemtype;\r\n      }\r\n      if (this.selectedCondition.operator) {\r\n        condition.operator = this.selectedCondition.operator;\r\n      }\r\n\r\n      trigger.condition = condition;\r\n\r\n      trigger = this.searchDeviceService.searchDeviceFromSelectedTrigger(trigger, leafChild, this.selectedCondition);\r\n      triggergroup.name = `${this.selectedCondition.text}  ${value}`;\r\n      triggergroup.triggerclass = trigger.triggerclass;\r\n\r\n      trigger.name = triggergroup.name;\r\n      triggergroup.trigger = trigger;\r\n    }\r\n\r\n    return triggergroup;\r\n  }\r\n\r\n  /**\r\n   * After trigger(condition) is created, then add new trigger(condition) to triggerList\r\n   * @param filterValue is Rule Trigger Value\r\n   */\r\n  saveNewTrigger(filterValue: any): void {\r\n    const userId = this.ruleCreationService.loggedUserId;\r\n    this.ruleManagerService.addNewTriggerLeaf(userId, this.getTriggergroup(filterValue))\r\n      .subscribe(savedTrigger => {\r\n          this.ruleCreationService.triggerList.push(savedTrigger);\r\n          this.ruleCreationService.alltriggerList.push(savedTrigger);\r\n          this.ruleManagementService.updateTriggerList.addNew[savedTrigger.ID] = savedTrigger;\r\n          this.clearTrigger();\r\n          this.ruleCreationService.triggerOverlay.hide();\r\n          this.clearFilterValue();\r\n        }\r\n      );\r\n  }\r\n  /**\r\n   * This function is for rule update component.\r\n   * If user changes the old trigger(condition), the new trigger(condition) will be combined\r\n   * to the rule.\r\n   * @param filterValueis is Rule Trigger Value\r\n   */\r\n  updateTrigger(filterValue: any): void {\r\n    const userId = this.ruleCreationService.loggedUserId;\r\n    const trigger: Triggergroup = this.getTriggergroup(filterValue);\r\n    trigger.ID = this.inputEditTrigger.ID;\r\n    trigger.trigger.ID = this.inputEditTrigger.trigger.ID;\r\n    this.ruleManagerService.addNewTriggerLeaf(userId, trigger)\r\n      .subscribe((responseTriggergroup: any) => {\r\n        const resendData = {\r\n          trigger: responseTriggergroup,\r\n          oldTriggerIndex: this.editTriggerIndex\r\n        };\r\n\r\n        this.ruleManagementService.changeExistingTriggerGroupStatus.emit(resendData);\r\n        this.clearTrigger();\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Clears all selected trigger(conditions) parents and children values\r\n   */\r\n  clearTrigger(): void {\r\n    this.filterValue.leafChild.conditionValue = undefined;\r\n    this.filterValue = {\r\n      parents: [],\r\n      leafChild: {}\r\n    };\r\n  }\r\n}\r\n","module.exports = \".accordion-container{\\r\\n  background : white;\\r\\n  width : 100%;\\r\\n}\\r\\n\\r\\n.editRuleButton{\\r\\n  float: right;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<p-confirmDialog appendTo=\\\"body\\\" key=\\\"rulemanagement\\\"></p-confirmDialog>\\r\\n\\r\\n<p-dataView #dv [value]=\\\"rules\\\" [paginator]=\\\"true\\\" [rows]=\\\"4\\\" paginatorPosition=\\\"bottom\\\" filterBy=\\\"name\\\"\\r\\n            [sortField]=\\\"sortField\\\" [sortOrder]=\\\"sortOrder\\\"  >\\r\\n  <p-header>\\r\\n    <div class=\\\"ui-helper-clearfix\\\">\\r\\n      <div class=\\\"ui-g\\\">\\r\\n        <div class=\\\"ui-g-6 ui-md-4\\\">\\r\\n          <p-dropdown [options]=\\\"sortOptions\\\" [(ngModel)]=\\\"sortKey\\\" placeholder=\\\"Sort By\\\"\\r\\n                      (onChange)=\\\"onSortChange($event)\\\" [autoWidth]=\\\"false\\\" [style]=\\\"{'min-width':'15em'}\\\" class=\\\"gridster-item-content\\\"></p-dropdown>\\r\\n        </div>\\r\\n        <div class=\\\"ui-g-6 ui-md-8\\\" style=\\\"text-align:right\\\">\\r\\n          <input type=\\\"search\\\" pInputText placeholder=\\\"Search by name\\\" (keyup)=\\\"dv.filter($event.target.value)\\\" class=\\\"gridster-item-content\\\">\\r\\n          <p-dataViewLayoutOptions></p-dataViewLayoutOptions>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </p-header>\\r\\n  <ng-template let-rule pTemplate=\\\"listItem\\\">\\r\\n    <div class=\\\"ui-g\\\" style=\\\"padding: 0.2em;border-bottom: 1px solid #d9d9d9;background: #eff1f4;border :  none;\\\">\\r\\n      <div class=\\\"ui-g-1 ui-md-1\\\" style=\\\"margin:5px;\\\">\\r\\n        <button pButton type=\\\"button\\\"  icon=\\\"fa {{rule.active ? 'fa-check' : 'fa-power-off'}}\\\" (click)=\\\"activateRuleManagement(rule)\\\"\\r\\n                class=\\\"gridster-item-content ui-button-rounded \\\" [ngClass]=\\\"{ 'ui-button-secondary' : !rule.active}\\\"></button>\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-8 ui-md-8\\\">\\r\\n        <div class=\\\"ui-g\\\">\\r\\n          <div class=\\\"accordion-container\\\">\\r\\n            <p-accordion [style]=\\\"{width : '100%', border : 'none'}\\\" styleClass=\\\"myaccordionclass\\\">\\r\\n            <p-accordionTab >\\r\\n              <p-header [style]=\\\"{border : 'none'}\\\" class=\\\"gridster-item-content\\\">\\r\\n                <strong>Name: </strong>{{ rule.name }}\\r\\n              </p-header>\\r\\n              <div class=\\\"ui-g-12 ui-sm-12\\\"><strong>Description : </strong> {{ rule.description }}</div>\\r\\n              <div class=\\\"ui-g-12 ui-sm-12\\\" ><strong>Platform : </strong>\\r\\n                <span *ngIf=\\\"indexedPlatforms[rule.platformID]\\\">{{ indexedPlatforms[rule.platformID].name }}</span>\\r\\n              </div>\\r\\n              <div class=\\\"ui-g-12 ui-sm-12\\\" ><strong>Project : </strong>\\r\\n                <span *ngIf=\\\"indexedProjects[rule.projectID]\\\">{{ indexedProjects[rule.projectID].name }}</span>\\r\\n              </div>\\r\\n              <div class=\\\"ui-g-12 ui-sm-12\\\"><strong>Rule logic : </strong>\\r\\n                <span *ngIf=\\\"indexedTriggers[rule.rootTGID]\\\">\\r\\n                  <div>{{ indexedTriggers[rule.rootTGID].name }}</div>\\r\\n                  <div><span style=\\\"color: blue\\\">Then</span>\\r\\n                    <span *ngFor=\\\"let action of rule.ruleActions; let actionIndex = index\\\">\\r\\n                   {{ action.name }} <span *ngIf=\\\"actionIndex != rule.ruleActions.length - 1\\\">AND</span>\\r\\n                    </span>\\r\\n                  </div>\\r\\n                </span>\\r\\n              </div>\\r\\n          </p-accordionTab>\\r\\n          </p-accordion>\\r\\n        </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-1 ui-md-1\\\" style=\\\"margin: 5px\\\" >\\r\\n        <button pButton type=\\\"button\\\" icon=\\\"fa fa-edit\\\" class=\\\"gridster-item-content editRuleButton\\\" (click)=\\\"editRule(rule)\\\"></button>\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-1 ui-md-1\\\" style=\\\"margin: 5px\\\">\\r\\n        <button pButton type=\\\"button\\\" icon=\\\"fa fa-trash\\\" class=\\\"gridster-item-content ui-button-danger \\\" (click)=\\\"confirmRuleDelete(rule)\\\"></button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n  <ng-template let-rule pTemplate=\\\"gridItem\\\">\\r\\n    <div style=\\\"padding:.5em\\\" class=\\\"ui-g-12 ui-md-3\\\">\\r\\n      <p-panel [header]=\\\"rule.name\\\" [style]=\\\"{'text-align':'center'}\\\" >\\r\\n        <div class=\\\"rule-detail\\\" >{{ rule.name }} - {{ rule.description }}</div>\\r\\n        <br>\\r\\n        <div class=\\\"rule-detail\\\">{{ indexedPlatforms[rule.platformID].name }} - {{ indexedProjects[rule.projectID].name }}</div>\\r\\n        <hr class=\\\"ui-widget-content\\\" style=\\\"border-top:0\\\">\\r\\n        <button pButton type=\\\"button\\\"  icon=\\\"fa {{rule.active ? 'fa-check' : 'fa-power-off'}}\\\" (click)=\\\"activateRuleManagement(rule)\\\"\\r\\n                class=\\\"gridster-item-content ui-button-rounded \\\" [ngClass]=\\\"{ 'ui-button-secondary' : !rule.active}\\\"></button>\\r\\n        <button pButton type=\\\"button\\\" icon=\\\"fa fa-edit\\\" (click)=\\\"editRule(rule)\\\" class=\\\"gridster-item-content\\\"></button>\\r\\n        <button pButton type=\\\"button\\\" icon=\\\"fa fa-trash\\\" class=\\\"gridster-item-content ui-button-danger\\\" (click)=\\\"confirmRuleDelete(rule)\\\"></button>\\r\\n      </p-panel>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n</p-dataView>\\r\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport { ConfirmationService, Message, SelectItem } from 'primeng/api';\r\nimport { RuleManagerService } from '../../../../services/rulemanager.service';\r\nimport { Rule } from '../../../../models/frontend/rule_module/rule';\r\nimport { Triggergroup } from '../../../../models/frontend/rule_module/triggergroup';\r\nimport { RuleManagementService } from '../service/rule-management.service';\r\nimport { RuleCreationService } from '../service/rule-creation.service';\r\nimport { DataService } from '../../../../services/data.service';\r\nimport { DeviceManagerService } from '../../../../services/devicemanager.service';\r\nimport { RuleManagementWidget } from '../../../../models/frontend/rulemanagementwidget';\r\nimport { DataNotification } from '../../../../models/frontend/rule_module/datanotification';\r\nimport { RuleNotificationService } from '../service/rule-notification.service';\r\nimport { Project } from '../../../../models/frontend/project';\r\n\r\n@Component({\r\n  selector: 'app-rule-management',\r\n  templateUrl: './management.component.html',\r\n  styleUrls: ['./management.component.css'],\r\n  providers: [ConfirmationService]\r\n\r\n})\r\n\r\nexport class ManagementComponent implements OnInit {\r\n\r\n  @Input() currentWidget: RuleManagementWidget;\r\n  @Output() messageEvent = new EventEmitter<any>();\r\n\r\n  displayRuleManagementDialog: boolean;\r\n  editRuleValue: Rule;\r\n\r\n  rules: Array<any>;\r\n  userId: string;\r\n\r\n  sortOptions: Array<SelectItem>;\r\n  sortKey: string;\r\n  sortField: string;\r\n  sortOrder: number;\r\n\r\n  indexedTriggers: Array<Triggergroup> = [];\r\n  indexedProjects: Array<any> = [];\r\n  indexedPlatforms: Array<any> = [];\r\n  project: Project;\r\n  changeProjectDataStatus = new EventEmitter<any>();\r\n\r\n  constructor(private ruleManagementService: RuleManagementService,\r\n              private ruleManagerService: RuleManagerService,\r\n              private confirmationService: ConfirmationService,\r\n              private ruleCreationService: RuleCreationService,\r\n              private dataService: DataService,\r\n              private devicemanager: DeviceManagerService,\r\n              private ruleNotificationService: RuleNotificationService) {\r\n    this.sortOptions = [\r\n      {label: 'Name', value: 'name'},\r\n      {label: 'Description', value: 'description'},\r\n      {label: 'Project', value: 'project'},\r\n      {label: 'Platform', value: 'platform'}\r\n    ];\r\n\r\n    this.indexedPlatforms = this.ruleCreationService.indexedPlatforms;\r\n    this.indexedProjects = this.ruleCreationService.indexedProjects;\r\n    this.indexedTriggers = this.ruleCreationService.indexedTriggers;\r\n    this.project = this.ruleManagementService.selectedProjectData;\r\n  }\r\n\r\n  /**\r\n   * Loads all platforms from all projects.\r\n   * Gets all rules.\r\n   * Saves logged user id.\r\n   */\r\n  ngOnInit(): void {\r\n\r\n    this.userId = this.ruleCreationService.loggedUserId;\r\n    if (this.userId && this.indexedPlatforms.length === 0) {\r\n      this.devicemanager.getAllPlatformsFromAllProjects(this.userId)\r\n        .subscribe(platforms => {\r\n          this.indexedPlatforms = [];\r\n          platforms.forEach(platform => {\r\n            this.indexedPlatforms[platform.platformId] = platform;\r\n          });\r\n        });\r\n    }\r\n    if (this.userId) {\r\n      this.getAllRules(this.userId);\r\n    } else {\r\n      this.dataService.userData.subscribe(resultUserData => {\r\n        this.userId = resultUserData.id;\r\n        this.ruleCreationService.loggedUserId = this.userId;\r\n        this.getAllRules(this.userId);\r\n      });\r\n    }\r\n\r\n    this.ruleCreationService.loadIndexedTriggers();\r\n\r\n    this.ruleManagementService.displayStatusUpdated\r\n      .subscribe(response => {\r\n        this.displayRuleManagementDialog = response;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * This function activates the rule\r\n   *\r\n   * @param Rule rule that has to be activated\r\n   */\r\n  activateRuleManagement(rule: Rule): void {\r\n    rule.active = !rule.active;\r\n    this.updateRuleActivation(rule);\r\n  }\r\n\r\n  getAllRules(userId: string): void {\r\n    this.ruleManagerService.getAllRules(userId)\r\n      .subscribe(resultRules => {\r\n        this.rules = resultRules;\r\n        this.rules.forEach(rule => {\r\n          rule.project = this.indexedProjects[rule.projectID];\r\n          rule.platform = this.indexedPlatforms[rule.platformID];\r\n        });\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Rule Management delete button pops confirmation message.\r\n   *\r\n   * @param Rule rule that has to be removed.\r\n   */\r\n  confirmRuleDelete(rule: Rule): void {\r\n    this.confirmationService.confirm({\r\n      message: 'Do you want to delete this rule?',\r\n      header: 'Delete Confirmation',\r\n      key: 'rulemanagement',\r\n      icon: 'pi pi-info-circle',\r\n      accept: () => {\r\n        this.ruleManagerService.deleteRule(this.userId, rule)\r\n          .subscribe(response => {\r\n            this.saveNotification(this.userId, rule, 'deleted');\r\n            this.deleteLocalRule(rule);\r\n            this.messageEvent.emit({severity: 'success', summary: 'Confirmed', detail: 'Rule deleted.'});\r\n          }, error => {\r\n            this.messageEvent.emit({severity: 'warn', summary: 'Warning', detail: 'Something went wrong ${error.error}'});\r\n          });\r\n      },\r\n      reject: () => {\r\n        this.messageEvent.emit({severity: 'info', summary: 'Rejected', detail: 'You have rejected.'});\r\n        //this.messeges = [{severity: 'info', summary: 'Rejected', detail: 'You have rejected'}];\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Delete rule from local list.\r\n   *\r\n   * @param Rule searchrule delete this search rule.\r\n   */\r\n  deleteLocalRule(searchrule: Rule): void {\r\n    this.rules.forEach((rule: any, ruleIndex: number) => {\r\n      if (searchrule.ID === rule.ID) {\r\n        this.rules.splice(ruleIndex, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This function orders rule by name, description, project/platform name.\r\n   *\r\n   * @param event is order component.\r\n   */\r\n  onSortChange(event): void {\r\n    const value = event.value;\r\n\r\n    if (value.indexOf('!') === 0) {\r\n      this.sortOrder = -1;\r\n      this.sortField = value.substring(1, value.length);\r\n    } else {\r\n      this.sortOrder = 1;\r\n      this.sortField = value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Saves the notification related to the rule\r\n   *\r\n   * @param string userId is logged user id.\r\n   * @param rule relation of the notification\r\n   * @param string event can be activated/deactivated/save/delete/triggered\r\n   */\r\n  saveNotification(userId: string, rule: any, event: string): void {\r\n    const notification: DataNotification = new DataNotification();\r\n    notification.userId = userId;\r\n    notification.name = rule.name;\r\n    notification.event = event;\r\n    notification.date = new Date();\r\n    notification.relation = 'Rule';\r\n    notification.relationID = rule.ID;\r\n    rule.project = undefined;\r\n    rule.platform = undefined;\r\n    this.ruleManagerService.saveNotification(userId, notification)\r\n      .subscribe(\r\n      notificationResponse => {\r\n        this.ruleNotificationService.add(notificationResponse);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Activate/deactivate the rule\r\n   *\r\n   * @param rule that has to be activated\r\n   */\r\n  updateRuleActivation(rule: any): void {\r\n\r\n    const activation = rule.active ? 'activated' : 'deactivated';\r\n\r\n    if (rule.active) {\r\n      this.ruleManagerService.activateRule(this.userId, rule)\r\n        .subscribe(\r\n          activatedRule => {\r\n            this.messageEvent.emit({severity: 'success', summary: 'Activate Rule', detail: 'Rule has been activated.'});\r\n            rule.project = undefined;\r\n            rule.platform = undefined;\r\n          }, error => {\r\n            this.messageEvent.emit({\r\n              severity: 'error',\r\n              summary: 'Activate Rule',\r\n              detail: 'Rule has not been activated. ${error.error}.'});\r\n          });\r\n    } else {\r\n      this.ruleManagerService.deactivateRule(this.userId, rule)\r\n        .subscribe(\r\n          deactivatedRule => {\r\n            this.messageEvent.emit({severity: 'success', summary: 'Deactivate Rule', detail: 'Rule has been deactivated.'});\r\n            rule.project = undefined;\r\n            rule.platform = undefined;\r\n          }, error => {\r\n            this.messageEvent.emit({\r\n              severity: 'error',\r\n              summary: 'Deactivate Rule',\r\n              detail: 'Rule has not been deactivated. ${ error.error}.'});\r\n          });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Edits the rule\r\n   *\r\n   * @param rule changed rule\r\n   */\r\n  editRule(rule: any): void {\r\n    this.ruleManagementService.getRuleValueStatus.emit(rule);\r\n    this.editRuleValue = rule;\r\n    this.ruleManagementService.editRuleStatusUpdated.emit(rule);\r\n    this.ruleManagementService.displayRuleUpdateComponent.emit(true);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p-confirmDialog appendTo=\\\"body\\\" key=\\\"datanotification_{{currentWidget.id}}\\\"></p-confirmDialog>\\r\\n\\r\\n<p-growl [(value)]=\\\"messeges\\\" life=\\\"4000\\\"></p-growl>\\r\\n\\r\\n<p-dataView #dv [value]=\\\"notifications\\\" [paginator]=\\\"true\\\" [rows]=\\\"4\\\" paginatorPosition=\\\"bottom\\\"\\r\\n            filterBy=\\\"name\\\"\\r\\n            [sortField]=\\\"sortField\\\" [sortOrder]=\\\"sortOrder\\\">\\r\\n  <p-header>\\r\\n    <div class=\\\"ui-helper-clearfix\\\">\\r\\n      <div class=\\\"ui-g\\\">\\r\\n        <div class=\\\"ui-g-6 ui-md-4\\\">\\r\\n          <p-dropdown [options]=\\\"sortOptions\\\" [(ngModel)]=\\\"sortKey\\\" placeholder=\\\"Sort By\\\"\\r\\n                      (onChange)=\\\"onSortChange($event)\\\" [autoWidth]=\\\"false\\\" [style]=\\\"{'min-width':'15em'}\\\" class=\\\"gridster-item-content\\\"></p-dropdown>\\r\\n        </div>\\r\\n        <div class=\\\"ui-g-6 ui-md-8\\\" style=\\\"text-align:right\\\">\\r\\n\\r\\n          <input type=\\\"search\\\" pInputText placeholder=\\\"Search by name\\\" (keyup)=\\\"dv.filter($event.target.value)\\\" class=\\\"gridster-item-content\\\">\\r\\n          <p-dataViewLayoutOptions></p-dataViewLayoutOptions>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </p-header>\\r\\n  <ng-template let-datanotification pTemplate=\\\"listItem\\\">\\r\\n    <div class=\\\"ui-g\\\" style=\\\"padding: 0.2em;border-bottom: 1px solid #d9d9d9;background: #eff1f4;border :  none;\\\">\\r\\n      <div class=\\\"ui-g-11 ui-md-11 rule-details\\\" *ngIf=\\\"datanotification.notification\\\">\\r\\n        <div class=\\\"ui-g\\\">\\r\\n                <div class=\\\"ui-g-4 ui-sm-4\\\" ><strong>{{ datanotification.notification.relation }} name : </strong> {{ datanotification.data.name }}</div>\\r\\n                <div class=\\\"ui-g-4 ui-sm-4\\\"><strong>Event : </strong> {{ datanotification.notification.event }}</div>\\r\\n                <div class=\\\"ui-g-4 ui-sm-4\\\"><strong>Date : </strong> {{ datanotification.notification.date  | date: 'dd/MM/yyyy H:mm:ss' }}</div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-1 ui-md-1\\\">\\r\\n        <button pButton type=\\\"button\\\" icon=\\\"fa fa-trash\\\" class=\\\"gridster-item-content ui-button-danger \\\" (click)=\\\"confirmNotificationDelete(datanotification.notification)\\\"></button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n  <ng-template let-datanotification pTemplate=\\\"gridItem\\\">\\r\\n    <div style=\\\"padding:.5em\\\" class=\\\"ui-g-12 ui-md-3\\\">\\r\\n      <p-panel [header]=\\\"datanotification.rulename\\\" [style]=\\\"{'text-align':'center'}\\\" >\\r\\n        <div class=\\\"rule-detail\\\" >{{ datanotification.data.name }} - {{ datanotification.notification.event }}</div>\\r\\n        <br>\\r\\n        <div class=\\\"rule-detail\\\">{{ datanotification.notification.date | date: 'dd/MM/yyyy H:mm:ss' }}</div>\\r\\n        <hr class=\\\"ui-widget-content\\\" style=\\\"border-top:0\\\">\\r\\n        <button pButton type=\\\"button\\\" icon=\\\"fa fa-trash\\\" class=\\\"gridster-item-content ui-button-danger \\\" (click)=\\\"confirmNotificationDelete(datanotification.notification)\\\"></button>\\r\\n      </p-panel>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n</p-dataView>\\r\\n\"","import { Component, Input, OnInit } from '@angular/core';\r\nimport { RuleNotificationWidget } from '../../../../models/frontend/rulenotificationwidget';\r\nimport { DataService } from '../../../../services/data.service';\r\nimport { ConfirmationService, Message, SelectItem } from 'primeng/api';\r\nimport { RuleManagerService } from '../../../../services/rulemanager.service';\r\nimport { DataNotification } from '../../../../models/frontend/rule_module/datanotification';\r\nimport { RuleManagementService } from '../service/rule-management.service';\r\nimport { RuleNotificationService } from '../service/rule-notification.service';\r\nimport { RuleCreationService } from '../service/rule-creation.service';\r\nimport { Project } from '../../../../models/frontend/project';\r\n\r\n@Component({\r\n  selector: 'app-rule-notification',\r\n  templateUrl: './notification.component.html',\r\n  styleUrls: ['./notification.component.css']\r\n})\r\nexport class NotificationComponent implements OnInit {\r\n  @Input() currentWidget: RuleNotificationWidget;\r\n  notifications: Array<any>;\r\n  sortOptions: Array<SelectItem>;\r\n  sortField: string;\r\n  userId: string;\r\n  sortOrder: number;\r\n  messeges: Array<Message> = [];\r\n  project: Project;\r\n\r\n  constructor(private dataService: DataService,\r\n              private ruleManagerService: RuleManagerService,\r\n              private ruleManagementService: RuleManagementService,\r\n              private confirmationService: ConfirmationService,\r\n              private ruleNotificationService: RuleNotificationService,\r\n              private ruleCreationService: RuleCreationService) {\r\n    this.sortOptions = [\r\n      {label: 'Name', value: 'name'},\r\n      {label: 'Date', value: 'date'},\r\n      {label: 'Event', value: 'event'}\r\n    ];\r\n    this.notifications = this.ruleNotificationService.notifications;\r\n  }\r\n\r\n  /**\r\n   * Loads all notifications.\r\n   * Saves logged user id.\r\n   */\r\n  ngOnInit(): void {\r\n    if (!this.ruleCreationService.loggedUserId) {\r\n      this.dataService.userData.subscribe(resultUserData => {\r\n        this.userId = resultUserData.id;\r\n        this.ruleCreationService.loggedUserId = this.userId;\r\n        this.project = this.ruleManagementService.selectedProjectData;\r\n        this.ruleManagerService.getAllNotifications(this.userId)\r\n          .subscribe(resultNotifications => {\r\n            this.notifications = resultNotifications;\r\n            this.ruleNotificationService.notifications = this.notifications;\r\n          });\r\n      });\r\n    } else {\r\n      this.userId = this.ruleCreationService.loggedUserId;\r\n      this.ruleManagerService.getAllNotifications(this.userId)\r\n        .subscribe(resultNotifications => {\r\n          this.notifications = resultNotifications;\r\n          this.ruleNotificationService.notifications = this.notifications;\r\n        });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deletes notification locally.\r\n   *\r\n   * @param DataNotification searchNotification that has to be removed.\r\n   */\r\n  deleteLocalNotification(searchNotification: DataNotification): void {\r\n    this.notifications.forEach((notification: any, notificationIndex: number) => {\r\n      if (searchNotification.ID === notification.notification.ID) {\r\n        this.notifications.splice(notificationIndex, 1);\r\n        this.ruleNotificationService.notifications = this.notifications;\r\n        this.ruleNotificationService.displayNotificationUpdate.emit(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Confirmation message will be shown after delete button is clicked.\r\n   *\r\n   * @param DataNotification notification that has to be removed.\r\n   */\r\n  confirmNotificationDelete(notification: DataNotification): void {\r\n    this.confirmationService.confirm({\r\n      message: 'Do you want to delete this notification?',\r\n      header: 'Delete Confirmation',\r\n      key: `datanotification_${this.currentWidget.id}`,\r\n      icon: 'pi pi-info-circle',\r\n      accept: () => {\r\n        this.ruleManagerService.deleteNotification(this.userId, notification)\r\n          .subscribe(response => {\r\n            this.ruleManagementService.updateNotificationStatus.emit(response);\r\n            this.deleteLocalNotification(notification);\r\n            this.messeges = [{severity: 'success', summary: 'Confirmed', detail: 'Notification deleted'}];\r\n\r\n          }, error => {\r\n            this.messeges = [{severity: 'warn', summary: 'Warning', detail: `Something went wrong  ${error.error}`}];\r\n          });\r\n      },\r\n      reject: () => {\r\n        this.messeges = [{severity: 'info', summary: 'Rejected', detail: 'You have rejected'}];\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Order notification by name,event and date.\r\n   *\r\n   * @param event is notification list data element\r\n   */\r\n  onSortChange(event): void {\r\n    const value = event.value;\r\n\r\n    if (value.indexOf('!') === 0) {\r\n      this.sortOrder = -1;\r\n      this.sortField = value.substring(1, value.length);\r\n    } else {\r\n      this.sortOrder = 1;\r\n      this.sortField = value;\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \".notify-badge {\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.notify-badge[data-badge]:after {\\r\\n  content: attr(data-badge);\\r\\n  position: absolute;\\r\\n  top: -10px;\\r\\n  left: -10px;\\r\\n  font-size: .7em;\\r\\n  background: red;\\r\\n  color: white;\\r\\n  width: 18px;\\r\\n  height: 18px;\\r\\n  text-align: center;\\r\\n  line-height: 18px;\\r\\n  border-radius: 50%;\\r\\n  box-shadow: 0 0 1px #333;\\r\\n}\\r\\n\\r\\n.notification-header {\\r\\n  background-color: #edeff1;\\r\\n}\\r\\n\\r\\n.notify-message {\\r\\n  z-index: 5;\\r\\n}\\r\\n\\r\\n.notification-settings {\\r\\n  font-size: 20px;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\"","module.exports = \"<button id=\\\"notification-message\\\" data-badge=\\\"\\\" type=\\\"button\\\" pButton icon=\\\"fa fa-bell\\\" [ngClass]=\\\"{'notify-badge': isMessages }\\\" (click)=\\\"notifyMessages()\\\">\\r\\n</button>\\r\\n<p-card *ngIf=\\\"showNotifications\\\"  [style]=\\\"{position: 'absolute',zIndex: '10',  maxWidth: '300px',right: '77px', maxHeight: '420px'}\\\">\\r\\n  <p-header>\\r\\n    <div class=\\\"ui-g notification-header\\\">\\r\\n      <div class=\\\"ui-g-10 ui-md-10\\\">\\r\\n        <strong>Notifications</strong>\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-2 ui-md-2\\\">\\r\\n        <i  class=\\\"fa fa-cog notification-settings\\\" (click)=\\\"notificationSettings()\\\"></i>\\r\\n      </div>\\r\\n    </div>\\r\\n  </p-header>\\r\\n  <div *ngFor=\\\"let message of showNotificationBoxMessages\\\" class=\\\"ui-g-12 ui-md-12 notify-message\\\">\\r\\n  {{ message.relation }} {{ message.name }} -- {{ message.event }}\\r\\n    <div style=\\\"font-size: 11px;\\\">\\r\\n      {{ message.date | date : 'dd/MM/yyyy H:mm:ss' }}\\r\\n    </div>\\r\\n  </div>\\r\\n</p-card>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { RuleManagerService } from '../../../../services/rulemanager.service';\r\nimport { DataService } from '../../../../services/data.service';\r\nimport { RuleCreationService } from '../service/rule-creation.service';\r\nimport { DataNotification } from '../../../../models/frontend/rule_module/datanotification';\r\nimport { ProjectService } from '../../../../services/project.service';\r\nimport { WidgetType } from '../../../../models/frontend/widget';\r\nimport { RuleNotificationService } from '../service/rule-notification.service';\r\n\r\n@Component({\r\n  selector: 'app-notify-message',\r\n  templateUrl: './notify-message.component.html',\r\n  styleUrls: ['./notify-message.component.css']\r\n})\r\nexport class NotifyMessageComponent implements OnInit {\r\n\r\n  showNotifications = false;\r\n  notifications: Array<DataNotification> = [];\r\n  showNotificationBoxMessages: Array<DataNotification> = [];\r\n  userId: string;\r\n  isMessages = false;\r\n\r\n  constructor(private dataService: DataService,\r\n              private ruleManagerService: RuleManagerService,\r\n              private ruleCreationService: RuleCreationService,\r\n              private projectService: ProjectService,\r\n              private ruleNotificationService: RuleNotificationService) {\r\n    this.notifications = this.ruleNotificationService.notifications;\r\n    this.showNotificationBoxMessages = this.ruleNotificationService.showNotifications;\r\n    this.isMessages = this.ruleNotificationService.isMessages;\r\n\r\n  }\r\n\r\n  /**\r\n   * Loads all notification\r\n   */\r\n  ngOnInit(): void {\r\n    this.loadNotifications();\r\n    this.ruleNotificationService.displayNotificationUpdate\r\n      .subscribe(response => {\r\n        this.loadNotifications();\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Displays the notification widget\r\n   */\r\n  notificationSettings(): void {\r\n    this.projectService.generateWidget(WidgetType.ruleNotificationView.toString());\r\n  }\r\n\r\n  /**\r\n   * Load all notifications\r\n   */\r\n  loadNotifications(): void {\r\n    if (!this.userId) {\r\n      this.dataService.userData.subscribe(resultUserData => {\r\n        this.userId = resultUserData.id;\r\n        this.ruleCreationService.loggedUserId = this.userId;\r\n        this.ruleNotificationService.getAllNotification(this.userId)\r\n          .subscribe(resultNotifications => {\r\n            this.ruleNotificationService.notifications = resultNotifications.notifications;\r\n            this.notifications = this.ruleNotificationService.notifications;\r\n            this.showNotificationBoxMessages = this.ruleNotificationService.showNotifications;\r\n            this.isMessages = resultNotifications.isMessages;\r\n            this.updateMessageBox();\r\n\r\n          });\r\n      });\r\n    } else {\r\n      this.ruleNotificationService.getAllNotification(this.userId)\r\n        .subscribe(resultNotifications => {\r\n          this.ruleNotificationService.notifications = resultNotifications.notifications;\r\n          this.notifications = this.ruleNotificationService.notifications;\r\n          this.showNotificationBoxMessages = this.ruleNotificationService.showNotifications;\r\n          this.isMessages = resultNotifications.isMessages;\r\n          this.updateMessageBox();\r\n\r\n        });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * User clicks notification icon and\r\n   * all notifications will be updated with attribute notify true value.\r\n   */\r\n  notifyMessages(): void {\r\n    this.showNotifications = !this.showNotifications;\r\n    if (this.notifications.filter(notification => !notification.notified).length > 0) {\r\n      const notNotifiedNotifications = this.notifications.filter(notification => !notification.notified);\r\n      notNotifiedNotifications.forEach(notification => notification.notified = true);\r\n      this.ruleManagerService.updateNotifications(this.userId, notNotifiedNotifications)\r\n        .subscribe(notifications => {\r\n            this.ruleNotificationService.getAllNotification(this.userId)\r\n              .subscribe(resultNotifications => {\r\n                this.notifications = resultNotifications.notifications;\r\n                this.showNotificationBoxMessages = this.ruleNotificationService.showNotifications;\r\n                this.isMessages = resultNotifications.isMessages;\r\n                this.updateMessageBox();\r\n\r\n              });\r\n          },\r\n          error => {\r\n            console.log('updateNotifications error', error);\r\n          });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Shows the number of not notified message umber\r\n   */\r\n  updateMessageBox(): void {\r\n    const notifymessages = this.notifications.filter(notification => !notification.notified).length;\r\n    document.querySelector('#notification-message')\r\n      .setAttribute('data-badge', `${notifymessages}`);\r\n    this.isMessages = notifymessages > 0;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\ninterface Parent {\r\n  name: string;\r\n  icon: string;\r\n  first_parent_icon: string;\r\n}\r\n\r\n// Item can be Tigger or Action Item\r\n\r\ninterface Item {\r\n  parents: Array<Parent>;\r\n  leafChild: any;\r\n  first_parent: Parent;\r\n}\r\n\r\ntype SelectItem = Item;\r\n\r\n@Pipe({\r\n  name: 'toItem'\r\n})\r\n\r\nexport class SelectItemPipe implements PipeTransform {\r\n\r\n  transform(item: Array<Item>, args?: any): Array<SelectItem> {\r\n    return item.map(p => {\r\n      const mapedItem = {\r\n        parents: p.parents,\r\n        leafChild: p.leafChild,\r\n        first_parent_icon: undefined\r\n      };\r\n      mapedItem.first_parent_icon = p.parents.length > 0 ? p.parents[0].icon : p.leafChild.icon;\r\n\r\n      return {...p, ...mapedItem};\r\n    });\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'selectedTrigger'\r\n})\r\nexport class SelectedTriggerPipe implements PipeTransform {\r\n\r\n  transform(value: any, args?: any): Array<any> {\r\n    return value.split('AND');\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TriggersFilterSchema } from '../triggers-schema';\r\nimport { ActionsFilterSchema } from '../actions-schema';\r\nimport { Device } from '../../../../models/backend/device';\r\nimport { Action } from '../../../../models/backend/action';\r\nimport { RuleCreationService } from './rule-creation.service';\r\nimport { StateOption } from '../../../../models/backend/stateoption';\r\nimport { DeviceManagerService } from '../../../../services/devicemanager.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlatformDeviceManagementService {\r\n\r\n  triggersFilterSchema = TriggersFilterSchema;\r\n  actionsFilterSchema = ActionsFilterSchema;\r\n\r\n  constructor(private ruleCreationService: RuleCreationService,\r\n              private deviceManagerService: DeviceManagerService) { }\r\n\r\n  /**\r\n   * This function adds all devices into TriggerSchema and ActionSchema.\r\n   * Devices are from OpenHab platform.\r\n   *\r\n   * @param projectId is id of selected project\r\n   * @param userId is logged user id\r\n   * @param platformId is selected platform id.\r\n   */\r\n  addAllDevices(projectId, userId, platformId): void {\r\n    if (projectId && userId) {\r\n      this.ruleCreationService.getDevicies(platformId, userId, projectId);\r\n      this.deviceManagerService.getAllDevicesByPlatform(platformId, userId, projectId)\r\n        .subscribe((devices: Array<Device>) => {\r\n          let triggerSchemaForAllDevices = this.triggersFilterSchema.children[0].children[0].children;\r\n          let actionsFilterSchema = this.actionsFilterSchema.children[0].children[0].children;\r\n          triggerSchemaForAllDevices = [];\r\n          actionsFilterSchema = [];\r\n          let deviceLeaf: any;\r\n          let deviceActionLeaf: any;\r\n          let properties = [];\r\n          let actionProperties = [];\r\n          let secondDieviceLeaf: any;\r\n          let secondActionDieviceLeaf: any;\r\n          this.ruleCreationService.possibleDevices = devices;\r\n\r\n          devices.forEach((device: Device) => {\r\n\r\n            if (device.actions && device.actions.length > 0) {\r\n               deviceLeaf = {\r\n                name: `${device.name}`,\r\n                condition_attribute: 'state',\r\n                living: true,\r\n                properties: [\r\n                ],\r\n                children: []\r\n              };\r\n               deviceActionLeaf = {\r\n                name: `${device.name}`,\r\n                condition_attribute: 'state',\r\n                living: true,\r\n                properties: [\r\n                ],\r\n                children: []\r\n              };\r\n               device.actions.forEach((action: Action) => {\r\n                if (action.states && action.states.length > 0) {\r\n\r\n                 const property = {\r\n                    text: `when device ${device.name} ${action.name} state`,\r\n                    type: 'text',\r\n                    actionID: action.id,\r\n                    deviceID: device.deviceId,\r\n                    type_options: 'dropdown',\r\n                    selects: []\r\n                  };\r\n\r\n                 const actionProperty = {\r\n                    text: `change device ${device.name} ${action.name} state to`,\r\n                    type: 'text',\r\n                    actionID: action.id,\r\n                    deviceID: device.deviceId,\r\n                    type_options: 'dropdown',\r\n                    selects: []\r\n                  };\r\n\r\n                 action.states.forEach((state: StateOption) => {\r\n                      const select = {label: state.description, value: state.state};\r\n                      property.selects.push(select);\r\n                      actionProperty.selects.push(select);\r\n                  });\r\n                 properties.push(property);\r\n                 actionProperties.push(actionProperty);\r\n\r\n                } else {\r\n                   secondDieviceLeaf = {\r\n                    name: `${device.name}`,\r\n                    action: action.name,\r\n                    condition_attribute: 'state',\r\n                    living: true,\r\n                    properties: [\r\n                      {\r\n                        text: `when device ${device.name} state (%)`,\r\n                        type: 'number',\r\n                        actionID: action.id,\r\n                        deviceID: device.deviceId,\r\n                        type_options: 'slider',\r\n                        min : 0,\r\n                        max : 100\r\n                      }\r\n                    ],\r\n                    children: []\r\n                  };\r\n\r\n                   secondActionDieviceLeaf = {\r\n                    name: `${device.name}`,\r\n                    action: action.name,\r\n                    condition_attribute: 'state',\r\n                    living: true,\r\n                    properties: [\r\n                      {\r\n                        text: `change device ${device.name} state to (%)`,\r\n                        type: 'number',\r\n                        actionID: action.id,\r\n                        deviceID: device.deviceId,\r\n                        type_options: 'slider',\r\n                        min : 0,\r\n                        max : 100\r\n                      }\r\n                    ],\r\n                    children: []\r\n                  };\r\n                   for (const index of Object.keys(action)) {\r\n                    if (index === 'value') {\r\n                     // triggerSchemaForAllDevices.push(secondDieviceLeaf);\r\n                     // actionsFilterSchema.push(secondActionDieviceLeaf);\r\n                    }\r\n                  }\r\n                }\r\n              });\r\n               if (deviceLeaf) {\r\n                deviceLeaf.properties  = properties;\r\n                triggerSchemaForAllDevices.push(deviceLeaf);\r\n                properties = [];\r\n              }\r\n               if (deviceActionLeaf) {\r\n                deviceActionLeaf.properties = actionProperties;\r\n                actionsFilterSchema.push(deviceActionLeaf);\r\n                actionProperties = [];\r\n\r\n              }\r\n            }\r\n          });\r\n\r\n          this.triggersFilterSchema.children[0].children[0].children = triggerSchemaForAllDevices;\r\n          this.actionsFilterSchema.children[0].children[0].children = actionsFilterSchema;\r\n          this.ruleCreationService.triggersFilterSchema = this.triggersFilterSchema;\r\n          this.ruleCreationService.actionsFilterSchema = this.actionsFilterSchema;\r\n          this.ruleCreationService.triggerFilterObservable.next(this.triggersFilterSchema);\r\n          this.ruleCreationService.actionsFilterObservable.next(this.actionsFilterSchema);\r\n        });\r\n    }\r\n  }\r\n}\r\n","import { EventEmitter, Injectable } from '@angular/core';\r\nimport { Triggergroup } from '../../../../models/frontend/rule_module/triggergroup';\r\nimport { RuleAction } from '../../../../models/frontend/rule_module/ruleaction';\r\nimport { Rule } from '../../../../models/frontend/rule_module/rule';\r\nimport { ProjectDB } from '../../../../models/database/project';\r\nimport { DeviceManagerService } from '../../../../services/devicemanager.service';\r\nimport { DataService } from '../../../../services/data.service';\r\nimport { TriggersFilterSchema } from '../triggers-schema';\r\nimport { Subject } from 'rxjs/Rx';\r\nimport { ActionsFilterSchema } from '../actions-schema';\r\nimport { Device } from '../../../../models/backend/device';\r\nimport { Project } from '../../../../models/frontend/project';\r\nimport { RuleManagerService } from '../../../../services/rulemanager.service';\r\n\r\n@Injectable()\r\nexport class RuleCreationService {\r\n\r\n  alltriggerList: Array<Triggergroup> = [];\r\n  allActionList: Array<RuleAction> = [];\r\n\r\n  loggedUserId: string;\r\n  loggedUserPlatforms: Array<any> = [];\r\n\r\n  triggerList: Array<Triggergroup> = [];\r\n  actionList: Array<RuleAction> = [];\r\n  triggerOverlay: any;\r\n  actionOverlay: any;\r\n  selectedOperatorList: Array<any> = [];\r\n  selectActionOperatorList: Array<any> = [];\r\n  displayRuleCreationDialog = false;\r\n  displayRuleManagement = false;\r\n  creationRule: Rule = new Rule();\r\n  projects: Array<ProjectDB> = [];\r\n  indexedProjects: Array<ProjectDB> = [];\r\n\r\n  platforms: Array<any> = [];\r\n  indexedPlatforms: Array<any> = [];\r\n  indexedTriggers: Array<any> = [];\r\n\r\n  displayStatusUpdated = new EventEmitter<boolean>();\r\n  displayManagementStatusUpdated = new EventEmitter<boolean>();\r\n  projectsUpdate = new EventEmitter<Array<ProjectDB>>();\r\n\r\n  possibleDevices: Array<any> = [];\r\n  triggersFilterSchema = TriggersFilterSchema;\r\n  actionsFilterSchema = ActionsFilterSchema;\r\n\r\n  triggerFilterObservable = new Subject();\r\n  actionsFilterObservable = new Subject();\r\n  devices: any;\r\n\r\n  allconditions: Array<any> = [];\r\n  allactions: Array<any> = [];\r\n\r\n  constructor(private devicemanager: DeviceManagerService,\r\n              private dataService: DataService,\r\n              private ruleManagerService: RuleManagerService) {\r\n    this.displayStatusUpdated.emit(this.displayRuleCreationDialog);\r\n    this.displayStatusUpdated.subscribe(response => {\r\n      this.displayRuleCreationDialog = response;\r\n    });\r\n\r\n    this.displayManagementStatusUpdated.subscribe(response => {\r\n      this.displayRuleManagement = response;\r\n    });\r\n    this.projectsUpdate.subscribe(projects => {\r\n      this.projects = projects;\r\n      this.projects.forEach(project => {\r\n        this.indexedProjects[project.id] = project;\r\n      });\r\n      this.platforms = [];\r\n      this.dataService.userData.subscribe(resultUserData => {\r\n        this.loggedUserId = resultUserData.id;\r\n      });\r\n\r\n      if (this.loggedUserId && this.indexedPlatforms.length === 0) {\r\n        this.devicemanager.getAllPlatformsFromAllProjects(this.loggedUserId)\r\n          .subscribe(platforms => {\r\n            this.indexedPlatforms = [];\r\n            platforms.forEach(platform => {\r\n              this.indexedPlatforms[platform.platformId] = platform;\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Loads all triggergroups and indexed them by trigger ID\r\n   */\r\n  loadIndexedTriggers(): void {\r\n    this.ruleManagerService.getAllTriggergroups(this.loggedUserId)\r\n      .subscribe(triggers => {\r\n        for (const trigger of triggers) {\r\n          this.indexedTriggers[trigger.ID] = trigger;\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Gets all devices by user,platform and project id.\r\n   *\r\n   * @param platformId is id of platform\r\n   * @param userId  is logged user id\r\n   * @param projectId is selected project id\r\n   */\r\n  getDevicies(platformId, userId, projectId): void {\r\n    this.devicemanager.searchForDevices(platformId, userId, projectId)\r\n      .subscribe((devices: Array<Device>) => {\r\n        this.devices = devices;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Adds parameter action\r\n   *\r\n   * @param action to be added\r\n   */\r\n  addAction(action: any): void {\r\n    this.actionList.push(action);\r\n  }\r\n\r\n  /**\r\n   * Returns local action list\r\n   *\r\n   * @returns Array<RuleAction> list\r\n   */\r\n  getAllLocalActions(): Array<RuleAction> {\r\n    return this.actionList;\r\n  }\r\n\r\n  /**\r\n   * This filter function will be multiple time called for triggers and actions.\r\n   *\r\n   * @param query search name\r\n   * @param Array<any> elements list of elements\r\n   * @param string filterValue filter value\r\n   * @returns Array<any> returns filtered list\r\n   */\r\n  filterAutocomplete(query, elements: Array<any>, filterValue: string): Array<any> {\r\n    const filtered: Array<any> = [];\r\n    elements.forEach((value: any) => {\r\n      const oneElement = value;\r\n      if (oneElement[filterValue].toLowerCase()\r\n          .indexOf(query.toLowerCase()) === 0) {\r\n        filtered.push(oneElement);\r\n      }\r\n    });\r\n\r\n    return filtered;\r\n  }\r\n}\r\n","import { EventEmitter, Injectable } from '@angular/core';\r\nimport { Rule } from '../../../../models/frontend/rule_module/rule';\r\nimport { Triggergroup } from '../../../../models/frontend/rule_module/triggergroup';\r\nimport { RuleAction } from '../../../../models/frontend/rule_module/ruleaction';\r\nimport { Project } from '../../../../models/frontend/project';\r\n\r\n@Injectable()\r\nexport class RuleManagementService {\r\n\r\n  displayRuleManagementDialog: boolean;\r\n  displayStatusUpdated = new EventEmitter<boolean>();\r\n  editRuleStatusUpdated = new EventEmitter<Rule>();\r\n  displayRuleUpdateComponent = new EventEmitter<boolean>();\r\n  editTriggergroupStatusUpdated = new EventEmitter<Triggergroup>();\r\n  editActionStatusUpdated = new EventEmitter<RuleAction>();\r\n  updateTriggerListStatus = new EventEmitter <boolean>();\r\n  getRuleValueStatus = new EventEmitter<Rule>();\r\n  updateNotificationStatus = new EventEmitter<any>();\r\n  selectedProjectData: Project;\r\n\r\n  updateTriggerList: any = {\r\n    edit: {only: [], all: [], new: {only: [], all: []}},\r\n    remove: {only: [], all: [], new: {only: [], all: []}},\r\n    addNew: []\r\n  };\r\n  changeExistingTriggerGroupStatus = new EventEmitter<any>();\r\n  changeExistingActionStatus = new EventEmitter<any>();\r\n\r\n  constructor() {\r\n    this.displayStatusUpdated\r\n      .subscribe(response => {\r\n        this.displayRuleManagementDialog = response;\r\n      });\r\n    this.editRuleStatusUpdated\r\n      .subscribe(rule => {\r\n        this.getRuleValueStatus.emit(rule);\r\n      });\r\n\r\n\r\n  }\r\n\r\n  clearUpdateTriggerList(): void {\r\n    this.updateTriggerList = {\r\n      edit: {only: [], all: [], new: {only: [], all: []}},\r\n      remove: {only: [], all: [], new: {only: [], all: []}},\r\n      addNew: []\r\n    };\r\n  }\r\n\r\n}\r\n","import { EventEmitter, Injectable } from '@angular/core';\r\nimport { DataNotification } from '../../../../models/frontend/rule_module/datanotification';\r\nimport { RuleManagerService } from '../../../../services/rulemanager.service';\r\nimport { map } from 'rxjs/operators';\r\nimport { Project } from '../../../../models/frontend/project';\r\nimport { Rule } from '../../../../models/frontend/rule_module/rule';\r\n\r\n@Injectable()\r\nexport class RuleNotificationService {\r\n\r\n  notifications: Array<DataNotification> = [];\r\n  displayNotificationUpdate = new EventEmitter<boolean>();\r\n\r\n  showNotifications: Array<DataNotification> = [];\r\n\r\n  userId: string;\r\n  isMessages = false;\r\n  maxNotifyMessageNumber = 5;\r\n  project: Project;\r\n\r\n  constructor(private ruleManagerService: RuleManagerService) {}\r\n\r\n  /**\r\n   * Adds notification to the list.\r\n   *\r\n   * @param DataNotification notification.\r\n   */\r\n  add(notification: DataNotification): void {\r\n    this.notifications.push(notification);\r\n    this.displayNotificationUpdate.emit(true);\r\n  }\r\n\r\n  clear(): void {\r\n    this.notifications = [];\r\n  }\r\n\r\n  /**\r\n   * Gets all notifications\r\n   *\r\n   * @param string userId logged user id\r\n   * @returns any notification list\r\n   */\r\n  getAllNotification(userId: string): any {\r\n    return this.ruleManagerService.getAllNotifications(userId)\r\n      .pipe(map((resultNotifications: Array<any>) => {\r\n        this.notifications = [];\r\n        resultNotifications.forEach(resultNotification => {\r\n            const relation = resultNotification.data;\r\n\r\n            if (relation && relation.notify) {\r\n              resultNotification.notification.date = new Date(resultNotification.notification.date);\r\n              this.notifications.push(resultNotification.notification);\r\n            }\r\n          });\r\n        this.showNotifications = this.notifications.length > this.maxNotifyMessageNumber ?\r\n            this.notifications.splice(0, this.maxNotifyMessageNumber) : this.notifications;\r\n\r\n        return {\r\n            isMessage: this.isMessages,\r\n            notifications: this.notifications,\r\n            showNotifications: this.showNotifications\r\n          };\r\n        },\r\n        error => {\r\n\r\n          return error;\r\n        }));\r\n  }\r\n\r\n  /**\r\n   * Save rule notification\r\n   *\r\n   * @param string userId logged user id\r\n   * @param Rule rule notification relation rule\r\n   * @param string event name\r\n   */\r\n  saveRuleNotification(userId: string, rule: Rule, event: string): void {\r\n    const notification: DataNotification = new DataNotification();\r\n    notification.userId = userId;\r\n    notification.name = rule.name;\r\n    notification.event = event;\r\n    notification.date = new Date();\r\n    notification.relation = 'Rule';\r\n    notification.relationID = rule.ID;\r\n    this.ruleManagerService.saveNotification(userId, notification)\r\n      .subscribe(notificationResponse => {\r\n          this.add(notificationResponse);\r\n          this.displayNotificationUpdate.emit(true);\r\n        }\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Trigger } from '../../../../models/frontend/rule_module/trigger';\r\nimport { RuleAction } from '../../../../models/frontend/rule_module/ruleaction';\r\nimport { Device } from '../../../../models/backend/device';\r\nimport { DeviceManagerService } from '../../../../services/devicemanager.service';\r\nimport { RuleCreationService } from './rule-creation.service';\r\nimport { Action } from '../../../../models/backend/action';\r\n\r\n@Injectable()\r\nexport class SearchDeviceService {\r\n\r\n  private userId;\r\n  private projectId;\r\n  devices: any;\r\n\r\n  constructor(private deviceManagerService: DeviceManagerService,\r\n              private ruleCreationService: RuleCreationService) {\r\n    this.devices = this.ruleCreationService.devices;\r\n  }\r\n\r\n  /**\r\n   * This function search selected trigger device ID and sensor ID\r\n   * leafChild and selectedCondition is needed to filter the right device\r\n   * @param Trigger is trigger that user select in filter\r\n   * @param leafChild  is from trigger schema selected last child components\r\n   * @param selectedCondition this is value of trigger that user has selected\r\n   * @returns Trigger After trigger deviceId and sensorID set return the same trigger\r\n   */\r\n  searchDeviceFromSelectedTrigger(trigger: Trigger, leafChild: any, selectedCondition: any): Trigger {\r\n\r\n    this.userId = this.ruleCreationService.loggedUserId;\r\n    this.projectId = this.ruleCreationService.creationRule.projectID;\r\n    trigger.deviceID = '7_openHabknx:device:38d73ce2';\r\n    trigger.sensorID = 'knx:device:38d73ce2:schlafzimmerlicht_switch';\r\n\r\n    if (selectedCondition.actionID && selectedCondition.deviceID) {\r\n      // default device ID and SensorID it will be overwritten\r\n      trigger.deviceID = selectedCondition.deviceID;\r\n      trigger.sensorID = selectedCondition.actionID;\r\n      if (leafChild.condition_attribute.toLowerCase() === 'state') {\r\n        if (trigger.condition['state'] === 'OFF') {\r\n          trigger.condition.command = 'OFF';\r\n        } else\r\n        if (trigger.condition['state'] === 'ON') {\r\n          trigger.condition.command = 'ON';\r\n        }\r\n      }\r\n    }\r\n\r\n    return trigger;\r\n  }\r\n\r\n  /**\r\n   * This function search selected action device ID and sensor ID\r\n   * leafChild and selectedCondition is needed to filter the right device\r\n   * @param action is action that user select in filter\r\n   * @param leafChild is from action schema selected last child components\r\n   * @param selectedCondition this is value of action that user has selected\r\n   * @returns RuleAction After action deviceId and sensorID set return the same action\r\n   */\r\n  searchDeviceFromSelectedAction(action: RuleAction, leafChild: any, selectedCondition: any): RuleAction {\r\n\r\n    this.userId = this.ruleCreationService.loggedUserId;\r\n    this.projectId = this.ruleCreationService.creationRule.projectID;\r\n\r\n    action.deviceID = '7_openHabknx:device:38d73ce2';\r\n    action.sensorID = 'knx:device:38d73ce2:schlafzimmerlicht_switch';\r\n    action.condition.command = 'ON';\r\n\r\n    if (selectedCondition.actionID && selectedCondition.deviceID) {\r\n      // default device ID and Sensor ID will be overwritten\r\n      action.deviceID = selectedCondition.deviceID;\r\n      action.sensorID = selectedCondition.actionID;\r\n      if (leafChild.condition_attribute.toLowerCase() === 'state') {\r\n        if (action.condition['state'] === 'OFF') {\r\n          action.condition.command = 'OFF';\r\n        } else if (action.condition['state'] === 'ON') {\r\n          action.condition.command = 'ON';\r\n        }\r\n      }\r\n    }\r\n\r\n    return action;\r\n  }\r\n}\r\n","module.exports = \".autocomplete_label {\\r\\n  margin: 15px;\\r\\n}\\r\\n\\r\\n.select-details {\\r\\n  height: 20px;\\r\\n}\\r\\n\\r\\n.clear-button {\\r\\n  margin-left: 3px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"ui-g\\\">\\r\\n  <div class=\\\"ui-g-12\\\" style=\\\"font-size: 14px;\\\">\\r\\n    <p-messages [(value)]=\\\"messeges\\\" ></p-messages>\\r\\n  </div>\\r\\n</div>\\r\\n<p-dataView #dv [value]=\\\"autoSelects\\\" [paginator]=\\\"false\\\" [rows]=\\\"2\\\" >\\r\\n  <p-header styleClass=\\\"my-panel\\\">\\r\\n    <div class=\\\"ui-helper-clearfix\\\">\\r\\n      <div class=\\\"ui-g header-details\\\">\\r\\n        <div class=\\\"ui-g-12\\\" style=\\\"padding: 0px;\\\" >\\r\\n          <p-dataViewLayoutOptions></p-dataViewLayoutOptions>\\r\\n          <button pButton type=\\\"button\\\" label=\\\"Clear\\\" class=\\\"gridster-item-content ui-button-secondary clear-button\\\" (click)=\\\"clearRuleUser()\\\" style=\\\"width: 90px;\\\"></button>\\r\\n          <button pButton type=\\\"button\\\" label=\\\"Share\\\"  (click)=\\\"shareRuleToUser(user,rule)\\\" style=\\\"width: 90px;\\\" class=\\\"gridster-item-content\\\"></button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </p-header>\\r\\n  <ng-template let-select pTemplate=\\\"listItem\\\">\\r\\n    <div class=\\\"ui-g\\\" style=\\\"padding: .3em;\\\">\\r\\n      <div class=\\\"ui-g-12\\\">\\r\\n          <div  *ngIf=\\\"select.name === 'User'\\\" >\\r\\n            <span class=\\\"first autocomplete_label\\\">User  </span>\\r\\n            <p-autoComplete [(ngModel)]=\\\"user\\\" field=\\\"username\\\" [suggestions]=\\\"filteredUsers\\\"\\r\\n                            (completeMethod)=\\\"filterUsers($event)\\\" [size]=\\\"33\\\"\\r\\n                            [minLength]=\\\"1\\\" placeholder=\\\"filter by name\\\" [dropdown]=\\\"true\\\" class=\\\"gridster-item-content\\\">\\r\\n              <ng-template let-user pTemplate=\\\"item\\\">\\r\\n                <div class=\\\"ui-helper-clearfix\\\" >\\r\\n                  <div style=\\\"font-size:14px;float:right;\\\">\\r\\n                    <span>{{ user.username }} -- </span>\\r\\n                    <span>{{ user.email }}</span>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </ng-template>\\r\\n            </p-autoComplete>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"select.name === 'Rule'\\\" >\\r\\n            <span class=\\\"first autocomplete_label\\\">Rule  </span>\\r\\n            <p-autoComplete [(ngModel)]=\\\"rule\\\" field=\\\"name\\\" [suggestions]=\\\"filteredRules\\\" (completeMethod)=\\\"filterRules($event)\\\" [size]=\\\"33\\\"\\r\\n                            [minLength]=\\\"1\\\" placeholder=\\\"filter by name\\\" [dropdown]=\\\"true\\\" class=\\\"gridster-item-content\\\">\\r\\n              <ng-template let-rule pTemplate=\\\"item\\\">\\r\\n                <div class=\\\"ui-helper-clearfix\\\" >\\r\\n                  <div style=\\\"font-size:14px;float:right;\\\">{{ rule.name }}</div>\\r\\n                </div>\\r\\n              </ng-template>\\r\\n            </p-autoComplete>\\r\\n            <br><br>\\r\\n          </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n  <ng-template let-select pTemplate=\\\"gridItem\\\">\\r\\n    <div style=\\\"padding:.1em\\\" >\\r\\n      <p-panel [header]=\\\"select.name\\\" [style]=\\\"{'text-align':'center'}\\\">\\r\\n        <div *ngIf=\\\"select.name === 'User'\\\" >\\r\\n          <p-autoComplete [(ngModel)]=\\\"user\\\" field=\\\"username\\\" [suggestions]=\\\"filteredUsers\\\" (completeMethod)=\\\"filterUsers($event)\\\" [size]=\\\"15\\\"\\r\\n                          [minLength]=\\\"1\\\" placeholder=\\\"filter by name\\\" [dropdown]=\\\"true\\\" class=\\\"gridster-item-content\\\">\\r\\n            <ng-template let-user pTemplate=\\\"item\\\">\\r\\n              <div class=\\\"ui-helper-clearfix\\\" >\\r\\n                <div style=\\\"font-size:14px;float:right;\\\">\\r\\n                  <span>{{ user.username }} -- </span>\\r\\n                  <span>{{ user.email }}</span>\\r\\n                </div>\\r\\n              </div>\\r\\n            </ng-template>\\r\\n          </p-autoComplete>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"select.name === 'Rule'\\\" >\\r\\n          <p-autoComplete [(ngModel)]=\\\"rule\\\" field=\\\"name\\\" [suggestions]=\\\"filteredRules\\\" (completeMethod)=\\\"filterRules($event)\\\" [size]=\\\"15\\\"\\r\\n                          [minLength]=\\\"1\\\" placeholder=\\\"filter by name\\\" [dropdown]=\\\"true\\\" class=\\\"gridster-item-content\\\">\\r\\n            <ng-template let-rule pTemplate=\\\"item\\\">\\r\\n              <div class=\\\"ui-helper-clearfix\\\" >\\r\\n                <div style=\\\"font-size:14px;float:right;\\\">{{ rule.name }}</div>\\r\\n              </div>\\r\\n            </ng-template>\\r\\n          </p-autoComplete>\\r\\n        </div>\\r\\n      </p-panel>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n</p-dataView>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserManagerService } from '../../../../services/usermanager.service';\r\nimport { Rule } from '../../../../models/frontend/rule_module/rule';\r\nimport { RuleManagerService } from '../../../../services/rulemanager.service';\r\nimport { RuleCreationService } from '../service/rule-creation.service';\r\nimport { DataService } from '../../../../services/data.service';\r\nimport { Message } from 'primeng/api';\r\nimport { Triggergroup } from '../../../../models/frontend/rule_module/triggergroup';\r\nimport { DeviceManagerService } from '../../../../services/devicemanager.service';\r\nimport { RuleManagementService } from '../service/rule-management.service';\r\nimport { Project } from '../../../../models/frontend/project';\r\n\r\n@Component({\r\n  selector: 'app-rule-sharing',\r\n  templateUrl: './sharing.component.html',\r\n  styleUrls: ['./sharing.component.css']\r\n})\r\nexport class SharingComponent implements OnInit {\r\n\r\n  users: Array<any> = [];\r\n  filteredUsers: Array<any> = [];\r\n  user: any;\r\n  loggedUserPlatforms: Array<any>;\r\n\r\n  rules: Array<Rule> = [];\r\n  filteredRules: Array<Rule> = [];\r\n  rule: any;\r\n  messeges: Array<Message> = [];\r\n  autoSelects: Array<any> = [];\r\n  project: Project;\r\n\r\n  constructor(private userManagerService: UserManagerService,\r\n              private ruleManagerService: RuleManagerService,\r\n              private ruleManagementService: RuleManagementService,\r\n              private ruleCreationService: RuleCreationService,\r\n              private dataService: DataService,\r\n              private deviceManager: DeviceManagerService) {\r\n    this.autoSelects = [{name: 'User'}, {name: 'Rule'}];\r\n    this.loggedUserPlatforms = this.ruleCreationService.loggedUserPlatforms;\r\n  }\r\n\r\n  /**\r\n   * Load project.\r\n   * Load platforms and projects.\r\n   * Load all users.\r\n   * Load all rules.\r\n   */\r\n  ngOnInit(): void {\r\n    if (!this.ruleManagementService.selectedProjectData) {\r\n      this.dataService.projectData\r\n        .subscribe(project => {\r\n          this.project = project;\r\n          this.ruleManagementService.selectedProjectData = project;\r\n        });\r\n    } else {\r\n      this.project = this.ruleManagementService.selectedProjectData;\r\n    }\r\n    let userId = this.ruleCreationService.loggedUserId;\r\n\r\n    this.dataService.userData.subscribe(resultUserData => {\r\n      userId = resultUserData.id;\r\n      this.ruleCreationService.loggedUserId = userId;\r\n      this.deviceManager.getAllPlatformsFromAllProjects(userId)\r\n        .subscribe(platforms => {\r\n          platforms.forEach(platform => {\r\n            this.loggedUserPlatforms[platform.platformId] = platform;\r\n          });\r\n          this.ruleCreationService.loggedUserPlatforms = this.loggedUserPlatforms;\r\n        });\r\n      this.userManagerService.getAllUsers()\r\n        .subscribe(users => {\r\n          this.users = users.filter(user => user.id !== userId);\r\n        });\r\n\r\n      this.ruleManagerService.getAllRules(userId)\r\n        .subscribe(rules => {\r\n          this.rules = rules;\r\n        });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Filters users by the name\r\n   *\r\n   * @param event is autocomplete component\r\n   */\r\n  filterUsers(event): void {\r\n    this.filteredUsers = [];\r\n    for (const i of Object.keys(this.users)) {\r\n      const user = this.users[i];\r\n      if (user.username.toLowerCase()\r\n          .indexOf(event.query.toLowerCase()) === 0) {\r\n        this.filteredUsers.push(user);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Filters rules by the name.\r\n   *\r\n   * @param event is autocomplete component.\r\n   */\r\n  filterRules(event): void {\r\n    this.filteredRules = [];\r\n    for (const i of Object.keys(this.rules)) {\r\n      const rule = this.rules[i];\r\n      if (rule.name.toLowerCase()\r\n          .indexOf(event.query.toLowerCase()) === 0) {\r\n        this.filteredRules.push(rule);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears all messages.\r\n   */\r\n  clear(): void {\r\n    this.messeges = [];\r\n  }\r\n\r\n  /**\r\n   * Clears rule and user values.\r\n   */\r\n  clearRuleUser(): void {\r\n    this.user = '';\r\n    this.rule = '';\r\n  }\r\n\r\n  /**\r\n   * Share the rule to the another user\r\n   *\r\n   * @param user is shared user.\r\n   * @param Rule rule shared rule.\r\n   */\r\n  shareRuleToUser(user: any, rule: Rule): void {\r\n    this.clear();\r\n    if (!user) {\r\n      this.messeges.push({\r\n        severity: 'error',\r\n        summary: '',\r\n        detail: 'User has not been selected'\r\n      });\r\n      setTimeout(() => {\r\n        this.clear();\r\n      }, 2000);\r\n    } else if (!rule) {\r\n      this.messeges.push({\r\n        severity: 'error',\r\n        summary: '',\r\n        detail: 'Rule has not been selected'\r\n      });\r\n      setTimeout(() => {\r\n        this.clear();\r\n      }, 2000);\r\n    } else {\r\n      this.ruleManagerService.getTriggersByTGID(this.ruleCreationService.loggedUserId, rule.rootTGID)\r\n        .subscribe(triggers => {\r\n          const responseTriggers: Array<Triggergroup> = triggers;\r\n          for (const trigger of responseTriggers) {\r\n            trigger.userId = user.id;\r\n          }\r\n          this.ruleManagerService.shareAllTriggergroup(user.id, rule.rootTGID, responseTriggers)\r\n            .subscribe(\r\n              TriggerRoot => {\r\n                rule.rootTGID = TriggerRoot;\r\n                rule.userId = user.id;\r\n                this.deviceManager.getAllPlatformsFromAllProjects(user.id)\r\n                  .subscribe(platforms => {\r\n                    const lgUsPlatform = this.ruleCreationService.loggedUserPlatforms[rule.platformID];\r\n                    if (platforms.length === 0) {\r\n                      this.messeges.push({\r\n                        severity: 'error',\r\n                        summary: '',\r\n                        detail: 'This user does not have any assigned platform'\r\n                      });\r\n                      setTimeout(() => {\r\n                        this.clear();\r\n                      }, 2000);\r\n                    } else {\r\n\r\n                      platforms.forEach((platform: any, index: number) => {\r\n                        if (lgUsPlatform && platform.ip === lgUsPlatform.ip && platform.port === lgUsPlatform.port) {\r\n                          const sharedRule = new Rule();\r\n                          sharedRule.setRuleData(rule);\r\n                          sharedRule.platformID = platform.platformId;\r\n                          sharedRule.projectID = platform.projectId;\r\n                          this.ruleManagerService.saveRule(user.id, sharedRule)\r\n                            .subscribe(\r\n                              responseRule => {\r\n                                if (index === platforms.length - 1) {\r\n                                  this.messeges.push({\r\n                                    severity: 'success',\r\n                                    summary: '',\r\n                                    detail: `Rule ${responseRule.name} has been shared`\r\n                                  });\r\n                                }\r\n                                setTimeout(() => {\r\n                                  this.clear();\r\n                                }, 2000);\r\n                              },\r\n                              error => {\r\n                                setTimeout(() => {\r\n                                  this.clear();\r\n                                }, 2000);\r\n                                if (index === platforms.length - 1) {\r\n                                  if (error.status === 404) {\r\n                                    this.messeges.push({\r\n                                      severity: 'error',\r\n                                      summary: '',\r\n                                      detail: 'This user does not have any rule compatible platforms'\r\n                                    });\r\n                                  } else {\r\n                                    this.messeges.push({\r\n                                      severity: 'error',\r\n                                      summary: '',\r\n                                      detail: 'This rule has not been shared. Something went wrong'\r\n                                    });\r\n                                  }\r\n                                }\r\n                              });\r\n                        }\r\n                      });\r\n                    }\r\n                  });\r\n\r\n              },\r\n              error => {\r\n                console.log('share all Triggergroup error', error);\r\n              });\r\n        });\r\n    }\r\n  }\r\n}\r\n","import { weekdays } from '../../../models/frontend/rule_module/weekdays';\r\n\r\nexport const TriggersFilterSchema: any = {\r\n  children: [\r\n    {\r\n      id:1,\r\n      name: 'Entity Situation',\r\n      triggerClass: 'Entitysituation',\r\n      icon: 'universal-access',\r\n      children: [\r\n        {\r\n          name: 'All Devices',\r\n          children: []\r\n        },\r\n        {\r\n          name: 'Light',\r\n          living: false,\r\n          condition_attribute: 'state',\r\n          itemtype: 'Light',\r\n          triggerClass: 'Entitysituation',\r\n          properties: [\r\n            {\r\n              text: 'When light  brightness is (%)',\r\n              type: 'number',\r\n              type_options: 'slider',\r\n              min: 0,\r\n              max: 100\r\n            },\r\n            {\r\n              text: 'When light is',\r\n              type: 'text',\r\n              type_options: 'inputSwitch'\r\n            }\r\n          ],\r\n          children: []\r\n        },\r\n        {\r\n          name: 'Temperature',\r\n          children: [\r\n            {\r\n              name: 'Heater',\r\n              condition_attribute: 'temperature',\r\n              living: true,\r\n              properties: [\r\n                {\r\n                  text: 'When temperature is less than (°C)',\r\n                  type: 'number',\r\n                  operator: '<',\r\n                  type_options: 'slider',\r\n                  min: 0,\r\n                  max: 100\r\n                },\r\n                {\r\n                  text: 'When temperature is more than (°C)',\r\n                  type: 'number',\r\n                  operator: '>',\r\n                  type_options: 'slider',\r\n                  min: 0,\r\n                  max: 100\r\n                },\r\n                {\r\n                  text: 'When temperature is equal to (°C)',\r\n                  type: 'number',\r\n                  operator: '=',\r\n                  type_options: 'slider',\r\n                  min: 0,\r\n                  max: 100\r\n                }\r\n              ],\r\n              children: []\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id:2,\r\n      name: 'Temporal',\r\n      triggerClass: 'Temporal',\r\n      icon: 'clock-o',\r\n      children: [\r\n        {\r\n          name: 'Calendar',\r\n          condition_attribute: 'time',\r\n          properties: [\r\n            {\r\n              text: 'In this calendar date',\r\n              type: 'text',\r\n              type_options: 'calendar'\r\n            }\r\n          ],\r\n          children: []\r\n        },\r\n        {\r\n          name: 'Days of Week',\r\n          condition_attribute: 'days',\r\n          properties: [\r\n            {\r\n              text: 'Repeat every week',\r\n              type: 'text',\r\n              type_options: 'multiselect',\r\n              selects: weekdays\r\n            },\r\n            {\r\n              text: 'Only current week',\r\n              type: 'text',\r\n              type_options: 'multiselect',\r\n              selects: weekdays\r\n            }\r\n          ],\r\n          children: []\r\n        },\r\n        {\r\n          name: 'Time',\r\n          condition_attribute: 'time',\r\n          properties: [\r\n            {\r\n              text: 'Everyday this time',\r\n              type: 'text',\r\n              type_options: 'time'\r\n            },\r\n            {\r\n              text: 'Only once',\r\n              type: 'text',\r\n              type_options: 'time'\r\n            }\r\n          ],\r\n          children: []\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id:3,\r\n      name: 'Spatial',\r\n      triggerClass: 'Spatial',\r\n      icon: 'map-marker',\r\n      condition_attribute: 'location',\r\n      properties: [\r\n        {\r\n          text: 'When device location is',\r\n          type: 'text',\r\n          type_options: 'dropdown',\r\n          selects: [\r\n            {label: 'Fixed', value: 'Fixed'},\r\n            {label: 'Moving', value: 'Moving'}\r\n          ]\r\n        }\r\n      ],\r\n      children: []\r\n    },\r\n    {\r\n      id:4,\r\n      name: 'Situation',\r\n      triggerClass: 'Situation',\r\n      icon: 'automobile',\r\n      children: [\r\n        {\r\n          name: 'Weather',\r\n          condition_attribute: 'weather',\r\n          properties: [\r\n            {\r\n              text: 'When weather temperature is less than',\r\n              type: 'number',\r\n              operator: '<',\r\n              type_options: 'slider',\r\n              min: 0,\r\n              max: 100\r\n            },\r\n            {\r\n              text: 'When weather temperature is more than',\r\n              type: 'number',\r\n              operator: '>',\r\n              type_options: 'slider',\r\n              min: 0,\r\n              max: 100\r\n            },\r\n            {\r\n              text: 'When weather temperature is equal to',\r\n              type: 'number',\r\n              operator: '=',\r\n              type_options: 'slider',\r\n              min: 0,\r\n              max: 100\r\n            }\r\n          ],\r\n          children: []\r\n        },\r\n        {\r\n          name: 'Traffic Situation',\r\n          condition_attribute: 'trafficsituation',\r\n          properties: [\r\n            {\r\n              text: 'When traffic situation is',\r\n              type: 'text',\r\n              type_options: 'dropdown',\r\n              selects: [\r\n                {label: 'Traffic High', value: 'high'},\r\n                {label: 'Traffic Middle', value: 'middle'},\r\n                {label: 'Traffic Low', value: 'low'}\r\n              ]\r\n            }\r\n          ],\r\n          children: []\r\n        },\r\n        {\r\n          name: 'Movement',\r\n          condition_attribute: 'state',\r\n          living: false,\r\n          itemtype: 'Movement',\r\n          properties: [\r\n            {\r\n              text: 'When movement is detected',\r\n              type: 'text',\r\n              type_options: 'inputSwitch'\r\n            }\r\n          ],\r\n          children: []\r\n        },\r\n        {\r\n          name: 'Place',\r\n          living: false,\r\n          state: 'place',\r\n          condition_attribute: 'place',\r\n          properties: [\r\n            {\r\n              text: 'When device is located',\r\n              type: 'text',\r\n              type_options: 'dropdown',\r\n              selects: [\r\n                {label: 'Inside', value: 'inside'},\r\n                {label: 'Outside', value: 'outside'}\r\n              ]\r\n            }\r\n          ],\r\n          children: []\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'Communication',\r\n      triggerClass: 'Communication',\r\n      icon: 'wechat',\r\n      children: [\r\n        {\r\n          name: 'E-Mail',\r\n          condition_attribute: 'email',\r\n          properties: [\r\n            {\r\n              text: 'When E-Mail is received from',\r\n              type: 'text',\r\n              type_options: 'input'\r\n            }\r\n          ],\r\n          children: []\r\n        },\r\n        {\r\n          name: 'Telephone number',\r\n          condition_attribute: 'telephonenumber',\r\n          properties: [\r\n            {\r\n              text: 'When telephone communication is with',\r\n              type: 'number',\r\n              type_options: 'input'\r\n            }\r\n          ],\r\n          children: []\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'Service',\r\n      triggerClass: 'Service',\r\n      icon: 'cloud',\r\n      children: [\r\n        {\r\n          name: 'Non Physical service',\r\n          condition_attribute: 'entry',\r\n          physical: false,\r\n          properties: [\r\n            {\r\n              text: 'When non physical service is',\r\n              type: 'string',\r\n              type_options: 'dropdown',\r\n              selects: [\r\n                {label: 'Entry in Database', value: 'Entry in Database'},\r\n                {label: 'Entry in Logs', value: 'Entry in Logs'},\r\n                {label: 'Data from Web Service', value: 'Data from Web Service'}\r\n\r\n              ]\r\n            }\r\n          ],\r\n          children: []\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n};\r\n","module.exports = \"/* You can find the definition of class widget-design in \\\"Themes/mixin.scss */\\r\\n/*@import '/ClickDigitalFrontend/src/assets/resources/themes/_theme.scss';*/\\r\\n.widget-container {\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n  background-color: white;\\r\\n\\r\\n}\\r\\n.widget-content {\\r\\n  padding: 10px 0px 10px 0px;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n}\\r\\n.ui-card-body {\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n}\\r\\n.ui-card-content {\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n}\\r\\n.delete-button {\\r\\n  transition: all 0.5s;\\r\\n  position: absolute;\\r\\n  right: 40px;\\r\\n  top: 5px;\\r\\n}\\r\\n.delete-button:hover {\\r\\n  background-image: none;\\r\\n}\\r\\n.dev-button {\\r\\n  transition: all 0.5s;\\r\\n  position: absolute;\\r\\n  right: 5px;\\r\\n  top: 5px;\\r\\n}\\r\\n.dev-button:hover {\\r\\n  background-image: none;\\r\\n}\\r\\n.change-name {\\r\\n  width: 80%;\\r\\n  top: 0;\\r\\n}\\r\\n.tbutton {\\r\\n  border: none !important;\\r\\n}\\r\\n.transparentButton {\\r\\n  background-color: transparent !important;\\r\\n}\\r\\n.widget-design {\\r\\n  /*width: -moz-fit-content;\\r\\n  width: fit-content;\\r\\n  height: fit-content;*/\\r\\n /* background-color: $contentBgColor;*/\\r\\n  /*border-color: #303f9f;*/\\r\\n  /*background-color: transparent;*/\\r\\n  width: 100% !important;\\r\\n  height: 100% !important;\\r\\n\\r\\n  /*overflow: hidden;*/\\r\\n  -o-object-fit: none;\\r\\n  object-fit: none;\\r\\n  border-radius: 2px;\\r\\n  -webkit-user-select: none;\\r\\n  -moz-user-select: none;\\r\\n  -ms-user-select: none;\\r\\n  user-select: none;\\r\\n}\\r\\n.gridster-design{\\r\\n  overflow: visible;\\r\\n  pointerEvents: 'auto';\\r\\n}\\r\\n.ui-card {\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n}\\r\\n::ng-deep .ui-dropdown-filter-container {\\r\\n  width: 95% !important;\\r\\n}\\r\\n[hidden] {\\r\\n  display: none;\\r\\n}\\r\\n\"","module.exports = \"<gridster  #dashboardgrid [options]=\\\"options\\\" class=\\\"widget-container\\\" >\\r\\n        <!--gridster-item *ngFor=\\\"let widget of list\\\" id=\\\"widget.id\\\" [id]=\\\"widget.id\\\" (click)=\\\"getCurrentWidget();\\\" (mouseup)=\\\"enablePointer(widget.id)\\\" [item]=\\\"widget.position\\\" class=\\\"gridster-design drag-handler\\\">\\r\\n          <p-card class=\\\"gridster-item-content\\\" styleClass=\\\"ui-card-shadow\\\">\\r\\n\\r\\n\\r\\n            <button pButton icon=\\\"fa fa-pencil\\\" [hidden]=\\\"!(loginStatus > 1 && !widget.isDeveloped)\\\" (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" (click)=\\\"widget.isDeveloped = !widget.isDeveloped;\\\" class=\\\"tbutton transparentButton dev-button ui-button-secondary\\\">\\r\\n            </button>\\r\\n\\r\\n            <button pButton icon=\\\"fa fa-eye\\\" [hidden]=\\\"!(loginStatus > 1 && widget.isDeveloped)\\\" (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" (click)=\\\"widget.isDeveloped = !widget.isDeveloped;\\\" class=\\\"tbutton transparentButton dev-button ui-button-secondary\\\">\\r\\n            </button>\\r\\n\\r\\n            <button pButton=\\\"delete\\\" icon=\\\"fa fa-trash\\\" [hidden]=\\\"!(loginStatus>1 && widget.isDeveloped)\\\" (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" (click)=\\\"deleteWidget(widget.id)\\\"\\r\\n                    class=\\\"delete-button tbutton transparentButton ui-button-secondary\\\">\\r\\n            </button>\\r\\n\\r\\n            <div [ngSwitch]=\\\"widget.type\\\" style=\\\"height:100%; width:100%;\\\">\\r\\n              <div *ngSwitchCase=\\\"widgetType.sliderDeviceControl\\\" class=\\\"widget-content\\\" style=\\\"width:100%;margin: 0 auto;\\\">\\r\\n                <slider-control-device style= \\\"height: 100%; width:100%;\\\" [currentWidget]=\\\"widget\\\"></slider-control-device>\\r\\n              </div>\\r\\n              <div *ngSwitchCase=\\\"widgetType.toggleDeviceControl\\\" class=\\\"widget-content\\\" style=\\\"width:100%; margin: 0 auto;\\\">\\r\\n                <toggle-control-device style= \\\"height: 100%; width:100%;\\\" [currentWidget]=\\\"widget\\\"></toggle-control-device>\\r\\n              </div>\\r\\n              <div *ngSwitchCase=\\\"widgetType.stateDeviceControl\\\" class=\\\"widget-content\\\" style=\\\"width:100%; margin: 0 auto;\\\">\\r\\n                <state-control-device style= \\\"height: 100%; width:100%;\\\" [currentWidget]=\\\"widget\\\"></state-control-device>\\r\\n              </div>\\r\\n              <div *ngSwitchCase=\\\"widgetType.realtimeValueVisualization\\\" class=\\\"widget-content\\\" style=\\\"width:100%; margin: 0 auto;\\\">\\r\\n                <realtime-value-visualization style= \\\"height: 100%; width:100%;\\\" [currentWidget]=\\\"widget\\\" (resizeFont)=\\\"handleResizeFont($event)\\\"></realtime-value-visualization>\\r\\n              </div>\\r\\n\\r\\n              <div *ngSwitchDefault class=\\\"widget-content\\\">\\r\\n                <input pInputText *ngIf=\\\"widget.isDeveloped\\\" class=\\\"gridster-item-content\\\" [(ngModel)]=\\\"widget.name\\\" placeholder=\\\"name\\\"  style=\\\"width: 80%;\\\" (ngModelChange)=\\\"saveInDatabase(widget.id, $event, 'name')\\\">\\r\\n                <h3 class=\\\"gridster-item-content\\\" *ngIf=\\\"!widget.isDeveloped\\\" style=\\\"margin: 0;\\\">{{widget.name}}</h3>\\r\\n\\r\\n                <bar-chart-visualization style= \\\"height: 100%; width:100%;\\\" [currentWidget]=\\\"widget\\\" (resizeFont)=\\\"handleResizeFont($event)\\\" *ngIf=\\\"widget.type === widgetType.barChartVisualization\\\"></bar-chart-visualization>\\r\\n                <chart-visualization style= \\\"height: 100%; width:100%;\\\" [currentWidget]=\\\"widget\\\" (resizeFont)=\\\"handleResizeFont($event)\\\" *ngIf=\\\"widget.type === widgetType.lineChartVisualization\\\"></chart-visualization>\\r\\n                <history-anomaly style= \\\"height: 100%; width:100%;\\\" [currentWidget]=\\\"widget\\\" (resizeFont)=\\\"handleResizeFont($event)\\\" *ngIf=\\\"widget.type === widgetType.historyAnomaly\\\"></history-anomaly>\\r\\n                <realtime-anomaly style= \\\"height: 100%; width:100%;\\\" [currentWidget]=\\\"widget\\\" (resizeFont)=\\\"handleResizeFont($event)\\\" *ngIf=\\\"widget.type === widgetType.realtimeAnomaly\\\"></realtime-anomaly>\\r\\n                <app-add-device style= \\\"height: 100%; width:100%;\\\"[currentWidget]=\\\"widget\\\" *ngIf=\\\"widget.type === widgetType.addDevice\\\"></app-add-device>\\r\\n                <app-delete-device style= \\\"height: 100%; width:100%;\\\"[currentWidget]=\\\"widget\\\" *ngIf=\\\"widget.type === widgetType.deleteDevice\\\"></app-delete-device>\\r\\n\\r\\n                <div *ngIf=\\\"widget.type === widgetType.ruleManagementView\\\" class=\\\"widget-content\\\" style=\\\"width:100%; margin: 0 auto;\\\">\\r\\n                  <br>\\r\\n                  <app-rule-management style= \\\"height: 100%; width: 100%;\\\" [currentWidget]=\\\"widget\\\" ></app-rule-management>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"widget.type === widgetType.ruleNotificationView\\\" class=\\\"widget-content\\\" style=\\\"width:100%; margin: 0 auto;\\\">\\r\\n                  <br>\\r\\n                  <app-rule-notification style= \\\"height: 100%; width: 100%;\\\" [currentWidget]=\\\"widget\\\" ></app-rule-notification>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"widget.type === widgetType.ruleSharingViewWidget\\\"  class=\\\"widget-content\\\" style=\\\"width:100%; margin: 0 auto;\\\">\\r\\n                  <app-rule-sharing style= \\\"height: 100%; width: 100%;\\\" ></app-rule-sharing>\\r\\n                </div>\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n          </p-card>\\r\\n        </gridster-item-->\\r\\n\\r\\n  <gridster-item *ngFor=\\\"let widget of list\\\" id=\\\"widget.id\\\" [id]=\\\"widget.id\\\" [item]=\\\"widget.position\\\" class=\\\"gridster-design\\\" (mouseup)=\\\"enablePointer(widget.id)\\\" style=\\\"word-break: break-all;\\\">\\r\\n    <p-card  styleClass=\\\"ui-card-shadow\\\" >\\r\\n      <!-- toggle developermode button-->\\r\\n\\r\\n      <button pButton icon=\\\"fa fa-pencil\\\" [hidden]=\\\"!(loginStatus > 1 && !widget.isDeveloped)\\\" (mousedown)=\\\"$event.stopPropagation()\\\"\\r\\n              (touchstart)=\\\"$event.stopPropagation()\\\" (click)=\\\"widget.isDeveloped = !widget.isDeveloped;\\\"\\r\\n              class=\\\"gridster-item-content tbutton transparentButton dev-button ui-button-secondary\\\">\\r\\n      </button>\\r\\n\\r\\n      <button pButton icon=\\\"fa fa-eye\\\" [hidden]=\\\"!(loginStatus > 1 && widget.isDeveloped)\\\" (mousedown)=\\\"$event.stopPropagation()\\\"\\r\\n              (touchstart)=\\\"$event.stopPropagation()\\\" (click)=\\\"changeDeveloperMode(widget);\\\"\\r\\n              class=\\\"gridster-item-content tbutton transparentButton dev-button ui-button-secondary\\\">\\r\\n      </button>\\r\\n\\r\\n      <!-- delete button-->\\r\\n      <button pButton=\\\"delete\\\" icon=\\\"fa fa-trash\\\" [hidden]=\\\"!(loginStatus>1 && widget.isDeveloped)\\\" (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" (click)=\\\"deleteWidget(widget.id)\\\"\\r\\n              class=\\\"gridster-item-content delete-button tbutton transparentButton ui-button-secondary\\\">\\r\\n      </button>\\r\\n\\r\\n      <!-- changes the widget content -->\\r\\n\\r\\n      <div [ngSwitch]=\\\"widget.type\\\" style=\\\"height:100%; width:100%;\\\">\\r\\n        <div *ngSwitchCase=\\\"widgetType.sliderDeviceControl\\\" class=\\\"widget-content\\\" style=\\\"width:100%;margin: 0 auto;\\\">\\r\\n          <slider-control-device style= \\\"height: 100%; width:100%;\\\" [currentWidget]=\\\"widget\\\"></slider-control-device>\\r\\n        </div>\\r\\n        <div *ngSwitchCase=\\\"widgetType.toggleDeviceControl\\\" class=\\\"widget-content\\\" style=\\\"width:100%; margin: 0 auto;\\\">\\r\\n          <toggle-control-device style= \\\"height: 100%; width:100%;\\\" [currentWidget]=\\\"widget\\\"></toggle-control-device>\\r\\n        </div>\\r\\n        <div *ngSwitchCase=\\\"widgetType.stateDeviceControl\\\" class=\\\"widget-content\\\" style=\\\"width:100%; margin: 0 auto;\\\">\\r\\n          <state-control-device style= \\\"height: 100%; width:100%;\\\" [currentWidget]=\\\"widget\\\"></state-control-device>\\r\\n        </div>\\r\\n        <div *ngSwitchCase=\\\"widgetType.realtimeValueVisualization\\\" class=\\\"widget-content\\\" style=\\\"width:100%; margin: 0 auto;\\\">\\r\\n          <realtime-value-visualization style= \\\"height: 100%; width:100%;\\\" [currentWidget]=\\\"widget\\\" (resizeFont)=\\\"handleResizeFont($event)\\\"></realtime-value-visualization>\\r\\n        </div>\\r\\n        <!--<div *ngSwitchCase=\\\"widgetType.historyAnomaly\\\" class=\\\"widget-content\\\" style=\\\"width:100%; margin: 0 auto;\\\">-->\\r\\n        <!--<history-anomaly style= \\\"height: 100%; width:100%;\\\" [currentWidget]=\\\"widget\\\"></history-anomaly>-->\\r\\n        <!--</div>-->\\r\\n\\r\\n        <div *ngSwitchDefault class=\\\"widget-content\\\">\\r\\n          <input pInputText *ngIf=\\\"widget.isDeveloped\\\" class=\\\"gridster-item-content\\\" [(ngModel)]=\\\"widget.name\\\" placeholder=\\\"name\\\"  style=\\\"width: 80%; \\\" (ngModelChange)=\\\"saveInDatabase(widget.id, $event, 'name')\\\">\\r\\n          <h3 class=\\\"gridster-item-content\\\" *ngIf=\\\"!widget.isDeveloped\\\" style=\\\"margin: 0; \\\">{{widget.name}}</h3>\\r\\n          <!-- select device -->\\r\\n          <bar-chart-visualization style= \\\"height: 100%; width:100%;\\\" [currentWidget]=\\\"widget\\\" (resizeFont)=\\\"handleResizeFont($event)\\\" *ngIf=\\\"widget.type === widgetType.barChartVisualization\\\"></bar-chart-visualization>\\r\\n          <doughnut-chart-visualization style= \\\"height: 100%; width:100%;\\\" [currentWidget]=\\\"widget\\\" (resizeFont)=\\\"handleResizeFont($event)\\\" *ngIf=\\\"widget.type === widgetType.doughnutChartVisualization\\\"></doughnut-chart-visualization>\\r\\n          <polar-area-chart-visualization style= \\\"height: 100%; width:100%;\\\" [currentWidget]=\\\"widget\\\" (resizeFont)=\\\"handleResizeFont($event)\\\" *ngIf=\\\"widget.type === widgetType.polarAreaChartVisualization\\\"></polar-area-chart-visualization>\\r\\n          <bubble-chart-visualization style= \\\"height: 100%; width:100%;\\\" [currentWidget]=\\\"widget\\\" (resizeFont)=\\\"handleResizeFont($event)\\\" *ngIf=\\\"widget.type === widgetType.bubbleChartVisualization\\\"></bubble-chart-visualization>\\r\\n          <chart-visualization style= \\\"height: 100%; width:100%;\\\" [currentWidget]=\\\"widget\\\" (resizeFont)=\\\"handleResizeFont($event)\\\" *ngIf=\\\"widget.type === widgetType.lineChartVisualization\\\"></chart-visualization>\\r\\n          <history-anomaly style= \\\"height: 100%; width:100%;\\\" [currentWidget]=\\\"widget\\\" (resizeFont)=\\\"handleResizeFont($event)\\\" *ngIf=\\\"widget.type === widgetType.historyAnomaly\\\"></history-anomaly>\\r\\n          <realtime-anomaly style= \\\"height: 100%; width:100%;\\\" [currentWidget]=\\\"widget\\\" (resizeFont)=\\\"handleResizeFont($event)\\\" *ngIf=\\\"widget.type === widgetType.realtimeAnomaly\\\"></realtime-anomaly>\\r\\n          <app-add-device style= \\\"height: 100%; width:100%;\\\"[currentWidget]=\\\"widget\\\" *ngIf=\\\"widget.type === widgetType.addDevice\\\"></app-add-device>\\r\\n          <app-delete-device style= \\\"height: 100%; width:100%;\\\"[currentWidget]=\\\"widget\\\" *ngIf=\\\"widget.type === widgetType.deleteDevice\\\"></app-delete-device>\\r\\n          <!-- rule widgets -->\\r\\n          <div *ngIf=\\\"widget.type === widgetType.ruleManagementView\\\" class=\\\"widget-content\\\" style=\\\"width:100%; margin: 0 auto;\\\">\\r\\n            <br>\\r\\n            <app-rule-management style= \\\"height: 100%; width: 100%;\\\" [currentWidget]=\\\"widget\\\" (messageEvent)=\\\"forwardMsgToDashboardComponent($event)\\\"></app-rule-management>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"widget.type === widgetType.ruleNotificationView\\\" class=\\\"widget-content\\\" style=\\\"width:100%; margin: 0 auto;\\\">\\r\\n            <br>\\r\\n            <app-rule-notification style= \\\"height: 100%; width: 100%;\\\" [currentWidget]=\\\"widget\\\" ></app-rule-notification>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"widget.type === widgetType.ruleSharingViewWidget\\\"  class=\\\"widget-content\\\" style=\\\"width:100%; margin: 0 auto;\\\">\\r\\n            <app-rule-sharing style= \\\"height: 100%; width: 100%;\\\" ></app-rule-sharing>\\r\\n          </div>\\r\\n          <!-- end rule widgets -->\\r\\n        </div>\\r\\n      </div>\\r\\n    </p-card>\\r\\n  </gridster-item>\\r\\n\\r\\n</gridster>\\r\\n\\r\\n\\r\\n\"","import {Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from '../../../services/data.service';\r\nimport { ProjectService } from '../../../services/project.service';\r\nimport { CompactType, GridsterConfig, GridsterItem, GridType, DisplayGrid, GridsterItemComponentInterface } from 'angular-gridster2';\r\nimport { DatabaseService } from '../../../services/database.service';\r\nimport * as $ from 'jquery';\r\nimport { Project } from '../../../models/frontend/project';\r\nimport { Widget } from '../../../models/frontend/widget';\r\nimport { Fieldvalue } from '../../../models/frontend/fieldvalue';\r\nimport { WidgetType } from '../../../models/frontend/widget';\r\nimport { EntityStatechangeResponse } from '../../../models/backend/entitystatechangeresponse';\r\nimport { ValueViewWidget } from '../../../models/frontend/valueviewwidget';\r\nimport { User } from '../../../models/frontend/user';\r\nimport { RuleNotificationService } from '../rules/service/rule-notification.service';\r\nimport {LineChartWidget} from '../../../models/frontend/linechartwidget';\r\nimport {RealtimeAnomalyWidget} from \"../../../models/frontend/realtimeanomalywidget\";\r\nimport {Doughnutchartwidget} from \"../../../models/frontend/doughnutchartwidget\";\r\nimport { environment} from \"../../../../environments/environment\";\r\nimport {SliderWidget} from \"../../../models/frontend/sliderwidget\";\r\nimport {StateWidget} from \"../../../models/frontend/statewidget\";\r\nimport {ToggleWidget} from \"../../../models/frontend/togglewidget\";\r\n\r\n@Component({\r\n  selector: 'sheet-content',\r\n  templateUrl: './sheet-content.component.html',\r\n  styleUrls: ['./sheet-content.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SheetContentComponent implements OnInit {\r\n\r\n  @Output() messageEvent = new EventEmitter<any>();\r\n\r\n  constructor(protected databaseService: DatabaseService,\r\n              private dataService: DataService,\r\n              protected projectService: ProjectService,\r\n              private notificationService: RuleNotificationService,\r\n              private router: Router) {\r\n  }\r\n\r\n  protected widgetType = WidgetType;\r\n  protected project: Project;\r\n  // protected widgets;\r\n  protected currentDashboardId: string;\r\n  protected user: User;\r\n  protected currentSheetId: string;\r\n  protected widgetPosition: GridsterItem;\r\n  protected currentWidgetId: string;\r\n\r\n  protected dashboard: Array<GridsterItem>;\r\n  protected loginStatus: number;\r\n  options: GridsterConfig;\r\n  optionsOLD: GridsterConfig;\r\n  list: Array<Widget>;\r\n  dataloaded: boolean;\r\n  mouseup = false;\r\n\r\n static itemChange(item: GridsterItem, itemComponent: GridsterItemComponentInterface): void {\r\n    console.log(\"itemChange!!!\");\r\n    var el = document.getElementById(itemComponent.el.id);\r\n    console.log(\"element: \", el);\r\n    if (el !== undefined && el !== null ) {el.style.pointerEvents = 'auto';}\r\n  }\r\n\r\n  static itemResize(item: GridsterItem, itemComponent: GridsterItemComponentInterface) {\r\n    console.log(\"itemRESIZE!!!\");\r\n    var el = document.getElementById(itemComponent.el.id);\r\n    console.log(\"elem: \", el);\r\n    if (el !== undefined && el !== null ) {el.style.pointerEvents = 'auto';}\r\n  }\r\n\r\n  enablePointer(widgetId: string) {\r\n    console.log(\"enablePointer!!!\");\r\n    var el = document.getElementById(widgetId);\r\n    if (el !== undefined && el !== null ) {el.style.pointerEvents = 'auto';}\r\n  }\r\n\r\n  handleResizeFont(elem: HTMLElement): void {\r\n    console.log(\"handle it!\");\r\n    //SheetContentComponent.fitText(elem);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.dataService.currentLoginStatus.subscribe(value => {\r\n      this.loginStatus = value;\r\n      this.dataloaded = true;\r\n    });\r\n    this.dataService.userData\r\n      .subscribe((user: User) => this.user = user);\r\n    this.dataService.currentDashboardId\r\n      .subscribe(dashboardId => {\r\n        this.currentDashboardId = dashboardId;\r\n      });\r\n    this.dataService.currentSheetId\r\n      .subscribe(sheetId => {\r\n        this.currentSheetId = sheetId;\r\n      });\r\n    this.dataService.projectData\r\n      .subscribe((project: Project) => {\r\n        this.project = project;\r\n        console.log('updated Project data');\r\n        console.log(\"project: \", project);\r\n        this.list = this.widgetList();\r\n        console.log(this.list);\r\n      });\r\n\r\n    // on hover, change color of buttons\r\n    $(document).ready(function() {\r\n      $('.tbutton').hover(function() {\r\n          $(this).addClass('ui-button-primary');\r\n          $(this).removeClass('transparentButton');\r\n          $(this).removeClass('ui-button-secondary');\r\n\r\n        },\r\n        function() {\r\n          $(this).addClass('transparentButton');\r\n          $(this).addClass('ui-button-secondary');\r\n          $(this).removeClass('ui-button-primary');\r\n        });\r\n    });\r\n\r\n    this.options = {\r\n      itemChangeCallback: SheetContentComponent.itemChange,\r\n      itemResizeCallback: SheetContentComponent.itemResize,\r\n      gridType: GridType.Fit,\r\n      displayGrid: DisplayGrid.Always,\r\n      compactType: CompactType.None,\r\n      margin: 10,\r\n      outerMargin: true,\r\n      cols: 100,\r\n      rows:50,\r\n      minCols: 100,\r\n      //maxCols: 200,\r\n      minRows: 50,\r\n      //maxRows: 100,\r\n      pushItems: false,\r\n      pushDirections: {north: false, east: false, south: false, west: false},\r\n      pushResizeItems: false,\r\n      swap: false,\r\n      disablePushOnDrag: true,\r\n      disablePushOnResize: true,\r\n      draggable: {\r\n        enabled: true,\r\n        stop: function (event, $element, widget) {\r\n          console.log(\"dragable\");\r\n          this.saveInDatabase($element.el.id, event, 'position');\r\n        }.bind(this)\r\n      },\r\n      resizable: {\r\n        enabled: true,\r\n        stop: function (event, $element, widget) {\r\n          console.log(\"resizeable\");\r\n          console.log(\"widget \", widget);\r\n          console.log(\"event \", event);\r\n          console.log(\"elem \", $element);\r\n          this.saveInDatabase($element.el.id, event, 'position');\r\n          window.dispatchEvent(new Event('resize'));\r\n        }.bind(this)\r\n      }\r\n    };\r\n    this.connectToEntityStateSocket();\r\n    this.connectToDeviceStatesSocket();\r\n    this.connectNotificationToSocket();\r\n\r\n  }\r\n\r\n  protected connectToEntityStateSocket(): void {\r\n    const connection = new WebSocket(`${environment.websocketProtocol}${environment.baseUrl}${environment.contextRoot}/${this.user.id}/${this.project.id}/webSocket/entitystatechanged`);\r\n    // When the connection is open, send some data to the server\r\n    connection.onopen = () => {\r\n      console.log('Opened websocket connection with topic: entitystatechanged');\r\n    };\r\n\r\n    // Log errors\r\n    connection.onerror = error => {\r\n      if (error['error'] === 'Session invalid' || error['error'] === 'No session found') {\r\n        this.router.navigate(['unauthorized']); }\r\n      console.log('WebSocket Error ' + error);\r\n    };\r\n\r\n    // Log messages from the server\r\n    connection.onmessage = messageEvent => {\r\n      const data: EntityStatechangeResponse = JSON.parse(messageEvent.data);\r\n      for (const dashboard of this.project.dashboards) {\r\n        for (const sheet of dashboard.sheets) {\r\n          for (const widget of sheet.widgets) {\r\n            switch (widget.type) {\r\n              case WidgetType.realtimeValueVisualization:\r\n                this.setValueViewWidgetData(widget as ValueViewWidget, data);\r\n                break;\r\n              case WidgetType.lineChartVisualization:\r\n              case WidgetType.doughnutChartVisualization:\r\n              case WidgetType.sliderDeviceControl:\r\n              case WidgetType.toggleDeviceControl:\r\n              case WidgetType.stateDeviceControl:\r\n                this.setRTChartWidgetData(<LineChartWidget|Doughnutchartwidget|SliderWidget|ToggleWidget|StateWidget|SliderWidget>widget, data);\r\n                break;\r\n              case WidgetType.realtimeAnomaly:\r\n                this.setAnomalyRTChartWidgetData(<RealtimeAnomalyWidget>widget, data);\r\n                break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      console.log('Server: ', messageEvent.data);\r\n\r\n    };\r\n  }\r\n\r\n  protected connectToDeviceStatesSocket(): void {\r\n    const connection = new WebSocket(`${environment.websocketProtocol}${environment.baseUrl}${environment.contextRoot}/${this.user.id}/${this.project.id}/webSocket/devicestatuschanged`);\r\n    // When the connection is open, send some data to the server\r\n    connection.onopen = () => {\r\n      console.log('Opened websocket connection with topic: devicestatuschanged');\r\n    };\r\n\r\n    // Log errors\r\n    connection.onerror = error => {\r\n      if (error['error'] === 'Session invalid' || error['error'] === 'No session found') {\r\n        this.router.navigate(['unauthorized']); }\r\n      console.log('WebSocket Error ' + error);\r\n    };\r\n\r\n    // Log messages from the server\r\n    connection.onmessage = messageEvent => {\r\n      const data: EntityStatechangeResponse = JSON.parse(messageEvent.data);\r\n      for (const dashboard of this.project.dashboards) {\r\n        for (const sheet of dashboard.sheets) {\r\n          for (const widget of sheet.widgets) {\r\n            switch (widget.type) {\r\n              case WidgetType.doughnutChartVisualization:\r\n                this.setValueViewWidgetData(widget as ValueViewWidget, data);\r\n                break;\r\n              case WidgetType.lineChartVisualization:\r\n                this.setRTChartWidgetData(<LineChartWidget>widget, data);\r\n                break;\r\n              case WidgetType.realtimeAnomaly:\r\n                this.setAnomalyRTChartWidgetData(<RealtimeAnomalyWidget>widget, data);\r\n                break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      console.log('Server: ', messageEvent.data);\r\n\r\n    };\r\n  }\r\n\r\n  protected connectNotificationToSocket(): void {\r\n\r\n    const connectionNotification = new WebSocket(`${environment.websocketProtocol}${environment.baseUrl}${environment.contextRoot}/${this.user.id}/${this.project.id}/webSocket/rulestatuschanged`);\r\n\r\n    connectionNotification.onopen = () => {\r\n      console.log('Opened websocket connection with topic: rulestatuschanged');\r\n    };\r\n\r\n    // Log errors\r\n    connectionNotification.onerror = error => {\r\n      if (error['error'] === 'Session invalid' || error['error'] === 'No session found') {\r\n        this.router.navigate(['unauthorized']); }\r\n      console.log('WebSocket Error ' + error);\r\n    };\r\n\r\n    // Log messages from the server\r\n    connectionNotification.onmessage = messageEvent => {\r\n      const data = JSON.parse(messageEvent.data);\r\n      let status;\r\n\r\n      switch (data.status.toLowerCase()) {\r\n        case 'running' : {\r\n          status = 'triggered';\r\n          console.log('status =',status);\r\n\r\n          break;\r\n        }\r\n        case 'idle' : {\r\n          status = 'activated';\r\n\r\n          break;\r\n        }\r\n        case 'disabled' : {\r\n          status = 'deactivated';\r\n\r\n          break;\r\n        }\r\n        default: {\r\n          status = undefined;\r\n          break;\r\n        }\r\n      }\r\n\r\n      switch (data.statusDetail.toLowerCase()) {\r\n        case 'disabled' : {\r\n          if(!status){\r\n            status = 'deactivated';\r\n          }\r\n          break;\r\n        }\r\n      }\r\n      if (status) {\r\n        this.notificationService.saveRuleNotification(data.rule.userId, data.rule, status);\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * This method returns the widget list of the widget which are inherit in the current sheet.\r\n   * @returns {Array<Widget>} the widget array\r\n   */\r\n  widgetList(): Array<Widget> {\r\n    return this.project.dashboards\r\n      .find(x => x.id === this.currentDashboardId).sheets\r\n      .find(x => x.id === this.currentSheetId).widgets;\r\n  }\r\n\r\n  /**\r\n   * This method sets the current widget id a user has interacted with last\r\n   * @param widgetId the {@link Widget#id}\r\n   */\r\n  protected setCurrentWidgetId(widgetId: string): void {\r\n    this.currentWidgetId = widgetId;\r\n  }\r\n\r\n  protected changeDeveloperMode(widget) {\r\n    console.log(\"widget.isDeveloped: \", widget.isDeveloped);\r\n    widget.isDeveloped = !widget.isDeveloped;\r\n    console.log(\"widget.isDeveloped: \", widget.isDeveloped);\r\n    this.saveInDatabase(widget.id, widget.isDeveloped, 'isDeveloped');\r\n  }\r\n\r\n  /**\r\n   * This method saves the selected options into the database.\r\n   * @param widgetId the id of the widget to save\r\n   * @param value the value\r\n   * @param field the field where to store\r\n   */\r\n  protected saveInDatabase(widgetId: string, value, field: string): void {\r\n    this.databaseService.updateDocument(this.databaseService.WIDGETSCOLLECTION, widgetId, new Fieldvalue(field, value))\r\n      .subscribe(result => {\r\n      }, error => {\r\n        if (error['error'] === 'Session invalid' || error['error'] === 'No session found') {\r\n          this.router.navigate(['unauthorized']); }\r\n        console.log('Error updating database entry ', error);\r\n      });\r\n  }\r\n\r\n  protected setValueViewWidgetData(widget: ValueViewWidget, data: EntityStatechangeResponse) {\r\n    // console.log('insetValueView');\r\n    if (widget.deviceId === data.deviceId) {\r\n      if (widget.entityId === data.entityId) {\r\n        widget.value = data.value;\r\n      }\r\n    }\r\n  }\r\n\r\n  // type of chartData: Array<{data: number[] , label: string, entityId: string}> = [{'data': [0], label:'', entityId:''}];\r\n  protected setRTChartWidgetData(widget: LineChartWidget|Doughnutchartwidget|ToggleWidget|SliderWidget|StateWidget, data: EntityStatechangeResponse){\r\n    this.dataService.refreshRealtimeChart(data.dateTime, Number(data.value), widget.id, data.deviceId, data.entityId);\r\n  }\r\n  // type of chartData: Array<{data: number[] , label: string, entityId: string}> = [{'data': [0], label:'', entityId:''}];\r\n  //protected setRTChartWidgetData(widget: RealTimeChartWidget, data: EntityStatechangeResponse){\r\n   // this.dataService.refreshRealtimeChart(data.dateTime, Number(data.value), widget.id, data.deviceId, data.entityId);\r\n  //}\r\n\r\n  protected setAnomalyRTChartWidgetData(widget: RealtimeAnomalyWidget, data: EntityStatechangeResponse){\r\n    this.dataService.refreshRealtimeAnomaly(data.dateTime, Number(data.value), Number(data.anomalyscore), widget.id, data.deviceId, data.entityId);\r\n  }\r\n\r\n  protected deleteWidget(widgetid:string){\r\n    this.setCurrentWidgetId(widgetid);\r\n    this.projectService.deleteWidget(widgetid);\r\n  }\r\n\r\n  // protected setRTAnomalyWidgetData(widget: RealtimeAnomalyWidget, data: EntityStatechangeResponse){\r\n  //   this.dataService.refreshRealtimeAnomaly(data.dateTime, Number(data.value), widget.id, data.deviceId, data.entityId, data.);\r\n  // }\r\n// dynamically change Font size based on width of widget\r\n  static measureText(pText: string, pFontSize: number, pFamily: string, pWeight: string): { 'width': number, 'height': number } {\r\n    let lDiv = document.createElement('div');\r\n    lDiv.style.fontFamily = pFamily;\r\n    lDiv.style.fontWeight = pWeight;\r\n    lDiv.style.fontSize = '' + pFontSize + 'px';\r\n    lDiv.style.position = 'absolute';\r\n    lDiv.style.left = '-1000';\r\n    lDiv.style.top = '-1000';\r\n    lDiv.innerHTML = '<div>pText</div>';\r\n    document.body.appendChild(lDiv);\r\n    //console.log(\"pseudoelem: \", lDiv.style);\r\n    console.log(\"pseudoelem: \", lDiv.innerHTML);\r\n    const lResult = {\r\n      width: lDiv.clientWidth,\r\n      height: lDiv.clientHeight\r\n    };\r\n\r\n    document.body.removeChild(lDiv);\r\n    lDiv = null;\r\n    return lResult;\r\n  }\r\n\r\n  static fitText(el): void {\r\n    console.log('FITTEXT');\r\n    const text = el.textContent;\r\n    let style = window.getComputedStyle(el, null).getPropertyValue('font-size');\r\n    let fsize = parseFloat(style);\r\n    let fsizeString: string;\r\n    const fam = window.getComputedStyle(el, null).getPropertyValue('font-family');\r\n    const weight = window.getComputedStyle(el, null).getPropertyValue('font-weight');\r\n    let width = parseFloat(window.getComputedStyle(el, null).getPropertyValue('width'));\r\n    let height = parseFloat(window.getComputedStyle(el, null).getPropertyValue('height'));\r\n\r\n    const measured = this.measureText(text, fsize, fam, weight);\r\n    console.log(\"text: \", text);\r\n    console.log(\"fam: \", fam);\r\n    console.log(\"width: \", measured.width, \" and \", width);\r\n    console.log(\"height: \", measured.height, \" and \", height);\r\n    // if both widht and height are smaller than the widget size, than increase font\r\n    if ( (measured.width < width ) && (measured.height < height) ) {\r\n      console.log('increasing');\r\n      let m = this.measureText(text, fsize, fam, weight);\r\n      let u = 0;\r\n      // while both width and height are smaller than the widget, increase\r\n      while ((m.width < width) && (m.height < height) && u < 5000) {\r\n        fsizeString = fsize + 0.5 + 'px';\r\n        el.style.fontSize = fsizeString;\r\n        // window.getComputedStyle(el, null).setProperty('font-size', fsizeString);\r\n        style = window.getComputedStyle(el, null).getPropertyValue('font-size');\r\n        fsize = parseFloat(style);\r\n        m = this.measureText(text, fsize, fam, weight);\r\n        width = parseFloat(window.getComputedStyle(el, null).getPropertyValue('width'));\r\n        height = parseFloat(window.getComputedStyle(el, null).getPropertyValue('height'));\r\n        u++;\r\n      }\r\n      measured.width = m.width;\r\n      measured.height = m.height;\r\n      console.log(\"u1: \", u);\r\n    }\r\n    console.log(\"width: \", measured.width, \" and \", width);\r\n    console.log(\"height: \", measured.height, \" and \", height);\r\n    if ((measured.width > width) || (measured.height > height)) {\r\n      console.log('reducing');\r\n      style = window.getComputedStyle(el, null).getPropertyValue('font-size');\r\n      fsize = parseFloat(style);\r\n      let m = this.measureText(text, fsize, fam, weight);\r\n      let n = 0;\r\n      while (((m.width > width) || (m.height > height)) && n < 5000) {\r\n        fsizeString = fsize - 0.5 + 'px';\r\n        el.style.fontSize = fsizeString;\r\n        //window.getComputedStyle(el, null).setProperty('font-size', fsizeString);\r\n\r\n        style = window.getComputedStyle(el, null).getPropertyValue('font-size');\r\n        fsize = parseFloat(style);\r\n        m = this.measureText(text, fsize, fam, weight);\r\n        width = parseFloat(window.getComputedStyle(el, null).getPropertyValue('width'));\r\n        height = parseFloat(window.getComputedStyle(el, null).getPropertyValue('height'));\r\n        n++;\r\n        console.log(\"width: \", measured.width, \" and \", width);\r\n        console.log(\"height: \", measured.height, \" and \", height);\r\n      }\r\n      console.log(\"n: \", n);\r\n    }\r\n\r\n  }\r\n\r\n  getCurrentWidget(): void {\r\n    console.log(\"mousedown\");\r\n    console.log('currentwidget: ',document.getElementById(this.currentWidgetId));\r\n  }\r\n\r\n  protected forwardMsgToDashboardComponent($event): void {\r\n    this.messageEvent.emit($event);\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \".widgetDesign {\\r\\n  position: relative;\\r\\n  width: 12vw;\\r\\n  height: 18vh;\\r\\n  float: left;\\r\\n  margin: 2vh 2vw 0 0;\\r\\n  background-color: white;\\r\\n  border-radius: 25px;\\r\\n  box-shadow: 3px 3px 2px lightgrey;\\r\\n  transition: all 0.3s;\\r\\n  border-color: #668BCC;\\r\\n  border-style: solid;\\r\\n  border-width: 0 0 0 5px;\\r\\n  padding-left: 1vw;\\r\\n  overflow: hidden;\\r\\n  -o-object-fit: scale-down;\\r\\n     object-fit: scale-down;\\r\\n}\\r\\n\\r\\n.widgetDesign:hover {\\r\\n  background-color: #eeeeee;\\r\\n  overflow: visible;\\r\\n}\\r\\n\\r\\n.ui-widget-overlay\\r\\n{\\r\\n  z-index: 0;\\r\\n}\\r\\n\\r\\n.ui-dialog{\\r\\n  z-index: 20;\\r\\n}\\r\\n\\r\\n.nameChanger {\\r\\n  width: 5vw;\\r\\n}\\r\\n\\r\\n.cut-text {\\r\\n  text-overflow: ellipsis;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n.center-text {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.settingsDialog {\\r\\n  width: 500px !important;\\r\\n  height: 600px !important;\\r\\n}\\r\\n\\r\\n.ui-tieredmenu{\\r\\n  left: -200px !important;\\r\\n}\\r\\n\\r\\n.interval-input{\\r\\n  width: 60px;\\r\\n}\\r\\n\\r\\n.widgetContainer {\\r\\n  padding: 0 1vw 1vh 2vw;\\r\\n}\\r\\n\\r\\n.settings-button {\\r\\n  transition: all 0.5s;\\r\\n  position: absolute;\\r\\n  right: 75px;\\r\\n  top: 5px;\\r\\n}\\r\\n\\r\\n.realTimeFont{\\r\\n  /*font-size: 40px;*/\\r\\n}\\r\\n\\r\\n.graph-canvas{\\r\\n  width: 100%;\\r\\n  height: calc(100% - 55px);\\r\\n}\\r\\n\\r\\n.graph-button {\\r\\n  position: absolute;\\r\\n  top: 135px;\\r\\n  right: 0;\\r\\n}\\r\\n\\r\\n.device-select {\\r\\n  transition: all 0.5s;\\r\\n  position: absolute;\\r\\n  top: 55px;\\r\\n}\\r\\n\\r\\nhr {\\r\\n  display: block;\\r\\n  height: 1px;\\r\\n  border: 0;\\r\\n  border-top: 1px solid #ccc;\\r\\n  margin: 1em 0;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n.spinner {\\r\\n  text-align: center;\\r\\n  position: absolute;\\r\\n  top: calc((100% - 55px)/2);\\r\\n  right: calc(50% - 55px);\\r\\n}\\r\\n\\r\\n.spinner > div {\\r\\n  width: 8px;\\r\\n  height: 8px;\\r\\n  background-color: #333;\\r\\n\\r\\n  border-radius: 100%;\\r\\n  display: inline-block;\\r\\n  -webkit-animation: sk-bouncedelay 1.4s infinite ease-in-out both;\\r\\n  animation: sk-bouncedelay 1.4s infinite ease-in-out both;\\r\\n}\\r\\n\\r\\n.spinner .bounce1 {\\r\\n  -webkit-animation-delay: -0.32s;\\r\\n  animation-delay: -0.32s;\\r\\n}\\r\\n\\r\\n.spinner .bounce2 {\\r\\n  -webkit-animation-delay: -0.16s;\\r\\n  animation-delay: -0.16s;\\r\\n}\\r\\n\\r\\n@-webkit-keyframes sk-bouncedelay {\\r\\n  0%, 80%, 100% { -webkit-transform: scale(0) }\\r\\n  40% { -webkit-transform: scale(1.0) }\\r\\n}\\r\\n\\r\\n@keyframes sk-bouncedelay {\\r\\n  0%, 80%, 100% {\\r\\n    -webkit-transform: scale(0);\\r\\n    transform: scale(0);\\r\\n  } 40% {\\r\\n      -webkit-transform: scale(1.0);\\r\\n      transform: scale(1.0);\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \"<p-dialog header=\\\"History Anomaly Data Settings\\\" [modal]=true appendTo=\\\"body\\\" [width]=\\\"700\\\"\\r\\n          [(visible)]=\\\"displaySettings\\\" [closable]=\\\"false\\\">\\r\\n  <div class=\\\"ui-g\\\">\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <h3>Representation settings</h3>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">Time Period:</div>\\r\\n      <div class=\\\"ui-g-2 grid-elem\\\">from</div>\\r\\n      <p-calendar [(ngModel)]=\\\"selectedStart\\\" [showTime]=\\\"true\\\" [showIcon]=\\\"true\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"1970:2020\\\" appendTo=\\\"body\\\"></p-calendar>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\"></div>\\r\\n      <div class=\\\"ui-g-2 grid-elem\\\">to</div>\\r\\n      <p-calendar [(ngModel)]=\\\"selectedEnd\\\" [showTime]=\\\"true\\\" [showIcon]=\\\"true\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"1970:2020\\\" appendTo=\\\"body\\\"></p-calendar>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">X axes label:</div>\\r\\n      <div></div>\\r\\n      <input pInputText class=\\\"gridster-item-content\\\" [(ngModel)]=\\\"this.axesOptions.xLabel\\\"  style=\\\"width: 200px; padding-left: 0;\\\">\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">Y axes label:</div>\\r\\n      <input pInputText class=\\\"gridster-item-content\\\" [(ngModel)]=\\\"this.axesOptions.yLabel\\\"  style=\\\"width: 200px; padding-left: 0;\\\">\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12\\\" style=\\\"width:10px;\\\"></div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <h3>Input settings</h3>\\r\\n    </div>\\r\\n    <p-accordion [multiple]=\\\"true\\\">\\r\\n      <div *ngFor=\\\"let group of dropdownList\\\" class=\\\"ui-g-12 grid-elem\\\">\\r\\n        <p-accordionTab  [selected]=\\\"true\\\" style=\\\"align-items: center; overflow: auto; width: 100%;\\\">\\r\\n          <p-header>\\r\\n            Device:\\r\\n            <p-dropdown appendTo=\\\"body\\\" [options]=\\\"devicesList\\\" (onChange)=\\\"setSensorDropdown(group.deviceEntity.deviceId)\\\"\\r\\n                        [filter]=\\\"true\\\" [(ngModel)]=\\\"group.deviceEntity.deviceId\\\"\\r\\n                        [style]=\\\"{'width':'200px'}\\\" placeholder=\\\"Select a device\\\" (onClick)=\\\"$event.stopPropagation();$event.preventDefault();\\\">\\r\\n            </p-dropdown>\\r\\n\\r\\n            Sensor:\\r\\n            <p-dropdown appendTo=\\\"body\\\" [options]=\\\"group.sensorList\\\" [filter]=\\\"true\\\" [(ngModel)]=\\\"group.deviceEntity.entityId\\\"\\r\\n                        [style]=\\\"{'width':'200px'}\\\" placeholder=\\\"Select a sensor\\\" (onClick)=\\\"$event.stopPropagation();$event.preventDefault();\\\">\\r\\n            </p-dropdown>\\r\\n\\r\\n          </p-header>\\r\\n          <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n            <div class=\\\"ui-g-4 grid-elem\\\">Data label:</div>\\r\\n            <input pInputText class=\\\"gridster-item-content\\\" [(ngModel)]=\\\"group.deviceEntity.label\\\"  style=\\\"width: 200px; padding-left: 0;\\\">\\r\\n          </div>\\r\\n          <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n            <div class=\\\"ui-g-4 grid-elem\\\">Data unit:</div>\\r\\n            <input pInputText class=\\\"gridster-item-content\\\" [(ngModel)]=\\\"group.deviceEntity.unit\\\"  style=\\\"width: 200px; padding-left: 0;\\\">\\r\\n          </div>\\r\\n        </p-accordionTab>\\r\\n      </div>\\r\\n    </p-accordion>\\r\\n  </div>\\r\\n  <p-footer>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"fa-check\\\" (click)=\\\"applySettings();\\\" label=\\\"Apply\\\"></button>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"fa-close\\\" (click)=\\\"abortChanges()\\\" label=\\\"Cancel\\\"></button>\\r\\n  </p-footer>\\r\\n</p-dialog>\\r\\n<button pButton icon=\\\"fa fa-cog\\\" style=\\\"z-index: 6;\\\" class=\\\"settings-button transparentButton tbutton ui-button-secondary\\\" (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" (click)=\\\"displaySettings=true;isAllowed=false;\\\"  [hidden]=\\\" !(loginStatus>1 && currentWidget.isDeveloped)\\\"></button>\\r\\n<!--*ngIf=\\\"myChart != undefined && myChart.data!= undefined && myChart.data.datasets != []\\\"-->\\r\\n<div class=\\\"ui-g\\\">\\r\\n  <div class=\\\"ui-g-12\\\">\\r\\n    <div class=\\\"ui-g-4 cut-text center-text\\\" >\\r\\n      <svg height=\\\"15\\\" width=\\\"15\\\">\\r\\n          <circle cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"5\\\" fill=\\\"green\\\" />\\r\\n      </svg> normal\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-4 cut-text center-text\\\">\\r\\n      <svg height=\\\"15\\\" width=\\\"15\\\">\\r\\n          <circle cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"5\\\" fill=\\\"orange\\\" />\\r\\n      </svg> at risk\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-4 cut-text center-text\\\">\\r\\n      <svg height=\\\"15\\\" width=\\\"15\\\">\\r\\n          <circle cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"5\\\" fill=\\\"red\\\" />\\r\\n      </svg> anomaly\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div  class=\\\"graph-canvas\\\">\\r\\n  <canvas #chart>{{myChart}}</canvas>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"spinner\\\" *ngIf=\\\"loading\\\">\\r\\n  <small><strong>Loading   </strong></small>\\r\\n  <div class=\\\"bounce1\\\"></div>\\r\\n  <div class=\\\"bounce2\\\"></div>\\r\\n  <div class=\\\"bounce3\\\"></div>\\r\\n</div>\\r\\n\"","import {Component, EventEmitter, Input, OnInit, ViewChild, Output} from '@angular/core';\r\nimport {DatabaseService} from '../../../../../../services/database.service';\r\nimport {DataService} from '../../../../../../services/data.service';\r\nimport {DeviceManagerService} from '../../../../../../services/devicemanager.service';\r\nimport {User} from '../../../../../../models/frontend/user';\r\nimport {Project} from '../../../../../../models/frontend/project';\r\nimport {Device} from '../../../../../../models/backend/device';\r\nimport {Fieldvalue} from '../../../../../../models/frontend/fieldvalue';\r\nimport {SelectItem} from 'primeng/api';\r\nimport {AnomalySensorDataModel} from '../../../../../../models/backend/anomalysensordatamodel';\r\nimport { Chart } from 'chart.js';\r\nimport 'rxjs/add/observable/interval';\r\nimport {AnomalyManagerService} from \"../../../../../../services/anomalymanager.service\";\r\nimport {AxesOptions} from \"../../../../../../models/frontend/linechartwidget\";\r\nimport {ChartDeviceEntity } from '../../../../../../models/frontend/chartDeviceEntity';\r\nimport {HistoryAnomalyWidget} from \"../../../../../../models/frontend/historyanomalywidget\";\r\nimport {AnomalyEntity} from \"../../../../../../models/frontend/realtimeanomalywidget\";\r\n\r\n\r\n/**\r\n * @author Yasin Kaymak, Janina Hüther, Chinaedu Onwukwe\r\n * This component processes a {@link WidgetType#historyAnomaly} Widget. This type of widget is to display\r\n * historic values of an entity with anomaly detection. That means it requests data e.g. get data of device x from 02.08.2018 - 03.08.2018\r\n   * from the backend. It uses the {@link HistoryAnomalyWidget} model to represent a widget.\r\n */\r\n@Component({\r\n  selector: 'history-anomaly',\r\n  templateUrl: './history-anomaly.component.html',\r\n  styleUrls: ['./history-anomaly.component.css']\r\n})\r\nexport class HistoryAnomalyComponent implements OnInit {\r\n  @ViewChild('chart') private ctx;\r\n  @Input() currentWidget: HistoryAnomalyWidget;\r\n  @Output() resizeFont = new EventEmitter<HTMLElement>();\r\n\r\n  protected user: User;\r\n  protected project: Project;\r\n  protected loginStatus: number;\r\n\r\n  myChart: any;\r\n  protected devicesList: SelectItem[] = [];\r\n  protected sensorList: SelectItem[] = [];\r\n  chartType: string = 'line';\r\n  displaySettings: boolean = false;\r\n  public chartLabels: Array<string>;\r\n  public chartData: [{ label: string, data: Array<number>, borderColor: string, fill: boolean }];\r\n  public anomalyScores: Array<number>;\r\n  public chartOptions: any;\r\n  axesOptions: AxesOptions = {xLabel: 'time', yLabel: '', xLabelVisible: true, yLabelVisible: true};\r\n\r\n  // Training HTM Network From startTraining to selectedStart\r\n  startTraining: Date\r\n  selectedStart: Date;\r\n  selectedEnd: Date;\r\n  duration: string = 'P5D';\r\n\r\n  //spinner\r\n  loading = false;\r\n\r\n  // protected representations: Array<SelectItem> = [];\r\n  public dropdownList = [{deviceEntity: new AnomalyEntity(\"\", \"\", \"\",\"\",\"\"), sensorList:[]}];\r\n\r\n  constructor(private dataService: DataService,\r\n              private databaseService: DatabaseService,\r\n              private devicemanager: DeviceManagerService,\r\n              private anomalymanager: AnomalyManagerService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.devicesList = [];\r\n    this.sensorList = [];\r\n    this.dataService.projectData\r\n      .subscribe(value => {\r\n        this.project = value;\r\n      });\r\n\r\n    this.dataService.userData\r\n      .subscribe(value => {\r\n        this.user = value;\r\n      });\r\n\r\n    this.dataService.currentLoginStatus.subscribe(value => this.loginStatus = value);\r\n    this.initDeviceDropdown();\r\n    this.chartOptions = {\r\n      maintainAspectRatio: false,\r\n      responsive: true,\r\n      legend: {\r\n        display: true,\r\n        position: 'top'\r\n      },\r\n      tooltips: {\r\n        callbacks: {\r\n          // extra text for items\r\n          afterLabel:  (tooltipItem, data) => 'Anomalyscore: '+ (this.anomalyScores[tooltipItem['index']] * 100).toFixed(2) + '%',\r\n        }\r\n      },\r\n      scales: {\r\n        xAxes: [{\r\n          display: true,\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: ''\r\n          },\r\n        }],\r\n        yAxes: [{\r\n          ticks: {\r\n            beginAtZero: true,\r\n\r\n          },\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: ''\r\n          }\r\n        }]\r\n      },\r\n      onResize: function (chart, size) {\r\n        //chart.options.legend.display = size.width > 400;\r\n        //chart.options.legend.position = (size.width > size.height) ? 'right' : 'bottom';\r\n        //console.log();\r\n        //chart.update();\r\n      }\r\n    };\r\n    this.myChart = new Chart(this.ctx.nativeElement, {\r\n      type: this.chartType,\r\n      data: {\r\n        labels: [],\r\n        datasets: []\r\n      },\r\n      options: this.chartOptions\r\n    });\r\n\r\n    if (this.currentWidget.axesOptions !== undefined) {\r\n      this.axesOptions = this.currentWidget.axesOptions;\r\n    }\r\n\r\n    this.startTraining = new Date(2019, 0, 1, 10, 55, 22, 0);\r\n    this.selectedStart = new Date(2019, 0, 15, 10, 55, 22, 0);\r\n    this.selectedEnd =new Date (this.generateIsoDateTime(this.selectedStart));\r\n\r\n    if(this.currentWidget.startDate !== undefined && this.currentWidget.endDate !== undefined) {\r\n      this.selectedStart = new Date(this.currentWidget.startDate);\r\n      this.selectedEnd = new Date (this.currentWidget.endDate);\r\n      //this.currentWidget.startDate = new Date(2019, 0, 15, 10, 55, 22, 0);\r\n      //this.currentWidget.endDate = new Date(2019, 0, 23, 17, 55, 22, 0);\r\n    }\r\n\r\n  }\r\n\r\n  // generates a timestamp in ISO standard as defined for the backend\r\n  private generateIsoDateTime(date: Date): string {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() + 1;\r\n    const day = date.getDate();\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n    const seconds = date.getSeconds();\r\n\r\n    const yearString = year.toString();\r\n    let dayString = day.toString();\r\n    let monthString = month.toString();\r\n    let hoursString = hours.toString();\r\n    let minutesString = minutes.toString();\r\n    let secondsString = seconds.toString();\r\n\r\n    if (day < 10) {\r\n      dayString = '0' + dayString;\r\n    }\r\n    if (month < 10) {\r\n      monthString = '0' + monthString;\r\n    }\r\n    if (hours < 10) {\r\n      hoursString = '0' + hoursString;\r\n    }\r\n    if (minutes < 10) {\r\n      minutesString = '0' + minutesString;\r\n    }\r\n    if (seconds < 10) {\r\n      secondsString = '0' + secondsString;\r\n    }\r\n\r\n    return yearString + '-' + monthString + '-' + dayString + 'T' + hoursString + ':' + minutesString + ':' + secondsString;\r\n  }\r\n\r\n  private initDeviceDropdown(): void {\r\n    this.devicesList = [];\r\n    this.devicemanager.getAllDevices(this.user.id, this.project.id)\r\n      .subscribe(data => {\r\n          for (const device of data) {\r\n            this.devicesList.push({label: device.name, value: device.deviceId});\r\n          }\r\n\r\n          if (this.currentWidget.deviceEntities[0].deviceId !== undefined && this.currentWidget.deviceEntities[0].deviceId !== '') {\r\n            this.initSetDevice();\r\n          }\r\n\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        });\r\n  }\r\n\r\n  /**\r\n   * This method fills the device dropdown with all devices from the backend. Therefore it describes from the devicemanager service\r\n   */\r\n  private refreshDeviceDropdown(): void {\r\n    this.devicesList = [];\r\n    this.devicemanager.getAllDevices(this.user.id, this.project.id).subscribe(data => {\r\n        for (const device of data) {\r\n          this.devicesList.push({label: device.name, value: device.deviceId});\r\n        }\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  protected initSetDevice():void {\r\n    this.dropdownList = [];\r\n    // create a list with all init selected devices\r\n    const selectedDevices: Array<String> = [];\r\n    let isIncluded = false;\r\n    for (const widgetElem of this.currentWidget.deviceEntities) {\r\n      // check if device is in list\r\n      for (const selectedElem of selectedDevices) {\r\n        if (selectedElem === widgetElem.deviceId) {\r\n          isIncluded = true;\r\n          break;\r\n        }\r\n      }\r\n      if (!isIncluded) {\r\n        selectedDevices.push(widgetElem.deviceId);\r\n      }\r\n    }\r\n    // fill lists for dropdowns\r\n    const numberOfSavedEntities = this.currentWidget.deviceEntities.length;\r\n    // go over all selected devices\r\n    for (const widgetElem of selectedDevices) {\r\n      // go over all existing devices\r\n      for (const deviceElem of this.devicesList) {\r\n        if (deviceElem.value === widgetElem) {\r\n          // here we have the right device id\r\n          // get list of all entities of the device\r\n          const sensorList = [];\r\n          this.devicemanager.getDeviceById(deviceElem.value, this.user.id, this.project.id)\r\n            .subscribe((device: Device) => {\r\n                if (device.sensors !== null) {\r\n                  for (const sensor of device.sensors) {\r\n                    sensorList.push({label: sensor.name, value: sensor.id});\r\n                  }\r\n                }\r\n                // looking for the right entitiy id\r\n                for (const sensorElem of sensorList) {\r\n                  for (const elem of this.currentWidget.deviceEntities) {\r\n                    if (sensorElem.value === elem.entityId) {\r\n                      // here we have the right entity id\r\n                      // set selected device, list and sensor in dropdownlist\r\n                      this.dropdownList.push({\r\n                        deviceEntity: {deviceId: deviceElem.value, entityId: sensorElem.value, label: elem.label, unit: elem.unit, axis: 'y'},\r\n                        sensorList: sensorList});\r\n                      break;\r\n                    }\r\n                  }\r\n                }\r\n                // check dropdownlist for dummydata\r\n                for (const data of this.dropdownList) {\r\n                  if (data['deviceId'] === '') {\r\n                    console.log('Dummy');\r\n                  }\r\n                }\r\n                //create and fill chartData from selected sensors if all data is in dropdownList (last finished request)\r\n                //if (this.dropdownList.length === numberOfSavedEntities) {\r\n                // this.initRealtimeData(this.myChart);\r\n                this.showChart(this.myChart);\r\n                //}\r\n\r\n              },\r\n              error => {\r\n                console.log('Error requesting devices from backend ', error);\r\n              });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  showChart(chart): void {\r\n    // set chart options\r\n    chart.options.scales.xAxes[0].scaleLabel.labelString = this.axesOptions.xLabel;\r\n    chart.options.scales.yAxes[0].scaleLabel.labelString = this.axesOptions.yLabel;\r\n    chart.options.scales.xAxes[0].scaleLabel.display = this.axesOptions.xLabelVisible;\r\n    chart.options.scales.yAxes[0].scaleLabel.display = this.axesOptions.yLabelVisible;\r\n    chart.data.datasets = [];\r\n    chart.data.labels = [];\r\n    let cIndex=0;\r\n    for (const selected of this.dropdownList) {\r\n      const ctxData = {label: selected.deviceEntity.label + ' in ' + selected.deviceEntity.unit,\r\n        data: [],\r\n        borderColor: \"grey\",\r\n        borderDash: [],\r\n        fill: false,\r\n        // extra backgroundcolor for anomalie\r\n        pointBackgroundColor: [],\r\n      };\r\n      this.anomalyScores = [];\r\n\r\n      //update date for training start for HTM Network\r\n      this.updateTrainingData(this.selectedStart);\r\n\r\n      this.loading = true;\r\n      this.anomalymanager.getSensorWithAnomalyScoreDataOverTime(selected.deviceEntity.deviceId, selected.deviceEntity.entityId,\r\n        this.generateIsoDateTime(this.startTraining), this.generateIsoDateTime(this.selectedStart), this.generateIsoDateTime(this.selectedEnd),\r\n        this.duration, this.user.id, this.project.id)\r\n        .subscribe((anomalySensorDataModel: AnomalySensorDataModel) => {\r\n            this.loading = false;\r\n            for (const value of anomalySensorDataModel.Values) {\r\n              if(value.FloatValue != null) {\r\n                ctxData.data.push(value.FloatValue);\r\n                //2 Digits after ,\r\n                this.anomalyScores.push(Number((Math.round(value.AnomalyScore * 100) / 100).toFixed(2)));\r\n\r\n                //set color, depending on score\r\n                if(value.AnomalyScore > 0.89){\r\n                  ctxData.pointBackgroundColor.push('red');\r\n                }\r\n                else if(value.AnomalyScore > 0.80){\r\n                  ctxData.pointBackgroundColor.push('orange');\r\n                }\r\n                else{\r\n                  ctxData.pointBackgroundColor.push('green');\r\n                }\r\n\r\n              } else if(value.StringValue != null) {\r\n                ctxData.data.push(Number(value.StringValue));\r\n              }\r\n              // one time the label of the data points has to be set.\r\n              if (cIndex === 0) {\r\n                // chart.data.labels.push(value.AnomalyScore);\r\n                chart.data.labels.push(value.DateTime);\r\n              }\r\n            }\r\n            cIndex++;\r\n            // add sensor data to the chartData.\r\n            chart.data.datasets.push(ctxData);\r\n            if (chart.data.datasets[0]['label'] === '') {\r\n              chart.data.dataset.shift();\r\n            }\r\n            chart.update();\r\n          },\r\n          err => {\r\n            this.loading = false;\r\n            console.log('Error requesting historic data from backend ', err);\r\n          });\r\n    }\r\n  }\r\n\r\n\r\n  // events\r\n  public chartClicked(e: any): void {\r\n    console.log(e);\r\n  }\r\n\r\n  public chartHovered(e: any): void {\r\n    console.log(e);\r\n  }\r\n  // add a new line / dataset to the chart\r\n  addDataset(chart, dataset): void {\r\n    chart.data.datasets.push(dataset);\r\n    if (chart.data.datasets[0]['label'] === '') {\r\n      chart.data.dataset.shift();\r\n    }\r\n    chart.update();\r\n  }\r\n  // removes all datasets which have mor then one data point\r\n  removeDatasets(chart): void {\r\n    chart.data.datasets.forEach((dataset) => {\r\n      if (dataset.data.lenght > 1) {\r\n        let removalIndex = chart.data.datasets.indexOf(dataset); //Locate index of dataset\r\n        if(removalIndex >= 0) { //make sure this element exists in the array\r\n          chart.data.datasets.splice(removalIndex, 1);\r\n        }\r\n      }\r\n    });\r\n    // when it was the only data set, remove the labels as well.\r\n    if (chart.data.datasets.length === 0){\r\n      // for each label, remove one label.\r\n      chart.data.labels.forEach((label) => {\r\n        chart.data.labels.pop();\r\n      });\r\n    }\r\n    console.log(\"my Chart Labels: \", chart.data.labels);\r\n    chart.update();\r\n  }\r\n\r\n  // updates an attribute of a chart (sub)object.\r\n  updateChartOption(chart, chartField, value): void {\r\n    chartField = value;\r\n    chart.update();\r\n  }\r\n\r\n\r\n  applySettings(): void {\r\n    this.displaySettings = false;\r\n    //updating data from dropdowns in current Widget\r\n    this.currentWidget.deviceEntities = [];\r\n    console.log(\"axes: \",this.axesOptions );\r\n    // updating data from dropdowns in current Widget\r\n    for (const entity of this.dropdownList) {\r\n      this.currentWidget.deviceEntities.push(entity.deviceEntity);\r\n    }\r\n    // this.currentWidget.chartType = this.chartType;\r\n    this.currentWidget.axesOptions = this.axesOptions;\r\n    // remove empty placeholder if neccessary\r\n    if (this.currentWidget.deviceEntities[0].deviceId === '') {\r\n      this.currentWidget.deviceEntities.shift();\r\n    }\r\n    this.currentWidget.endDate = this.selectedEnd;\r\n    this.currentWidget.startDate = this.selectedStart;\r\n    this.saveInDatabase(this.currentWidget.deviceEntities, 'deviceEntities');\r\n    this.saveInDatabase(this.currentWidget.chartType, 'chartType');\r\n    this.saveInDatabase(this.currentWidget.axesOptions, 'axesOptions');\r\n    this.saveInDatabase(this.currentWidget.startDate, 'startDate');\r\n    this.saveInDatabase(this.currentWidget.endDate, 'endDate');\r\n    // get data with new settings\r\n    this.showChart(this.myChart);\r\n\r\n  }\r\n\r\n  abortChanges():void{\r\n    this.displaySettings=false;\r\n    this.chartType = this.currentWidget.chartType;\r\n    this.selectedEnd = this.currentWidget.endDate;\r\n    this.selectedStart = this.currentWidget.startDate;\r\n    this.axesOptions = this.currentWidget.axesOptions;\r\n    this.dropdownList = [{deviceEntity: {deviceId: '', entityId: '', label: '', unit: '', axis: ''}, sensorList: []}];\r\n    for (const entity of this.currentWidget.deviceEntities) {\r\n      this.dropdownList.push({deviceEntity: entity, sensorList: []});\r\n      this.setSensorDropdown(entity.deviceId);\r\n    }\r\n    this.dropdownList.shift();\r\n  }\r\n\r\n  /**\r\n   * This method saves the selected options into the database.\r\n   * @param value the value\r\n   * @param field the field where to store\r\n   */\r\n  protected saveInDatabase(value, field: string): void {\r\n    this.databaseService.updateDocument(this.databaseService.WIDGETSCOLLECTION, this.currentWidget.id, new Fieldvalue(field, value))\r\n      .subscribe(result => {\r\n      }, error => {\r\n        console.log('Error updating database entry ', error);\r\n      });\r\n  }\r\n\r\n  protected addNewDropdowns() {\r\n    this.dropdownList.push({deviceEntity: {deviceId: '', entityId: '', label: '', unit: '', axis: ''}, sensorList: []});\r\n    //this.chartData.push({label: '', data: [], borderColor: '', fill: false});\r\n  }\r\n\r\n  protected deleteDropdowns(group: ChartDeviceEntity) {\r\n    let i = 0;\r\n    this.chartData = [{label: '', data: [], borderColor: '', fill: false}];\r\n    // console.log(\"Dropdownlist: \", this.dropdownList);\r\n    for (let elem of this.dropdownList) {\r\n      if (elem.deviceEntity.deviceId === group.deviceId && elem.deviceEntity.entityId === group.entityId) {\r\n        this.dropdownList.splice(i, 1);\r\n        // if the arrays have the same length, the chartData of the entity has to be deleted as well\r\n        if (this.dropdownList.length === (this.chartData.length) - 1) {\r\n          // this.chartData.splice(i, 1);\r\n        }\r\n        console.log('Dropdownlist after DELETE: ', this.dropdownList);\r\n      }\r\n      i++;\r\n    }\r\n\r\n  }\r\n\r\n  protected setSensorDropdown(deviceId: string): void {\r\n    // get list of all entities of the device\r\n    const sensorList = [];\r\n    console.log(\"dropdown: \", this.dropdownList);\r\n    console.log(\"chart: \", this.myChart.data.datasets);\r\n    this.devicemanager.getDeviceById(deviceId, this.user.id, this.project.id)\r\n      .subscribe((device: Device) => {\r\n          if (device.sensors !== null) {\r\n            for (const sensor of device.sensors) {\r\n              sensorList.push({label: sensor.name, value: sensor.id});\r\n            }\r\n          }\r\n          // go trhough dropdownlist and set sensorList to device\r\n          for (const dropdowngroup of this.dropdownList) {\r\n            if (dropdowngroup.deviceEntity.deviceId === deviceId) {\r\n              dropdowngroup.sensorList = sensorList;\r\n            }\r\n          }\r\n        },\r\n        error => {\r\n          console.log('Error requesting devices from backend ', error);\r\n        });\r\n  }\r\n\r\n  // update Date for training, for backend\r\n  protected updateTrainingData(start: Date): void {\r\n\r\n    // date problem: January, February, April, Day 31 --> specific training date\r\n    if (start.getMonth() === 0 || start.getMonth() === 1 || start.getMonth() === 3 || start.getDate() === 31) {\r\n      if (start.getMonth() === 0) {\r\n        this.startTraining.setDate(start.getDate() -1);\r\n        this.startTraining.setMonth(10);\r\n        this.startTraining.setFullYear(start.getFullYear() - 1);\r\n      }\r\n      else if(start.getMonth() === 1) {\r\n        this.startTraining.setDate(start.getDate() -1);\r\n        this.startTraining.setMonth(11);\r\n        this.startTraining.setFullYear(start.getFullYear() - 1);\r\n      }\r\n      else if(start.getMonth() === 3 && start.getDate() > 28) {\r\n        this.startTraining.setDate(28);\r\n        this.startTraining.setMonth(1);\r\n        this.startTraining.setFullYear(start.getFullYear());\r\n      }\r\n      else{\r\n        this.startTraining.setDate(start.getDate() - 1);\r\n        this.startTraining.setMonth(start.getMonth() - 2);\r\n        this.startTraining.setFullYear(start.getFullYear());\r\n      }\r\n    }\r\n\r\n    // no date problem just subtrate 2 months and 1 day\r\n    else {\r\n      this.startTraining.setDate(start.getDate() - 1);\r\n      this.startTraining.setMonth(start.getMonth() - 2);\r\n      this.startTraining.setFullYear(start.getFullYear());\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \".widgetDesign {\\r\\n  position: relative;\\r\\n  width: 12vw;\\r\\n  height: 18vh;\\r\\n  float: left;\\r\\n  margin: 2vh 2vw 0 0;\\r\\n  background-color: white;\\r\\n  border-radius: 25px;\\r\\n  box-shadow: 3px 3px 2px lightgrey;\\r\\n  transition: all 0.3s;\\r\\n  border-color: #668BCC;\\r\\n  border-style: solid;\\r\\n  border-width: 0 0 0 5px;\\r\\n  padding-left: 1vw;\\r\\n  overflow: hidden;\\r\\n  -o-object-fit: scale-down;\\r\\n     object-fit: scale-down;\\r\\n}\\r\\n\\r\\n.widgetDesign:hover {\\r\\n  background-color: #eeeeee;\\r\\n  overflow: visible;\\r\\n}\\r\\n\\r\\n.ui-widget-overlay\\r\\n{\\r\\n  z-index: 0;\\r\\n}\\r\\n\\r\\n.ui-dialog{\\r\\n  z-index: 20;\\r\\n}\\r\\n\\r\\n.nameChanger {\\r\\n  width: 5vw;\\r\\n}\\r\\n\\r\\n.settingsDialog {\\r\\n  width: 500px !important;\\r\\n  height: 600px !important;\\r\\n}\\r\\n\\r\\n.ui-tieredmenu{\\r\\n  left: -200px !important;\\r\\n}\\r\\n\\r\\n.interval-input{\\r\\n  width: 60px;\\r\\n}\\r\\n\\r\\n.widgetContainer {\\r\\n  padding: 0 1vw 1vh 2vw;\\r\\n}\\r\\n\\r\\n.settings-button {\\r\\n  transition: all 0.5s;\\r\\n  position: absolute;\\r\\n  right: 75px;\\r\\n  top: 5px;\\r\\n}\\r\\n\\r\\n.cut-text {\\r\\n  text-overflow: ellipsis;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n.center-text {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.realTimeFont{\\r\\n  /*font-size: 40px;*/\\r\\n}\\r\\n\\r\\n.graph-canvas{\\r\\n  width: 100%;\\r\\n  height: calc(100% - 55px);\\r\\n}\\r\\n\\r\\n.graph-button {\\r\\n  position: absolute;\\r\\n  top: 135px;\\r\\n  right: 0;\\r\\n}\\r\\n\\r\\n.device-select {\\r\\n  transition: all 0.5s;\\r\\n  position: absolute;\\r\\n  top: 55px;\\r\\n}\\r\\n\\r\\nhr {\\r\\n  display: block;\\r\\n  height: 1px;\\r\\n  border: 0;\\r\\n  border-top: 1px solid #ccc;\\r\\n  margin: 1em 0;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n.label {\\r\\n  line-height: 25px;\\r\\n}\\r\\n\\r\\n.grid-elem {\\r\\n  padding: .2em;\\r\\n}\\r\\n\\r\\n.loading-indicator {\\r\\n  position: fixed;\\r\\n  z-index: 999;\\r\\n  height: 2em;\\r\\n  width: 2em;\\r\\n  overflow: show;\\r\\n  margin: auto;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  bottom: 0;\\r\\n  right: 0;\\r\\n}\\r\\n\\r\\n/* Transparent Overlay */\\r\\n\\r\\n.loading-indicator:before {\\r\\n  content: '';\\r\\n  display: block;\\r\\n  position: fixed;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  background-color: rgba(0,0,0,0.53);\\r\\n}\\r\\n\\r\\n.spinner {\\r\\n  text-align: center;\\r\\n  position: absolute;\\r\\n  top: calc((100% - 55px)/2);\\r\\n  right: calc(50% - 55px);\\r\\n}\\r\\n\\r\\n.spinner > div {\\r\\n  width: 8px;\\r\\n  height: 8px;\\r\\n  background-color: #333;\\r\\n\\r\\n  border-radius: 100%;\\r\\n  display: inline-block;\\r\\n  -webkit-animation: sk-bouncedelay 1.4s infinite ease-in-out both;\\r\\n  animation: sk-bouncedelay 1.4s infinite ease-in-out both;\\r\\n}\\r\\n\\r\\n.spinner .bounce1 {\\r\\n  -webkit-animation-delay: -0.32s;\\r\\n  animation-delay: -0.32s;\\r\\n}\\r\\n\\r\\n.spinner .bounce2 {\\r\\n  -webkit-animation-delay: -0.16s;\\r\\n  animation-delay: -0.16s;\\r\\n}\\r\\n\\r\\n@-webkit-keyframes sk-bouncedelay {\\r\\n  0%, 80%, 100% { -webkit-transform: scale(0) }\\r\\n  40% { -webkit-transform: scale(1.0) }\\r\\n}\\r\\n\\r\\n@keyframes sk-bouncedelay {\\r\\n  0%, 80%, 100% {\\r\\n    -webkit-transform: scale(0);\\r\\n    transform: scale(0);\\r\\n  } 40% {\\r\\n      -webkit-transform: scale(1.0);\\r\\n      transform: scale(1.0);\\r\\n    }\\r\\n}\\r\\n\"","module.exports = \"<p-dialog header=\\\"Realtime Anomaly Data Settings\\\" [modal]=true appendTo=\\\"body\\\" [width]=\\\"700\\\"\\r\\n          [(visible)]=\\\"displaySettings\\\" [closable]=\\\"false\\\">\\r\\n  <div class=\\\"ui-g\\\">\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <h3>Representation settings</h3>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">Number of samples:</div>\\r\\n      <input pInputText class=\\\"gridster-item-content\\\" [(ngModel)]=\\\"this.selectedNumberOfValues\\\"  style=\\\"width: 200px; padding-left: 0;\\\">\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">X axes label:</div>\\r\\n      <div class=\\\"grid-elem\\\"><b>{{this.axesOptions.xLabel}}</b></div>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">Y axes label:</div>\\r\\n      <input pInputText class=\\\"gridster-item-content\\\" [(ngModel)]=\\\"this.axesOptions.yLabel\\\"  style=\\\"width: 200px; padding-left: 0;\\\">\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12\\\" style=\\\"width:10px;\\\"></div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <h3>Input settings</h3>\\r\\n    </div>\\r\\n    <p-accordion [multiple]=\\\"true\\\">\\r\\n      <div *ngFor=\\\"let group of dropdownList\\\" class=\\\"ui-g-12 grid-elem\\\">\\r\\n        <p-accordionTab [selected]=\\\"true\\\"  style=\\\"align-items: center; overflow: auto; width: 100%;\\\">\\r\\n          <p-header>\\r\\n            Device:\\r\\n            <p-dropdown appendTo=\\\"body\\\" [options]=\\\"devicesList\\\" (onChange)=\\\"setSensorDropdown(group.deviceEntity.deviceId)\\\"\\r\\n                        [filter]=\\\"true\\\" [(ngModel)]=\\\"group.deviceEntity.deviceId\\\"\\r\\n                        [style]=\\\"{'width':'200px'}\\\" placeholder=\\\"Select a device\\\" (onClick)=\\\"$event.stopPropagation();$event.preventDefault();\\\">\\r\\n            </p-dropdown>\\r\\n\\r\\n            Sensor:\\r\\n            <p-dropdown appendTo=\\\"body\\\" [options]=\\\"group.sensorList\\\" [filter]=\\\"true\\\" [(ngModel)]=\\\"group.deviceEntity.entityId\\\"\\r\\n                        [style]=\\\"{'width':'200px'}\\\" placeholder=\\\"Select a sensor\\\" (onChange)=\\\"setLabel(group.deviceEntity.entityId)\\\" (onClick)=\\\"$event.stopPropagation();$event.preventDefault();\\\">\\r\\n            </p-dropdown>\\r\\n\\r\\n          </p-header>\\r\\n          <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n            <div class=\\\"ui-g-4 grid-elem\\\">Data label:</div>\\r\\n            <input pInputText class=\\\"gridster-item-content\\\" [(ngModel)]=\\\"group.deviceEntity.label\\\"  style=\\\"width: 200px; padding-left: 0;\\\">\\r\\n          </div>\\r\\n          <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n            <div class=\\\"ui-g-4 grid-elem\\\">Data unit:</div>\\r\\n            <input pInputText class=\\\"gridster-item-content\\\" [(ngModel)]=\\\"group.deviceEntity.unit\\\"  style=\\\"width: 200px; padding-left: 0;\\\">\\r\\n          </div>\\r\\n        </p-accordionTab>\\r\\n      </div>\\r\\n    </p-accordion>\\r\\n  </div>\\r\\n  <p-footer>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"fa-check\\\" (click)=\\\"applySettings();\\\" label=\\\"Apply\\\"></button>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"fa-close\\\" (click)=\\\"abortChanges();\\\" label=\\\"Cancel\\\"></button>\\r\\n  </p-footer>\\r\\n</p-dialog>\\r\\n<button pButton icon=\\\"fa fa-cog\\\" style=\\\"z-index: 6;\\\" class=\\\"settings-button transparentButton tbutton ui-button-secondary\\\" (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" (click)=\\\"displaySettings=true;isAllowed=false;\\\"  [hidden]=\\\" !(loginStatus>1 && currentWidget.isDeveloped)\\\"></button>\\r\\n<!--*ngIf=\\\"myChart != undefined && myChart.data!= undefined && myChart.data.datasets != []\\\"-->\\r\\n<div class=\\\"ui-g\\\">\\r\\n  <div class=\\\"ui-g-12\\\">\\r\\n    <div class=\\\"ui-g-4 cut-text center-text\\\" >\\r\\n      <svg height=\\\"15\\\" width=\\\"15\\\">\\r\\n          <circle cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"5\\\" fill=\\\"green\\\" />\\r\\n      </svg> normal\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-4 cut-text center-text\\\">\\r\\n      <svg height=\\\"15\\\" width=\\\"15\\\">\\r\\n          <circle cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"5\\\" fill=\\\"orange\\\" />\\r\\n      </svg> at risk\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-4 cut-text center-text\\\">\\r\\n      <svg height=\\\"15\\\" width=\\\"15\\\">\\r\\n          <circle cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"5\\\" fill=\\\"red\\\" />\\r\\n      </svg> anomaly\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<div  class=\\\"graph-canvas\\\">\\r\\n  <canvas #chart>{{myChart}}</canvas>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"spinner\\\" *ngIf=\\\"loading\\\">\\r\\n  <small><strong>NETWORK STARTING   </strong></small>\\r\\n  <div class=\\\"bounce1\\\"></div>\\r\\n  <div class=\\\"bounce2\\\"></div>\\r\\n  <div class=\\\"bounce3\\\"></div>\\r\\n\\r\\n</div>\\r\\n\"","import { ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { DataService } from '../../../../../../services/data.service';\r\nimport { DeviceManagerService } from '../../../../../../services/devicemanager.service';\r\nimport { VisualManagerService } from '../../../../../../services/visualmanager.service';\r\nimport { DatabaseService } from '../../../../../../services/database.service';\r\nimport 'rxjs/add/observable/interval';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { Chart} from 'chart.js';\r\nimport { Project } from '../../../../../../models/frontend/project';\r\nimport { Device } from '../../../../../../models/backend/device';\r\nimport { Fieldvalue } from '../../../../../../models/frontend/fieldvalue';\r\nimport { User } from '../../../../../../models/frontend/user';\r\nimport { ChartDeviceEntity } from '../../../../../../models/frontend/chartDeviceEntity';\r\nimport { AxesOptions } from '../../../../../../models/frontend/linechartwidget';\r\nimport { AnomalyEntity, RealtimeAnomalyWidget } from '../../../../../../models/frontend/realtimeanomalywidget';\r\nimport {AnomalySensorDataModel} from '../../../../../../models/backend/anomalysensordatamodel';\r\nimport {AnomalyManagerService} from '../../../../../../services/anomalymanager.service';\r\n\r\n\r\n/**\r\n * @author Yasin Kaymak, Janina Hüther, Chinaedu Onwukwe\r\n * This component processes a {@link WidgetType#realtimeAnomaly} Widget. This type of widget is to display\r\n * realtime values of an entity in a chart with anomaly score. That means it requests data e.g. get live data of device x\r\n * from the backend. It uses the {@link RealTimeAnomalyWidget} model to represent a widget.\r\n */\r\n@Component({\r\n  selector: 'realtime-anomaly',\r\n  templateUrl: './realtime-anomaly.component.html',\r\n  styleUrls: ['./realtime-anomaly.component.css']\r\n})\r\nexport class RealtimeAnomalyComponent implements OnInit {\r\n  @Input() currentWidget: RealtimeAnomalyWidget;\r\n  @ViewChild('chart') private ctx;\r\n  @Output() readonly resizeFont = new EventEmitter<HTMLElement>();\r\n\r\n  protected user: User;\r\n  protected project: Project;\r\n  protected loginStatus: number;\r\n\r\n  myChart: any;\r\n  protected devicesList: Array<SelectItem> = [];\r\n  protected sensorList: Array<SelectItem> = [];\r\n  chartType: string;\r\n  selectedNumberOfValues: number;\r\n  anomalyScore: number;\r\n\r\n  // for Training HTM Network From startTraining to nowDate\r\n  startTraining: Date\r\n  nowDate: Date;\r\n  duration: string = 'P5D';\r\n\r\n  // spinner\r\n  loading = false;\r\n  index = 1;\r\n  // need both maps, because in realtime just a selectedNumberofValues just shown\r\n  public anomalyScores: Map<number, number>;\r\n  public newAnomalyScores: Map<number, number>;\r\n\r\n\r\n  axesOptions: AxesOptions = {xLabel: 'time', yLabel: 'y', xLabelVisible: true, yLabelVisible: true};\r\n\r\n  displaySettings = false;\r\n\r\n  public chartLabels: Array<string>;\r\n  public chartData: [{ label: string, data: Array<number>, borderColor: string, fill: boolean }];\r\n  public chartOptions: any;\r\n\r\n  public dropdownList = [{deviceEntity: {deviceId: '', entityId: '', label: '', unit: '', axis: ''}, sensorList: []}];\r\n\r\n  constructor(private dataService: DataService,\r\n              private databaseService: DatabaseService,\r\n              private devicemanager: DeviceManagerService,\r\n              private anomalymanager: AnomalyManagerService,\r\n              private changeDetector: ChangeDetectorRef) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.devicesList = [];\r\n    this.sensorList = [];\r\n    this.dataService.projectData\r\n      .subscribe(value => {\r\n        this.project = value;\r\n      });\r\n\r\n    this.dataService.userData\r\n      .subscribe(value => {\r\n        this.user = value;\r\n      });\r\n\r\n    this.dataService.currentLoginStatus.subscribe(value => this.loginStatus = value);\r\n    this.initDeviceDropdown();\r\n    this.chartOptions = {\r\n      maintainAspectRatio: false,\r\n      responsive: true,\r\n      legend: {\r\n        display: true,\r\n        position: 'top'\r\n      },\r\n      tooltips: {\r\n        callbacks: {\r\n\r\n\r\n          //extra text for items\r\n          afterLabel:  (tooltipItem, data) => 'Anomalscore: '+ (this.anomalyScores.get(tooltipItem['index']) * 100).toFixed(2) + '%'\r\n        }\r\n      },\r\n      scales: {\r\n        xAxes: [{\r\n          display: true,\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: ''\r\n          },\r\n        }],\r\n        yAxes: [{\r\n          ticks: {\r\n            beginAtZero: true,\r\n\r\n          },\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: ''\r\n          }\r\n        }]\r\n      },\r\n      onResize: function (chart, size) {\r\n        //chart.options.legend.display = size.width > 400;\r\n        //chart.options.legend.position = (size.width > size.height) ? 'right' : 'bottom';\r\n        //console.log();\r\n        //chart.update();\r\n      }\r\n    };\r\n    this.myChart = new Chart(this.ctx.nativeElement, {\r\n      type: 'line',\r\n      data: {\r\n        labels: [],\r\n        datasets: []\r\n      },\r\n      options: this.chartOptions\r\n    });\r\n\r\n    // check if number of values was set before\r\n    if (this.currentWidget.numberOfValues !== undefined) {\r\n      this.selectedNumberOfValues = this.currentWidget.numberOfValues;\r\n    }\r\n\r\n    if (this.currentWidget.axesOptions !== undefined) {\r\n      this.axesOptions = this.currentWidget.axesOptions;\r\n    }\r\n\r\n    // if new data is available, the chart gets updated\r\n    this.dataService.refreshAnomalyNow\r\n      .subscribe(result => {\r\n        let backgroundcolor = 'green';\r\n        if (this.dropdownList[0].deviceEntity.deviceId !== '' && this.myChart !== undefined && this.myChart.data !== undefined && this.myChart.data.datasets !== undefined\r\n          && this.myChart.data.datasets[0] !== undefined) {\r\n          // go through all selected (visualized) Devices\r\n          for (const selected of this.dropdownList) {\r\n            if (selected.deviceEntity.deviceId === result.deviceId &&\r\n              selected.deviceEntity.entityId === result.entityId) {\r\n\r\n              // this.anomalymanager.getSensorWithAnomalyScoreDataSocket(selected.deviceEntity.deviceId, selected.deviceEntity.entityId, this.user.id, this.project.id, result.value, result.label)\r\n              //   .subscribe((anomalyScoreSocket: number) => {\r\n\r\n\r\n              // set new values in data\r\n\r\n\r\n              if(this.index == this.selectedNumberOfValues){\r\n                this.anomalyScores.delete(0);\r\n                this.newAnomalyScores = new Map<number, number>();\r\n                for(let i = 1; i < this.selectedNumberOfValues ; i++) {\r\n                  this.newAnomalyScores.set(this.index- i - 1, this.anomalyScores.get(this.index - i));\r\n                }\r\n                // this.anomalyScores = new Map<number, number>();\r\n                this.anomalyScores = this.newAnomalyScores;\r\n\r\n                this.index = this.index - 1;\r\n                this.anomalyScores.set(this.index, result.anomalyscore);\r\n                this.index = this.index + 1;\r\n              }\r\n              else {\r\n                this.anomalyScores.set(this.index,  result.anomalyscore);\r\n                this.index++;\r\n              }\r\n\r\n                  if(result.anomalyscore > 0.84){\r\n                    if(result.anomalyscore > 0.89){\r\n                      backgroundcolor = 'red';\r\n                    }\r\n                    else{\r\n                      backgroundcolor = 'orange';\r\n                    }\r\n                  }\r\n                  this.addData(this.myChart, selected.deviceEntity.label + \" in \" + selected.deviceEntity.unit, result.label, result.value, backgroundcolor);\r\n\r\n              while (this.myChart.data.datasets[0].data.length > this.selectedNumberOfValues) {\r\n                // delete the oldest ones and the labels as well\r\n                this.removeData(this.myChart);\r\n              }\r\n\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  // generates a timestamp in ISO standard as defined for the backend\r\n  private generateIsoDateTime(date: Date): string {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() + 1;\r\n    const day = date.getDate();\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n    const seconds = date.getSeconds();\r\n\r\n    const yearString = year.toString();\r\n    let dayString = day.toString();\r\n    let monthString = month.toString();\r\n    let hoursString = hours.toString();\r\n    let minutesString = minutes.toString();\r\n    let secondsString = seconds.toString();\r\n\r\n    if (day < 10) {\r\n      dayString = '0' + dayString;\r\n    }\r\n    if (month < 10) {\r\n      monthString = '0' + monthString;\r\n    }\r\n    if (hours < 10) {\r\n      hoursString = '0' + hoursString;\r\n    }\r\n    if (minutes < 10) {\r\n      minutesString = '0' + minutesString;\r\n    }\r\n    if (seconds < 10) {\r\n      secondsString = '0' + secondsString;\r\n    }\r\n\r\n    return yearString + '-' + monthString + '-' + dayString + 'T' + hoursString + ':' + minutesString + ':' + secondsString;\r\n  }\r\n\r\n  private initDeviceDropdown(): void {\r\n    this.devicesList = [];\r\n    this.devicemanager.getAllDevices(this.user.id, this.project.id)\r\n      .subscribe(data => {\r\n          for (const device of data) {\r\n            this.devicesList.push({label: device.name, value: device.deviceId});\r\n          }\r\n          if (this.currentWidget.deviceEntities[0].deviceId !== undefined && this.currentWidget.deviceEntities[0].deviceId !== '') {\r\n            this.initSetDevice();\r\n          }\r\n\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        });\r\n  }\r\n\r\n  /**\r\n   * This method fills the device dropdown with all devices from the backend. Therefore it describes from the devicemanager service\r\n   */\r\n  private refreshDeviceDropdown(): void {\r\n    this.devicesList = [];\r\n    this.devicemanager.getAllDevices(this.user.id, this.project.id)\r\n      .subscribe(data => {\r\n          for (const device of data) {\r\n            this.devicesList.push({label: device.name, value: device.deviceId});\r\n          }\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        });\r\n  }\r\n\r\n  protected initSetDevice(): void {\r\n    this.dropdownList = [];\r\n    // create a list with all init selected devices\r\n    const selectedDevices: Array<String> = [];\r\n    let isIncluded = false;\r\n    for (const widgetElem of this.currentWidget.deviceEntities) {\r\n      // check if device is in list\r\n      for (const selectedElem of selectedDevices) {\r\n        if (selectedElem === widgetElem.deviceId) {\r\n          isIncluded = true;\r\n          break;\r\n        }\r\n      }\r\n      if (!isIncluded) {\r\n        selectedDevices.push(widgetElem.deviceId);\r\n      }\r\n    }\r\n    // fill lists for dropdowns\r\n    const numberOfSavedEntities = this.currentWidget.deviceEntities.length;\r\n    // go over all selected devices\r\n    for (const widgetElem of selectedDevices) {\r\n      // go over all existing devices\r\n      for (const deviceElem of this.devicesList) {\r\n        if (deviceElem.value === widgetElem) {\r\n          // here we have the right device id\r\n          // get list of all entities of the device\r\n          const sensorList = [];\r\n          this.devicemanager.getDeviceById(deviceElem.value, this.user.id, this.project.id)\r\n            .subscribe((device: Device) => {\r\n                if (device.sensors !== null) {\r\n                  for (const sensor of device.sensors) {\r\n                    sensorList.push({label: sensor.name, value: sensor.id});\r\n                  }\r\n                }\r\n                // if (device.actions !== null) {\r\n                //   for (const action of device.actions) {\r\n                //     sensorList.push({label: action.name, value: action.id});\r\n                //   }\r\n                // }\r\n                // looking for the right entitiy id\r\n                for (const sensorElem of sensorList) {\r\n                  for (const elem of this.currentWidget.deviceEntities) {\r\n                    if (sensorElem.value === elem.entityId) {\r\n                      // here we have the right entity id\r\n                      // set selected device, list and sensor in dropdownlist\r\n                      this.dropdownList.push({\r\n                        deviceEntity: {deviceId: deviceElem.value, entityId: sensorElem.value, label: elem.label, unit: elem.unit, axis: 'y'},\r\n                        sensorList: sensorList});\r\n                      break;\r\n                    }\r\n                  }\r\n                }\r\n                // check dropdownlist for dummydata\r\n                for (const data of this.dropdownList) {\r\n                  if (data['deviceId'] === '') {\r\n                    console.log('Dummy');\r\n                  }\r\n                }\r\n                //create and fill chartData from selected sensors if all data is in dropdownList (last finished request)\r\n                //if (this.dropdownList.length === numberOfSavedEntities) {\r\n                this.initRealtimeData(this.myChart);\r\n                //}\r\n\r\n              },\r\n              error => {\r\n                console.log('Error requesting devices from backend ', error);\r\n              });\r\n        }\r\n      }\r\n    }\r\n    // set chart data for devices\r\n\r\n    // setTimeout(this.initRealtimeData 3000);\r\n  }\r\n\r\n\r\n  /**\r\n   * This method pulls the realtime data from the backend once to get the first values for the chart\r\n   * when widget is starting or input parameter are changing\r\n   */\r\n  initRealtimeData(chart): void {\r\n    // set chart options\r\n    chart.options.scales.xAxes[0].scaleLabel.labelString = this.axesOptions.xLabel;\r\n    chart.options.scales.yAxes[0].scaleLabel.labelString = this.axesOptions.yLabel;\r\n    chart.options.scales.xAxes[0].scaleLabel.display = this.axesOptions.xLabelVisible;\r\n    chart.options.scales.yAxes[0].scaleLabel.display = this.axesOptions.yLabelVisible;\r\n    let cIndex = 0;\r\n    this.nowDate = new Date();\r\n    this.startTraining = new Date();\r\n    this.updateTrainingData(this.nowDate);\r\n\r\n    // go through all selected sensors\r\n    for (const selected of this.dropdownList) {\r\n      // set saved sensor settings\r\n      const ctxData = {label: selected.deviceEntity.label + ' in ' + selected.deviceEntity.unit,\r\n        data: [],\r\n        borderColor: 'grey',\r\n        borderDash:[],\r\n        fill: false,\r\n        pointBackgroundColor: []};\r\n        this.loading = true;\r\n        this.changeDetector.detectChanges();\r\n      // this.anomalymanager.startAnomalyNetworkRealtime(selected.deviceEntity.deviceId, selected.deviceEntity.entityId, this.user.id, this.project.id)\r\n      //   .subscribe(() => {\r\n      // get newest data value from the sensor\r\n      this.anomalymanager.startAnomalyNetworkRealtime(selected.deviceEntity.deviceId, selected.deviceEntity.entityId, this.user.id, this.project.id, this.generateIsoDateTime(this.startTraining), this.generateIsoDateTime(this.nowDate), this.duration)\r\n        .subscribe(() => {\r\n          this.loading = false;\r\n          this.changeDetector.detectChanges();\r\n          this.anomalymanager.getSensorWithAnomalyScoreDataNow(selected.deviceEntity.deviceId, selected.deviceEntity.entityId, this.user.id, this.project.id)\r\n            .subscribe((anomalySensorDataModel: AnomalySensorDataModel) => {\r\n                const value = anomalySensorDataModel.Values[0];\r\n                // fill sensor data field with one value\r\n                if (value.FloatValue != null) {\r\n                  ctxData.data.push(value.FloatValue);\r\n\r\n                  if(value.AnomalyScore > 0.84){\r\n                    if(value.AnomalyScore > 0.89){\r\n                      ctxData.pointBackgroundColor.push('red');\r\n                    }\r\n                    else{\r\n                      ctxData.pointBackgroundColor.push('orange');\r\n                    }\r\n                  }\r\n                  else{\r\n                    ctxData.pointBackgroundColor.push('green');\r\n                  }\r\n\r\n                  // if(value.FloatValue > 5){\r\n                  //   ctxData.pointBackgroundColor.push('red');\r\n                  // }\r\n                  // else{\r\n                  //   ctxData.pointBackgroundColor.push('green');\r\n                  // }\r\n                } else if (value.StringValue != null) {\r\n                  ctxData.data.push(Number(value.StringValue));\r\n\r\n\r\n                }\r\n                // one time the label of the data points has to be set.\r\n                if (cIndex === 0) {\r\n                  chart.data.labels.push(value.DateTime);\r\n                  cIndex++;\r\n                }\r\n                // add sensor data to the chartData.\r\n                // this.anomalyScore = value.AnomalyScore;\r\n                this.anomalyScores = new Map<number, number>();\r\n                this.anomalyScores.set(0, value.AnomalyScore);\r\n                chart.data.datasets.push(ctxData);\r\n                if (chart.data.datasets[0]['label'] === '') {\r\n                  chart.data.dataset.shift();\r\n                }\r\n                chart.update();\r\n              },\r\n              err => {\r\n                this.loading = false;\r\n                console.log('Error requesting data from backend: ', err);\r\n              });\r\n        });\r\n\r\n  }}\r\n\r\n  updateRealtimeData(chart): void {\r\n    console.log(\"options: \", chart.options);\r\n    chart.options.scales.xAxes[0].scaleLabel.labelString = this.axesOptions.xLabel;\r\n    chart.options.scales.yAxes[0].scaleLabel.labelString = this.axesOptions.yLabel;\r\n    chart.options.scales.xAxes[0].scaleLabel.display = this.axesOptions.xLabelVisible;\r\n    chart.options.scales.yAxes[0].scaleLabel.display = this.axesOptions.yLabelVisible;\r\n    let cIndex = 0;\r\n    this.nowDate = new Date();\r\n    this.startTraining = new Date();\r\n    this.updateTrainingData(this.nowDate);\r\n    // go through all selected sensors\r\n    for (const selected of this.dropdownList) {\r\n      // set saved sensor settings\r\n      let isAvailable = false;\r\n      const ctxData = {label: selected.deviceEntity.label + ' in ' + selected.deviceEntity.unit,\r\n        data: [],\r\n        borderColor: '',\r\n        borderDash: [],\r\n        fill: false,\r\n        pointBackgroundColor: []};\r\n      for (let dataset of chart.data.datasets) {\r\n        // check if dataset is in datasets\r\n        if (dataset.label === ctxData.label){\r\n          isAvailable = true;\r\n          // empty dataset until only one value is left.\r\n          while (dataset.data.length > 1) {\r\n            dataset.data.shift();\r\n          }\r\n          // empty labels as well.\r\n          while (chart.data.labels.length > 1) {\r\n            chart.data.labels.shift();\r\n          }\r\n          // updating other attributes\r\n          // dataset.borderColor = selected.deviceEntity.lineColor;\r\n          dataset.borderDash = [];\r\n          break;\r\n        }\r\n      }\r\n      if (!isAvailable) {\r\n        // get newest data value from the sensor.\r\n        this.loading = true;\r\n        this.anomalymanager.startAnomalyNetworkRealtime(selected.deviceEntity.deviceId, selected.deviceEntity.entityId, this.user.id, this.project.id, this.generateIsoDateTime(this.startTraining), this.generateIsoDateTime(this.nowDate), this.duration)\r\n          .subscribe(() => {\r\n            this.loading = false;\r\n        this.anomalymanager.getSensorWithAnomalyScoreDataNow(selected.deviceEntity.deviceId, selected.deviceEntity.entityId, this.user.id, this.project.id)\r\n          .subscribe((anomalySensorDataModel: AnomalySensorDataModel) => {\r\n              const value = anomalySensorDataModel.Values[0];\r\n              // fill sensor data field with one value\r\n              if (value.FloatValue != null) {\r\n                ctxData.data.push(value.FloatValue);\r\n                if (value.AnomalyScore > 0.84){\r\n                  if (value.AnomalyScore > 0.89){\r\n                    ctxData.pointBackgroundColor.push('red');\r\n                  }\r\n                  else {\r\n                    ctxData.pointBackgroundColor.push('orange');\r\n                  }\r\n                }\r\n                else {\r\n                  ctxData.pointBackgroundColor.push('green');\r\n                }\r\n              } else if (value.StringValue != null) {\r\n                ctxData.data.push(Number(value.StringValue));\r\n              }\r\n              // one time the label of the data points has to be set if there is no label available\r\n              if (cIndex === 0 && chart.data.labels.length === 0) {\r\n                chart.data.labels.push(value.DateTime);\r\n                cIndex++;\r\n              }\r\n              this.anomalyScores = new Map<number, number>();\r\n              this.anomalyScores.set(0, value.AnomalyScore);\r\n              chart.data.datasets.push(ctxData);\r\n              if (chart.data.datasets[0]['label'] === '') {\r\n                chart.data.dataset.shift();\r\n              }\r\n              chart.update();\r\n              // this.addDataset(chart, ctxData);\r\n            },\r\n            err => {\r\n              console.log('Error requesting data from backend: ', err);\r\n            });\r\n          });\r\n      }\r\n      // remove remaining datasets.\r\n      this.removeDatasets(chart);\r\n    }\r\n\r\n    // remove all datasets which where deleted\r\n\r\n  }\r\n  // events\r\n  public chartClicked(e: any): void {\r\n    // console.log(e);\r\n  }\r\n\r\n  public chartHovered(e: any): void {\r\n    // console.log(e);\r\n  }\r\n\r\n  // add one Data value to each dataset of the chart as well as the label\r\n  addData(chart, entityLabel, label, data, backgroundcolor): void {\r\n    chart.data.labels.push(label);\r\n    chart.data.datasets.forEach((dataset) => {\r\n      if (entityLabel === dataset.label) {\r\n        console.log(\"It is the entity label!\");\r\n        dataset.data.push(data);\r\n        dataset.pointBackgroundColor.push(backgroundcolor);\r\n      } else {\r\n        // fill the other datasets with the latest data value\r\n        const elem = dataset.data.pop();\r\n        dataset.data.push(elem);\r\n        dataset.data.push(elem);\r\n      }\r\n\r\n    });\r\n    chart.update();\r\n  }\r\n\r\n  // add a new line / dataset to the chart\r\n  addDataset(chart, dataset): void {\r\n    chart.data.datasets.push(dataset);\r\n    if (chart.data.datasets[0]['label'] === '') {\r\n      chart.data.dataset.shift();\r\n    }\r\n    chart.update();\r\n  }\r\n\r\n  // removes the oldest data value of all datasets in the chart\r\n  removeData(chart): void {\r\n    chart.data.labels.shift();\r\n    chart.data.datasets.forEach((dataset) => {\r\n      dataset.pointBackgroundColor.shift();\r\n      dataset.data.shift();\r\n    });\r\n    chart.update();\r\n  }\r\n\r\n  // removes all datasets which have mor then one data point\r\n  removeDatasets(chart): void {\r\n    chart.data.datasets.forEach((dataset) => {\r\n      if (dataset.data.lenght > 1) {\r\n        let removalIndex = chart.data.datasets.indexOf(dataset); //Locate index of dataset\r\n        if(removalIndex >= 0) { //make sure this element exists in the array\r\n          chart.data.datasets.splice(removalIndex, 1);\r\n        }\r\n      }\r\n    });\r\n    // when it was the only data set, remove the labels as well.\r\n    if (chart.data.datasets.length === 0){\r\n      // for each label, remove one label.\r\n      chart.data.labels.forEach((label) => {\r\n        chart.data.labels.pop();\r\n      });\r\n    }\r\n    chart.update();\r\n  }\r\n\r\n  // updates an attribute of a chart (sub)object.\r\n  updateChartOption(chart, chartField, value): void {\r\n    chartField = value;\r\n    chart.update();\r\n  }\r\n\r\n\r\n  applySettings(): void {\r\n    this.displaySettings = false;\r\n    this.currentWidget.deviceEntities = [];\r\n    // updating data from dropdowns in current Widget\r\n    for (const entity of this.dropdownList) {\r\n      this.currentWidget.deviceEntities.push(entity.deviceEntity);\r\n    }\r\n    // this.currentWidget.chartType = this.chartType;\r\n    this.currentWidget.numberOfValues = this.selectedNumberOfValues;\r\n    this.currentWidget.axesOptions = this.axesOptions;\r\n    // remove empty placeholder if neccessary\r\n    if (this.currentWidget.deviceEntities[0].deviceId === '') {\r\n      this.currentWidget.deviceEntities.shift();\r\n    }\r\n    this.saveInDatabase(this.currentWidget.deviceEntities, 'deviceEntities');\r\n    // this.saveInDatabase(this.currentWidget.chartType, 'chartType');\r\n    this.saveInDatabase(this.currentWidget.numberOfValues, 'numberOfValues');\r\n    this.saveInDatabase(this.currentWidget.axesOptions, 'axesOptions');\r\n    console.log('deviceEntities after APPLY: ', this.currentWidget.deviceEntities);\r\n    // get realtime data with new settings\r\n    this.updateRealtimeData(this.myChart);\r\n  }\r\n\r\n  abortChanges(): void {\r\n\r\n    this.displaySettings = false;\r\n    this.chartType = this.currentWidget.chartType;\r\n    this.selectedNumberOfValues = this.currentWidget.numberOfValues;\r\n    this.axesOptions = this.currentWidget.axesOptions;\r\n    this.dropdownList = [{deviceEntity: {deviceId: '', entityId: '', label: '', unit: '', axis: ''}, sensorList: []}];\r\n    for (const entity of this.currentWidget.deviceEntities) {\r\n      this.dropdownList.push({deviceEntity: entity, sensorList: []});\r\n      this.setSensorDropdown(entity.deviceId);\r\n    }\r\n    this.dropdownList.shift();\r\n  }\r\n\r\n  /**\r\n   * This method saves the selected options into the database.\r\n   * @param value the value\r\n   * @param field the field where to store\r\n   */\r\n  protected saveInDatabase(value, field: string): void {\r\n    this.databaseService.updateDocument(this.databaseService.WIDGETSCOLLECTION, this.currentWidget.id, new Fieldvalue(field, value))\r\n      .subscribe(result => {\r\n      }, error => {\r\n        console.log('Error updating database entry ', error);\r\n      });\r\n  }\r\n\r\n  protected addNewDropdowns() {\r\n    this.dropdownList.push({deviceEntity: {deviceId: '', entityId: '', label: '', unit: '', axis: ''}, sensorList: []});\r\n    //this.chartData.push({label: '', data: [], borderColor: '', fill: false});\r\n  }\r\n\r\n  protected deleteDropdowns(group: ChartDeviceEntity) {\r\n    let i = 0;\r\n    this.chartData = [{label: '', data: [], borderColor: '', fill: false}];\r\n\r\n    for (let elem of this.dropdownList) {\r\n      if (elem.deviceEntity.deviceId === group.deviceId && elem.deviceEntity.entityId === group.entityId) {\r\n        this.dropdownList.splice(i, 1);\r\n        // if the arrays have the same length, the chartData of the entity has to be deleted as well\r\n        if (this.dropdownList.length === (this.chartData.length) - 1) {\r\n          // this.chartData.splice(i, 1);\r\n        }\r\n        console.log('Dropdownlist after DELETE: ', this.dropdownList);\r\n      }\r\n      i++;\r\n    }\r\n\r\n  }\r\n\r\n  protected setSensorDropdown(deviceId: string): void {\r\n    // get list of all entities of the device\r\n    const sensorList = [];\r\n    console.log(\"dropdown: \", this.dropdownList);\r\n    console.log(\"chart: \", this.myChart.data.datasets);\r\n    this.devicemanager.getDeviceById(deviceId, this.user.id, this.project.id)\r\n      .subscribe((device: Device) => {\r\n          if (device.sensors !== null) {\r\n            for (const sensor of device.sensors) {\r\n              sensorList.push({label: sensor.name, value: sensor.id});\r\n            }\r\n          }\r\n          if (device.actions !== null) {\r\n            for (const action of device.actions) {\r\n              sensorList.push({label: action.name, value: action.id});\r\n            }\r\n          }\r\n          // go trhough dropdownlist and set sensorList to device\r\n          for (const dropdowngroup of this.dropdownList) {\r\n            if (dropdowngroup.deviceEntity.deviceId === deviceId) {\r\n              dropdowngroup.sensorList = sensorList;\r\n            }\r\n          }\r\n        },\r\n        error => {\r\n          console.log('Error requesting devices from backend ', error);\r\n        });\r\n  }\r\n\r\n  protected setLabel(deviceID: string): void{\r\n    this.dropdownList[0].deviceEntity.label = deviceID;\r\n  }\r\n  // calcualte Date for training, for backend\r\n  protected updateTrainingData(start: Date): void {\r\n\r\n    // date problem: January, February, April, Day 31 --> specific training date\r\n    if (start.getMonth() === 0 || start.getMonth() === 1 || start.getMonth() === 3 || start.getDate() === 31) {\r\n      if (start.getMonth() === 0) {\r\n        this.startTraining.setDate(start.getDate() -1);\r\n        this.startTraining.setMonth(10);\r\n        this.startTraining.setFullYear(start.getFullYear() - 1);\r\n      }\r\n      else if(start.getMonth() === 1) {\r\n        this.startTraining.setDate(start.getDate() -1);\r\n        this.startTraining.setMonth(11);\r\n        this.startTraining.setFullYear(start.getFullYear() - 1);\r\n      }\r\n      else if(start.getMonth() === 3 && start.getDate() > 28) {\r\n        this.startTraining.setDate(28);\r\n        this.startTraining.setMonth(1);\r\n        this.startTraining.setFullYear(start.getFullYear());\r\n      }\r\n      else{\r\n        this.startTraining.setDate(start.getDate() - 1);\r\n        this.startTraining.setMonth(start.getMonth() - 2);\r\n        this.startTraining.setFullYear(start.getFullYear());\r\n      }\r\n    }\r\n\r\n    // no date problem just subtrate 2 months and 1 day\r\n    else {\r\n      this.startTraining.setDate(start.getDate() - 1);\r\n      this.startTraining.setMonth(start.getMonth() - 2);\r\n      this.startTraining.setFullYear(start.getFullYear());\r\n    }\r\n  }\r\n}\r\n","module.exports = \".input-slider {\\r\\n  width: 4vw;\\r\\n}\\r\\n.unknown {\\r\\n  font-style:italic;\\r\\n}\\r\\n::ng-deep .ui-slider {\\r\\n  margin: 0 auto;\\r\\n}\\r\\n.settings-button {\\r\\n  transition: all 0.5s;\\r\\n  position: absolute;\\r\\n  right: 75px;\\r\\n  top: 5px;\\r\\n}\\r\\n.testclass {\\r\\n  width:95%; float:right;\\r\\n}\\r\\n\"","module.exports = \"<p-dialog header=\\\"Device Control Settings\\\" [modal]=true appendTo=\\\"body\\\" [width]=\\\"550\\\"\\r\\n          [(visible)]=\\\"displaySettings\\\" [closable]=\\\"false\\\">\\r\\n\\r\\n  <div class=\\\"ui-g\\\">\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <h3>Device Specifications</h3>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <div class=\\\"ui-g-4\\\">Device:</div>\\r\\n      <p-dropdown appendTo=\\\"body\\\" [options]=\\\"devicesList\\\" [filter]=\\\"true\\\" [placeholder]=\\\"'Select a device.'\\\"\\r\\n                  [(ngModel)]=\\\"selectedDevice\\\"\\r\\n                  (onChange)=\\\"updateActionDropdown()\\\" [style]=\\\"{'width':'200px'}\\\">\\r\\n      </p-dropdown>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <div class=\\\"ui-g-4\\\">Action:</div>\\r\\n      <p-dropdown [autoWidth]=\\\"true\\\"\\r\\n                  [options]=\\\"actionList\\\" [placeholder]=\\\"'Select an action.'\\\" [(ngModel)]=\\\"selectedAction\\\"\\r\\n                  (onChange)=\\\"configureSliderProperties()\\\" [style]=\\\"{'width':'200px'}\\\">\\r\\n      </p-dropdown>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"ui-g-12\\\" *ngIf=\\\"currentWidget.type === widgetType.sliderDeviceControl\\\">\\r\\n      <h3>Slider Specifications</h3>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <div class=\\\"ui-g-4\\\">Position:</div>\\r\\n      <div class=\\\"ui-g\\\">\\r\\n        <div class=\\\"ui-g-12\\\">\\r\\n          <p-radioButton name=\\\"positionGroup\\\" value=\\\"right\\\" label=\\\"right\\\"\\r\\n                         [(ngModel)]=\\\"selectedPosition\\\"></p-radioButton>\\r\\n        </div>\\r\\n        <div class=\\\"ui-g-12\\\">\\r\\n          <p-radioButton name=\\\"positionGroup\\\" value=\\\"bottom\\\" label=\\\"bottom\\\"\\r\\n                         [(ngModel)]=\\\"selectedPosition\\\"></p-radioButton>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <h3>Icon Specifications</h3>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <p-selectButton [options]=\\\"icons\\\" [(ngModel)]=\\\"selectedIcon\\\"></p-selectButton>\\r\\n    </div>\\r\\n  </div>\\r\\n  <p-footer>\\r\\n    <button type=\\\"'button\\\" pButton icon=\\\"fa-check\\\" (click)=\\\"applySettings()\\\" label=\\\"Apply\\\"></button>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"fa-close\\\" (click)=\\\"abortChanges()\\\" label=\\\"Cancel\\\"></button>\\r\\n  </p-footer>\\r\\n</p-dialog>\\r\\n\\r\\n<button pButton icon=\\\"fa fa-cog\\\" style=\\\"z-index: 6;\\\"\\r\\n        class=\\\"gridster-item-content settings-button transparentButton tbutton ui-button-secondary\\\"\\r\\n        (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" (click)=\\\"displaySettings=true;\\\"\\r\\n        [hidden]=\\\" !(loginStatus>1 && currentWidget.isDeveloped)\\\"></button>\\r\\n\\r\\n<div *ngIf=\\\"currentWidget.controlPosition === 'right'\\\"\\r\\n     style=\\\"display: flex; flex-direction:row; align-items: center; height:100%; width:100%;\\\">\\r\\n  <div>\\r\\n    <i [class]=\\\"currentWidget.icon\\\"></i>\\r\\n  </div>\\r\\n  <div style=\\\"padding-left: 15px;\\\">\\r\\n    <input pInputText *ngIf=\\\"currentWidget.isDeveloped\\\" style=\\\"width:100%;\\\" [(ngModel)]=\\\"currentWidget.name\\\"\\r\\n           (ngModelChange)=\\\"saveInDatabase($event, 'name')\\\"\\r\\n           (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" class=\\\"gridster-item-content\\\">\\r\\n    <h2 *ngIf=\\\"!currentWidget.isDeveloped\\\" style=\\\"margin: 0; width: 100%;\\\">{{ currentWidget.name }}</h2>\\r\\n\\r\\n    <input pInputText *ngIf=\\\"currentWidget.isDeveloped\\\" style=\\\"width:100%; \\\" [placeholder]=\\\"'Additional info'\\\"\\r\\n           [(ngModel)]=\\\"currentWidget.additionalInfo\\\" (ngModelChange)=\\\"saveInDatabase($event, 'additionalInfo')\\\"\\r\\n           (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" class=\\\"gridster-item-content\\\">\\r\\n    <div *ngIf=\\\"!currentWidget.isDeveloped\\\"\\r\\n         style=\\\"margin: 0; color: grey; width:100%;\\\">{{ currentWidget.additionalInfo }}</div>\\r\\n  </div>\\r\\n\\r\\n  <div style=\\\"padding-left: 15px; width:100%\\\">\\r\\n    <div style=\\\"padding-top: 15px;\\\">\\r\\n      <p-slider class=\\\"gridster-item-content\\\" [(ngModel)]=\\\"currentWidget.value\\\" [min]=\\\"currentWidget.minValue\\\"\\r\\n                [max]=\\\"currentWidget.maxValue\\\"\\r\\n                [animate]=\\\"true\\\"\\r\\n                (onChange)=\\\"changeSliderValue(currentWidget.value)\\\"\\r\\n                [style]=\\\"[{'float':'right'},{'width': '90%'}]\\\"></p-slider>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12\\\" style=\\\"width:100%; margin: 0 auto;\\\">\\r\\n      <div class=\\\"ui-g-4\\\" *ngIf=\\\"!currentWidget.isDeveloped\\\" style=\\\"text-align: left; padding: 0 !important;\\\">\\r\\n        {{ currentWidget.minValue }}\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-4\\\" *ngIf=\\\"currentWidget.isDeveloped\\\">\\r\\n        <input class=\\\"gridster-item-content\\\" type=\\\"number\\\" pInputText\\r\\n               style=\\\"text-align: left; padding: 0 !important; width:100%;\\\"\\r\\n               [(ngModel)]=\\\"currentWidget.minValue\\\" [max]=\\\"currentWidget.maxValue\\\"\\r\\n               (ngModelChange)=\\\"saveInDatabase($event, 'minValue')\\\">\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-4\\\" style=\\\"text-align: center; padding: 0 !important;\\\">{{ currentWidget.value }}</div>\\r\\n      <div class=\\\"ui-g-4\\\" *ngIf=\\\"!currentWidget.isDeveloped\\\" style=\\\"text-align: right; padding: 0 !important;\\\">\\r\\n        {{currentWidget.maxValue }}\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-4\\\" *ngIf=\\\"currentWidget.isDeveloped\\\">\\r\\n        <input class=\\\"gridster-item-content\\\" type=\\\"number\\\" pInputText\\r\\n               style=\\\"text-align: right; padding: 0 !important; width:100%;\\\"\\r\\n               [(ngModel)]=\\\"currentWidget.maxValue\\\" [min]=\\\"currentWidget.minValue\\\"\\r\\n               (ngModelChange)=\\\"saveInDatabase($event, 'maxValue')\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n<div *ngIf=\\\"currentWidget.controlPosition === 'bottom'\\\">\\r\\n  <div style=\\\"display: flex; flex-direction:row; align-items: center; height:100%; width:100%;\\\">\\r\\n    <div>\\r\\n      <i [class]=\\\"selectedIcon\\\"></i>\\r\\n    </div>\\r\\n    <div style=\\\"padding-left: 15px;\\\">\\r\\n      <input pInputText *ngIf=\\\"currentWidget.isDeveloped\\\" style=\\\"width:100%;\\\" [(ngModel)]=\\\"currentWidget.name\\\"\\r\\n             (ngModelChange)=\\\"saveInDatabase($event, 'name')\\\"\\r\\n             (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" class=\\\"gridster-item-content\\\">\\r\\n      <h2 *ngIf=\\\"!currentWidget.isDeveloped\\\" style=\\\"margin: 0; width:100%;\\\">{{ currentWidget.name }}</h2>\\r\\n\\r\\n      <input pInputText *ngIf=\\\"currentWidget.isDeveloped\\\" style=\\\"width:100%; \\\" [placeholder]=\\\"'Additional info'\\\"\\r\\n             [(ngModel)]=\\\"currentWidget.additionalInfo\\\" (ngModelChange)=\\\"saveInDatabase($event, 'additionalInfo')\\\"\\r\\n             (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" class=\\\"gridster-item-content\\\">\\r\\n      <div *ngIf=\\\"!currentWidget.isDeveloped\\\"\\r\\n           style=\\\"margin: 0; color: grey; width:100%;\\\">{{ currentWidget.additionalInfo }}</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div style=\\\"display: flex; flex-direction: column; align-items: center; padding-top:15px;\\\">\\r\\n    <div style=\\\"width: 100%\\\">\\r\\n      <p-slider class=\\\"gridster-item-content\\\" [(ngModel)]=\\\"currentWidget.value\\\" [min]=\\\"currentWidget.minValue\\\"\\r\\n                [max]=\\\"currentWidget.maxValue\\\"\\r\\n                (onChange)=\\\"changeSliderValue(currentWidget.value)\\\"\\r\\n                [style]=\\\"[{'float':'right'},{'width': '90%'}]\\\"></p-slider>\\r\\n    </div>\\r\\n    <!-- Slider for Slider-Widgets-->\\r\\n    <div class=\\\"ui-g-12\\\" style=\\\"width:100%; margin: 0 auto;\\\">\\r\\n      <div class=\\\"ui-g-4\\\" *ngIf=\\\"!currentWidget.isDeveloped\\\" style=\\\"text-align: left; padding: 0 !important;\\\">\\r\\n        {{currentWidget.minValue }}\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-4\\\" *ngIf=\\\"currentWidget.isDeveloped\\\">\\r\\n        <input class=\\\"gridster-item-content\\\" type=\\\"number\\\" pInputText\\r\\n               style=\\\"text-align: left; padding: 0 !important; width:100%;\\\"\\r\\n               [(ngModel)]=\\\"currentWidget.minValue\\\" [max]=\\\"currentWidget.maxValue\\\"\\r\\n               (ngModelChange)=\\\"saveInDatabase($event, 'minValue')\\\">\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-4\\\" style=\\\"text-align: center; padding: 0 !important;\\\">{{ currentWidget.value }}</div>\\r\\n      <div class=\\\"ui-g-4\\\" *ngIf=\\\"!currentWidget.isDeveloped\\\" style=\\\"text-align: right; padding: 0 !important;\\\">\\r\\n        {{currentWidget.maxValue }}\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-4\\\" *ngIf=\\\"currentWidget.isDeveloped\\\">\\r\\n        <input class=\\\"gridster-item-content\\\" type=\\\"number\\\" pInputText\\r\\n               style=\\\"text-align: right; padding: 0 !important; width:100%;\\\"\\r\\n               [(ngModel)]=\\\"currentWidget.maxValue\\\" [min]=\\\"currentWidget.minValue\\\"\\r\\n               (ngModelChange)=\\\"saveInDatabase($event, 'maxValue')\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport {DataService} from '../../../../../../../services/data.service';\r\nimport {DeviceManagerService} from '../../../../../../../services/devicemanager.service';\r\nimport {Project} from '../../../../../../../models/frontend/project';\r\nimport {WidgetType} from '../../../../../../../models/frontend/widget';\r\nimport {SelectItem} from 'primeng/api';\r\nimport {Device} from '../../../../../../../models/backend/device';\r\nimport {SliderWidget} from '../../../../../../../models/frontend/sliderwidget';\r\nimport {Action} from '../../../../../../../models/backend/action';\r\nimport {Fieldvalue} from '../../../../../../../models/frontend/fieldvalue';\r\nimport {DatabaseService} from '../../../../../../../services/database.service';\r\nimport {User} from \"../../../../../../../models/frontend/user\";\r\n\r\n/**\r\n * @author Janina Hüther, Chinaedu Onwukwe\r\n * This component processes a {@link WidgetType#sliderDeviceControl} Widget. This type of widget is to control\r\n * an entity (action) of a device. That means it sends commands e.g. toggle a switch\r\n * to the backend. It uses the {@link SliderWidget} model to represent a widget.\r\n */\r\n@Component({\r\n  selector: 'slider-control-device',\r\n  templateUrl: './slider-control-device.component.html',\r\n  styleUrls: ['./slider-control-device.component.css']\r\n})\r\nexport class SliderControlDeviceComponent implements OnInit {\r\n  @Input() currentWidget: SliderWidget;\r\n  protected project: Project;\r\n  protected user: User;\r\n  protected loginStatus: number;\r\n  protected devicesList: Array<SelectItem> = [];\r\n  protected actionList: Array<SelectItem> = [];\r\n  protected displaySettings = false;\r\n  public selectedDevice: string;\r\n  public selectedAction: string;\r\n  public selectedPosition: string;\r\n  public selectedIcon: string;\r\n  protected icons: Array<SelectItem> = [];\r\n  protected widgetType = WidgetType;\r\n\r\n  constructor(private dataService: DataService, private databaseService: DatabaseService, private devicemanager: DeviceManagerService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dataService.projectData.subscribe(value => this.project = value);\r\n    this.dataService.userData.subscribe(value => this.user = value);\r\n    this.dataService.currentLoginStatus.subscribe(value => this.loginStatus = value);\r\n\r\n    this.initDropdowns();\r\n\r\n    this.icons = [\r\n      {value: 'fa fa-power-off fa-2x', icon: 'fa fa-power-off'},\r\n      {value: 'fa fa-thermometer-full fa-2x', icon: 'fa fa-thermometer-full'},\r\n      {value: 'fa fa-volume-down fa-2x', icon: 'fa fa-volume-down'},\r\n      {value: 'fa fa-play-circle-o fa-2x', icon: 'fa fa-play-circle-o'},\r\n      {value: 'fa fa-lightbulb-o fa-2x', icon: 'fa fa-lightbulb-o'},\r\n      {value: 'fa fa-sun-o fa-2x', icon: 'fa fa-sun-o'}\r\n    ];\r\n\r\n    // set current selected Icon based on Icon in Database\r\n    for (const item of this.icons) {\r\n      if (item.value === this.currentWidget.icon) {\r\n        this.selectedIcon = item.value;\r\n      }\r\n    }\r\n    // set current selected Position based on Position in Database\r\n    this.selectedPosition = this.currentWidget.controlPosition;\r\n\r\n    // if new data is available, the slider state gets updated\r\n    this.dataService.refreshChartNow\r\n      .subscribe(result => {\r\n        \"hello\"\r\n        if (result !== undefined && this.selectedDevice === result.deviceId &&\r\n          this.selectedAction === result.entityId) {\r\n          //set action\r\n          this.currentWidget.value = result.value;\r\n        }\r\n      });\r\n  }\r\n\r\n  private initDropdowns():void {\r\n    this.devicesList = [];\r\n    this.devicemanager.getAllDevices(this.user.id, this.project.id).subscribe(data => {\r\n        for (const device of data) {\r\n          if (device.actions.length > 0) { // filter just devices with actions\r\n            for (const action of device.actions) {\r\n              // filter for devices which have slideable actions\r\n              if (action.valueable === true) {\r\n                this.devicesList.push({label: device.name, value: device.deviceId});\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (this.currentWidget.deviceId != undefined){\r\n          // set init device\r\n          for (const listElem of this.devicesList){\r\n              if (listElem.value === this.currentWidget.deviceId) {\r\n                this.selectedDevice = listElem.value;\r\n                // check if action is selected\r\n                this.devicemanager.getDeviceById(this.selectedDevice.toString(), this.user.id, this.project.id)\r\n                  .subscribe((device: Device) => {\r\n                      this.actionList = [];\r\n                      if (device.actions !== null) {\r\n                        for (const action of device.actions) {\r\n                          this.actionList.push({label: action.name, value: action.id});\r\n                        }\r\n                      }\r\n                      //set init action\r\n                      for (const listElem of this.actionList) {\r\n                        if (listElem.value === this.currentWidget.entityId) {\r\n                          this.selectedAction = listElem.value;\r\n                          this.initializeValue();\r\n                        }\r\n                      }\r\n                    },\r\n                    error => {\r\n                      console.log('Error requesting devices from backend ', error);\r\n                    });\r\n              }\r\n          }\r\n        }\r\n\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * This method fills the device dropdown with all devices from the backend.\r\n   */\r\n  private refreshDeviceDropdown(): void {\r\n    this.devicesList = [];\r\n    this.devicemanager.getAllDevices(this.user.id, this.project.id)\r\n      .subscribe((devices: Array<Device>) => {\r\n          for (const device of devices) {\r\n            if (device.actions.length > 0) { // filter just devices with actions\r\n              for (const action of device.actions) {\r\n                // filter for devices which have slideable actions\r\n                if (this.currentWidget.type === WidgetType.sliderDeviceControl && action.valueable === true) {\r\n                  this.devicesList.push({label: device.name, value: device.deviceId});\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        err => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          console.log('Error while requesting devices from backend ', err);\r\n        });\r\n    this.devicesList.sort((a, b) => a.label.localeCompare(b.label));\r\n  }\r\n\r\n  /**\r\n   * Updates the actions which you can choose in the action dropdown, so that you can only select capable\r\n   * actions.\r\n   */\r\n  protected updateActionDropdown(): void {\r\n    this.currentWidget.entityId = undefined;\r\n    this.selectedAction = \"\";\r\n    this.devicemanager.getDeviceById(this.selectedDevice, this.user.id, this.project.id)\r\n      .subscribe((device: Device) => {\r\n          const actions = device.actions;\r\n          this.actionList = [];\r\n          for (let i = 0; i < actions.length; i++) {\r\n            if (actions[i].valueable === true) {\r\n              this.actionList.push({label: actions[i].name, value: actions[i].id});\r\n            }\r\n          }\r\n        }, err => {\r\n        if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n          this.router.navigate(['unauthorized']); }\r\n          console.log('Device actions could not be pulled  from the backend ', err);\r\n        }\r\n      );\r\n  }\r\n\r\n  /**\r\n   * This method configure the displayed slider by mapping the requested data from backend to the\r\n   * specific options.\r\n   */\r\n  protected configureSliderProperties(): void {\r\n    this.devicemanager.getDeviceById(this.selectedDevice, this.user.id, this.project.id)\r\n      .subscribe((device: Device) => {\r\n        const action = device.actions.find(x => x.id === this.selectedAction);\r\n        if (action.valueOption.percentage === true) {\r\n          this.currentWidget.minValue = 0;\r\n          this.currentWidget.maxValue = 100;\r\n        } else {\r\n          this.currentWidget.minValue = action.valueOption.minimum;\r\n          this.currentWidget.maxValue = action.valueOption.maximum;\r\n        }\r\n      }, err => {\r\n        if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n          this.router.navigate(['unauthorized']); }\r\n        console.log('Device could not be pulled  from the backend ', err);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * This method sends a command (value) to the backend.\r\n   * @param widgetValue the command setted through the widget surface\r\n   */\r\n  protected changeSliderValue(widgetValue: number): void {\r\n    this.devicemanager.getDeviceById(this.currentWidget.deviceId, this.user.id, this.project.id)\r\n      .subscribe((device: Device) => {\r\n          const action: Action = device.actions.find(x => x.id === this.currentWidget.entityId);\r\n          if (widgetValue < this.currentWidget.minValue || widgetValue > this.currentWidget.maxValue) {\r\n            console.log('Error setting slider value: Value is not evaluable');\r\n          } else {\r\n            this.devicemanager.ChangeActionState(this.user.id, this.project.id, device.deviceId, action.id, widgetValue)\r\n              .subscribe(result => {\r\n                  // log result.message\r\n                  console.log('new value was sent to backend server');\r\n                },\r\n                err => {\r\n                  if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n                    this.router.navigate(['unauthorized']); }\r\n                  console.log('new value could not been sent to backend server', err);\r\n                });\r\n          }\r\n        },\r\n        error => {\r\n          if (error['error'] === 'Session invalid' || error['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          console.log('Device could not be pulled from backend', error);\r\n        });\r\n  }\r\n\r\n\r\n  /**\r\n   * This method gets called when the user presses the apply button in the\r\n   * widget properties. It saves the properties in the database and disables the popup.\r\n   * It call the value initialization.\r\n   */\r\n  applySettings(): void {\r\n    this.displaySettings = false;\r\n    this.currentWidget.deviceId = this.selectedDevice;\r\n    this.currentWidget.entityId = this.selectedAction;\r\n    this.currentWidget.controlPosition = this.selectedPosition;\r\n    this.currentWidget.icon = this.selectedIcon;\r\n    this.saveInDatabase(this.currentWidget.deviceId, 'deviceId');\r\n    this.saveInDatabase(this.currentWidget.entityId, 'entityId');\r\n    this.saveInDatabase(this.currentWidget.icon, 'icon');\r\n    this.saveInDatabase(this.currentWidget.fontSize, 'fontSize');\r\n    this.saveInDatabase(this.currentWidget.minValue, 'minValue');\r\n    this.saveInDatabase(this.currentWidget.maxValue, 'maxValue');\r\n    this.saveInDatabase(this.currentWidget.controlPosition, 'controlPosition');\r\n\r\n    this.initializeValue();\r\n  }\r\n  // reset all changes made in the settings dialog\r\n  abortChanges():void{\r\n    this.displaySettings=false;\r\n    this.selectedPosition = this.currentWidget.controlPosition;\r\n    this.selectedIcon = this.currentWidget.icon;\r\n    this.selectedDevice = this.currentWidget.deviceId;\r\n    this.selectedAction = this.currentWidget.entityId;\r\n  }\r\n\r\n  /**\r\n   * This method initializes the value for a widget to display by requesting it from the backend once.\r\n   */\r\n  protected initializeValue(): void {\r\n    this.devicemanager.GetActionValueOrState(this.currentWidget.entityId, this.currentWidget.deviceId, this.user.id, this.project.id)\r\n      .subscribe(result => {\r\n          this.currentWidget.value = result;\r\n        },\r\n        err => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          console.log('Error while requesting action state or value', err);\r\n        });\r\n  }\r\n\r\n  /**\r\n   * This method saves the selected options into the database.\r\n   * @param value the value\r\n   * @param field the field where to store\r\n   */\r\n  protected saveInDatabase(value, field: string): void {\r\n    this.databaseService.updateDocument(this.databaseService.WIDGETSCOLLECTION, this.currentWidget.id, new Fieldvalue(field, value))\r\n      .subscribe(result => {\r\n      }, error => {\r\n        if (error['error'] === 'Session invalid' || error['error'] === 'No session found') {\r\n          this.router.navigate(['unauthorized']); }\r\n        console.log('Error updating database entry ', error);\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \".input-slider {\\r\\n  width: 4vw;\\r\\n}\\r\\n.unknown {\\r\\n  font-style:italic;\\r\\n}\\r\\n::ng-deep .ui-slider {\\r\\n  margin: 0 auto;\\r\\n}\\r\\n.settings-button {\\r\\n  transition: all 0.5s;\\r\\n  position: absolute;\\r\\n  right: 75px;\\r\\n  top: 5px;\\r\\n}\\r\\n.testclass {\\r\\n  width:95%; float:right;\\r\\n}\\r\\n\"","module.exports = \"<p-dialog header=\\\"Device Control Settings\\\" [modal]=true appendTo=\\\"body\\\" [width]=\\\"550\\\"\\r\\n          [(visible)]=\\\"displaySettings\\\" [closable]=\\\"false\\\">\\r\\n\\r\\n  <div class=\\\"ui-g\\\">\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <h3>Device Specifications</h3>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <div class=\\\"ui-g-4\\\">Device:</div>\\r\\n      <p-dropdown appendTo=\\\"body\\\" [options]=\\\"devicesList\\\" [filter]=\\\"true\\\" [placeholder]=\\\"'Select a device.'\\\"\\r\\n                  [(ngModel)]=\\\"selectedDevice\\\"\\r\\n                  (onChange)=\\\"updateActionDropdown()\\\" [style]=\\\"{'width':'200px'}\\\">\\r\\n      </p-dropdown>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <div class=\\\"ui-g-4\\\">Action:</div>\\r\\n      <p-dropdown [autoWidth]=\\\"true\\\"\\r\\n                  [options]=\\\"actionList\\\" [placeholder]=\\\"'Select an action.'\\\" [(ngModel)]=\\\"selectedAction\\\"\\r\\n                  [style]=\\\"{'width':'200px'}\\\">\\r\\n      </p-dropdown>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"ui-g-12\\\" >\\r\\n      <h3>Slider Specifications</h3>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <div class=\\\"ui-g-4\\\">Position:</div>\\r\\n      <div class=\\\"ui-g\\\">\\r\\n        <div class=\\\"ui-g-12\\\"><p-radioButton  name=\\\"positionGroup\\\" value=\\\"right\\\" label=\\\"right\\\" [(ngModel)]=\\\"selectedPosition\\\"></p-radioButton></div>\\r\\n        <div class=\\\"ui-g-12\\\"><p-radioButton name=\\\"positionGroup\\\" value=\\\"bottom\\\" label=\\\"bottom\\\" [(ngModel)]=\\\"selectedPosition\\\"></p-radioButton></div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <h3>Icon Specifications</h3>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <p-selectButton [options]=\\\"icons\\\" [(ngModel)]=\\\"selectedIcon\\\"></p-selectButton>\\r\\n    </div>\\r\\n  </div>\\r\\n  <p-footer>\\r\\n    <button type=\\\"'button\\\" pButton icon=\\\"fa-check\\\" (click)=\\\"applySettings()\\\" label=\\\"Apply\\\"></button>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"fa-close\\\" (click)=\\\"abortChanges()\\\" label=\\\"Cancel\\\"></button>\\r\\n  </p-footer>\\r\\n</p-dialog>\\r\\n\\r\\n<button pButton icon=\\\"fa fa-cog\\\" style=\\\"z-index: 6;\\\" class=\\\"settings-button tbutton ui-button-secondary\\\"\\r\\n        (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" (click)=\\\"displaySettings=true;\\\"\\r\\n        [hidden]=\\\" !(loginStatus>1 && currentWidget.isDeveloped)\\\"></button>\\r\\n\\r\\n<div *ngIf=\\\"currentWidget.controlPosition === 'right'\\\"\\r\\n     style=\\\"display: flex; flex-direction:row; align-items: center; height:100%; width:100%;\\\">\\r\\n    <div>\\r\\n    <i [class]=\\\"currentWidget.icon\\\"></i>\\r\\n  </div>\\r\\n  <div style=\\\"padding-left: 15px; min-width:100px;\\\">\\r\\n    <input pInputText *ngIf=\\\"currentWidget.isDeveloped\\\" style=\\\"width:100%;\\\" [(ngModel)]=\\\"currentWidget.name\\\" (ngModelChange)=\\\"saveInDatabase($event, 'name')\\\"\\r\\n           (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" class=\\\"gridster-item-content\\\">\\r\\n    <h2 *ngIf=\\\"!currentWidget.isDeveloped\\\" style=\\\"margin: 0; width: 100%;\\\">{{ currentWidget.name }}</h2>\\r\\n\\r\\n    <input pInputText *ngIf=\\\"currentWidget.isDeveloped\\\" style=\\\"width:100%; \\\" [placeholder]=\\\"'Additional info'\\\" [(ngModel)]=\\\"currentWidget.additionalInfo\\\" (ngModelChange)=\\\"saveInDatabase($event, 'additionalInfo')\\\"\\r\\n           (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" class=\\\"gridster-item-content\\\">\\r\\n    <div *ngIf=\\\"!currentWidget.isDeveloped\\\" style=\\\"margin: 0; color: grey; width:100%;\\\">{{ currentWidget.additionalInfo }}</div>\\r\\n  </div>\\r\\n\\r\\n  <div style=\\\"padding-left: 15px; width:100%\\\">\\r\\n      <div style=\\\"padding-top: 15px; min-width: 150px; width: 100%;\\\">\\r\\n        <p-dropdown\\r\\n          [options]=\\\"stateActionList\\\" class=\\\"gridster-item-content\\\" [(ngModel)]=\\\"currentWidget.value\\\" (onChange)=\\\"sendCommand(currentWidget.value)\\\"\\r\\n          [style]=\\\"{'width':'100%'}\\\">\\r\\n        </p-dropdown>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"currentWidget.controlPosition === 'bottom'\\\">\\r\\n  <div style=\\\"display: flex; flex-direction:row; align-items: center; height:100%; width:100%;\\\">\\r\\n    <div>\\r\\n      <i [class]=\\\"currentWidget.icon\\\"></i>\\r\\n    </div>\\r\\n    <div style=\\\"padding-left: 15px;\\\">\\r\\n      <input pInputText *ngIf=\\\"currentWidget.isDeveloped\\\" style=\\\"width:100%;\\\" [(ngModel)]=\\\"currentWidget.name\\\" (ngModelChange)=\\\"saveInDatabase($event, 'name')\\\"\\r\\n             (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" class=\\\"gridster-item-content\\\">\\r\\n      <h2 *ngIf=\\\"!currentWidget.isDeveloped\\\" style=\\\"margin: 0; width:100%;\\\">{{ currentWidget.name }}</h2>\\r\\n\\r\\n      <input pInputText *ngIf=\\\"currentWidget.isDeveloped\\\" style=\\\"width:100%; \\\" [placeholder]=\\\"'Additional info'\\\" [(ngModel)]=\\\"currentWidget.additionalInfo\\\" (ngModelChange)=\\\"saveInDatabase($event, 'additionalInfo')\\\"\\r\\n             (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" class=\\\"gridster-item-content\\\">\\r\\n      <div *ngIf=\\\"!currentWidget.isDeveloped\\\" style=\\\"margin: 0; color: grey; width:100%;\\\">{{ currentWidget.additionalInfo }}</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div style=\\\"display: flex; flex-direction: column; align-items: center; padding-top:15px;\\\">\\r\\n      <div style=\\\"width: 100%\\\">\\r\\n        <p-dropdown\\r\\n          [options]=\\\"stateActionList\\\" class=\\\"gridster-item-content\\\" [(ngModel)]=\\\"currentWidget.value\\\" (onChange)=\\\"sendCommand(currentWidget.value)\\\"\\r\\n          [style]=\\\"{'width':'100%'}\\\">\\r\\n        </p-dropdown>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {DataService} from '../../../../../../../services/data.service';\r\nimport {DeviceManagerService} from '../../../../../../../services/devicemanager.service';\r\nimport {Project} from '../../../../../../../models/frontend/project';\r\nimport {WidgetType} from '../../../../../../../models/frontend/widget';\r\nimport {SelectItem} from 'primeng/api';\r\nimport {User} from '../../../../../../../models/frontend/user';\r\nimport {Device} from '../../../../../../../models/backend/device';\r\nimport {Action} from '../../../../../../../models/backend/action';\r\nimport {Fieldvalue} from '../../../../../../../models/frontend/fieldvalue';\r\nimport {DatabaseService} from '../../../../../../../services/database.service';\r\nimport {StateWidget} from '../../../../../../../models/frontend/statewidget';\r\nimport { Router } from '@angular/router';\r\n\r\n/**\r\n * @author Janina Hüther, Chinaedu Onwukwe\r\n * This component processes a {@link WidgetType#stateDeviceControl} Widget. This type of widget is to control\r\n * an entity (action) of a device. That means it sends commands e.g. set color of light bulb to green\r\n * to the backend. It uses the {@link StateWidget} model to represent a widget.\r\n */\r\n@Component({\r\n  selector: 'state-control-device',\r\n  templateUrl: './state-control-device.component.html',\r\n  styleUrls: ['./state-control-device.component.css']\r\n})\r\nexport class StateControlDeviceComponent implements OnInit {\r\n  @Input() currentWidget: StateWidget;\r\n  protected project: Project;\r\n  protected user: User;\r\n  protected loginStatus: number;\r\n  protected devicesList: Array<SelectItem> = [];\r\n  protected actionList: Array<SelectItem> = [];\r\n  protected stateActionList: Array<SelectItem> = [];\r\n  protected displaySettings = false;\r\n  public selectedDevice: string;\r\n  public selectedAction: string;\r\n  public selectedPosition: string;\r\n  public selectedIcon: string;\r\n  protected icons: Array<SelectItem> = [];\r\n\r\n  constructor(private dataService: DataService, private databaseService: DatabaseService, private devicemanager: DeviceManagerService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dataService.projectData.subscribe(value => this.project = value);\r\n    this.dataService.userData.subscribe(value => this.user = value);\r\n    this.dataService.currentLoginStatus.subscribe(value => this.loginStatus = value);\r\n\r\n    this.initDropdowns();\r\n\r\n    this.icons = [\r\n      {value: 'fa fa-power-off fa-2x', icon: 'fa fa-power-off'},\r\n      {value: 'fa fa-thermometer-full fa-2x', icon: 'fa fa-thermometer-full'},\r\n      {value: 'fa fa-volume-down fa-2x', icon: 'fa fa-volume-down'},\r\n      {value: 'fa fa-play-circle-o fa-2x', icon: 'fa fa-play-circle-o'},\r\n      {value: 'fa fa-lightbulb-o fa-2x', icon: 'fa fa-lightbulb-o'},\r\n      {value: 'fa fa-sun-o fa-2x', icon: 'fa fa-sun-o'}\r\n    ];\r\n\r\n    // set current selected Icon based on Icon in Database\r\n    for (const item of this.icons) {\r\n      if (item.value === this.currentWidget.icon) {\r\n        this.selectedIcon = item.value;\r\n      }\r\n    }\r\n    this.selectedPosition = this.currentWidget.controlPosition;\r\n\r\n    if (this.currentWidget.deviceId && this.currentWidget.entityId) {\r\n      this.buildActionSelector(this.currentWidget.deviceId, this.currentWidget.entityId);\r\n    }\r\n\r\n    // if new data is available, the slider state gets updated\r\n    this.dataService.refreshChartNow\r\n      .subscribe(result => {\r\n        if (result !== undefined && this.selectedDevice === result.deviceId &&\r\n          this.selectedAction === result.entityId) {\r\n          //set action\r\n          this.currentWidget.value = result.value;\r\n        }\r\n      });\r\n  }\r\n\r\n  private initDropdowns():void {\r\n    this.devicesList = [];\r\n    this.devicemanager.getAllDevices(this.user.id, this.project.id).subscribe(data => {\r\n        for (const device of data) {\r\n          if (device.actions.length > 0) { // filter just devices with actions\r\n            for (const action of device.actions) {\r\n              // filter for devices which have slideable actions\r\n              if (action.valueable === true) {\r\n                this.devicesList.push({label: device.name, value: device.deviceId});\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (this.currentWidget.deviceId != undefined){\r\n          // set init device\r\n          for (const listElem of this.devicesList){\r\n            if (listElem.value === this.currentWidget.deviceId) {\r\n              this.selectedDevice = listElem.value;\r\n              // check if action is selected\r\n              this.devicemanager.getDeviceById(this.selectedDevice.toString(), this.user.id, this.project.id)\r\n                .subscribe((device: Device) => {\r\n                    this.actionList = [];\r\n                    if (device.actions !== null) {\r\n                      for (const action of device.actions) {\r\n                        this.actionList.push({label: action.name, value: action.id});\r\n                      }\r\n                    }\r\n                    //set init action\r\n                    for (const listElem2 of this.actionList) {\r\n                      if (listElem2.value === this.currentWidget.entityId) {\r\n                        this.selectedAction = listElem2.value;\r\n                        this.initializeValue();\r\n                        break;\r\n                      }\r\n                    }\r\n                  },\r\n                  error => {\r\n                    if (error['error'] === 'Session invalid' || error['error'] === 'No session found') {\r\n                      this.router.navigate(['unauthorized']); }\r\n                    console.log('Error requesting devices from backend ', error);\r\n                  });\r\n            }\r\n          }\r\n        }\r\n\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n\r\n  /**\r\n   * This method builds the dropdown for selecting a state depending on which device and entity was selected.\r\n   * @param deviceId the id of the device\r\n   * @param entityId the id of the action\r\n   */\r\n  protected buildActionSelector(deviceId: string, entityId: string): void {\r\n    this.devicemanager.getDeviceById(deviceId, this.user.id, this.project.id)\r\n      .subscribe((device: Device) => {\r\n        const action: Action = device.actions.find(x => x.id === entityId);\r\n        for (const state of action.states) {\r\n          this.stateActionList.push({label: state.description, value: state.state});\r\n        }\r\n\r\n      }, error => {\r\n        if (error['error'] === 'Session invalid' || error['error'] === 'No session found') {\r\n          this.router.navigate(['unauthorized']); }\r\n        console.log('Error requesting device from backend: ', error); });\r\n  }\r\n\r\n  /**\r\n   * This method fills the device dropdown with all devices from the backend which support\r\n   * this type o widget.\r\n   */\r\n  private refreshDeviceDropdown(): void {\r\n    this.devicesList = [];\r\n    this.devicemanager.getAllDevices(this.user.id, this.project.id)\r\n      .subscribe((devices: Array<Device>) => {\r\n          for (const device of devices) {\r\n            if (device.actions.length > 0) { // filter just devices with actions\r\n              for (const action of device.actions) {\r\n                // filter for devices which have more than 2 stateable actions\r\n                if (action.states !== null) {\r\n                  if (action.valueable === false && action.states.length > 2) {\r\n                    this.devicesList.push({label: device.name, value: device.deviceId});\r\n                    break;\r\n                  }\r\n                }\r\n              }\r\n\r\n            }\r\n          }\r\n        },\r\n        err => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          console.log('Error while requesting devices from backend ', err);\r\n        });\r\n    this.devicesList.sort((a, b) => a.label.localeCompare(b.label));\r\n  }\r\n\r\n  /**\r\n   * Updates the actions which you can choose in the action dropdown, so that you can only select capable\r\n   * actions.\r\n   */\r\n  protected updateActionDropdown(): void {\r\n    this.currentWidget.entityId = undefined;\r\n    this.selectedAction = \"\";\r\n    this.devicemanager.getDeviceById(this.selectedDevice, this.user.id, this.project.id)\r\n      .subscribe((device: Device) => {\r\n          const actions = device.actions;\r\n          this.actionList = [];\r\n          for (let i = 0; i < actions.length; i++) {\r\n            if (actions[i].states !== null) {\r\n              if (actions[i].valueable === false && actions[i].states !== undefined && actions[i].states.length > 2) {\r\n                this.actionList.push({label: actions[i].name, value: actions[i].id});\r\n              }\r\n            }\r\n          }\r\n        }, err => {\r\n        if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n          this.router.navigate(['unauthorized']); }\r\n          console.log('Device actions could not be pulled  from the backend ', err);\r\n        }\r\n      );\r\n  }\r\n\r\n  /**\r\n   * This method sends a command (value) to the backend.\r\n   * @param widgetValue the command set through the widget surface\r\n   */\r\n  protected sendCommand(widgetValue: number): void {\r\n    this.devicemanager.getDeviceById(this.selectedDevice, this.user.id, this.project.id)\r\n      .subscribe((device: Device) => {\r\n          const action: Action = device.actions.find(x => x.id === this.selectedAction);\r\n          this.devicemanager.ChangeActionState(this.user.id, this.project.id, this.selectedDevice, this.selectedAction, widgetValue)\r\n            .subscribe(result => {\r\n                // log result.message\r\n                console.log('new value was sent to backend server');\r\n              },\r\n              err => {\r\n                if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n                  this.router.navigate(['unauthorized']); }\r\n                console.log('new value could not been sent to backend server', err);\r\n              });\r\n        },\r\n        error => {if (error['error'] === 'Session invalid' || error['error'] === 'No session found') {\r\n          this.router.navigate(['unauthorized']); }\r\n          console.log('Device could not be pulled from backend', error);\r\n        });\r\n  }\r\n\r\n  /**\r\n   * This method gets called when the user presses the apply button in the\r\n   * widget properties. It saves the properties in the database and disables the popup.\r\n   * It call the value initialization.\r\n   */\r\n  applySettings(): void {\r\n    this.displaySettings = false;\r\n   this.currentWidget.controlPosition = this.selectedPosition;\r\n    this.currentWidget.icon = this.selectedIcon;\r\n    this.currentWidget.deviceId = this.selectedDevice;\r\n    this.currentWidget.entityId = this.selectedAction;\r\n    this.saveInDatabase(this.currentWidget.deviceId, 'deviceId');\r\n    this.saveInDatabase(this.currentWidget.entityId, 'entityId');\r\n    this.saveInDatabase(this.currentWidget.icon, 'icon');\r\n    this.saveInDatabase(this.currentWidget.controlPosition, 'controlPosition');\r\n\r\n    this.buildActionSelector(this.currentWidget.deviceId, this.currentWidget.entityId);\r\n    this.initializeValue();\r\n  }\r\n\r\n  // reset all changes made in the settings dialog\r\n  abortChanges():void{\r\n    this.displaySettings=false;\r\n    this.selectedPosition = this.currentWidget.controlPosition;\r\n    this.selectedIcon = this.currentWidget.icon;\r\n    this.selectedDevice = this.currentWidget.deviceId;\r\n    this.selectedAction = this.currentWidget.entityId;\r\n  }\r\n\r\n  /**\r\n   * This method initializes the value for a widget to display by requesting it from the backend once.\r\n   */\r\n  protected initializeValue(): void {\r\n    this.devicemanager.GetActionValueOrState(this.currentWidget.entityId, this.currentWidget.deviceId, this.user.id, this.project.id)\r\n      .subscribe(result => {\r\n          this.currentWidget.value = result;\r\n        },\r\n        err => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          console.log('Error while requesting action state or value', err);\r\n        });\r\n  }\r\n\r\n  /**\r\n   * This method saves the selected options into the database.\r\n   * @param value the value\r\n   * @param field the field where to store\r\n   */\r\n  protected saveInDatabase(value, field: string): void {\r\n    this.databaseService.updateDocument(this.databaseService.WIDGETSCOLLECTION, this.currentWidget.id, new Fieldvalue(field, value))\r\n      .subscribe(result => {\r\n      }, error => {\r\n        if (error['error'] === 'Session invalid' || error['error'] === 'No session found') {\r\n          this.router.navigate(['unauthorized']); }\r\n        console.log('Error updating database entry ', error);\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \".input-slider {\\r\\n  width: 4vw;\\r\\n}\\r\\n.unknown {\\r\\n  font-style:italic;\\r\\n}\\r\\n::ng-deep .ui-slider {\\r\\n  margin: 0 auto;\\r\\n}\\r\\n.settings-button {\\r\\n  transition: all 0.5s;\\r\\n  position: absolute;\\r\\n  right: 75px;\\r\\n  top: 5px;\\r\\n}\\r\\n.testclass {\\r\\n  width:95%; float:right;\\r\\n}\\r\\n\"","module.exports = \"<p-dialog header=\\\"Device Control Settings\\\" [modal]=true appendTo=\\\"body\\\" [width]=\\\"550\\\"\\r\\n          [(visible)]=\\\"displaySettings\\\" [closable]=\\\"false\\\">\\r\\n\\r\\n  <div class=\\\"ui-g\\\">\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <h3>Device Specifications</h3>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <div class=\\\"ui-g-4\\\">Device:</div>\\r\\n      <p-dropdown appendTo=\\\"body\\\" [options]=\\\"devicesList\\\" [filter]=\\\"true\\\" [placeholder]=\\\"'Select a device.'\\\"\\r\\n                  [(ngModel)]=\\\"selectedDevice\\\"\\r\\n                  (onChange)=\\\"updateActionDropdown()\\\" [style]=\\\"{'width':'200px'}\\\">\\r\\n      </p-dropdown>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <div class=\\\"ui-g-4\\\">Action:</div>\\r\\n      <p-dropdown [autoWidth]=\\\"true\\\"\\r\\n                  [options]=\\\"actionList\\\" [placeholder]=\\\"'Select an action.'\\\" [(ngModel)]=\\\"selectedAction\\\"\\r\\n                  [style]=\\\"{'width':'200px'}\\\">\\r\\n      </p-dropdown>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"ui-g-12\\\" >\\r\\n      <h3>Toggle Specifications</h3>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <div class=\\\"ui-g-4\\\">Position:</div>\\r\\n      <div class=\\\"ui-g\\\">\\r\\n        <div class=\\\"ui-g-12\\\"><p-radioButton  name=\\\"positionGroup\\\" value=\\\"right\\\" label=\\\"right\\\" [(ngModel)]=\\\"selectedPosition\\\"></p-radioButton></div>\\r\\n        <div class=\\\"ui-g-12\\\"><p-radioButton name=\\\"positionGroup\\\" value=\\\"bottom\\\" label=\\\"bottom\\\" [(ngModel)]=\\\"selectedPosition\\\"></p-radioButton></div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <div class=\\\"ui-g-4\\\">On-Label:</div>\\r\\n      <input pInputText [(ngModel)]=\\\"currentWidget.toggleLabelOn\\\">\\r\\n    </div>\\r\\n    <div  class=\\\"ui-g-12\\\">\\r\\n      <div class=\\\"ui-g-4\\\">Off-Label:</div>\\r\\n      <input pInputText [(ngModel)]=\\\"currentWidget.toggleLabelOff\\\">\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <h3>Icon Specifications</h3>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <p-selectButton [options]=\\\"icons\\\" [(ngModel)]=\\\"selectedIcon\\\"></p-selectButton>\\r\\n    </div>\\r\\n  </div>\\r\\n  <p-footer>\\r\\n    <button type=\\\"'button\\\" pButton icon=\\\"fa-check\\\" (click)=\\\"applySettings()\\\" label=\\\"Apply\\\"></button>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"fa-close\\\" (click)=\\\"displaySettings=false;\\\" label=\\\"Cancel\\\"></button>\\r\\n  </p-footer>\\r\\n</p-dialog>\\r\\n\\r\\n<button pButton icon=\\\"fa fa-cog\\\" style=\\\"z-index: 6;\\\" class=\\\"gridster-item-content settings-button transparentButton tbutton ui-button-secondary\\\"\\r\\n        (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" (click)=\\\"displaySettings=true;\\\"\\r\\n        [hidden]=\\\" !(loginStatus>1 && currentWidget.isDeveloped)\\\"></button>\\r\\n\\r\\n<div *ngIf=\\\"currentWidget.controlPosition === 'right'\\\"\\r\\n     style=\\\"display: flex; flex-direction:row; align-items: center; height:100%; width:100%;\\\">\\r\\n    <div>\\r\\n    <i [class]=\\\"currentWidget.icon\\\"></i>\\r\\n  </div>\\r\\n  <div style=\\\"padding-left: 15px; width:100%\\\">\\r\\n    <input pInputText *ngIf=\\\"currentWidget.isDeveloped\\\" style=\\\"width:100%;\\\" [(ngModel)]=\\\"currentWidget.name\\\" (ngModelChange)=\\\"saveInDatabase($event, 'name')\\\"\\r\\n           (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" class=\\\"gridster-item-content\\\">\\r\\n    <h2 *ngIf=\\\"!currentWidget.isDeveloped\\\" style=\\\"margin: 0; width: 100%;\\\">{{ currentWidget.name }}</h2>\\r\\n\\r\\n    <input pInputText *ngIf=\\\"currentWidget.isDeveloped\\\" style=\\\"width:100%; \\\" [placeholder]=\\\"'Additional info'\\\" [(ngModel)]=\\\"currentWidget.additionalInfo\\\" (ngModelChange)=\\\"saveInDatabase($event, 'additionalInfo')\\\"\\r\\n           (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" class=\\\"gridster-item-content\\\">\\r\\n    <div *ngIf=\\\"!currentWidget.isDeveloped\\\" style=\\\"margin: 0; color: grey; width:100%;\\\">{{ currentWidget.additionalInfo }}</div>\\r\\n  </div>\\r\\n\\r\\n  <div style=\\\"padding-left: 15px;padding-top: 15px;\\\">\\r\\n\\r\\n        <p-inputSwitch class=\\\"gridster-item-content\\\" [onLabel]=\\\"currentWidget.toggleLabelOn\\\" [offLabel]=\\\"currentWidget.toggleLabelOff\\\" [(ngModel)]=\\\"currentWidget.value\\\" (onChange)=\\\"sendCommand(currentWidget.value)\\\" [style]=\\\"{'float': 'right'}\\\"></p-inputSwitch>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"currentWidget.controlPosition === 'bottom'\\\">\\r\\n  <div style=\\\"display: flex; flex-direction:row; align-items: center; height:100%; width:100%;\\\">\\r\\n    <div>\\r\\n      <i [class]=\\\"currentWidget.icon\\\"></i>\\r\\n    </div>\\r\\n    <div style=\\\"padding-left: 15px;\\\">\\r\\n      <input pInputText *ngIf=\\\"currentWidget.isDeveloped\\\" style=\\\"width:100%;\\\" [(ngModel)]=\\\"currentWidget.name\\\" (ngModelChange)=\\\"saveInDatabase($event, 'name')\\\"\\r\\n             (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" class=\\\"gridster-item-content\\\">\\r\\n      <h2 *ngIf=\\\"!currentWidget.isDeveloped\\\" style=\\\"margin: 0; width:100%;\\\">{{ currentWidget.name }}</h2>\\r\\n\\r\\n      <input pInputText *ngIf=\\\"currentWidget.isDeveloped\\\" style=\\\"width:100%; \\\" [placeholder]=\\\"'Additional info'\\\" [(ngModel)]=\\\"currentWidget.additionalInfo\\\" (ngModelChange)=\\\"saveInDatabase($event, 'additionalInfo')\\\"\\r\\n             (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" class=\\\"gridster-item-content\\\">\\r\\n      <div *ngIf=\\\"!currentWidget.isDeveloped\\\" style=\\\"margin: 0; color: grey; width:100%;\\\">{{ currentWidget.additionalInfo }}</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div style=\\\"display: flex; flex-direction: column; align-items: center; padding-top:15px;\\\">\\r\\n      <div style=\\\"width: 100%\\\">\\r\\n        <p-inputSwitch class=\\\"gridster-item-content\\\" [onLabel]=\\\"currentWidget.toggleLabelOn\\\" [offLabel]=\\\"currentWidget.toggleLabelOff\\\" [(ngModel)]=\\\"currentWidget.value\\\" (onChange)=\\\"sendCommand(currentWidget.value)\\\" [style]=\\\"{'float': 'right'}\\\"></p-inputSwitch>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {DataService} from '../../../../../../../services/data.service';\r\nimport {DeviceManagerService} from '../../../../../../../services/devicemanager.service';\r\nimport {Project} from '../../../../../../../models/frontend/project';\r\nimport {WidgetType} from '../../../../../../../models/frontend/widget';\r\nimport {SelectItem} from 'primeng/api';\r\nimport {User} from '../../../../../../../models/frontend/user';\r\nimport {Device} from '../../../../../../../models/backend/device';\r\nimport {Action} from '../../../../../../../models/backend/action';\r\nimport {Fieldvalue} from '../../../../../../../models/frontend/fieldvalue';\r\nimport {DatabaseService} from '../../../../../../../services/database.service';\r\nimport {ToggleWidget} from \"../../../../../../../models/frontend/togglewidget\";\r\nimport { Router } from '@angular/router';\r\n\r\n/**\r\n * @author Janina Hüther, Chinaedu Onwukwe\r\n * This component processes a {@link WidgetType#toggleDeviceControl} Widget. This type of widget is to control\r\n * an entity (action) of a device. That means it sends commands e.g. toggle a switch\r\n * to the backend. It uses the {@link ToggleWidget} model to represent a widget.\r\n */\r\n@Component({\r\n  selector: 'toggle-control-device',\r\n  templateUrl: './toggle-control-device.component.html',\r\n  styleUrls: ['./toggle-control-device.component.css']\r\n})\r\nexport class ToggleControlDeviceComponent implements OnInit {\r\n  @Input() currentWidget: ToggleWidget;\r\n  protected project: Project;\r\n  protected user: User;\r\n  protected loginStatus: number;\r\n  protected devicesList: Array<SelectItem> = [];\r\n  protected actionList: Array<SelectItem> = [];\r\n  protected displaySettings = false;\r\n  public selectedDevice: string;\r\n  public selectedAction: string;\r\n  public selectedPosition: string;\r\n  public selectedIcon: string;\r\n  public selectedONLabel: string;\r\n  public selectedOFFLabel: string;\r\n  protected icons: Array<SelectItem> = [];\r\n\r\n  constructor(private dataService: DataService, private databaseService: DatabaseService, private devicemanager: DeviceManagerService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dataService.projectData.subscribe(value => this.project = value);\r\n    this.dataService.userData.subscribe(value => this.user = value);\r\n    this.dataService.currentLoginStatus.subscribe(value => this.loginStatus = value);\r\n\r\n    this.initDropdowns();\r\n\r\n    this.icons = [\r\n      {value: 'fa fa-power-off fa-2x', icon: 'fa fa-power-off'},\r\n      {value: 'fa fa-thermometer-full fa-2x', icon: 'fa fa-thermometer-full'},\r\n      {value: 'fa fa-volume-down fa-2x', icon: 'fa fa-volume-down'},\r\n      {value: 'fa fa-play-circle-o fa-2x', icon: 'fa fa-play-circle-o'},\r\n      {value: 'fa fa-lightbulb-o fa-2x', icon: 'fa fa-lightbulb-o'},\r\n      {value: 'fa fa-sun-o fa-2x', icon: 'fa fa-sun-o'}\r\n    ];\r\n\r\n    // set current selected Icon based on Icon in Database\r\n    for (const item of this.icons) {\r\n      if (item.value === this.currentWidget.icon) {\r\n        this.selectedIcon = item.value;\r\n      }\r\n    }\r\n    this.selectedPosition = this.currentWidget.controlPosition;\r\n    this.selectedONLabel = this.currentWidget.toggleLabelOn;\r\n    this.selectedOFFLabel = this.currentWidget.toggleLabelOff;\r\n\r\n    // if new data is available, the slider state gets updated\r\n    this.dataService.refreshChartNow\r\n      .subscribe(result => {\r\n        if (result !== undefined && this.selectedDevice === result.deviceId &&\r\n          this.selectedAction === result.entityId) {\r\n          //set action\r\n          this.currentWidget.value = (result.value === 0)? false:true;\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  private initDropdowns():void {\r\n    this.devicesList = [];\r\n    this.devicemanager.getAllDevices(this.user.id, this.project.id).subscribe(data => {\r\n        for (const device of data) {\r\n          if (device.actions.length > 0) { // filter just devices with actions\r\n            for (const action of device.actions) {\r\n              // filter for devices which have slideable actions\r\n              if (action.valueable === true) {\r\n                this.devicesList.push({label: device.name, value: device.deviceId});\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (this.currentWidget.deviceId != undefined){\r\n          // set init device\r\n          for (const listElem of this.devicesList){\r\n            if (listElem.value === this.currentWidget.deviceId) {\r\n              this.selectedDevice = listElem.value;\r\n              // check if action is selected\r\n              this.devicemanager.getDeviceById(this.selectedDevice.toString(), this.user.id, this.project.id)\r\n                .subscribe((device: Device) => {\r\n                    this.actionList = [];\r\n                    if (device.actions !== null) {\r\n                      for (const action of device.actions) {\r\n                        this.actionList.push({label: action.name, value: action.id});\r\n                      }\r\n                    }\r\n                    //set init action\r\n                    for (const listElem2 of this.actionList) {\r\n                      if (listElem2.value === this.currentWidget.entityId) {\r\n                        this.selectedAction = listElem2.value;\r\n                        this.initializeValue();\r\n                        break;\r\n                      }\r\n                    }\r\n                  },\r\n                  error => {\r\n                    console.log('Error requesting devices from backend ', error);\r\n                  });\r\n            }\r\n          }\r\n        }\r\n\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  /**\r\n   * This method fills the device dropdown with all devices from the backend which support\r\n   * this type o widget.\r\n   */\r\n  private refreshDeviceDropdown(): void {\r\n    this.devicesList = [];\r\n    this.devicemanager.getAllDevices(this.user.id, this.project.id)\r\n      .subscribe((devices: Array<Device>) => {\r\n          for (const device of devices) {\r\n            if (device.actions.length > 0) { // filter just devices with actions\r\n              for (const action of device.actions) {\r\n                // filter for devices which have slideable actions\r\n                if (action.states !== null) {\r\n                  if (action.valueable === false && action.states.length < 3) {\r\n                    this.devicesList.push({label: device.name, value: device.deviceId});\r\n                    break;\r\n                  }\r\n                }\r\n              }\r\n\r\n            }\r\n          }\r\n        },\r\n        err => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          console.log('Error while requesting devices from backend ', err);\r\n        });\r\n    this.devicesList.sort((a, b) => a.label.localeCompare(b.label));\r\n  }\r\n\r\n  /**\r\n   * Updates the actions which you can choose in the action dropdown, so that you can only select capable\r\n   * actions.\r\n   */\r\n  protected updateActionDropdown(): void {\r\n    this.currentWidget.entityId = undefined;\r\n    this.devicemanager.getDeviceById(this.selectedDevice, this.user.id, this.project.id)\r\n      .subscribe((device: Device) => {\r\n          const actions = device.actions;\r\n          this.actionList = [];\r\n          for (let i = 0; i < actions.length; i++) {\r\n            if (actions[i].states !== null) {\r\n              if (actions[i].valueable === false && actions[i].states !== undefined && actions[i].states.length === 2) {\r\n                this.actionList.push({label: actions[i].name, value: actions[i].id});\r\n              }\r\n            }\r\n          }\r\n        }, err => {\r\n        if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n          this.router.navigate(['unauthorized']); }\r\n          console.log('Device actions could not be pulled  from the backend ', err);\r\n        }\r\n      );\r\n  }\r\n\r\n  /**\r\n   * This method sends a command (value) to the backend.\r\n   * @param widgetValue the command set through the widget surface\r\n   */\r\n  protected sendCommand(widgetValue: boolean): void {\r\n    this.devicemanager.getDeviceById(this.selectedDevice, this.user.id, this.project.id)\r\n      .subscribe((device: Device) => {\r\n          const action: Action = device.actions.find(x => x.id === this.selectedAction);\r\n          let command = 0;\r\n          if (widgetValue) {\r\n            command = 1;\r\n          }\r\n          this.devicemanager.ChangeActionState(this.user.id, this.project.id, device.deviceId, action.id, command)\r\n            .subscribe(result => {\r\n                // log result.message\r\n                console.log('new value was sent to backend server');\r\n              },\r\n              err => {\r\n                if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n                  this.router.navigate(['unauthorized']); }\r\n                console.log('new value could not been sent to backend server', err);\r\n              });\r\n        },\r\n        error => {\r\n          if (error['error'] === 'Session invalid' || error['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          console.log('Device could not be pulled from backend', error);\r\n        });\r\n  }\r\n\r\n  /**\r\n   * This method gets called when the user presses the apply button in the\r\n   * widget properties. It saves the properties in the database and disables the popup.\r\n   * It call the value initialization.\r\n   */\r\n  applySettings(): void {\r\n    this.displaySettings = false;\r\n    this.currentWidget.deviceId = this.selectedDevice;\r\n    this.currentWidget.entityId = this.selectedAction;\r\n    this.currentWidget.controlPosition = this.selectedPosition;\r\n    this.currentWidget.icon = this.selectedIcon;\r\n    this.currentWidget.toggleLabelOff = this.selectedOFFLabel;\r\n    this.currentWidget.toggleLabelOn = this.selectedONLabel;\r\n    this.saveInDatabase(this.currentWidget.deviceId, 'deviceId');\r\n    this.saveInDatabase(this.currentWidget.entityId, 'entityId');\r\n    this.saveInDatabase(this.currentWidget.icon, 'icon');\r\n    this.saveInDatabase(this.currentWidget.fontSize, 'fontSize');\r\n    this.saveInDatabase(this.currentWidget.toggleLabelOn, 'toggleLabelOn');\r\n    this.saveInDatabase(this.currentWidget.toggleLabelOff, 'toggleLabelOff');\r\n    this.saveInDatabase(this.currentWidget.controlPosition, 'controlPosition');\r\n\r\n    this.initializeValue();\r\n  }\r\n  // reset all changes made in the settings dialog\r\n  abortChanges():void{\r\n    this.displaySettings=false;\r\n    this.selectedPosition = this.currentWidget.controlPosition;\r\n    this.selectedIcon = this.currentWidget.icon;\r\n    this.selectedDevice = this.currentWidget.deviceId;\r\n    this.selectedAction = this.currentWidget.entityId;\r\n    this.selectedONLabel = this.currentWidget.toggleLabelOn;\r\n    this.selectedOFFLabel = this.currentWidget.toggleLabelOff;\r\n  }\r\n\r\n  /**\r\n   * This method initializes the value for a widget to display by requesting it from the backend once.\r\n   */\r\n  protected initializeValue(): void {\r\n    this.devicemanager.GetActionValueOrState(this.selectedAction, this.selectedDevice, this.user.id, this.project.id)\r\n      .subscribe(result => {\r\n          console.log('Value init ', result);\r\n        if (result === 0) {\r\n          this.currentWidget.value = false;\r\n        } else if (result === 1) {\r\n          this.currentWidget.value = true;\r\n        } else {\r\n          console.log('Value could not be initialized. Invalid value: ', result);\r\n        }\r\n        },\r\n        err => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          console.log('Error while requesting action state or value', err);\r\n        });\r\n  }\r\n\r\n  /**\r\n   * This method saves the selected options into the database.\r\n   * @param value the value\r\n   * @param field the field where to store\r\n   */\r\n  protected saveInDatabase(value, field: string): void {\r\n    this.databaseService.updateDocument(this.databaseService.WIDGETSCOLLECTION, this.currentWidget.id, new Fieldvalue(field, value))\r\n      .subscribe(result => {\r\n      }, error => {\r\n        if (error['error'] === 'Session invalid' || error['error'] === 'No session found') {\r\n          this.router.navigate(['unauthorized']); }\r\n        console.log('Error updating database entry ', error);\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \".center{\\r\\n  text-align: center;\\r\\n}\\r\\n\"","module.exports = \"<p-dialog header=\\\"Type configuration\\\" [modal]=true appendTo=\\\"body\\\" [width]=\\\"700\\\"\\r\\n          [(visible)]=\\\"displaySettings\\\" [closable]=\\\"false\\\">\\r\\n  <span>Please choose types for all sensors of the new device.</span>\\r\\n  <div class=\\\"ui-g\\\">\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <h3>Sensors</h3>\\r\\n    </div>\\r\\n    <div *ngFor=\\\"let sensor of sensors\\\" class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">{{sensor.name}}:</div>\\r\\n      <p-dropdown appendTo=\\\"body\\\" [options]=\\\"sensorTypes\\\" optionLabel=\\\"name\\\"\\r\\n                  [filter]=\\\"true\\\" [(ngModel)]=\\\"sensor.type\\\"\\r\\n                  [style]=\\\"{'min-width':'200px'}\\\" placeholder=\\\"Select a type\\\"\\r\\n                  (onClick)=\\\"$event.stopPropagation();$event.preventDefault();\\\">\\r\\n      </p-dropdown>\\r\\n    </div>\\r\\n    <!--div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <h3>Actuators</h3>\\r\\n    </div>\\r\\n    <div *ngFor=\\\"let actuator of actuators\\\" class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">{{actuator.name}}:</div>\\r\\n      <p-dropdown appendTo=\\\"body\\\" [options]=\\\"actuatorTypes\\\" optionLabel=\\\"name\\\"\\r\\n                  [filter]=\\\"true\\\" [(ngModel)]=\\\"actuator.type\\\"\\r\\n                  [style]=\\\"{'min-width':'200px'}\\\" placeholder=\\\"Select a type\\\" (onClick)=\\\"$event.stopPropagation();$event.preventDefault();\\\">\\r\\n      </p-dropdown>\\r\\n    </div-->\\r\\n    <div class=\\\"ui-g-12\\\" style=\\\"width:10px;\\\"></div>\\r\\n  </div>\\r\\n  <p-footer>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"fa-check\\\" (click)=\\\"addTypesToDevice();\\\" label=\\\"Apply\\\"></button>\\r\\n  </p-footer>\\r\\n</p-dialog>\\r\\n<div style=\\\"display: flex; flex-direction:column; align-items:left; height:100%; width:100%;\\\">\\r\\n  <div style=\\\"padding-top:15px;\\\">\\r\\n    <p-dropdown appendTo=\\\"body\\\" [options]=\\\"platforms\\\" [filter]=\\\"true\\\" [placeholder]=\\\"'Select a platform'\\\"\\r\\n                [(ngModel)]=\\\"selectedPlatform\\\" optionLabel=\\\"name\\\"\\r\\n                [style]=\\\"{'width':'100%'}\\\" (onChange)=\\\"updateAddingService()\\\" (mousedown)=\\\"$event.stopPropagation()\\\"\\r\\n                (touchstart)=\\\"$event.stopPropagation()\\\" class=\\\"gridster-item-content\\\">\\r\\n    </p-dropdown>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"addingService == 1\\\" style=\\\"padding-top:15px;\\\">\\r\\n    <p-dropdown appendTo=\\\"body\\\" [options]=\\\"devices\\\" [filter]=\\\"true\\\" optionLabel=\\\"name\\\" [placeholder]=\\\"'Select a device'\\\"\\r\\n                [(ngModel)]=\\\"selectedDevice\\\" (onClick)=\\\"updateDevices()\\\" [style]=\\\"{'width':'100%'}\\\"\\r\\n                (mousedown)=\\\"$event.stopPropagation()\\\"\\r\\n                (touchstart)=\\\"$event.stopPropagation()\\\" class=\\\"gridster-item-content\\\">\\r\\n    </p-dropdown>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"addingService == 1 || addingService == 2\\\" style=\\\"padding-top:15px;\\\">\\r\\n    <input pInputText [(ngModel)]=\\\"name\\\" style=\\\"width: 100%;\\\" placeholder=\\\"Enter name\\\"\\r\\n           (mousedown)=\\\"$event.stopPropagation()\\\"\\r\\n           (touchstart)=\\\"$event.stopPropagation()\\\" class=\\\"gridster-item-content\\\">\\r\\n  </div>\\r\\n  <div *ngIf=\\\"addingService == 2\\\" style=\\\"padding-top:15px;\\\">\\r\\n    <input pInputText [(ngModel)]=\\\"externalDeviceId\\\" style=\\\"width: 100%;\\\" placeholder=\\\"Enter device id\\\"\\r\\n           (mousedown)=\\\"$event.stopPropagation()\\\"\\r\\n           (touchstart)=\\\"$event.stopPropagation()\\\" class=\\\"gridster-item-content\\\">\\r\\n  </div>\\r\\n  <!--<div style=\\\"padding-top:15px;\\\">\\r\\n    <input pInputText [(ngModel)]=\\\"serial\\\" style=\\\"width: 100%;\\\" placeholder=\\\"Enter serialnumber\\\"\\r\\n           (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" class=\\\"gridster-item-content\\\">\\r\\n  </div>-->\\r\\n  <div *ngIf=\\\"addingService == 1 || addingService == 2\\\" style=\\\"padding-top:15px;\\\">\\r\\n    <p-dropdown appendTo=\\\"body\\\" [options]=\\\"locations\\\" [filter]=\\\"true\\\" optionLabel=\\\"name\\\"\\r\\n                [placeholder]=\\\"'Select a location'\\\"\\r\\n                [(ngModel)]=\\\"selectedLocation\\\" [style]=\\\"{'width':'100%'}\\\" (mousedown)=\\\"$event.stopPropagation()\\\"\\r\\n                (touchstart)=\\\"$event.stopPropagation()\\\" class=\\\"gridster-item-content\\\">\\r\\n    </p-dropdown>\\r\\n    <!--p-dropdown [options]=\\\"locations\\\" [(ngModel)]=\\\"selectedLocation\\\" placeholder=\\\"Select a City\\\" optionLabel=\\\"name\\\" [showClear]=\\\"true\\\"></p-dropdown-->\\r\\n  </div>\\r\\n  <div style=\\\"padding-top:15px; display: flex; flex-direction:row; align-items: center; width:100%;\\\">\\r\\n    <div style=\\\"width: 50%;\\\">\\r\\n      <button type=\\\"'button\\\" pButton icon=\\\"fa-check\\\" (click)=\\\"addDevice()\\\" (mousedown)=\\\"$event.stopPropagation()\\\"\\r\\n              style=\\\"float:right;\\\" (touchstart)=\\\"$event.stopPropagation()\\\" label=\\\"Add\\\"\\r\\n              class=\\\"gridster-item-content\\\"></button>\\r\\n    </div>\\r\\n\\r\\n    <div style=\\\"width: 50%;\\\">\\r\\n      <button pButton icon=\\\"fa fa-undo\\\" (mousedown)=\\\"$event.stopPropagation()\\\" style=\\\"float:left;\\\"\\r\\n              (touchstart)=\\\"$event.stopPropagation()\\\" (click)=\\\"clear()\\\" class=\\\"gridster-item-content\\\"\\r\\n              label=\\\"Clear\\\">\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-success ui-corner-all\\\"\\r\\n       *ngIf=\\\"isSuccess\\\">\\r\\n    <span>Device was added.</span>\\r\\n  </div>\\r\\n  <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\"\\r\\n       *ngIf=\\\"isLocationFailed\\\">\\r\\n    <span>Device was added, but sensors cannot be load.</span>\\r\\n  </div>\\r\\n  <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-success ui-corner-all\\\"\\r\\n       *ngIf=\\\"isSensorUpdated\\\">\\r\\n    <span>Sensor information was updated.</span>\\r\\n  </div>\\r\\n  <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-success ui-corner-all\\\"\\r\\n       *ngIf=\\\"isSensorUpdatedFAILED\\\">\\r\\n    <span>Sensor could not been updated. Please try again later.</span>\\r\\n  </div>\\r\\n  <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\"\\r\\n       *ngIf=\\\"isFail\\\">\\r\\n    <span>Device could not been added. Please try again later.</span>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport { forkJoin, Observable } from 'rxjs';\r\nimport { Calculation } from '../../../../../../../models/frontend/polarareachartwidget';\r\nimport {DeviceManagerService} from '../../../../../../../services/devicemanager.service';\r\nimport {DataService} from '../../../../../../../services/data.service';\r\nimport {Widget} from \"../../../../../../../models/frontend/widget\";\r\nimport {Project} from '../../../../../../../models/frontend/project';\r\nimport { Router } from '@angular/router';\r\nimport {Device} from \"../../../../../../../models/backend/device\";\r\n\r\n@Component({\r\n  selector: 'app-add-device',\r\n  templateUrl: './add-device.component.html',\r\n  styleUrls: ['./add-device.component.css']\r\n})\r\nexport class AddDeviceComponent implements OnInit {\r\n  @Input() currentWidget: Widget;\r\n  protected project: Project;\r\n  protected name: string;\r\n  protected serial: string;\r\n  private _loginStatus: number;\r\n  protected currentLoginUUID: string;\r\n  protected protocols: Array<string> = ['protocol1','protocol2'];\r\n  protected displaySettings: boolean;\r\n  protected selectedPlatform;\r\n  protected selectedDevice;\r\n  protected selectedLocation;\r\n  protected selectedTags: Array<String>;\r\n  protected locations;\r\n  protected sensorTypes;\r\n  protected actuatorTypes;\r\n  protected platforms;\r\n  protected devices;\r\n  protected sensors;\r\n  protected actuators;\r\n  protected tags: Array<string>;\r\n  protected tagNumber: number;\r\n  isSuccess: boolean;\r\n  isFail: boolean;\r\n  isSensorUpdated: boolean;\r\n  isSensorUpdatedFAILED: boolean;\r\n  isLocationFailed: boolean;\r\n  protected addingService = 0; // represents which adding fields should be shown. Default: 0- nothing to display , 1- Openhab, 2- Aiotea\r\n  protected externalDeviceId: string;\r\n\r\n  get loginStatus(): number {\r\n    return this._loginStatus;\r\n  }\r\n\r\n  constructor(private dataService: DataService,\r\n              private devicemanager: DeviceManagerService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dataService.projectData.subscribe(value => this.project = value);\r\n    this.dataService.currentLoginStatus.subscribe(value => this._loginStatus = value);\r\n    this.dataService.currentLoginUUID.subscribe(value => this.currentLoginUUID = value);\r\n    this.displaySettings=false;\r\n    this.isFail=false;\r\n    this.isSuccess=false;\r\n    this.isSensorUpdated=false;\r\n    this.isSensorUpdatedFAILED = false;\r\n    this.isLocationFailed=false;\r\n    this.tags=[];\r\n    this.sensorTypes=[];\r\n    this.actuatorTypes=[];\r\n    this.locations=[];\r\n    this.sensors = [];\r\n    this.actuators= [];\r\n\r\n    this.devicemanager.getAllPlatforms(this.currentLoginUUID, this.project.id).subscribe(result => {\r\n        this.platforms = result;\r\n      },\r\n      err => {\r\n        if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n          this.router.navigate(['unauthorized']); }\r\n        console.log(err);\r\n      });\r\n    this.devicemanager.getAllLocations(this.currentLoginUUID, this.project.id).subscribe(result => {\r\n        this.locations = result.map(elem => {\r\n          return {name: elem, value: elem};\r\n        });\r\n      },\r\n      err => {\r\n        if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n          this.router.navigate(['unauthorized']); }\r\n        console.log(err);\r\n      });\r\n    this.devicemanager.getAllSensorTypes(this.currentLoginUUID, this.project.id).subscribe(result => {\r\n      console.log(result.types);\r\n        this.sensorTypes = result.types.map(elem => {\r\n          return {name: elem.type, value: elem.type};\r\n        });\r\n      },\r\n      err => {\r\n        if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n          this.router.navigate(['unauthorized']); }\r\n        console.log(err);\r\n      });\r\n    this.devicemanager.getAllActuatorTypes(this.currentLoginUUID, this.project.id).subscribe(result => {\r\n        this.actuatorTypes = result.map(elem => {\r\n          return {name: elem, value: elem};\r\n        });\r\n      },\r\n      err => {\r\n        if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n          this.router.navigate(['unauthorized']); }\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  protected updateInput(): void {\r\n    let i = 0;\r\n    while (i < this.tagNumber) {\r\n      i++;\r\n      this.tags.push(i.toString());\r\n    }\r\n  }\r\n\r\n  protected updateDevices(): void {\r\n    this.selectedDevice = undefined;\r\n    this.devicemanager.searchForDevices(this.selectedPlatform['platformId'], this.currentLoginUUID, this.project.id).subscribe(result => {\r\n        this.devices = result;\r\n        this.devices = result;\r\n      },\r\n      err => {\r\n        if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n          this.router.navigate(['unauthorized']); }\r\n        console.log(err);\r\n      });\r\n\r\n  }\r\n\r\n// trackingfunction\r\n  protected trackPlatform(index, platform): any {\r\n    return platform;\r\n  }\r\n\r\n  /**\r\n   * This method updates the {@link addingService} regarding to\r\n   * what the user selected from the platform.\r\n   */\r\n  protected updateAddingService(): void{\r\n    console.log(\"Selecte Platform: \", this.selectedPlatform);\r\n    if(this.selectedPlatform['platformId'].includes('openHab'))\r\n      this.addingService = 1;\r\n    else if (this.selectedPlatform['platformId'].includes('aiotes'))\r\n      this.addingService = 2;\r\n    else\r\n      this.addingService = 0;\r\n  }\r\n\r\n  // closes Pop-up and adds the device to the devicelist\r\n  protected addDevice(): void {\r\n    if (this.name === '') {\r\n      this.name = this.selectedDevice;\r\n    }\r\n    this.devicemanager.addDevice(this.name, this.selectedPlatform['platformId'], this.selectedDevice, this.serial,\r\n      this.tags, this.selectedLocation.value, this.currentLoginUUID, this.project.id, this.externalDeviceId).subscribe(result => {\r\n        // log result.message\r\n        console.log('AddDevice was sent to backend server');\r\n        let device: Device;\r\n        this.devicemanager.getDevicesByLocation(this.selectedLocation.value,this.currentLoginUUID, this.project.id).subscribe(list  => {\r\n          console.log(\"list: \", list);\r\n          for (const device of list){\r\n            console.log(\"device.name \", device.name);\r\n            console.log(\"selectedDevice \", this.selectedDevice.name);\r\n            console.log(\"this.name \", this.name);\r\n            if (device.name === this.selectedDevice.name || device.name === this.name ){\r\n              // fill dropdown Lists of sensors and actuators\r\n              console.log(\"yes\");\r\n              if (device.sensors !== undefined && device.sensors.length >0 ) {\r\n                this.sensors = device.sensors.map(elem => {\r\n                  return {id: elem.id, name: elem.name, type: '', deviceId: device.deviceId};\r\n                });\r\n                console.log(\"sensors: \", this.sensors);\r\n              }\r\n              if (device.actuators !== undefined && device.actuators.length >0) {\r\n                this.actuators = device.actuators.map(elem => {\r\n                  return {id: elem.id, name: elem.name, type: ''};\r\n                });\r\n                console.log(\"actuators: \", this.actuators);\r\n              }\r\n              if (this.sensors.length > 0 ) {\r\n                this.displaySettings = true;\r\n              } else {\r\n                this.clear();\r\n              }\r\n              break;\r\n              }\r\n\r\n            }\r\n\r\n            this.isSuccess=true;\r\n\r\n            // now open the popup for the type configuration of the entities\r\n            setTimeout(() => {\r\n              this.isSuccess=false;\r\n            }, 3000);\r\n\r\n        },\r\n        err => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          console.log(err);\r\n          this.isLocationFailed=true;\r\n          setTimeout(() => {\r\n            this.isLocationFailed=false;\r\n          }, 3000);\r\n\r\n        });\r\n      },\r\n      err => {\r\n        if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n          this.router.navigate(['unauthorized']); }\r\n        console.log(err);\r\n        this.isFail=true;\r\n        console.log('AddDevice could not been sent to backend server');\r\n        setTimeout(() => {\r\n          this.isFail=false;\r\n        }, 3000);\r\n\r\n      });\r\n\r\n  }\r\n\r\n  protected addTypesToDevice(): void {\r\n    this.displaySettings = false;\r\n    let observables: Observable<any>[] = [];\r\n    for (const elem of this.sensors) {\r\n      console.log(\"sensor:\", elem);\r\n      observables.push(this.devicemanager.SetSensorType(elem.deviceId, elem.id,\r\n        elem.type.value, this.currentLoginUUID, this.project.id));\r\n    }\r\n    /*for (const elem of this.actuators) {\r\n      observables.push(this.devicemanager.SetActuatorType(elem.deviceId, elem.id,\r\n        elem.type.value, this.currentLoginUUID, this.project.id));\r\n    }*/\r\n    const observeable = forkJoin(observables);\r\n    observeable.subscribe(results => {\r\n      // All observables in `observables` array have resolved and `dataArray` is an array of result of each observable\r\n        this.clear();\r\n        this.isSensorUpdated= true;\r\n        setTimeout(() => {\r\n          this.isSensorUpdated=false;\r\n        }, 3000);\r\n      },\r\n      err => {\r\n        if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n          this.router.navigate(['unauthorized']); }\r\n        console.log(err);\r\n        this.isSensorUpdatedFAILED= true;\r\n        setTimeout(() => {\r\n          this.isSensorUpdatedFAILED=false;\r\n        }, 3000);\r\n      });\r\n  }\r\n\r\n  // reset all input fields\r\n  protected clear(): void {\r\n    console.log('clear');\r\n    this.selectedDevice='';\r\n    this.selectedPlatform='';\r\n    this.name = '';\r\n    this.serial='';\r\n    this.tags=[];\r\n    this.protocols=[];\r\n    this.selectedLocation = '';\r\n    this.devices = [];\r\n  }\r\n}\r\n","module.exports = \".center{\\r\\n  text-align: center;\\r\\n}\\r\\n\"","module.exports = \"\\r\\n\\r\\n<div style=\\\"display: flex; flex-direction:column; align-items: center; height:100%; width:100%;\\\">\\r\\n  <div style=\\\"display: flex; flex-direction:row; align-items: center; height:100%; width:100%;\\\">\\r\\n\\r\\n  <div style=\\\"width:100%;\\\">\\r\\n    <p-dropdown appendTo=\\\"body\\\" [options]=\\\"devices\\\" placeholder=\\\"Select a device\\\" optionLabel=\\\"name\\\"\\r\\n                [(ngModel)]=\\\"selectedDevice\\\" [style]=\\\"{'width':'100%'}\\\" class=\\\"gridster-item-content\\\" (onClick)=\\\"updateDevices()\\\">\\r\\n    </p-dropdown>\\r\\n\\r\\n  </div>\\r\\n<div style=\\\"width:fit-content; padding-left: 15px;\\\">\\r\\n  <button pButton=\\\"delete\\\" icon=\\\"fa fa-trash\\\" (mousedown)=\\\"$event.stopPropagation()\\\"\\r\\n          (touchstart)=\\\"$event.stopPropagation()\\\" (click)=\\\"deleteDevice()\\\" class=\\\"gridster-item-content\\\">\\r\\n  </button>\\r\\n</div>\\r\\n  </div>\\r\\n\\r\\n  <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-success ui-corner-all\\\"\\r\\n       *ngIf=\\\"isSuccess\\\">\\r\\n    <span>Device was deleted.</span>\\r\\n  </div>\\r\\n  <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\"\\r\\n       *ngIf=\\\"isFail\\\">\\r\\n    <span>Device could not been deleted. Please try again later.</span>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {DeviceManagerService} from '../../../../../../../services/devicemanager.service';\r\nimport {Widget} from \"../../../../../../../models/frontend/widget\";\r\nimport {DataService} from '../../../../../../../services/data.service';\r\nimport {Project} from '../../../../../../../models/frontend/project';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-delete-device',\r\n  templateUrl: './delete-device.component.html',\r\n  styleUrls: ['./delete-device.component.css']\r\n})\r\nexport class DeleteDeviceComponent implements OnInit {\r\n  @Input() currentWidget: Widget;\r\n  protected project: Project;\r\n  devices;\r\n  selectedDevice;\r\n  isSuccess: boolean;\r\n  isFail: boolean;\r\n  protected currentLoginUUID: string;\r\n  constructor(private devicemanager: DeviceManagerService, private dataService: DataService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.dataService.projectData\r\n      .subscribe(value => {\r\n        this.project = value;\r\n      });\r\n    this.isFail=false;\r\n    this.isSuccess=false;\r\n    this.dataService.currentLoginUUID.subscribe(value => this.currentLoginUUID = value);\r\n    // get all Devices for Dropdown List\r\n    this.devicemanager.getAllDevices(this.currentLoginUUID, this.project.id).subscribe(result => {\r\n        this.devices = result;\r\n      },\r\n      err => {\r\n        if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n          this.router.navigate(['unauthorized']); }\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  updateDevices(): void{\r\n    this.devicemanager.getAllDevices(this.currentLoginUUID, this.project.id).subscribe(result => {\r\n        this.devices = result;\r\n      },\r\n      err => {\r\n        if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n          this.router.navigate(['unauthorized']); }\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  // function for deleting the selected Device\r\n  deleteDevice(): void {\r\n    this.devicemanager.DeleteDevice(this.selectedDevice['deviceId'], this.currentLoginUUID, this.project.id).subscribe(result => {\r\n        // log result.message\r\n      this.isSuccess=true;\r\n        this.updateDevices();\r\n        console.log('Device was deleted on backend server');\r\n        setTimeout(() => {\r\n          this.isSuccess=false;\r\n          this.selectedDevice='';\r\n        }, 3000);\r\n\r\n  },\r\n      err => {\r\n        if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n          this.router.navigate(['unauthorized']); }\r\n      this.isFail=true;\r\n      setTimeout(() => {\r\n          this.isFail=false;\r\n        }, 5000);\r\n\r\n        console.log('Device could not been deleted on backend server');\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \".widgetDesign {\\r\\n  position: relative;\\r\\n  width: 12vw;\\r\\n  height: 18vh;\\r\\n  float: left;\\r\\n  margin: 2vh 2vw 0 0;\\r\\n  background-color: white;\\r\\n  border-radius: 25px;\\r\\n  box-shadow: 3px 3px 2px lightgrey;\\r\\n  transition: all 0.3s;\\r\\n  border-color: #668BCC;\\r\\n  border-style: solid;\\r\\n  border-width: 0 0 0 5px;\\r\\n  padding-left: 1vw;\\r\\n  overflow: hidden;\\r\\n  -o-object-fit: scale-down;\\r\\n     object-fit: scale-down;\\r\\n}\\r\\n\\r\\n.widgetDesign:hover {\\r\\n  background-color: #eeeeee;\\r\\n  overflow: visible;\\r\\n}\\r\\n\\r\\n.ui-widget-overlay\\r\\n{\\r\\n  z-index: 0;\\r\\n}\\r\\n\\r\\n.ui-dialog{\\r\\n  z-index: 20;\\r\\n}\\r\\n\\r\\n.nameChanger {\\r\\n  width: 5vw;\\r\\n}\\r\\n\\r\\n.settingsDialog {\\r\\n  width: 500px !important;\\r\\n  height: 600px !important;\\r\\n}\\r\\n\\r\\n.ui-tieredmenu{\\r\\n  left: -200px !important;\\r\\n}\\r\\n\\r\\n.interval-input{\\r\\n  width: 60px;\\r\\n}\\r\\n\\r\\n.widgetContainer {\\r\\n  padding: 0 1vw 1vh 2vw;\\r\\n}\\r\\n\\r\\n.settings-button {\\r\\n  transition: all 0.5s;\\r\\n  position: absolute;\\r\\n  right: 75px;\\r\\n  top: 5px;\\r\\n}\\r\\n\\r\\n.realTimeFont{\\r\\n  /*font-size: 40px;*/\\r\\n}\\r\\n\\r\\n.graph-canvas{\\r\\n  width: 100%;\\r\\n  height: 95% !important;\\r\\n}\\r\\n\\r\\n.graph-button {\\r\\n  position: absolute;\\r\\n  top: 135px;\\r\\n  right: 0;\\r\\n}\\r\\n\\r\\n.device-select {\\r\\n  transition: all 0.5s;\\r\\n  position: absolute;\\r\\n  top: 55px;\\r\\n}\\r\\n\\r\\nhr {\\r\\n  display: block;\\r\\n  height: 1px;\\r\\n  border: 0;\\r\\n  border-top: 1px solid #ccc;\\r\\n  margin: 1em 0;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<p-dialog header=\\\"Bar Chart Settings\\\" [modal]=true appendTo=\\\"body\\\" [width]=\\\"700\\\"\\r\\n          [(visible)]=\\\"displaySettings\\\" [closable]=\\\"false\\\">\\r\\n  <div class=\\\"ui-g\\\">\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <h3>Preferences</h3>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">Type of sensor(s):</div>\\r\\n      <div class=\\\"ui-g-4\\\"><p-radioButton name=\\\"sensorType\\\" value=\\\"true\\\" label=\\\"with numerical values\\\" [(ngModel)]=\\\"sensorType\\\" inputId=\\\"one\\\" (click)=\\\"setIsNumeric('true');\\\"></p-radioButton></div>\\r\\n      <div class=\\\"ui-g-4\\\"><p-radioButton name=\\\"sensorType\\\" value=\\\"false\\\" label=\\\"with states\\\" [(ngModel)]=\\\"sensorType\\\" inputId=\\\"many\\\" (click)=\\\"setIsNumeric('false');\\\"></p-radioButton></div>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">Number of sensors:</div>\\r\\n      <div class=\\\"ui-g-4\\\"><p-radioButton name=\\\"sensorNumber\\\" value=\\\"true\\\" label=\\\"one\\\" [(ngModel)]=\\\"sensorNumber\\\" inputId=\\\"one\\\" (click)=\\\"setIsMonoVis('true');\\\"></p-radioButton></div>\\r\\n      <div class=\\\"ui-g-4\\\"><p-radioButton name=\\\"sensorNumber\\\" value=\\\"false\\\" label=\\\"many\\\" [(ngModel)]=\\\"sensorNumber\\\" inputId=\\\"many\\\" (click)=\\\"setIsMonoVis('false');\\\"></p-radioButton></div>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <h3>Input Data</h3>\\r\\n    </div>\\r\\n    <p-accordion [multiple]=\\\"true\\\">\\r\\n      <div *ngFor=\\\"let group of dropdownList\\\" class=\\\"ui-g-12 grid-elem\\\">\\r\\n        <p-accordionTab  style=\\\"align-items: center; overflow: auto; width: 100%;\\\">\\r\\n          <p-header>\\r\\n            Device:\\r\\n            <p-dropdown appendTo=\\\"body\\\" [options]=\\\"devicesList\\\" (onChange)=\\\"setSensorDropdown(group.deviceEntity.deviceId)\\\"\\r\\n                        [filter]=\\\"true\\\" [(ngModel)]=\\\"group.deviceEntity.deviceId\\\"\\r\\n                        [style]=\\\"{'width':'200px'}\\\" placeholder=\\\"Select a device\\\" (onClick)=\\\"$event.stopPropagation();$event.preventDefault();\\\">\\r\\n            </p-dropdown>\\r\\n\\r\\n            Sensor:\\r\\n            <p-dropdown appendTo=\\\"body\\\" [options]=\\\"group.sensorList\\\" [filter]=\\\"true\\\" [(ngModel)]=\\\"group.deviceEntity.entityId\\\"\\r\\n                        [style]=\\\"{'width':'200px'}\\\" placeholder=\\\"Select a sensor\\\" (onChange)=\\\"setValueFormat()\\\" (onClick)=\\\"$event.stopPropagation();$event.preventDefault();\\\">\\r\\n            </p-dropdown>\\r\\n\\r\\n            <button *ngIf=\\\"!isMonoVis && dropdownList.indexOf(group) > 0\\\" style = \\\"margin-left: 10px;\\\" type=\\\"button\\\" pButton icon=\\\"fa fa-minus\\\" (click)=\\\"$event.stopPropagation();$event.preventDefault();deleteDropdowns(group.deviceEntity);\\\"></button>\\r\\n\\r\\n          </p-header>\\r\\n          <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n            <div class=\\\"ui-g-4 grid-elem\\\">Data label:</div>\\r\\n            <input pInputText class=\\\"gridster-item-content\\\" [(ngModel)]=\\\"group.deviceEntity.label\\\"  style=\\\"width: 200px; padding-left: 0;\\\">\\r\\n          </div>\\r\\n          <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n            <div class=\\\"ui-g-4 grid-elem\\\">Bar color:</div>\\r\\n            <p-colorPicker [(ngModel)]=\\\"group.deviceEntity.color\\\"></p-colorPicker>\\r\\n          </div>\\r\\n\\r\\n        </p-accordionTab>\\r\\n      </div>\\r\\n    </p-accordion>\\r\\n\\r\\n    <div class=\\\"ui-g-12\\\" *ngIf=\\\"!isMonoVis\\\">\\r\\n      <button type=\\\"button\\\" pButton icon=\\\"fa fa-plus\\\" (click)=\\\"addNewDropdowns()\\\"></button>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <h3>Representation</h3>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">X axes label:</div>\\r\\n      <input pInputText class=\\\"gridster-item-content\\\" [(ngModel)]=\\\"this.axesOptions.xLabel\\\"  style=\\\"width: 200px; padding-left: 0;\\\">\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">Y axes label:</div>\\r\\n      <input pInputText class=\\\"gridster-item-content\\\" [(ngModel)]=\\\"this.axesOptions.yLabel\\\"  style=\\\"width: 200px; padding-left: 0;\\\">\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">Time Period:</div>\\r\\n      <div class=\\\"ui-g-2 grid-elem\\\">from</div>\\r\\n      <p-calendar [(ngModel)]=\\\"selectedStart\\\" [showTime]=\\\"true\\\" [showIcon]=\\\"true\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"1970:2020\\\" appendTo=\\\"body\\\"></p-calendar>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\"></div>\\r\\n      <div class=\\\"ui-g-2 grid-elem\\\">to</div>\\r\\n      <p-calendar [(ngModel)]=\\\"selectedEnd\\\" [showTime]=\\\"true\\\" [showIcon]=\\\"true\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"1970:2020\\\" appendTo=\\\"body\\\"></p-calendar>\\r\\n    </div>\\r\\n    <!--div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">Values per</div>\\r\\n      <p-dropdown [autoWidth]=\\\"true\\\" [placeholder]=\\\"'Select a time interval'\\\"\\r\\n                  [options]=\\\"timeList\\\" [(ngModel)]=\\\"timeType\\\"\\r\\n                  [style]=\\\"{'width':'200px'}\\\"  appendTo=\\\"body\\\">\\r\\n      </p-dropdown>\\r\\n      <div class=\\\"dropdown\\\"></div>\\r\\n    </div-->\\r\\n    <div *ngIf=\\\"isNumeric\\\" class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">Calculation:</div>\\r\\n      <p-dropdown [autoWidth]=\\\"true\\\" [placeholder]=\\\"'Select a calculation type'\\\"\\r\\n                  [options]=\\\"calculationList\\\" [(ngModel)]=\\\"calculationType\\\"\\r\\n                  [style]=\\\"{'width':'200px'}\\\"  appendTo=\\\"body\\\">\\r\\n      </p-dropdown>\\r\\n      <div class=\\\"dropdown\\\"></div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!isNumeric\\\" class=\\\"ui-g-12 grid-elem\\\">\\r\\n        <div class=\\\"ui-g-4 grid-elem\\\">Frequency:</div>\\r\\n        <div class=\\\"ui-g-4\\\"><p-radioButton name=\\\"countType\\\" value=\\\"count\\\" label=\\\"count\\\" [(ngModel)]=\\\"frequency\\\" inputId=\\\"count\\\" ></p-radioButton></div>\\r\\n        <div class=\\\"ui-g-4\\\"><p-radioButton name=\\\"countType\\\" value=\\\"percentage\\\" label=\\\"percentage\\\" [(ngModel)]=\\\"frequency\\\" inputId=\\\"percentage\\\"></p-radioButton></div>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12\\\" style=\\\"width:10px;\\\"></div>\\r\\n\\r\\n  </div>\\r\\n  <p-footer>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"fa-check\\\" (click)=\\\"applySettings();\\\" label=\\\"Apply\\\"></button>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"fa-close\\\" (click)=\\\"abortChanges()\\\" label=\\\"Cancel\\\"></button>\\r\\n  </p-footer>\\r\\n</p-dialog>\\r\\n<button pButton icon=\\\"fa fa-cog\\\" style=\\\"z-index: 6;\\\" class=\\\"settings-button transparentButton tbutton ui-button-secondary\\\"\\r\\n        (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" (click)=\\\"displaySettings=true;isAllowed=false;\\\"\\r\\n        [hidden]=\\\" !(loginStatus>1 && currentWidget.isDeveloped)\\\"></button>\\r\\n<!--*ngIf=\\\"myChart != undefined && myChart.data!= undefined && myChart.data.datasets != []\\\"-->\\r\\n<div  class=\\\"graph-canvas\\\">\\r\\n  <canvas #chart>{{myChart}}</canvas>\\r\\n</div>\\r\\n<div style=\\\"text-align: center;\\\">\\r\\n  <p-message *ngIf=\\\"isEmpty\\\" severity=\\\"info\\\" text=\\\"You selected device entities without historical data.\\\"></p-message>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","import {Component, EventEmitter, Input, OnInit, ViewChild, Output} from '@angular/core';\r\nimport {BaseChartDirective} from 'ng2-charts/ng2-charts';\r\nimport {DataService} from '../../../../../../../services/data.service';\r\nimport {Chart} from 'chart.js';\r\nimport {DeviceManagerService} from '../../../../../../../services/devicemanager.service';\r\nimport {VisualManagerService} from '../../../../../../../services/visualmanager.service';\r\nimport {Widget} from '../../../../../../../models/frontend/widget';\r\nimport {DatabaseService} from '../../../../../../../services/database.service';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/interval';\r\nimport {MenuItem} from 'primeng/api';\r\nimport {SelectItem} from 'primeng/api';\r\nimport {Project} from '../../../../../../../models/frontend/project';\r\nimport {BarChartWidget, Calculation, Frequency} from '../../../../../../../models/frontend/barchartwidget';\r\nimport {Fieldvalue} from '../../../../../../../models/frontend/fieldvalue';\r\nimport {User} from '../../../../../../../models/frontend/user';\r\nimport {Device} from '../../../../../../../models/backend/device';\r\nimport {SensorDataModel} from '../../../../../../../models/backend/sensordatamodel';\r\nimport {AxesOptions} from '../../../../../../../models/frontend/linechartwidget';\r\nimport {ChartDeviceEntity} from '../../../../../../../models/frontend/chartDeviceEntity';\r\nimport {DeviceEntity} from \"../../../../../../../models/frontend/deviceEntity\";\r\n\r\n/**\r\n * @author Janina Hüther, Chinaedu Onwukwe\r\n * This component processes a {@link WidgetType#barChartVisualization} Widget. This type of widget is to display\r\n * values of an entity in a bar chart. That means it requests data e.g. get data of device x from 02.08.2018 - 03.08.2018\r\n * from the backend. It uses the {@link BarChartWidget} model to represent a widget.\r\n */\r\n@Component({\r\n  selector: 'bar-chart-visualization',\r\n  templateUrl: './bar-chart-visualization.component.html',\r\n  styleUrls: ['./bar-chart-visualization.component.css']\r\n})\r\nexport class BarChartVisualizationComponent implements OnInit {\r\n  @ViewChild('chart') private ctx;\r\n  @Input() currentWidget: BarChartWidget;\r\n  @Output() resizeFont = new EventEmitter<HTMLElement>();\r\n\r\n  protected user: User;\r\n  protected project: Project;\r\n  protected loginStatus: number;\r\n\r\n  protected isMonoVis: boolean = true;\r\n  // isMonoVis in string:\r\n  protected sensorNumber: string = 'true';\r\n  protected isNumeric: boolean = false;\r\n  // isNumeric in string:\r\n  protected sensorType: string = 'false';\r\n  // interval for generating bars\r\n  protected timeType: string = '';\r\n  // non numerical data's type of calculation\r\n  protected calculationType: Calculation = Calculation.Avg;\r\n  protected frequency: Frequency = Frequency.Count;\r\n\r\n  protected isEmpty: boolean;\r\n\r\n  myChart: any;\r\n  protected devicesList: SelectItem[] = [];\r\n  protected multidevicesList: SelectItem[] = [];\r\n\r\n  protected sensorList: SelectItem[] = [];\r\n  protected calculationList: Array<SelectItem> = [{label: Calculation.Avg, value: Calculation.Avg},\r\n    {label: Calculation.Min, value: Calculation.Min}, {label: Calculation.Max, value: Calculation.Max}];\r\n  protected timeList: Array<SelectItem> = [{label: 'day', value: 'day'}, {label: 'week', value: 'week'}, {label: 'month', value: 'month'}];\r\n  protected calculationNonNumericalList: Array<SelectItem> = [{label: 'absolute count', value: 'absolute'}, {label: 'percentage', value: 'percentage'}];\r\n\r\n  chartType: string;\r\n  displaySettings: boolean = false;\r\n  public chartLabels: Array<string>;\r\n  public chartData: [{ label: string, data: Array<number>, borderColor: string, backgroundColor: string, fill: boolean }];\r\n  public chartOptions: any;\r\n  axesOptions: AxesOptions = {xLabel: '', yLabel: '', xLabelVisible: true, yLabelVisible: true};\r\n\r\n  selectedStart: Date;\r\n  selectedEnd: Date;\r\n\r\n  protected representations: Array<SelectItem> = [];\r\n  public dropdownList = [{\r\n    deviceEntity: {\r\n      deviceId: '',\r\n      entityId: '',\r\n      lineType: '',\r\n      fillArea: true,\r\n      showLine: true,\r\n      color: '#1976D2',\r\n      label: '',\r\n      unit: '',\r\n      axis: ''\r\n    }, sensorList: []\r\n  }];\r\n\r\n  constructor(private dataService: DataService,\r\n              private databaseService: DatabaseService,\r\n              private devicemanager: DeviceManagerService,\r\n              private visualmanager: VisualManagerService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isEmpty = false;\r\n    this.devicesList = [];\r\n    this.multidevicesList = [];\r\n    this.sensorList = [];\r\n    this.chartType = 'bar';\r\n    this.dataService.projectData\r\n      .subscribe(value => {\r\n        this.project = value;\r\n      });\r\n    this.dataService.userData\r\n      .subscribe(value => {\r\n        this.user = value;\r\n      });\r\n\r\n    this.dataService.currentLoginStatus.subscribe(value => this.loginStatus = value);\r\n    if (this.currentWidget.axesOptions !== undefined) {this.axesOptions = this.currentWidget.axesOptions;}\r\n    if (this.currentWidget.isMonoVis !== undefined) {\r\n      this.isMonoVis = this.currentWidget.isMonoVis;\r\n      this.sensorNumber = this.isMonoVis.toString();\r\n    }\r\n\r\n    if (this.currentWidget.isNumerical !== undefined) {\r\n      this.isNumeric = this.currentWidget.isNumerical;\r\n      this.sensorType = this.isNumeric.toString()\r\n    }\r\n\r\n    if (this.currentWidget.calculationType !== undefined) {this.calculationType = this.currentWidget.calculationType;}\r\n\r\n    if (this.currentWidget.frequencyType !== undefined) {this.frequency = this.currentWidget.frequencyType;}\r\n\r\n    if (this.currentWidget.interval !== undefined) {this.timeType = this.currentWidget.interval;}\r\n\r\n    if (this.currentWidget.startDate !== undefined && this.currentWidget.endDate !== undefined) {\r\n      this.selectedStart = new Date(this.currentWidget.startDate);\r\n      this.selectedEnd = new Date(this.currentWidget.endDate);\r\n    } else {\r\n      this.selectedStart = new Date(2019, 1, 5, 10, 55, 22, 0);\r\n      this.selectedEnd = new Date(2019, 1, 15, 10, 55, 22, 0);\r\n    }\r\n\r\n    this.fillDevicesList(true);\r\n\r\n    // init chart attributes and chart object\r\n    this.chartOptions = {\r\n      maintainAspectRatio: false,\r\n      responsive: true,\r\n      legend: {\r\n        display: true,\r\n        position: 'top'\r\n      },\r\n      scales: {\r\n        xAxes: [{\r\n          type: 'category',\r\n          display: true,\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: 'time'\r\n          },\r\n          //time: {\r\n            //tooltipFormat: 'MM-DD-YYYY ha',\r\n            //unit: 'month'\r\n          //}\r\n        }],\r\n        yAxes: [{\r\n          ticks: {\r\n            beginAtZero: true,\r\n            max: undefined\r\n          },\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: ''\r\n          }\r\n        }]\r\n      },\r\n      onResize: function (chart, size) {\r\n        //chart.options.legend.display = size.width > 400;\r\n        //chart.options.legend.position = (size.width > size.height) ? 'right' : 'bottom';\r\n        //console.log();\r\n        //chart.update();\r\n      }\r\n    };\r\n    this.myChart = new Chart(this.ctx.nativeElement, {\r\n      type: this.chartType,\r\n      data: {\r\n        labels: [],\r\n        datasets: []\r\n      },\r\n      options: this.chartOptions\r\n    });\r\n\r\n  }\r\n\r\n  // generates a timestamp in ISO standard as defined for the backend\r\n  private generateIsoDateTime(date: Date): string {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() + 1;\r\n    const day = date.getDate();\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n    const seconds = date.getSeconds();\r\n\r\n    const yearString = year.toString();\r\n    let dayString = day.toString();\r\n    let monthString = month.toString();\r\n    let hoursString = hours.toString();\r\n    let minutesString = minutes.toString();\r\n    let secondsString = seconds.toString();\r\n\r\n    if (day < 10) {\r\n      dayString = '0' + dayString;\r\n    }\r\n    if (month < 10) {\r\n      monthString = '0' + monthString;\r\n    }\r\n    if (hours < 10) {\r\n      hoursString = '0' + hoursString;\r\n    }\r\n    if (minutes < 10) {\r\n      minutesString = '0' + minutesString;\r\n    }\r\n    if (seconds < 10) {\r\n      secondsString = '0' + secondsString;\r\n    }\r\n\r\n    return yearString + '-' + monthString + '-' + dayString + 'T' + hoursString + ':' + minutesString + ':' + secondsString;\r\n  }\r\n\r\n  protected initSetDevice(): void {\r\n    this.dropdownList = [];\r\n    // create a list with all init selected devices\r\n    const selectedDevices: Array<String> = [];\r\n    let isIncluded = false;\r\n    for (const widgetElem of this.currentWidget.deviceEntities) {\r\n      // check if device is in list\r\n      for (const selectedElem of selectedDevices) {\r\n        if (selectedElem === widgetElem.deviceId) {\r\n          isIncluded = true;\r\n          break;\r\n        }\r\n      }\r\n      if (!isIncluded) {\r\n        selectedDevices.push(widgetElem.deviceId);\r\n      }\r\n    }\r\n    // fill lists for dropdowns\r\n    const numberOfSavedEntities = this.currentWidget.deviceEntities.length;\r\n    // go over all selected devices\r\n    for (const widgetElem of selectedDevices) {\r\n      // go over all existing devices\r\n      for (const deviceElem of this.devicesList) {\r\n        if (deviceElem.value === widgetElem) {\r\n          // here we have the right device id\r\n          // get list of all entities of the device\r\n          const sensorList = [];\r\n          this.devicemanager.getDeviceById(deviceElem.value, this.user.id, this.project.id)\r\n            .subscribe((device: Device) => {\r\n                // only push sensors if we have stateless data\r\n                if (device.sensors !== null && this.isNumeric) {\r\n                  for (const sensor of device.sensors) {\r\n                    sensorList.push({label: sensor.name, value: sensor.id});\r\n                  }\r\n                }\r\n                if (device.actions !== null) {\r\n                  for (const action of device.actions) {\r\n                    // only push actions with states in sensorList if is not numeric (= stateful data)\r\n                    if (!this.isNumeric && !action.valueable) {\r\n                      sensorList.push({label: action.name, value: action.id});\r\n                    } else if (this.isNumeric && action.valueable) {\r\n                      // if we have stateless data, push actions without states\r\n                      sensorList.push({label: action.name, value: action.id});\r\n                    }\r\n                  }\r\n                }\r\n\r\n\r\n                // looking for the right entitiy id\r\n                for (const sensorElem of sensorList) {\r\n                  for (const elem of this.currentWidget.deviceEntities) {\r\n                    if (sensorElem.value === elem.entityId) {\r\n                      // here we have the right entity id\r\n                      // set selected device, list and sensor in dropdownlist\r\n                      this.dropdownList.push({\r\n                        deviceEntity: {\r\n                          deviceId: deviceElem.value,\r\n                          entityId: sensorElem.value,\r\n                          lineType: elem.lineType,\r\n                          fillArea: elem.fillArea,\r\n                          showLine: elem.showLine,\r\n                          color: elem.color,\r\n                          label: elem.label,\r\n                          unit: elem.unit,\r\n                          axis: 'y'\r\n                        },\r\n                        sensorList: sensorList\r\n                      });\r\n                      break;\r\n                    }\r\n                  }\r\n                }\r\n                // check dropdownlist for dummydata\r\n                for (const data of this.dropdownList) {\r\n                  if (data['deviceId'] === '') {\r\n                    console.log('Dummy');\r\n                  }\r\n                }\r\n\r\n                //create and fill chartData from selected sensors if all data is in dropdownList (last finished request)\r\n                //if (this.dropdownList.length === numberOfSavedEntities) {\r\n                // this.initRealtimeData(this.myChart);\r\n                this.showChart(this.myChart);\r\n                //}\r\n\r\n              },\r\n              error => {\r\n                console.log('Error requesting devices from backend ', error);\r\n              });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  showChart(chart): void {\r\n    // set chart options\r\n    chart.options.scales.xAxes[0].scaleLabel.labelString = this.axesOptions.xLabel;\r\n    chart.options.scales.yAxes[0].scaleLabel.labelString = this.axesOptions.yLabel;\r\n    chart.options.scales.xAxes[0].scaleLabel.display = this.axesOptions.xLabelVisible;\r\n    chart.options.scales.yAxes[0].scaleLabel.display = this.axesOptions.yLabelVisible;\r\n    chart.data.datasets = [];\r\n    chart.data.labels = [];\r\n    let statedata = {'deviceId': '', 'actionId': '', 'states': [{number: 0, description: '', value: 0}]};\r\n    //let color = [];\r\n    let cIndex = 0;\r\n    // go through all selected devices\r\n    for (const selected of this.dropdownList) {\r\n      this.devicemanager.getDeviceById(selected.deviceEntity.deviceId, this.user.id, this.project.id).subscribe((result) => {\r\n        // for stateful data values, the states have to be prepared\r\n        if (!this.isNumeric) {\r\n          let states;\r\n          for (const action of result.actions) {\r\n            // get the selected action's states\r\n            states = [];\r\n            if (!action.valueable && action.id === selected.deviceEntity.entityId) {\r\n              for (const state of action.states) {\r\n                states.push({number: state.state, description: state.description, value: 0});\r\n              }\r\n              statedata = {'deviceId': selected.deviceEntity.deviceId, 'actionId': action.id, 'states': states};\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        // get Data from Backend\r\n        this.visualmanager.getTimeData(selected.deviceEntity.deviceId, selected.deviceEntity.entityId,\r\n          this.generateIsoDateTime(this.selectedStart), this.generateIsoDateTime(this.selectedEnd),\r\n          'P5D', this.user.id, this.project.id)\r\n          .subscribe((sensorDataModel: SensorDataModel) => {\r\n            if (sensorDataModel.Values.length > 0){\r\n              let valueCount = 0;\r\n              let dateStart: Date = new Date(sensorDataModel.Values[0].DateTime);\r\n              let dateEnd: Date = new Date(sensorDataModel.Values[sensorDataModel.Values.length - 1].DateTime);\r\n              // we have to divide the total time by 3600000 to get hours instead of milliseconds\r\n              let timeTotal = (dateEnd.getTime() - dateStart.getTime()) / 3600000;\r\n              // stateless data\r\n              if (this.isNumeric) {\r\n                let value = 0;\r\n                switch (this.calculationType) {\r\n                  case Calculation.Avg:\r\n                    value = this.calculateAverage(sensorDataModel.Values, timeTotal);\r\n                    break;\r\n                  case Calculation.Max:\r\n                    value = this.calculateMaximum(sensorDataModel.Values);\r\n                    break;\r\n                  case Calculation.Min:\r\n                  default:\r\n                    value = this.calculateMinimum(sensorDataModel.Values);\r\n                    break;\r\n                }\r\n\r\n                // add sensor data to the chartData.\r\n                // create ctxData\r\n                if (chart.data.labels.length === 0) {\r\n                  chart.data.labels.push(this.calculationType);\r\n                }\r\n                const ctxData = {\r\n                  label: selected.deviceEntity.label,\r\n                  data: [value],\r\n                  backgroundColor: selected.deviceEntity.color,\r\n                  borderColor: selected.deviceEntity.color\r\n                };\r\n                console.log('ctxData: ', ctxData);\r\n                chart.data.datasets.push(ctxData);\r\n                console.log('after push: ctxData: ', chart.data.datasets);\r\n                if (chart.data.datasets[0]['label'] === '') {\r\n                  console.log(\"delete datalabel\");\r\n                  //chart.data.datasets.shift();\r\n                }\r\n                chart.update();\r\n                console.log('chartData: ', chart.data);\r\n\r\n                // stateful data\r\n              } else {\r\n                for (const value of sensorDataModel.Values) {\r\n                  let entityValue: number;\r\n                    if (value.FloatValue !== null){\r\n                      entityValue = value.FloatValue;\r\n                    } else {\r\n                      var vString = value.StringValue;\r\n                      // delete Temperature unit, which is added in Openhab\r\n                      vString = vString.replace(' °C', '');\r\n                      entityValue = Number(vString);\r\n                    }\r\n                  let len = sensorDataModel.Values.length;\r\n                  for (const state of statedata.states) {\r\n                    if (sensorDataModel.Values.indexOf(value) < len - 1) {\r\n                      if (entityValue === state.number) {\r\n                        // count how often the state is represented in the data.\r\n                        let start: Date = new Date(value.DateTime);\r\n                        let end: Date = new Date(sensorDataModel.Values[sensorDataModel.Values.indexOf(value) + 1].DateTime);\r\n\r\n                        state.value = state.value + ((end.getTime() - start.getTime()) / 3600000);\r\n                      }\r\n                    }\r\n                  }\r\n                  //console.log(\"stateData: \", statedata);\r\n                  // one time the label of the data points has to be set.\r\n                }\r\n\r\n                // count or calculate percentage\r\n                if (this.frequency === Frequency.Percentage) {\r\n                  for (const state of statedata.states) {\r\n                    state.value = state.value / timeTotal;\r\n                  }\r\n                }\r\n                // add sensor data to the chartData.\r\n                // create ctxData\r\n                let stateValues = [];\r\n                console.log(\"statedata states: \", statedata.states);\r\n                for (const state of statedata.states) {\r\n                  stateValues.push(state.value);\r\n                  var checkList = [];\r\n                  checkList = chart.data.labels.filter(elem => elem === state.number);\r\n                  if (checkList.length <= 0 ){\r\n                    chart.data.labels.push(state.number);\r\n                  }\r\n                }\r\n                const ctxData = {\r\n                  label: selected.deviceEntity.label,\r\n                  data: stateValues,\r\n                  backgroundColor: selected.deviceEntity.color,\r\n                  borderColor: selected.deviceEntity.color\r\n                };\r\n                console.log('ctxData: ', ctxData);\r\n                chart.data.datasets.push(ctxData);\r\n\r\n                if (chart.data.datasets[0]['label'] === '') {\r\n                 // chart.data.datasets.shift();\r\n                }\r\n                chart.update();\r\n                console.log('chartData: ', chart.data);\r\n              }\r\n            } else {\r\n              // if there is no history data, generate Empty data Array\r\n              this.isEmpty = true;\r\n              const ctxData = {\r\n                label: selected.deviceEntity.label,\r\n                data: [],\r\n                backgroundColor: selected.deviceEntity.color,\r\n                borderColor: selected.deviceEntity.color\r\n              };\r\n              console.log('ctxData: ', ctxData);\r\n              chart.data.datasets.push(ctxData);\r\n\r\n              if (chart.data.datasets[0]['label'] === '') {\r\n                chart.data.datasets.shift();\r\n              }\r\n              chart.update();\r\n              console.log('chartData: ', chart.data);\r\n            }\r\n\r\n            },\r\n            err => {\r\n              console.log('Error requesting historic data from backend ', err);\r\n            });\r\n      }, error => {\r\n        console.log('Error requesting device data from backend ');\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  // events\r\n  public chartClicked(e: any): void {\r\n    console.log(e);\r\n  }\r\n\r\n  public chartHovered(e: any): void {\r\n    console.log(e);\r\n  }\r\n\r\n  // add a new line / dataset to the chart\r\n  addDataset(chart, dataset): void {\r\n    chart.data.datasets.push(dataset);\r\n    if (chart.data.datasets[0]['label'] === '') {\r\n      chart.data.dataset.shift();\r\n    }\r\n    chart.update();\r\n  }\r\n\r\n  // removes all datasets which have mor then one data point\r\n  removeDatasets(chart): void {\r\n    chart.data.datasets.forEach((dataset) => {\r\n      if (dataset.data.lenght > 1) {\r\n        let removalIndex = chart.data.datasets.indexOf(dataset); //Locate index of dataset\r\n        if (removalIndex >= 0) { //make sure this element exists in the array\r\n          chart.data.datasets.splice(removalIndex, 1);\r\n        }\r\n      }\r\n    });\r\n    // when it was the only data set, remove the labels as well.\r\n    if (chart.data.datasets.length === 0) {\r\n      // for each label, remove one label.\r\n      chart.data.labels.forEach((label) => {\r\n        chart.data.labels.pop();\r\n      });\r\n    }\r\n    console.log('my LineChart Labels: ', chart.data.labels);\r\n    chart.update();\r\n  }\r\n\r\n  // updates an attribute of a chart (sub)object.\r\n  updateChartOption(chart, chartField, value): void {\r\n    chartField = value;\r\n    chart.update();\r\n  }\r\n\r\n\r\n  applySettings(): void {\r\n    this.isEmpty = false;\r\n    this.displaySettings = false;\r\n    //updating data from dropdowns in current Widget\r\n    this.currentWidget.deviceEntities = [];\r\n    // updating data from dropdowns in current Widget\r\n    for (const entity of this.dropdownList) {\r\n      this.currentWidget.deviceEntities.push(entity.deviceEntity);\r\n    }\r\n    this.currentWidget.chartType = this.chartType;\r\n    this.currentWidget.axesOptions = this.axesOptions;\r\n    this.currentWidget.interval = this.timeType;\r\n    this.currentWidget.isNumerical = this.isNumeric;\r\n    this.currentWidget.isMonoVis = this.isMonoVis;\r\n    this.currentWidget.calculationType = this.calculationType;\r\n    this.currentWidget.frequencyType = this.frequency;\r\n    this.currentWidget.endDate = this.selectedEnd;\r\n    this.currentWidget.startDate = this.selectedStart;\r\n    // remove empty placeholder if neccessary\r\n    if (this.currentWidget.deviceEntities[0].deviceId === '') {\r\n      this.currentWidget.deviceEntities.shift();\r\n    }\r\n    this.saveInDatabase(this.currentWidget.deviceEntities, 'deviceEntities');\r\n    this.saveInDatabase(this.currentWidget.chartType, 'chartType');\r\n    this.saveInDatabase(this.currentWidget.axesOptions, 'axesOptions');\r\n    this.saveInDatabase(this.currentWidget.interval, 'interval');\r\n    this.saveInDatabase(this.currentWidget.isMonoVis, 'isMonoVis');\r\n    this.saveInDatabase(this.currentWidget.isNumerical, 'isNumerical');\r\n    this.saveInDatabase(this.currentWidget.calculationType, 'calculationType');\r\n    this.saveInDatabase(this.currentWidget.frequencyType, 'frequencyType');\r\n    this.saveInDatabase(this.currentWidget.startDate, 'startDate');\r\n    this.saveInDatabase(this.currentWidget.endDate, 'endDate');\r\n    // get data with new settings\r\n    this.showChart(this.myChart);\r\n\r\n  }\r\n\r\n  abortChanges(): void {\r\n    this.displaySettings = false;\r\n    // this.chartType = this.currentWidget.chartType;\r\n    this.selectedEnd = this.currentWidget.endDate;\r\n    this.selectedStart = this.currentWidget.startDate;\r\n    this.axesOptions = this.currentWidget.axesOptions;\r\n    this.timeType = this.currentWidget.interval;\r\n    this.isNumeric = this.currentWidget.isNumerical;\r\n    this.sensorType = (this.isNumeric)? \"true\":\"false\";\r\n    this.isMonoVis = this.currentWidget.isMonoVis;\r\n    this.sensorNumber = (this.isMonoVis)? \"true\":\"false\";\r\n    this.calculationType = this.currentWidget.calculationType;\r\n    this.frequency = this.currentWidget.frequencyType;\r\n    this.dropdownList = [{\r\n      deviceEntity: {\r\n        deviceId: '',\r\n        entityId: '',\r\n        lineType: '',\r\n        fillArea: true,\r\n        showLine: true,\r\n        color: '#1976D2',\r\n        label: '',\r\n        unit: '',\r\n        axis: ''\r\n      }, sensorList: []\r\n    }];\r\n    for (const entity of this.currentWidget.deviceEntities) {\r\n      this.dropdownList.push({deviceEntity: entity, sensorList: []});\r\n      this.setSensorDropdown(entity.deviceId);\r\n    }\r\n    this.dropdownList.shift();\r\n    this.devicesList = [];\r\n    this.multidevicesList = [];\r\n    this.fillDevicesList(false);\r\n  }\r\n\r\n  /**\r\n   * This method saves the selected options into the database.\r\n   * @param value the value\r\n   * @param field the field where to store\r\n   */\r\n  protected saveInDatabase(value, field: string): void {\r\n    this.databaseService.updateDocument(this.databaseService.WIDGETSCOLLECTION, this.currentWidget.id, new Fieldvalue(field, value))\r\n      .subscribe(result => {\r\n      }, error => {\r\n        console.log('Error updating database entry ', error);\r\n      });\r\n  }\r\n\r\n  protected addNewDropdowns() {\r\n    this.dropdownList.push({\r\n      deviceEntity: {\r\n        deviceId: '',\r\n        entityId: '',\r\n        lineType: '',\r\n        fillArea: true,\r\n        showLine: true,\r\n        color: '#1976D2',\r\n        label: '',\r\n        unit: '',\r\n        axis: ''\r\n      }, sensorList: []\r\n    });\r\n    //this.chartData.push({label: '', data: [], borderColor: '', fill: false});\r\n  }\r\n\r\n  protected deleteDropdowns(group: ChartDeviceEntity) {\r\n    let i = 0;\r\n    this.chartData = [{label: '', data: [], borderColor: '#1976D2', backgroundColor: '#1976D2', fill: false}];\r\n    // console.log(\"Dropdownlist: \", this.dropdownList);\r\n    for (let elem of this.dropdownList) {\r\n      if (elem.deviceEntity.deviceId === group.deviceId && elem.deviceEntity.entityId === group.entityId) {\r\n        this.dropdownList.splice(i, 1);\r\n        // if the arrays have the same length, the chartData of the entity has to be deleted as well\r\n        if (this.dropdownList.length === (this.chartData.length) - 1) {\r\n          // this.chartData.splice(i, 1);\r\n        }\r\n        console.log('Dropdownlist after DELETE: ', this.dropdownList);\r\n      }\r\n      i++;\r\n    }\r\n\r\n  }\r\n\r\n  protected setSensorDropdown(deviceId: string): void {\r\n    // get list of all entities of the device\r\n    const sensorList = [];\r\n    this.devicemanager.getDeviceById(deviceId, this.user.id, this.project.id)\r\n      .subscribe((device: Device) => {\r\n        // only push sensors if we have stateless and therefore numeric data\r\n          if (this.isNumeric && device.sensors !== null){\r\n            for (const sensor of device.sensors) {\r\n              // if it has sensors, it has numerical values as well\r\n              sensorList.push({label: sensor.name, value: sensor.id});\r\n            }\r\n          }\r\n\r\n          if (device.actions !== null) {\r\n            for (const action of device.actions){\r\n              // push actions either when it is stateless (numeric) and has values OR when it has states and is not numeric\r\n              if ((this.isNumeric && action.valueable) || (!this.isNumeric && !action.valueable)){\r\n                sensorList.push({label: action.name, value: action.id});\r\n              }\r\n            }\r\n          }\r\n\r\n          // go through dropdownlist and set sensorList to device\r\n          for (const dropdowngroup of this.dropdownList) {\r\n            if (dropdowngroup.deviceEntity.deviceId === deviceId) {\r\n              dropdowngroup.sensorList = sensorList;\r\n              // if there is only one element in sensorlist, preselect it for the dropdown\r\n              if (dropdowngroup.sensorList.length === 1){\r\n                dropdowngroup.deviceEntity.entityId = dropdowngroup.sensorList[0].value;\r\n              }\r\n            }\r\n          }\r\n        },\r\n        error => {\r\n          console.log('Error requesting devices from backend ', error);\r\n        });\r\n  }\r\n\r\n  // after changing Sensor Dropdown, set format of Sensor data values to provide uniformity\r\n  setValueFormat() {\r\n\r\n  }\r\n\r\n  // to fill the multi device dropdowns with compatible devices\r\n  protected fillDevicesList(isInit: boolean){\r\n    // reset list:\r\n    this.devicesList = [];\r\n    this.dropdownList = [{\r\n      deviceEntity: {\r\n        deviceId: '',\r\n        entityId: '',\r\n        lineType: '',\r\n        fillArea: true,\r\n        showLine: true,\r\n        color: '#1976D2',\r\n        label: '',\r\n        unit: '',\r\n        axis: ''\r\n      }, sensorList: []\r\n    }];\r\n    // get all devices\r\n    this.devicemanager.getAllDevices(this.user.id, this.project.id)\r\n      .subscribe(devices => {\r\n          for (const device of devices) {\r\n\r\n            let isSameType: boolean = false;\r\n            // only push device if we have stateless data\r\n            if (this.isNumeric) {\r\n              if (device.actions !== null) {\r\n                //check if it has stateless actuators\r\n                for (const action of device.actions){\r\n                  if (action.valueable){\r\n                    isSameType = true;\r\n                    break;\r\n                  }\r\n                }\r\n              }\r\n              if (!isSameType && device.sensors !== null && device.sensors.length > 0){\r\n                // if it has sensors, it has numerical values as well\r\n                isSameType = true;\r\n              }\r\n            } else if (!this.isNumeric && device.actions !== null) {\r\n              // check for statefull actuators\r\n              for (const action of device.actions){\r\n                if (!action.valueable){\r\n                  isSameType = true;\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n            if (isSameType) {\r\n              this.devicesList.push({label: device.name, value: device.deviceId});\r\n            }\r\n          }\r\n\r\n          // if call on init, set selected device\r\n          if (isInit && this.currentWidget.deviceEntities !== undefined && this.currentWidget.deviceEntities[0].deviceId !== undefined\r\n            && this.currentWidget.deviceEntities[0].deviceId !== '') {\r\n            this.initSetDevice();\r\n          }\r\n\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        });\r\n  }\r\n\r\n  calculateAverage(list: SensorDataModel['Values'], totalTime): number {\r\n    let avg = 0;\r\n    let start: Date;\r\n    let end: Date;\r\n    let entityValue: number;\r\n    for (const value of list) {\r\n      if (list.indexOf(value) < (list.length - 1)){\r\n        start = new Date(value.DateTime);\r\n        end = new Date(list[list.indexOf(value) + 1].DateTime);\r\n        if (value.FloatValue !== null){\r\n          entityValue = value.FloatValue;\r\n        } else {\r\n          var vString = value.StringValue;\r\n          // delete Temperature unit, which is added in Openhab\r\n          vString = vString.replace(' °C', '');\r\n          entityValue = Number(vString);\r\n        }\r\n        avg = avg + ((end.getTime() - start.getTime()) / (totalTime * 3600000)) * entityValue;\r\n      }\r\n    }\r\n    return avg;\r\n  }\r\n\r\n  calculateMinimum(list: SensorDataModel['Values']): number {\r\n    let min: number;\r\n    if (list[0].FloatValue !== null){\r\n      min = list[0].FloatValue\r\n    } else {\r\n      var vString = list[0].StringValue;\r\n      // delete Temperature unit, which is added in Openhab\r\n      vString = vString.replace(' °C', '');\r\n      min = Number(vString);\r\n    }\r\n    for (const value of list) {\r\n      if (value.FloatValue !== null && value.FloatValue < min) {\r\n        min = value.FloatValue;\r\n      } else\r\n        var v2String = list[0].StringValue;\r\n        // delete Temperature unit, which is added in Openhab\r\n        v2String = v2String.replace(' °C', '');\r\n        if (value.StringValue !== null && Number(v2String) < min) {\r\n        min = Number(v2String);\r\n      }\r\n    }\r\n    return min;\r\n  }\r\n\r\n  calculateMaximum(list: SensorDataModel['Values']): number {\r\n    let max: number;\r\n    if (list[0].FloatValue !== null){\r\n      max = list[0].FloatValue\r\n    } else {\r\n      var vString = list[0].StringValue;\r\n      // delete Temperature unit, which is added in Openhab\r\n      vString = vString.replace(' °C', '');\r\n      max = Number(vString);\r\n    }\r\n    for (const value of list) {\r\n      if (value.FloatValue !== null && value.FloatValue > max) {\r\n        max = value.FloatValue;\r\n      } else\r\n        var v2String = list[0].StringValue;\r\n      // delete Temperature unit, which is added in Openhab\r\n      v2String = v2String.replace(' °C', '');\r\n      if (value.StringValue !== null && Number(v2String) > max) {\r\n        max = Number(v2String);\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  calculateStateDistribution(list: SensorDataModel['Values'], states, totalTime): void {\r\n  }\r\n\r\n  // Because Primeng is stupid and can only use string variables in radiobuttons, we have to set the boolean variables ourselves.\r\n  setIsMonoVis(value: string) {\r\n    this.isMonoVis = (value === 'true') ? true : false;\r\n    if (this.dropdownList.length > 1){\r\n      this.dropdownList = [this.dropdownList[0]];\r\n    }\r\n  }\r\n\r\n  setIsNumeric(value: string) {\r\n    if (value === 'true') {\r\n      this.isNumeric = true;\r\n    } else {\r\n      this.isNumeric = false;\r\n    }\r\n    // change dropdowns\r\n    this.devicesList = [];\r\n    this.multidevicesList = [];\r\n    this.fillDevicesList(false);\r\n  }\r\n}\r\n","module.exports = \".widgetDesign {\\r\\n  position: relative;\\r\\n  width: 12vw;\\r\\n  height: 18vh;\\r\\n  float: left;\\r\\n  margin: 2vh 2vw 0 0;\\r\\n  background-color: white;\\r\\n  border-radius: 25px;\\r\\n  box-shadow: 3px 3px 2px lightgrey;\\r\\n  transition: all 0.3s;\\r\\n  border-color: #668BCC;\\r\\n  border-style: solid;\\r\\n  border-width: 0 0 0 5px;\\r\\n  padding-left: 1vw;\\r\\n  overflow: hidden;\\r\\n  -o-object-fit: scale-down;\\r\\n     object-fit: scale-down;\\r\\n}\\r\\n\\r\\n.widgetDesign:hover {\\r\\n  background-color: #eeeeee;\\r\\n  overflow: visible;\\r\\n}\\r\\n\\r\\n.ui-widget-overlay\\r\\n{\\r\\n  z-index: 0;\\r\\n}\\r\\n\\r\\n.ui-dialog{\\r\\n  z-index: 20;\\r\\n}\\r\\n\\r\\n.nameChanger {\\r\\n  width: 5vw;\\r\\n}\\r\\n\\r\\n.settingsDialog {\\r\\n  width: 500px !important;\\r\\n  height: 600px !important;\\r\\n}\\r\\n\\r\\n.ui-tieredmenu{\\r\\n  left: -200px !important;\\r\\n}\\r\\n\\r\\n.interval-input{\\r\\n  width: 60px;\\r\\n}\\r\\n\\r\\n.widgetContainer {\\r\\n  padding: 0 1vw 1vh 2vw;\\r\\n}\\r\\n\\r\\n.settings-button {\\r\\n  transition: all 0.5s;\\r\\n  position: absolute;\\r\\n  right: 75px;\\r\\n  top: 5px;\\r\\n}\\r\\n\\r\\n.realTimeFont{\\r\\n  /*font-size: 40px;*/\\r\\n}\\r\\n\\r\\n.graph-canvas{\\r\\n  width: 100%;\\r\\n  height: 95% !important;\\r\\n}\\r\\n\\r\\n.graph-button {\\r\\n  position: absolute;\\r\\n  top: 135px;\\r\\n  right: 0;\\r\\n}\\r\\n\\r\\n.device-select {\\r\\n  transition: all 0.5s;\\r\\n  position: absolute;\\r\\n  top: 55px;\\r\\n}\\r\\n\\r\\nhr {\\r\\n  display: block;\\r\\n  height: 1px;\\r\\n  border: 0;\\r\\n  border-top: 1px solid #ccc;\\r\\n  margin: 1em 0;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<p-dialog header=\\\"Bubble Chart Settings\\\" [modal]=true appendTo=\\\"body\\\" [width]=\\\"700\\\"\\r\\n          [(visible)]=\\\"displaySettings\\\" [closable]=\\\"false\\\">\\r\\n  <div class=\\\"ui-g\\\">\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <h3>Input Data</h3>\\r\\n    </div>\\r\\n    <!--div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">Location: </div>\\r\\n      <p-dropdown appendTo=\\\"body\\\" [options]=\\\"locationsList\\\"\\r\\n                  [filter]=\\\"true\\\" [(ngModel)]=\\\"this.selectedLocation\\\"\\r\\n                  [style]=\\\"{'min-width':'200px'}\\\" (onChange)=\\\"setDeviceList(this.selectedLocation)\\\" placeholder=\\\"Select a distribution\\\" (onClick)=\\\"$event.stopPropagation();$event.preventDefault();\\\">\\r\\n      </p-dropdown>\\r\\n    </div-->\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">Time Period:</div>\\r\\n      <div class=\\\"ui-g-2 grid-elem\\\">from</div>\\r\\n      <p-calendar [(ngModel)]=\\\"selectedStart\\\" [showTime]=\\\"true\\\" [showIcon]=\\\"true\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"1970:2020\\\" appendTo=\\\"body\\\"></p-calendar>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\"></div>\\r\\n      <div class=\\\"ui-g-2 grid-elem\\\">to</div>\\r\\n      <p-calendar [(ngModel)]=\\\"selectedEnd\\\" [showTime]=\\\"true\\\" [showIcon]=\\\"true\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"1970:2020\\\" appendTo=\\\"body\\\"></p-calendar>\\r\\n    </div>\\r\\n    <p-tabMenu #menuItems [model]=\\\"bubbleProperties\\\" [activeItem]=\\\"activeProperty\\\" (click)=\\\"activateBubbleProperty()\\\"></p-tabMenu>\\r\\n    <div [ngSwitch]=\\\"activeProperty.label\\\">\\r\\n      <div *ngSwitchCase=\\\"'X axis'\\\">\\r\\n        <div class=\\\"ui-g\\\">\\r\\n          <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n            <div class=\\\"ui-g-4 grid-elem\\\">Label:</div>\\r\\n            <input pInputText class=\\\"gridster-item-content\\\" [(ngModel)]=\\\"this.selectedX.label\\\" placeholder=\\\"Select a name for the x axis\\\" style=\\\"width: 200px; padding-left: 0;\\\">\\r\\n          </div>\\r\\n          <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n            <div class=\\\"ui-g-4 grid-elem\\\">Sensor type:</div>\\r\\n            <p-dropdown appendTo=\\\"body\\\" [options]=\\\"deviceTypeList\\\"\\r\\n                        [(ngModel)]=\\\"this.selectedX.type\\\" [group]=\\\"true\\\"\\r\\n                        [style]=\\\"{'min-width':'200px'}\\\" placeholder=\\\"Select a device type\\\" (onClick)=\\\"$event.stopPropagation();$event.preventDefault();\\\">\\r\\n            </p-dropdown>          </div>\\r\\n          <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n            <div class=\\\"ui-g-4 grid-elem\\\">Calculation:</div>\\r\\n            <p-dropdown [autoWidth]=\\\"true\\\" [placeholder]=\\\"'Select a calculation type'\\\"\\r\\n                        [options]=\\\"calculationList\\\" [(ngModel)]=\\\"this.selectedX.calculation\\\"\\r\\n                        [style]=\\\"{'width':'200px'}\\\"  appendTo=\\\"body\\\">\\r\\n            </p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngSwitchCase=\\\"'Y axis'\\\">\\r\\n        <div class=\\\"ui-g\\\">\\r\\n          <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n            <div class=\\\"ui-g-4 grid-elem\\\">Label:</div>\\r\\n            <input pInputText class=\\\"gridster-item-content\\\" [(ngModel)]=\\\"this.selectedY.label\\\" placeholder=\\\"Select a name for the y axis\\\" style=\\\"width: 200px; padding-left: 0;\\\">\\r\\n          </div>\\r\\n          <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n            <div class=\\\"ui-g-4 grid-elem\\\">Sensor type:</div>\\r\\n            <p-dropdown appendTo=\\\"body\\\" [options]=\\\"deviceTypeList\\\"\\r\\n                        [(ngModel)]=\\\"this.selectedY.type\\\" [group]=\\\"true\\\"\\r\\n                        [style]=\\\"{'min-width':'200px'}\\\" placeholder=\\\"Select a device type\\\" (onClick)=\\\"$event.stopPropagation();$event.preventDefault();\\\">\\r\\n            </p-dropdown>\\r\\n          </div>\\r\\n          <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n            <div class=\\\"ui-g-4 grid-elem\\\">Calculation:</div>\\r\\n            <p-dropdown [autoWidth]=\\\"true\\\" [placeholder]=\\\"'Select a calculation type'\\\"\\r\\n                        [options]=\\\"calculationList\\\" [(ngModel)]=\\\"this.selectedY.calculation\\\"\\r\\n                        [style]=\\\"{'width':'200px'}\\\"  appendTo=\\\"body\\\">\\r\\n            </p-dropdown>\\r\\n            <div class=\\\"dropdown\\\"></div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngSwitchCase=\\\"'Bubble radius'\\\">\\r\\n        <div class=\\\"ui-g\\\">\\r\\n          <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n            <div class=\\\"ui-g-4 grid-elem\\\">Label:</div>\\r\\n            <input pInputText class=\\\"gridster-item-content\\\" [(ngModel)]=\\\"this.selectedR.label\\\" placeholder=\\\"Select a name for the radius\\\"  style=\\\"width: 200px; padding-left: 0;\\\">\\r\\n          </div>\\r\\n          <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n            <div class=\\\"ui-g-4 grid-elem\\\">Sensor type:</div>\\r\\n            <p-dropdown appendTo=\\\"body\\\" [options]=\\\"deviceTypeList\\\"\\r\\n                        [(ngModel)]=\\\"this.selectedR.type\\\" [group]=\\\"true\\\"\\r\\n                        [style]=\\\"{'min-width':'200px'}\\\" placeholder=\\\"Select a device type\\\" (onClick)=\\\"$event.stopPropagation();$event.preventDefault();\\\">\\r\\n            </p-dropdown>\\r\\n          </div>\\r\\n          <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n            <div class=\\\"ui-g-4 grid-elem\\\">Calculation:</div>\\r\\n            <p-dropdown [autoWidth]=\\\"true\\\" [placeholder]=\\\"'Select a calculation type'\\\"\\r\\n                        [options]=\\\"calculationList\\\" [(ngModel)]=\\\"this.selectedR.calculation\\\"\\r\\n                        [style]=\\\"{'width':'200px'}\\\"  appendTo=\\\"body\\\">\\r\\n            </p-dropdown>\\r\\n            <div class=\\\"dropdown\\\"></div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngSwitchDefault>...</div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"ui-g-12\\\" style=\\\"width:10px;\\\"></div>\\r\\n  </div>\\r\\n  <p-footer>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"fa-check\\\" (click)=\\\"applySettings();\\\" label=\\\"Apply\\\"></button>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"fa-close\\\" (click)=\\\"abortChanges()\\\" label=\\\"Cancel\\\"></button>\\r\\n  </p-footer>\\r\\n</p-dialog>\\r\\n<button pButton icon=\\\"fa fa-cog\\\" style=\\\"z-index: 6;\\\" class=\\\"settings-button transparentButton tbutton ui-button-secondary\\\"\\r\\n        (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" (click)=\\\"displaySettings=true;\\\"\\r\\n        [hidden]=\\\" !(loginStatus>1 && currentWidget.isDeveloped)\\\"></button>\\r\\n<!--*ngIf=\\\"myChart != undefined && myChart.data!= undefined && myChart.data.datasets != []\\\"-->\\r\\n<div  class=\\\"graph-canvas\\\">\\r\\n  <canvas #chart>{{myChart}}</canvas>\\r\\n</div>\\r\\n<div style=\\\"text-align: center;\\\">\\r\\n  <p-message *ngIf=\\\"isEmpty\\\" severity=\\\"info\\\" text=\\\"You selected device entities without historical data.\\\"></p-message>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","import {Component, EventEmitter, Input, OnInit, ViewChild, Output} from '@angular/core';\r\nimport {BaseChartDirective} from 'ng2-charts/ng2-charts';\r\nimport {DataService} from '../../../../../../../services/data.service';\r\nimport {Chart} from 'chart.js';\r\nimport {DeviceManagerService} from '../../../../../../../services/devicemanager.service';\r\nimport {VisualManagerService} from '../../../../../../../services/visualmanager.service';\r\nimport {Widget} from '../../../../../../../models/frontend/widget';\r\nimport {DatabaseService} from '../../../../../../../services/database.service';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/interval';\r\nimport {MenuItem} from 'primeng/api';\r\nimport {SelectItem} from 'primeng/api';\r\nimport {Project} from '../../../../../../../models/frontend/project';\r\nimport {Fieldvalue} from '../../../../../../../models/frontend/fieldvalue';\r\nimport {User} from '../../../../../../../models/frontend/user';\r\nimport {Device} from '../../../../../../../models/backend/device';\r\nimport {SensorDataModel} from '../../../../../../../models/backend/sensordatamodel';\r\nimport {BubbleChartWidget, IBubbleProperty} from \"../../../../../../../models/frontend/bubblechartwidget\";\r\nimport {BubbleChartDeviceEntity,  Calculation} from \"../../../../../../../models/frontend/bubbleChartDeviceEntity\";\r\nimport {IPolarChartDeviceEntity} from \"../../../../../../../models/frontend/polarareachartwidget\";\r\nimport {forkJoin} from \"rxjs/index\";\r\nimport { Router } from '@angular/router';\r\n\r\n/**\r\n * @author Janina Hüther\r\n * This component processes a {@link WidgetType#barChartVisualization} Widget. This type of widget is to display\r\n * values of an entity in a bubble chart. That means it requests data e.g. get data of device x from 02.08.2018 - 03.08.2018\r\n * from the backend. It uses the {@link BubbleChartWidget} model to represent a widget.\r\n */\r\n@Component({\r\n  selector: 'bubble-chart-visualization',\r\n  templateUrl: './bubble-chart-visualization.component.html',\r\n  styleUrls: ['./bubble-chart-visualization.component.css']\r\n})\r\nexport class BubbleChartVisualizationComponent implements OnInit {\r\n  @ViewChild('chart') private ctx;\r\n  @ViewChild('menuItems') menu: MenuItem[];\r\n  @Input() currentWidget: BubbleChartWidget;\r\n  @Output() resizeFont = new EventEmitter<HTMLElement>();\r\n\r\n  protected user: User;\r\n  protected project: Project;\r\n  protected loginStatus: number;\r\n\r\n  // non numerical data's type of calculation\r\n  protected calculationType: Calculation = Calculation.Avg;\r\n  protected isEmpty: boolean;\r\n\r\n  myChart: any;\r\n  protected devicesList: SelectItem[] = [];\r\n  protected sensorList: SelectItem[] = [];\r\n\r\n  protected calculationList: Array<SelectItem> = [{label: Calculation.Avg, value: Calculation.Avg},\r\n    {label: Calculation.Min, value: Calculation.Min}, {label: Calculation.Max, value: Calculation.Max}];\r\n  protected locationsList: Array<any>;\r\n  selectedLocation: string;\r\n  protected deviceTypeList : Array<any> = [];\r\n  selectedDeviceType: string;\r\n  public selectedX: IBubbleProperty;\r\n  public selectedY: IBubbleProperty;\r\n  public selectedR: IBubbleProperty;\r\n  public xLabel: string;\r\n  public yLabel: string;\r\n  public rLabel: string;\r\n\r\n  chartType: string;\r\n  displaySettings: boolean = false;\r\n  public chartLabels: Array<string>;\r\n  public chartData: [{ label: string, data: Array<number>, borderColor: string, backgroundColor: string, fill: boolean }];\r\n  public chartOptions: any;\r\n  public bubbleProperties: MenuItem[];\r\n  public activeProperty: MenuItem;\r\n\r\n  selectedStart: Date;\r\n  selectedEnd: Date;\r\n  currentPalette: String;\r\n\r\n  protected representations: Array<SelectItem> = [];\r\n  public dropdownList: Array<BubbleChartDeviceEntity> = [];\r\n\r\n  constructor(private dataService: DataService,\r\n              private databaseService: DatabaseService,\r\n              private devicemanager: DeviceManagerService,\r\n              private visualmanager: VisualManagerService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isEmpty = false;\r\n    this.devicesList = [];\r\n    this.sensorList = [];\r\n    this.deviceTypeList = [];\r\n\r\n    this.bubbleProperties = [\r\n      {label: 'X axis'},\r\n      {label: 'Y axis'},\r\n      {label: 'Bubble radius'}\r\n    ];\r\n   this.activeProperty = this.bubbleProperties[0];\r\n    this.chartType = 'bubble';\r\n    this.selectedX = {label:'x axis', type: '', calculation: Calculation.Avg};\r\n    this.selectedY = {label:'y axis',type: '', calculation: Calculation.Avg};\r\n    this.selectedR = {label:'bubble radius',type: '', calculation: Calculation.Avg};\r\n    this.dataService.projectData\r\n      .subscribe(value => {\r\n        this.project = value;\r\n      });\r\n    this.dataService.userData\r\n      .subscribe(value => {\r\n        this.user = value;\r\n      });\r\n    this.dataService.currentLoginStatus.subscribe(value => this.loginStatus = value);\r\n    if (this.currentWidget.startDate !== undefined && this.currentWidget.endDate !== undefined) {\r\n      this.selectedStart = new Date(this.currentWidget.startDate);\r\n      this.selectedEnd = new Date(this.currentWidget.endDate);\r\n    } else {\r\n      this.selectedStart = new Date(2019, 1, 5, 10, 55, 22, 0);\r\n      this.selectedEnd = new Date(2019, 1, 15, 10, 55, 22, 0);\r\n    }\r\n\r\n    //init devicetypelist\r\n    this.devicemanager.getAllSensorTypes(this.user.id, this.project.id).subscribe(result => {\r\n        let sensorItems = result.types.map(elem => {\r\n          return {label: elem.type, value: elem.type};\r\n        });\r\n        this.deviceTypeList = [{label: 'Types of sensors', value: 'sensorType', items: sensorItems}];\r\n        this.devicemanager.getAllActuatorTypes(this.user.id, this.project.id).subscribe(result2 => {\r\n            let actuatorItems = result2.map(elem => {\r\n              return {label: elem, value: elem};\r\n            });\r\n            let deviceTypelist2 = this.deviceTypeList.concat({label: 'Types of actuators', value: 'actuatorType', items: actuatorItems})\r\n            this.deviceTypeList = deviceTypelist2;\r\n          },\r\n          err => {\r\n            if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n              this.router.navigate(['unauthorized']); }\r\n            console.log(err);\r\n          });\r\n      },\r\n      err => {\r\n        if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n          this.router.navigate(['unauthorized']); }\r\n        console.log(err);\r\n      });\r\n\r\n\r\n\r\n    //init locationlist\r\n    this.devicemanager.getAllLocations(this.user.id, this.project.id)\r\n      .subscribe(locations => {\r\n          // go through all of the location-based list\r\n          for (const loc of locations) {\r\n            this.locationsList.push({label: loc.name, value: loc.name});\r\n          }\r\n          console.log(\"all locations: \", this.locationsList);\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        });\r\n    // init chart attributes and chart object\r\n    this.chartOptions = {\r\n      maintainAspectRatio: false,\r\n      responsive: true,\r\n      legend: {\r\n        display: true,\r\n        position: 'top'\r\n      },\r\n      scales: {\r\n        xAxes: [{\r\n          ticks: {\r\n            beginAtZero: true,\r\n            max: undefined\r\n          },\r\n          display: true,\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: 'x'\r\n          },\r\n          //time: {\r\n          //tooltipFormat: 'MM-DD-YYYY ha',\r\n          //unit: 'month'\r\n          //}\r\n        }],\r\n        yAxes: [{\r\n          ticks: {\r\n            beginAtZero: true,\r\n            max: undefined\r\n          },\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: 'y'\r\n          }\r\n        }]\r\n      },\r\n      onResize: function (chart, size) {\r\n        //chart.options.legend.display = size.width > 400;\r\n        //chart.options.legend.position = (size.width > size.height) ? 'right' : 'bottom';\r\n        //console.log();\r\n        //chart.update();\r\n      }\r\n    };\r\n    this.myChart = new Chart(this.ctx.nativeElement, {\r\n      type: this.chartType,\r\n      data: {\r\n        labels: [],\r\n        datasets: []\r\n      },\r\n      options: this.chartOptions\r\n    });\r\n  }\r\n\r\n  // generates a timestamp in ISO standard as defined for the backend\r\n  private generateIsoDateTime(date: Date): string {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() + 1;\r\n    const day = date.getDate();\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n    const seconds = date.getSeconds();\r\n\r\n    const yearString = year.toString();\r\n    let dayString = day.toString();\r\n    let monthString = month.toString();\r\n    let hoursString = hours.toString();\r\n    let minutesString = minutes.toString();\r\n    let secondsString = seconds.toString();\r\n\r\n    if (day < 10) {\r\n      dayString = '0' + dayString;\r\n    }\r\n    if (month < 10) {\r\n      monthString = '0' + monthString;\r\n    }\r\n    if (hours < 10) {\r\n      hoursString = '0' + hoursString;\r\n    }\r\n    if (minutes < 10) {\r\n      minutesString = '0' + minutesString;\r\n    }\r\n    if (seconds < 10) {\r\n      secondsString = '0' + secondsString;\r\n    }\r\n\r\n    return yearString + '-' + monthString + '-' + dayString + 'T' + hoursString + ':' + minutesString + ':' + secondsString;\r\n  }\r\n\r\n  showChart(chart): void {\r\n    // set chart options\r\n    chart.data.datasets = [];\r\n    chart.data.labels = [];\r\n    let statedata = {'deviceId': '', 'actionId': '', 'states': [{number: 0, description: '', value: 0}]};\r\n    //let color = [];\r\n    let cIndex = 0;\r\n    let observables: Observable<any>[] = [];\r\n    for (const elem of this.locationsList) {\r\n      observables.push(this.devicemanager.getDevicesByLocation(elem.value, this.user.id, this.project.id));\r\n    }\r\n    const observeable = forkJoin(observables);\r\n    observeable.subscribe(devices => {\r\n      // All observables in `observables` array have resolved and `dataArray` is an array of result of each observable\r\n      console.log(\"all devices from locations: \", devices);\r\n      for (const elem of devices) {\r\n        // sortiere alle devices nach locations ( ist gemacht in \"devices\"\r\n        // sortiere alle\r\n        if (elem.Values.length > 0) {\r\n          let valueCount = 0;\r\n          let dateStart: Date = new Date(elem.Values[0].DateTime);\r\n          let dateEnd: Date = new Date(elem.Values[elem.Values.length - 1].DateTime);\r\n          // we have to divide the total time by 3600000 to get hours instead of milliseconds\r\n          let timeTotal = (dateEnd.getTime() - dateStart.getTime()) / 3600000;\r\n          let value = 0;\r\n          switch (this.calculationType) {\r\n            case Calculation.Avg:\r\n              value = this.calculateAverage(elem.Values, timeTotal);\r\n              break;\r\n            case Calculation.Max:\r\n              value = this.calculateMaximum(elem.Values);\r\n              break;\r\n            case Calculation.Min:\r\n            default:\r\n              value = this.calculateMinimum(elem.Values);\r\n              break;\r\n          }\r\n\r\n          // add sensor data to the chartData.\r\n        //  chart.data.labels.push(this.deviceEntities[devices.indexOf(elem)].deviceId);\r\n          chart.data.datasets[0].data.push(value);\r\n          console.log('chartData: ', chart.data);\r\n        }\r\n      }\r\n      chart.update();\r\n      this.setChartColors(this.currentPalette);\r\n    },err => {\r\n      console.log(err);\r\n    });\r\n\r\n  }\r\n\r\n  activateBubbleProperty(): void{\r\n    this.activeProperty =this.menu['activeItem'];\r\n  }\r\n\r\n  // events\r\n  public chartClicked(e: any): void {\r\n    console.log(e);\r\n  }\r\n\r\n  public chartHovered(e: any): void {\r\n    console.log(e);\r\n  }\r\n\r\n\r\n  applySettings(): void {\r\n    this.isEmpty = false;\r\n    this.displaySettings = false;\r\n    //updating data from dropdowns in current Widget\r\n    this.currentWidget.deviceEntities = [];\r\n    // updating data from dropdowns in current Widget\r\n    this.currentWidget.chartType = this.chartType;\r\n    this.currentWidget.endDate = this.selectedEnd;\r\n    this.currentWidget.startDate = this.selectedStart;\r\n    this.currentWidget.x = this.selectedX;\r\n    this.currentWidget.y = this.selectedY;\r\n    this.currentWidget.r = this.selectedR;\r\n    this.saveInDatabase(this.currentWidget.deviceEntities, 'deviceEntities');\r\n    this.saveInDatabase(this.currentWidget.chartType, 'chartType');\r\n    this.saveInDatabase(this.currentWidget.startDate, 'startDate');\r\n    this.saveInDatabase(this.currentWidget.endDate, 'endDate');\r\n    this.saveInDatabase(this.currentWidget.x, 'x');\r\n    this.saveInDatabase(this.currentWidget.y, 'y');\r\n    this.saveInDatabase(this.currentWidget.r, 'r');\r\n    // get data with new settings\r\n    this.showChart(this.myChart);\r\n  }\r\n\r\n  abortChanges(): void {\r\n    this.displaySettings = false;\r\n    // this.chartType = this.currentWidget.chartType;\r\n    this.selectedEnd = this.currentWidget.endDate;\r\n    this.selectedStart = this.currentWidget.startDate;\r\n  // this.selectedLocation = this.currentWidget.locations[0];\r\n  }\r\n\r\n  /**\r\n   * This method saves the selected options into the database.\r\n   * @param value the value\r\n   * @param field the field where to store\r\n   */\r\n  protected saveInDatabase(value, field: string): void {\r\n    this.databaseService.updateDocument(this.databaseService.WIDGETSCOLLECTION, this.currentWidget.id, new Fieldvalue(field, value))\r\n      .subscribe(result => {\r\n      }, error => {\r\n        console.log('Error updating database entry ', error);\r\n      });\r\n  }\r\n\r\n  // to fill the devices List of the location with the selected parameter sensors\r\n  protected fillDevicesList(isInit: boolean) {\r\n    // reset list:\r\n    this.devicesList = [];\r\n    // get all devices\r\n    this.devicemanager.getAllDevices(this.user.id, this.project.id)\r\n      .subscribe(devices => {\r\n          for (const device of devices) {\r\n\r\n            let isSameType: boolean = false;\r\n            // only push device if we have stateless data\r\n\r\n            if (device.actions !== null) {\r\n              //check if it has stateless actuators\r\n              for (const action of device.actions) {\r\n                if (action.valueable) {\r\n                  isSameType = true;\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n            if (!isSameType && device.sensors !== null && device.sensors.length > 0) {\r\n              // if it has sensors, it has numerical values as well\r\n              isSameType = true;\r\n            }\r\n          }\r\n          // if call on init, set selected device\r\n          /*if (isInit && this.currentWidget.deviceEntities !== undefined && this.currentWidget.deviceEntities[0].deviceId !== undefined\r\n            && this.currentWidget.deviceEntities[0].deviceId !== '') {\r\n            this.initSetDevice();\r\n          }*/\r\n\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        });\r\n  }\r\n\r\n  calculateAverage(list: SensorDataModel['Values'], totalTime): number {\r\n    let avg = 0;\r\n    let start: Date;\r\n    let end: Date;\r\n    let entityValue: number;\r\n    for (const value of list) {\r\n      if (list.indexOf(value) < (list.length - 1)) {\r\n        start = new Date(value.DateTime);\r\n        end = new Date(list[list.indexOf(value) + 1].DateTime);\r\n        entityValue = (value.FloatValue !== null) ? value.FloatValue : Number(value.StringValue);\r\n        avg = avg + ((end.getTime() - start.getTime()) / (totalTime * 3600000)) * entityValue;\r\n      }\r\n    }\r\n    return avg;\r\n  }\r\n\r\n  calculateMinimum(list: SensorDataModel['Values']): number {\r\n    let min = (list[0].FloatValue !== null) ? list[0].FloatValue : Number(list[0].StringValue);\r\n    for (const value of list) {\r\n      if (value.FloatValue !== null && value.FloatValue < min) {\r\n        min = value.FloatValue;\r\n      } else if (value.StringValue !== null && Number(value.StringValue) < min) {\r\n        min = Number(value.StringValue);\r\n      }\r\n    }\r\n    return min;\r\n  }\r\n\r\n  calculateMaximum(list: SensorDataModel['Values']): number {\r\n    let max = (list[0].FloatValue !== null) ? list[0].FloatValue : Number(list[0].StringValue);\r\n    for (const value of list) {\r\n      if (value.FloatValue !== null && value.FloatValue > max) {\r\n        max = value.FloatValue;\r\n      } else if (value.StringValue !== null && Number(value.StringValue) > max) {\r\n        max = Number(value.StringValue);\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  // when changing the location, the devicelist has to be renewed\r\n  protected setDeviceList(location: string) {\r\n    // get all devices\r\n    this.devicemanager.getDevicesByLocation(location, this.user.id, this.project.id)\r\n      .subscribe(devices => {\r\n          let newDeviceEntities: IPolarChartDeviceEntity[] = [];\r\n          // go through all devices of the location-based list\r\n          for (const device of devices) {\r\n            // go through all devices of the type-based list and filter the ones with the selected location\r\n           /* for (const device2 of this.deviceEntities) {\r\n              if (device.deviceId === device2.deviceId) {\r\n                newDeviceEntities.push(device2);\r\n                break;\r\n              }\r\n            }*/\r\n          }\r\n         // this.deviceEntities = newDeviceEntities;\r\n          //console.log(\"endresult device list: \", this.deviceEntities);\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        });\r\n  }\r\n\r\n  // when changing the device type, the devicelist and the locationlist has to be cleared and renewed\r\n  protected setLocationList(entityType: string) {\r\n    // reset list:\r\n    //this.deviceEntities = [];\r\n    this.locationsList = [];\r\n    // get all devices\r\n    this.devicemanager.getDevicesByEntityType(entityType, this.user.id, this.project.id)\r\n      .subscribe(devices => {\r\n          let contains: boolean = false;\r\n          // go through all devices\r\n          for (const device of devices) {\r\n            // go through locationlist\r\n            for (const loc of this.locationsList){\r\n              // if location of this device is already in list, set boolean variable\r\n              if (loc['value'] === device.location) {\r\n                contains = true;\r\n                break;\r\n              }\r\n            }\r\n            // if this location is not yet in the list, add it to the list\r\n            if (contains === false){\r\n              this.locationsList.push({label: device.location, value: device.location});\r\n            }\r\n            // go through all sensors and actuators and add the sensors/actuators with the selected device type to the deviceEntities List\r\n            for (const sensor of device.sensors){\r\n             // if (sensor.deviceType === this.selectedDeviceType){\r\n               // this.deviceEntities.push({deviceId: device.deviceId, entityId: sensor.id});\r\n              //}\r\n            }\r\n            for (const action of device.actions){\r\n              //if (action.deviceType === this.selectedDeviceType){\r\n               // this.deviceEntities.push({deviceId: device.deviceId, entityId: action.id});\r\n              //}\r\n            }\r\n            //console.log(\"device List after choosing Type: \", this.deviceEntities);\r\n          }\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        });\r\n  }\r\n  setChartColors(palette): void {\r\n    console.log(\"palette: \", palette);\r\n    if (!palette) palette = this.currentPalette;\r\n    this.currentPalette = palette;\r\n\r\n    /*Gradients\r\n      The keys are percentage and the values are the color in a rgba format.\r\n      You can have as many \"color stops\" (%) as you like.\r\n      0% and 100% is not optional.*/\r\n    var gradient;\r\n    switch (palette) {\r\n      case 'cool':\r\n        gradient = {\r\n          0: [255, 255, 255, 1],\r\n          20: [220, 237, 200, 1],\r\n          45: [66, 179, 213, 1],\r\n          65: [26, 39, 62, 1],\r\n          100: [0, 0, 0, 1]\r\n        };\r\n        break;\r\n      case 'warm':\r\n        gradient = {\r\n          0: [255, 255, 255, 1],\r\n          20: [254, 235, 101, 1],\r\n          45: [228, 82, 27, 1],\r\n          65: [77, 52, 47, 1],\r\n          100: [0, 0, 0, 1]\r\n        };\r\n        break;\r\n      case 'neon':\r\n      default:\r\n        gradient = {\r\n          0: [255, 255, 255, 1],\r\n          20: [255, 236, 179, 1],\r\n          45: [232, 82, 133, 1],\r\n          65: [106, 27, 154, 1],\r\n          100: [0, 0, 0, 1]\r\n        };\r\n        break;\r\n    }\r\n\r\n    //Get a sorted array of the gradient keys\r\n    var gradientKeys = Object.keys(gradient);\r\n    gradientKeys.sort(function(a, b) {\r\n      return +a - +b;\r\n    });\r\n\r\n    //Find datasets and length\r\n    var chartType = this.currentWidget.chartType;\r\n    switch (chartType) {\r\n      case \"pie\":\r\n      case \"doughnut\":\r\n        var datasets = this.myChart.config.data.datasets[0];\r\n        var setsCount = datasets.data.length;\r\n        break;\r\n      case \"bar\":\r\n      case \"line\":\r\n        var datasets = this.myChart.config.data.datasets;\r\n        var setsCount = datasets.length;\r\n        break;\r\n    }\r\n\r\n    //Calculate colors\r\n    var chartColors = [];\r\n    for (var i = 0; i < setsCount; i++) {\r\n      var gradientIndex = (i + 1) * (100 / (setsCount + 1)); //Find where to get a color from the gradient\r\n      for (var j = 0; j < gradientKeys.length; j++) {\r\n        var gradientKey = gradientKeys[j];\r\n        if (gradientIndex === +gradientKey) { //Exact match with a gradient key - just get that color\r\n          chartColors[i] = 'rgba(' + gradient[gradientKey].toString() + ')';\r\n          break;\r\n        } else if (gradientIndex < +gradientKey) { //It's somewhere between this gradient key and the previous\r\n          var prevKey = gradientKeys[j - 1];\r\n          var gradientPartIndex = (gradientIndex - Number(prevKey)) / (Number(gradientKey) - Number(prevKey)); //Calculate where\r\n          var color = [];\r\n          for (var k = 0; k < 4; k++) { //Loop through Red, Green, Blue and Alpha and calculate the correct color and opacity\r\n            color[k] = gradient[prevKey][k] - ((gradient[prevKey][k] - gradient[gradientKey][k]) * gradientPartIndex);\r\n            if (k < 3) color[k] = Math.round(color[k]);\r\n          }\r\n          chartColors[i] = 'rgba(' + color.toString() + ')';\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    //Copy colors to the chart\r\n    for (i = 0; i < setsCount; i++) {\r\n      switch (chartType) {\r\n        case \"pie\":\r\n        case \"doughnut\":\r\n          if (!datasets.backgroundColor) datasets.backgroundColor = [];\r\n          datasets.backgroundColor[i] = chartColors[i];\r\n          if (!datasets.borderColor) datasets.borderColor = [];\r\n          datasets.borderColor[i] = \"rgba(255,255,255,1)\";\r\n          break;\r\n        case \"bar\":\r\n          datasets[i].backgroundColor = chartColors[i];\r\n          datasets[i].borderColor = \"rgba(255,255,255,0)\";\r\n          break;\r\n        case \"line\":\r\n          datasets[i].borderColor = chartColors[i];\r\n          datasets[i].backgroundColor = \"rgba(255,255,255,0)\";\r\n          break;\r\n      }\r\n    }\r\n\r\n    //Update the chart to show the new colors\r\n    this.myChart.update();\r\n  }\r\n\r\n}\r\n","module.exports = \".widgetDesign {\\r\\n  position: relative;\\r\\n  width: 12vw;\\r\\n  height: 18vh;\\r\\n  float: left;\\r\\n  margin: 2vh 2vw 0 0;\\r\\n  background-color: white;\\r\\n  border-radius: 25px;\\r\\n  box-shadow: 3px 3px 2px lightgrey;\\r\\n  transition: all 0.3s;\\r\\n  border-color: #668BCC;\\r\\n  border-style: solid;\\r\\n  border-width: 0 0 0 5px;\\r\\n  padding-left: 1vw;\\r\\n  overflow: hidden;\\r\\n  -o-object-fit: scale-down;\\r\\n     object-fit: scale-down;\\r\\n}\\r\\n\\r\\n.widgetDesign:hover {\\r\\n  background-color: #eeeeee;\\r\\n  overflow: visible;\\r\\n}\\r\\n\\r\\n.ui-widget-overlay\\r\\n{\\r\\n  z-index: 0;\\r\\n}\\r\\n\\r\\n.ui-dialog{\\r\\n  z-index: 20;\\r\\n}\\r\\n\\r\\n.nameChanger {\\r\\n  width: 5vw;\\r\\n}\\r\\n\\r\\n.settingsDialog {\\r\\n  width: 500px !important;\\r\\n  height: 600px !important;\\r\\n}\\r\\n\\r\\n.ui-tieredmenu{\\r\\n  left: -200px !important;\\r\\n}\\r\\n\\r\\n.interval-input{\\r\\n  width: 60px;\\r\\n}\\r\\n\\r\\n.widgetContainer {\\r\\n  padding: 0 1vw 1vh 2vw;\\r\\n}\\r\\n\\r\\n.settings-button {\\r\\n  transition: all 0.5s;\\r\\n  position: absolute;\\r\\n  right: 75px;\\r\\n  top: 5px;\\r\\n}\\r\\n\\r\\n.realTimeFont{\\r\\n  /*font-size: 40px;*/\\r\\n}\\r\\n\\r\\n.graph-canvas{\\r\\n   width: 100%;\\r\\n   height: 95% !important;\\r\\n }\\r\\n\\r\\n.graph-button {\\r\\n   position: absolute;\\r\\n   top: 135px;\\r\\n   right: 0;\\r\\n }\\r\\n\\r\\n.device-select {\\r\\n   transition: all 0.5s;\\r\\n   position: absolute;\\r\\n   top: 55px;\\r\\n }\\r\\n\\r\\nhr {\\r\\n  display: block;\\r\\n  height: 1px;\\r\\n  border: 0;\\r\\n  border-top: 1px solid #ccc;\\r\\n  margin: 1em 0;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n.label {\\r\\n  line-height: 25px;\\r\\n}\\r\\n\\r\\n.grid-elem {\\r\\n  padding: .2em;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<p-dialog header=\\\"Line Chart Settings\\\" [modal]=true appendTo=\\\"body\\\" [width]=\\\"700\\\"\\r\\n          [(visible)]=\\\"displaySettings\\\" [closable]=\\\"false\\\">\\r\\n  <div class=\\\"ui-g\\\">\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <h3>Preferences</h3>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">Number of sensors:</div>\\r\\n      <div class=\\\"ui-g-4\\\"><p-radioButton name=\\\"sensorNumber\\\" value=\\\"true\\\" label=\\\"one\\\" [(ngModel)]=\\\"sensorNumber\\\" inputId=\\\"one\\\" (click)=\\\"setIsMonoVis('true');\\\"></p-radioButton></div>\\r\\n      <div class=\\\"ui-g-4\\\"><p-radioButton name=\\\"sensorNumber\\\" value=\\\"false\\\" label=\\\"many\\\" [(ngModel)]=\\\"sensorNumber\\\" inputId=\\\"many\\\" (click)=\\\"setIsMonoVis('false');\\\"></p-radioButton></div>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">Type of data:</div>\\r\\n      <div class=\\\"ui-g-4\\\"><p-radioButton name=\\\"dataType\\\" value=\\\"true\\\" label=\\\"realtime\\\" [(ngModel)]=\\\"dataType\\\" inputId=\\\"realtime\\\" (click)=\\\"setIsRealtime('true');\\\"></p-radioButton></div>\\r\\n      <div class=\\\"ui-g-4\\\"><p-radioButton name=\\\"dataType\\\" value=\\\"false\\\" label=\\\"historical\\\" [(ngModel)]=\\\"dataType\\\" inputId=\\\"historical\\\" (click)=\\\"setIsRealtime('false');\\\"></p-radioButton></div>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n    <div class=\\\"ui-g-4 grid-elem\\\">Data dependency:</div>\\r\\n    <div class=\\\"ui-g-4\\\"><p-radioButton name=\\\"dataDependency\\\" value=\\\"true\\\" label=\\\"time-based\\\" [(ngModel)]=\\\"dataDependency\\\" inputId=\\\"time\\\" (click)=\\\"setIsTimeBased('true');\\\"></p-radioButton></div>\\r\\n    <div *ngIf=\\\"!isMonoVis\\\" class=\\\"ui-g-4\\\"><p-radioButton name=\\\"dataDependency\\\" value=\\\"false\\\" label=\\\"value-based\\\" [(ngModel)]=\\\"dataDependency\\\" inputId=\\\"value\\\" (click)=\\\"setIsTimeBased('false');\\\"></p-radioButton></div>\\r\\n  </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <h3>Representation</h3>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">X axes label:</div>\\r\\n      <input pInputText class=\\\"gridster-item-content\\\" [(ngModel)]=\\\"this.axesOptions.xLabel\\\"  style=\\\"width: 200px; padding-left: 0;\\\">\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">Y axes label:</div>\\r\\n      <input pInputText class=\\\"gridster-item-content\\\" [(ngModel)]=\\\"this.axesOptions.yLabel\\\"  style=\\\"width: 200px; padding-left: 0;\\\">\\r\\n    </div>\\r\\n    <div *ngIf=\\\"isRealtime === true; else historic\\\" class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">Number of samples:</div>\\r\\n      <input pInputText class=\\\"gridster-item-content\\\" [(ngModel)]=\\\"this.selectedNumberOfValues\\\"  style=\\\"width: 200px; padding-left: 0;\\\">\\r\\n    </div>\\r\\n    <ng-template #historic>\\r\\n      <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">Time Period:</div>\\r\\n      <div class=\\\"ui-g-2 grid-elem\\\">from</div>\\r\\n      <p-calendar [(ngModel)]=\\\"selectedStart\\\" [showTime]=\\\"true\\\" [showIcon]=\\\"true\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"1970:2020\\\" appendTo=\\\"body\\\"></p-calendar>\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n        <div class=\\\"ui-g-4 grid-elem\\\"></div>\\r\\n        <div class=\\\"ui-g-2 grid-elem\\\">to</div>\\r\\n        <p-calendar [(ngModel)]=\\\"selectedEnd\\\" [showTime]=\\\"true\\\" [showIcon]=\\\"true\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"1970:2020\\\" appendTo=\\\"body\\\"></p-calendar>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n    <div class=\\\"ui-g-12\\\" style=\\\"width:10px;\\\"></div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <h3>Input Data</h3>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"(!isMonoVis) && (!isTimeBased)\\\">\\r\\n      <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n        <div class=\\\"ui-g-4 grid-elem\\\">Line color:</div>\\r\\n        <p-colorPicker [(ngModel)]=\\\"xElem.deviceEntity.color\\\"></p-colorPicker>\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n        <div class=\\\"ui-g-4 grid-elem\\\">Line type:</div>\\r\\n        <p-dropdown [autoWidth]=\\\"true\\\" [placeholder]=\\\"'Select a line type'\\\"\\r\\n                    [options]=\\\"lineTypeList\\\" [(ngModel)]=\\\"xElem.deviceEntity.lineType\\\"\\r\\n                    [style]=\\\"{'width':'200px'}\\\"  appendTo=\\\"body\\\">\\r\\n        </p-dropdown>\\r\\n        <div class=\\\"dropdown\\\"></div>\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n        <div class=\\\"ui-g-4 grid-elem\\\"></div>\\r\\n        <p-checkbox [(ngModel)]=\\\"xElem.deviceEntity.fillArea\\\" binary=\\\"true\\\"></p-checkbox>fill area under line\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n        <div class=\\\"ui-g-4 grid-elem\\\"></div>\\r\\n        <p-checkbox [(ngModel)]=\\\"xElem.deviceEntity.showLine\\\" binary=\\\"true\\\"></p-checkbox>connect data points with a line\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n        <h4 style=\\\"margin:0;\\\">X Axis</h4>\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n        Device:\\r\\n        <p-dropdown appendTo=\\\"body\\\" [options]=\\\"devicesList\\\" (onChange)=\\\"setSensorDropdown(xElem.deviceEntity.deviceId)\\\"\\r\\n                    [filter]=\\\"true\\\" [(ngModel)]=\\\"xElem.deviceEntity.deviceId\\\"\\r\\n                    [style]=\\\"{'width':'200px'}\\\" placeholder=\\\"Select a device\\\">\\r\\n        </p-dropdown>\\r\\n\\r\\n        Sensor:\\r\\n        <p-dropdown appendTo=\\\"body\\\" [options]=\\\"xElem.sensorList\\\" [filter]=\\\"true\\\" [(ngModel)]=\\\"xElem.deviceEntity.entityId\\\"\\r\\n                    [style]=\\\"{'width':'200px'}\\\" placeholder=\\\"Select a sensor\\\">\\r\\n        </p-dropdown>\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n        <h4 style=\\\"margin:0;\\\">Y Axis</h4>\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n        Device:\\r\\n        <p-dropdown appendTo=\\\"body\\\" [options]=\\\"devicesList\\\" (onChange)=\\\"setSensorDropdown(yElem.deviceEntity.deviceId)\\\"\\r\\n                    [filter]=\\\"true\\\" [(ngModel)]=\\\"yElem.deviceEntity.deviceId\\\"\\r\\n                    [style]=\\\"{'width':'200px'}\\\" placeholder=\\\"Select a device\\\">\\r\\n        </p-dropdown>\\r\\n\\r\\n        Sensor:\\r\\n        <p-dropdown appendTo=\\\"body\\\" [options]=\\\"yElem.sensorList\\\" [filter]=\\\"true\\\" [(ngModel)]=\\\"yElem.deviceEntity.entityId\\\"\\r\\n                    [style]=\\\"{'width':'200px'}\\\" placeholder=\\\"Select a sensor\\\">\\r\\n        </p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <p-accordion *ngIf=\\\"isMonoVis || isTimeBased\\\" [multiple]=\\\"true\\\">\\r\\n      <div *ngFor=\\\"let group of dropdownList\\\" class=\\\"ui-g-12 grid-elem\\\">\\r\\n        <p-accordionTab  style=\\\"align-items: center; overflow: auto; width: 100%;\\\">\\r\\n          <p-header>\\r\\n            Device:\\r\\n            <p-dropdown appendTo=\\\"body\\\" [options]=\\\"devicesList\\\" (onChange)=\\\"setSensorDropdown(group.deviceEntity.deviceId)\\\"\\r\\n                        [filter]=\\\"true\\\" [(ngModel)]=\\\"group.deviceEntity.deviceId\\\"\\r\\n                        [style]=\\\"{'width':'200px'}\\\" placeholder=\\\"Select a device\\\" (onClick)=\\\"$event.stopPropagation();$event.preventDefault();\\\">\\r\\n            </p-dropdown>\\r\\n\\r\\n            Sensor:\\r\\n            <p-dropdown appendTo=\\\"body\\\" [options]=\\\"group.sensorList\\\" [filter]=\\\"true\\\" [(ngModel)]=\\\"group.deviceEntity.entityId\\\"\\r\\n                        [style]=\\\"{'width':'200px'}\\\" placeholder=\\\"Select a sensor\\\" (onClick)=\\\"$event.stopPropagation();$event.preventDefault();\\\">\\r\\n            </p-dropdown>\\r\\n\\r\\n            <button *ngIf=\\\"!isMonoVis\\\" style = \\\"margin-left: 10px;\\\" type=\\\"button\\\" pButton icon=\\\"fa fa-minus\\\" (click)=\\\"$event.stopPropagation();$event.preventDefault();deleteDropdowns(group.deviceEntity);\\\"></button>\\r\\n\\r\\n          </p-header>\\r\\n          <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n            <div class=\\\"ui-g-4 grid-elem\\\">Data label:</div>\\r\\n            <input pInputText class=\\\"gridster-item-content\\\" [(ngModel)]=\\\"group.deviceEntity.label\\\"  style=\\\"width: 200px; padding-left: 0;\\\">\\r\\n          </div>\\r\\n          <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n            <div class=\\\"ui-g-4 grid-elem\\\">Data unit:</div>\\r\\n            <input pInputText class=\\\"gridster-item-content\\\" [(ngModel)]=\\\"group.deviceEntity.unit\\\"  style=\\\"width: 200px; padding-left: 0;\\\">\\r\\n          </div>\\r\\n          <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n            <div class=\\\"ui-g-4 grid-elem\\\">Line color:</div>\\r\\n            <p-colorPicker [(ngModel)]=\\\"group.deviceEntity.color\\\"></p-colorPicker>\\r\\n          </div>\\r\\n          <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n            <div class=\\\"ui-g-4 grid-elem\\\">Line type:</div>\\r\\n            <p-dropdown [autoWidth]=\\\"true\\\" [placeholder]=\\\"'Select a line type'\\\"\\r\\n                        [options]=\\\"lineTypeList\\\" [(ngModel)]=\\\"group.deviceEntity.lineType\\\"\\r\\n                        [style]=\\\"{'width':'200px'}\\\"  appendTo=\\\"body\\\">\\r\\n            </p-dropdown>\\r\\n            <div class=\\\"dropdown\\\"></div>\\r\\n          </div>\\r\\n          <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n            <div class=\\\"ui-g-4 grid-elem\\\"></div>\\r\\n            <p-checkbox [(ngModel)]=\\\"group.deviceEntity.fillArea\\\" binary=\\\"true\\\"></p-checkbox>fill area under line\\r\\n          </div>\\r\\n          <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n            <div class=\\\"ui-g-4 grid-elem\\\"></div>\\r\\n            <p-checkbox [(ngModel)]=\\\"group.deviceEntity.showLine\\\" binary=\\\"true\\\"></p-checkbox>connect data points with a line\\r\\n          </div>\\r\\n        </p-accordionTab>\\r\\n      </div>\\r\\n    </p-accordion>\\r\\n\\r\\n    <div class=\\\"ui-g-12\\\" *ngIf=\\\"!isMonoVis && isTimeBased\\\">\\r\\n      <button type=\\\"button\\\" pButton icon=\\\"fa fa-plus\\\" (click)=\\\"addNewDropdowns()\\\"></button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <p-footer>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"fa-check\\\" (click)=\\\"applySettings();\\\" label=\\\"Apply\\\"></button>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"fa-close\\\" (click)=\\\"abortChanges()\\\" label=\\\"Cancel\\\"></button>\\r\\n  </p-footer>\\r\\n</p-dialog>\\r\\n<button pButton icon=\\\"fa fa-cog\\\" style=\\\"z-index: 6;\\\" class=\\\"settings-button transparentButton tbutton ui-button-secondary\\\"\\r\\n        (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" (click)=\\\"displaySettings=true;isAllowed=false;\\\"\\r\\n        [hidden]=\\\" !(loginStatus>1 && currentWidget.isDeveloped)\\\"></button>\\r\\n<!--*ngIf=\\\"myChart != undefined && myChart.data!= undefined && myChart.data.datasets != []\\\"-->\\r\\n<div  class=\\\"graph-canvas\\\">\\r\\n  <canvas #chart>{{myChart}}</canvas>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { DataService } from '../../../../../../../services/data.service';\r\nimport { DeviceManagerService } from '../../../../../../../services/devicemanager.service';\r\nimport { VisualManagerService } from '../../../../../../../services/visualmanager.service';\r\nimport { DatabaseService } from '../../../../../../../services/database.service';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/interval';\r\nimport { MenuItem, SelectItem } from 'primeng/api';\r\nimport { Chart} from 'chart.js';\r\nimport { Project } from '../../../../../../../models/frontend/project';\r\nimport { Device } from '../../../../../../../models/backend/device';\r\nimport { SensorDataModel } from '../../../../../../../models/backend/sensordatamodel';\r\nimport { LineChartWidget } from '../../../../../../../models/frontend/linechartwidget';\r\nimport { Fieldvalue } from '../../../../../../../models/frontend/fieldvalue';\r\nimport { User } from '../../../../../../../models/frontend/user';\r\nimport { ChartDeviceEntity } from '../../../../../../../models/frontend/chartDeviceEntity';\r\nimport { ɵplatformCoreDynamicTesting } from '@angular/platform-browser-dynamic/testing';\r\nimport {AxesOptions} from \"../../../../../../../models/frontend/linechartwidget\";\r\n/**\r\n * @author Janina Hüther, Chinaedu Onwukwe\r\n * This component processes a {@link WidgetType#realtimeChartVisualization} Widget. This type of widget is to display\r\n * realtime values of an entity in a chart. That means it requests data e.g. get live data of device x\r\n * from the backend. It uses the {@link RealTimeChartWidget} model to represent a widget.\r\n */\r\n@Component({\r\n  selector: 'chart-visualization',\r\n  templateUrl: './line-chart-visualization.component.html',\r\n  styleUrls: ['./line-chart-visualization.component.css']\r\n})\r\nexport class LineChartVisualizationComponent implements OnInit {\r\n  @Input() currentWidget: LineChartWidget;\r\n  @ViewChild('chart') private ctx;\r\n  @Output() readonly resizeFont = new EventEmitter<HTMLElement>();\r\n\r\n  protected user: User;\r\n  protected project: Project;\r\n  protected loginStatus: number;\r\n  protected sensorNumber: string;\r\n  protected dataType: string;\r\n  protected dataDependency: string;\r\n  protected isRealtime: boolean;\r\n  protected isMonoVis: boolean;\r\n  protected isTimeBased: boolean;\r\n\r\n  myChart: any;\r\n  protected devicesList: Array<SelectItem> = [];\r\n  protected sensorList: Array<SelectItem> = [];\r\n  protected lineTypeList: Array<SelectItem> = [{label: 'solid', value: 'solid'},{label: 'dotted', value: 'dotted'}];\r\n  chartType: string;\r\n  selectedNumberOfValues: number;\r\n\r\n  axesOptions: AxesOptions = {xLabel: '', yLabel: '', xLabelVisible: true, yLabelVisible: true};\r\n\r\n  displaySettings = false;\r\n  selectedStart: Date;\r\n  selectedEnd: Date;\r\n  duration: string = 'P5D';\r\n  timeFormat = \"DD/MM/YYYY HH:mm:ss\";\r\n\r\n  public chartLabels: Array<string>;\r\n  public chartData: [{ label: string, data: Array<number>, borderColor: string, fill: boolean, showLine: boolean }];\r\n  public chartOptions: any;\r\n\r\n  protected representations: Array<SelectItem> = [];\r\n  public dropdownList = [{deviceEntity: {deviceId: '', entityId: '', lineType: 'solid', fillArea: true, showLine: true, color: '#1976D2', label: '', unit: '', axis: ''}, sensorList: []}];\r\n  public xElem = {deviceEntity: {deviceId: '', entityId: '', lineType: '', fillArea: true, showLine: true, color: '#1976D2', label: '', unit: '', axis: 'x'}, sensorList: []};\r\n  public yElem = {deviceEntity: {deviceId: '', entityId: '', lineType: '', fillArea: true, showLine: true, color: '#1976D2', label: '', unit: '', axis: 'y'}, sensorList: []};\r\n  constructor(private dataService: DataService,\r\n              private databaseService: DatabaseService,\r\n              private devicemanager: DeviceManagerService,\r\n              private visualmanager: VisualManagerService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.devicesList = [];\r\n    this.sensorList = [];\r\n    this.dataService.projectData\r\n      .subscribe(value => {\r\n        this.project = value;\r\n      });\r\n\r\n    this.dataService.userData\r\n      .subscribe(value => {\r\n        this.user = value;\r\n      });\r\n    this.dataService.currentLoginStatus.subscribe(value => this.loginStatus = value);\r\n    this.initDeviceDropdown();\r\n    this.representations = [\r\n      {label: 'Linegraph', value: 'line'},\r\n      {label: 'Doughnut', value: 'doughnut'},\r\n      {label: 'Barchart', value: 'bar'}\r\n    ];\r\n\r\n    if (this.currentWidget.axesOptions !== undefined) {\r\n      this.axesOptions = this.currentWidget.axesOptions;\r\n    }\r\n    // init chart attributes and chart object\r\n    this.chartOptions = {\r\n      maintainAspectRatio: false,\r\n      responsive: true,\r\n      legend: {\r\n        display: true,\r\n        position: 'top'\r\n      },\r\n      scales: {\r\n        xAxes: [{\r\n          display: true,\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: ''\r\n          },\r\n        }],\r\n        yAxes: [{\r\n          ticks: {\r\n            beginAtZero: true,\r\n\r\n          },\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: ''\r\n          }\r\n        }]\r\n      },\r\n      onResize: function (chart, size) {\r\n        //chart.options.legend.display = size.width > 400;\r\n        //chart.options.legend.position = (size.width > size.height) ? 'right' : 'bottom';\r\n        //console.log();\r\n        //chart.update();\r\n      }\r\n    };\r\n    this.myChart = new Chart(this.ctx.nativeElement, {\r\n      type: \"line\",\r\n      data: {\r\n        labels: [],\r\n        datasets: []\r\n      },\r\n      options: this.chartOptions\r\n    });\r\n\r\n    // init isTimebased, isRealtime and isMonoVIS and their string variables\r\n    this.initRepresentationVariables();\r\n\r\n    // check if chartType was set before\r\n    this.myChart.type = (this.isTimeBased)? \"line\" : \"scatter\";\r\n\r\n    // check if number of values was set before\r\n    if (this.isRealtime && this.currentWidget.numberOfValues !== undefined) {\r\n      this.selectedNumberOfValues = this.currentWidget.numberOfValues;\r\n    } else if ((!this.isRealtime) && this.currentWidget.startDate !== undefined && this.currentWidget.endDate !== undefined) {\r\n      this.selectedStart = new Date(this.currentWidget.startDate);\r\n      this.selectedEnd = new Date (this.currentWidget.endDate);\r\n      console.log(this.selectedStart);\r\n    } else if (!this.isRealtime){\r\n      this.selectedStart = new Date(2019, 0, 15, 10, 55, 22, 0);\r\n      this.selectedEnd = new Date (this.generateIsoDateTime(this.selectedStart));\r\n    }\r\n\r\n    // if new data is available, the chart gets updated\r\n    this.dataService.refreshChartNow\r\n      .subscribe(result => {\r\n        if (this.isRealtime){\r\n          let isChanged = false;\r\n          if (this.isTimeBased){\r\n            if (this.dropdownList[0].deviceEntity.deviceId !== '' && this.myChart !== undefined && this.myChart.data !== undefined && this.myChart.data.datasets !== undefined\r\n              && this.myChart.data.datasets[0] !== undefined) {\r\n\r\n              // go through all selected (visualized) Devices\r\n              for (const selected of this.dropdownList) {\r\n                if (selected.deviceEntity.deviceId === result.deviceId &&\r\n                  selected.deviceEntity.entityId === result.entityId) {\r\n                  isChanged = true;\r\n                  // set new values in data\r\n                  this.addData(this.myChart, selected.deviceEntity.label + \" in \" + selected.deviceEntity.unit, result.label, result.value);\r\n                  // if there are more values than we want to have\r\n                  console.log(this.myChart.data.datasets[0].data);\r\n                  while (this.myChart.data.datasets[0].data.length > this.selectedNumberOfValues) {\r\n                    // delete the oldest ones and the labels as well\r\n                    this.removeData(this.myChart);\r\n                  }\r\n                }\r\n              }\r\n              console.log(\"chartData REFRESH NOW: \", this.myChart.data.datasets);\r\n            }\r\n          } else if (this.xElem.deviceEntity.deviceId !== '' && this.yElem.deviceEntity.deviceId !== '') {\r\n            // value-value based\r\n            // if change in xElem:\r\n            if (this.xElem.deviceEntity.deviceId === result.deviceId &&\r\n              this.xElem.deviceEntity.entityId === result.entityId) {\r\n              isChanged = true;\r\n              // last yValue:\r\n              let lastY = this.myChart.data.datasets[0].data[this.myChart.data.datasets[0].data.length - 1].y;\r\n              // set new values in data\r\n              this.myChart.data.datasets[0].data.push({x: result.value, y: lastY});\r\n              this.myChart.data.labels.push(result.value);\r\n            } else if (this.yElem.deviceEntity.deviceId === result.deviceId &&\r\n              this.yElem.deviceEntity.entityId === result.entityId){\r\n              // if change in xElem:\r\n              isChanged = true;\r\n              // last yValue:\r\n              let lastX = this.myChart.data.datasets[0].data[this.myChart.data.datasets[0].data.length - 1].x;\r\n              // set new values in data\r\n              this.myChart.data.datasets[0].data.push({x: lastX, y: result.value});\r\n              this.myChart.data.labels.push(lastX);\r\n            }\r\n\r\n            // if there are more values than we want to have\r\n            console.log(\"dataaa: \", this.myChart.data.datasets[0].data);\r\n            while (this.myChart.data.datasets[0].data.length > this.selectedNumberOfValues) {\r\n              // delete the oldest ones and the labels as well\r\n              this.removeData(this.myChart);\r\n            }\r\n            console.log(\"chartData REFRESHNOW: \", this.myChart.data.datasets);\r\n          }\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  private generateIsoDateTime(date: Date): string {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() + 1;\r\n    const day = date.getDate();\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n    const seconds = date.getSeconds();\r\n\r\n    const yearString = year.toString();\r\n    let dayString = day.toString();\r\n    let monthString = month.toString();\r\n    let hoursString = hours.toString();\r\n    let minutesString = minutes.toString();\r\n    let secondsString = seconds.toString();\r\n\r\n    if (day < 10) {\r\n      dayString = '0' + dayString;\r\n    }\r\n    if (month < 10) {\r\n      monthString = '0' + monthString;\r\n    }\r\n    if (hours < 10) {\r\n      hoursString = '0' + hoursString;\r\n    }\r\n    if (minutes < 10) {\r\n      minutesString = '0' + minutesString;\r\n    }\r\n    if (seconds < 10) {\r\n      secondsString = '0' + secondsString;\r\n    }\r\n\r\n    return yearString + '-' + monthString + '-' + dayString + 'T' + hoursString + ':' + minutesString + ':' + secondsString;\r\n  }\r\n\r\n\r\n  private initDeviceDropdown(): void {\r\n\r\n    this.devicesList = [];\r\n    this.devicemanager.getAllDevices(this.user.id, this.project.id)\r\n      .subscribe(data => {\r\n        for (const device of data) {\r\n          this.devicesList.push({label: device.name, value: device.deviceId});\r\n        }\r\n        if (this.currentWidget.deviceEntities[0].deviceId !== undefined && this.currentWidget.deviceEntities[0].deviceId !== '') {\r\n          this.initSetDevice();\r\n        }\r\n\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * This method fills the device dropdown with all devices from the backend. Therefore it describes from the devicemanager service\r\n   */\r\n  private refreshDeviceDropdown(): void {\r\n    this.devicesList = [];\r\n    this.devicemanager.getAllDevices(this.user.id, this.project.id)\r\n      .subscribe(data => {\r\n        for (const device of data) {\r\n          this.devicesList.push({label: device.name, value: device.deviceId});\r\n        }\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  protected initSetDevice(): void {\r\n    this.dropdownList = [];\r\n    // create a list with all init selected devices\r\n    const selectedDevices: Array<String> = [];\r\n    let isIncluded = false;\r\n    for (const widgetElem of this.currentWidget.deviceEntities) {\r\n      // check if device is in list\r\n      for (const selectedElem of selectedDevices) {\r\n        if (selectedElem === widgetElem.deviceId) {\r\n          isIncluded = true;\r\n          break;\r\n        }\r\n      }\r\n      if (!isIncluded) {\r\n        selectedDevices.push(widgetElem.deviceId);\r\n      }\r\n    }\r\n    // fill lists for dropdowns\r\n    const numberOfSavedEntities = this.currentWidget.deviceEntities.length;\r\n    // go over all selected devices\r\n    for (const widgetElem of selectedDevices) {\r\n      // go over all existing devices\r\n      for (const deviceElem of this.devicesList) {\r\n        if (deviceElem.value === widgetElem) {\r\n          // here we have the right device id\r\n          // get list of all entities of the device\r\n          const sensorList = [];\r\n          this.devicemanager.getDeviceById(deviceElem.value, this.user.id, this.project.id)\r\n            .subscribe((device: Device) => {\r\n                if (device.sensors !== null) {\r\n                  for (const sensor of device.sensors) {\r\n                    sensorList.push({label: sensor.name, value: sensor.id});\r\n                  }\r\n                }\r\n                if (device.actions !== null) {\r\n                  for (const action of device.actions) {\r\n                    sensorList.push({label: action.name, value: action.id});\r\n                  }\r\n                }\r\n                // looking for the right entitiy id\r\n                for (const sensorElem of sensorList) {\r\n                  for (const elem of this.currentWidget.deviceEntities) {\r\n                    if (sensorElem.value === elem.entityId) {\r\n                      // here we have the right entity id\r\n                      // set selected device, list and sensor in dropdownlist\r\n                      this.dropdownList.push({\r\n                        deviceEntity: {deviceId: deviceElem.value, entityId: sensorElem.value, lineType: elem.lineType, fillArea: elem.fillArea,\r\n                          showLine: elem.showLine, color: elem.color, label: elem.label, unit: elem.unit, axis: elem.axis},\r\n                        sensorList: sensorList});\r\n                      if (!this.currentWidget.isMonoVis && !this.isTimeBased){\r\n                        if (elem.axis === \"x\"){\r\n                          this.xElem = {deviceEntity: {deviceId: deviceElem.value, entityId: sensorElem.value,\r\n                              lineType: elem.lineType, fillArea: elem.fillArea, showLine: elem.showLine, color: elem.color, label: elem.label, unit: elem.unit, axis: elem.axis},\r\n                            sensorList: sensorList};\r\n                        } else if (elem.axis ===\"y\"){\r\n                          this.yElem = {deviceEntity: {deviceId: deviceElem.value, entityId: sensorElem.value,\r\n                              lineType: elem.lineType, fillArea: elem.fillArea, showLine: elem.showLine, color: elem.color, label: elem.label, unit: elem.unit, axis: elem.axis},\r\n                            sensorList: sensorList};\r\n                        }\r\n                      }\r\n                      break;\r\n                    }\r\n                  }\r\n                }\r\n                // check dropdownlist for dummydata\r\n                for (const data of this.dropdownList) {\r\n                  if (data['deviceId'] === '') {\r\n                    console.log('Dummy');\r\n                  }\r\n                }\r\n              //create and fill chartData from selected sensors if all data is in dropdownList (last finished request)\r\n              if (this.dropdownList.length === numberOfSavedEntities) {\r\n                if (this.isRealtime){\r\n                  console.log(\"initRTData\");\r\n                  this.initRealtimeData(this.myChart);\r\n                } else {\r\n                  console.log(\"showChart\");\r\n                  this.showChart(this.myChart);\r\n                }\r\n\r\n              }\r\n\r\n              },\r\n              error => {\r\n                console.log('Error requesting devices from backend ', error);\r\n              });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * This method pulls the realtime data from the backend once to get the first values for the chart\r\n   * when widget is starting or input parameter are changing\r\n   */\r\n  initRealtimeData(chart): void {\r\n    // set chart options\r\n    console.log(\"initRT\");\r\n    chart.options.scales.xAxes[0].scaleLabel.labelString = this.axesOptions.xLabel;\r\n    chart.options.scales.yAxes[0].scaleLabel.labelString = this.axesOptions.yLabel;\r\n    chart.options.scales.xAxes[0].scaleLabel.display = this.axesOptions.xLabelVisible;\r\n    chart.options.scales.yAxes[0].scaleLabel.display = this.axesOptions.yLabelVisible;\r\n    chart.labels = [];\r\n    chart.data.datasets = [];\r\n    const start: Date = new Date();\r\n    let cIndex = 0;\r\n    if(this.isTimeBased){\r\n      // go through all selected sensors\r\n      console.log(\"drodpownlist: \", this.dropdownList);\r\n      for (const selected of this.dropdownList) {\r\n        // set saved sensor settings\r\n        const ctxData = {label: selected.deviceEntity.label + ' in ' + selected.deviceEntity.unit,\r\n          data: [], borderColor: selected.deviceEntity.color, backgroundColor: selected.deviceEntity.color,\r\n          borderDash: (selected.deviceEntity.lineType === 'solid')? []:[5,5], fill: selected.deviceEntity.fillArea, showLine: selected.deviceEntity.showLine};\r\n        // get newest data value from the sensor\r\n          this.visualmanager.getNowData(selected.deviceEntity.deviceId, selected.deviceEntity.entityId, this.user.id, this.project.id)\r\n            .subscribe((sensorDataModel: SensorDataModel) => {\r\n                const value = sensorDataModel.Values[0];\r\n                console.log(\"value: \", value);\r\n                // fill sensor data field with one value\r\n                if(value.FloatValue != null) {\r\n                  ctxData.data.push({x: start, y: value.FloatValue});\r\n                } else if(value.StringValue != null) {\r\n                  var yString = value.StringValue;\r\n                  // delete Temperature unit, which is added in Openhab\r\n                  yString = yString.replace(' °C', '');\r\n                  ctxData.data.push({x: start, y:Number(yString)});\r\n                }\r\n                // add sensor data to the chartData.\r\n                chart.data.datasets.push(ctxData);\r\n                // not needed anymore:\r\n                /*if (chart.data.datasets[0]['label'] === '') {\r\n                  chart.data.dataset.shift();\r\n                }*/\r\n                chart.update();\r\n                console.log(\"chartINIT Data: \", chart.data.datasets);\r\n              },\r\n              err => {\r\n                console.log('Error requesting data from backend: ', err);\r\n              });\r\n\r\n      }\r\n    } else {\r\n      // value: value based\r\n      const ctxData = {label: this.xElem.deviceEntity.label + ' in ' + this.xElem.deviceEntity.unit,\r\n        data: [], borderColor: this.xElem.deviceEntity.color, backgroundColor: this.xElem.deviceEntity.color, fill: this.xElem.deviceEntity.fillArea, showLine: this.xElem.deviceEntity.showLine,\r\n        borderDash: (this.xElem.deviceEntity.lineType === 'solid')? []:[5,5]};\r\n      let xData = [{DateTime: \"\", value: undefined}];\r\n      // fill data field\r\n      this.visualmanager.getNowData(this.xElem.deviceEntity.deviceId, this.xElem.deviceEntity.entityId, this.user.id, this.project.id)\r\n        .subscribe((sensorDataModel: SensorDataModel) => {\r\n            let xValue: number;\r\n            const value = sensorDataModel.Values[0];\r\n            if (value.FloatValue != null) {\r\n              xValue = value.FloatValue;\r\n            } else if (value.StringValue != null) {\r\n              var xString = value.StringValue;\r\n              // delete Temperature unit, which is added in Openhab\r\n              xString = xString.replace(' °C', '');\r\n              xValue = Number(xString);\r\n            }\r\n            xData.shift();\r\n            // now get yElem Data\r\n            this.visualmanager.getNowData(this.yElem.deviceEntity.deviceId, this.yElem.deviceEntity.entityId, this.user.id, this.project.id)\r\n              .subscribe((sensorDataModelY: SensorDataModel) => {\r\n                const yValue = sensorDataModelY.Values[0];\r\n                if (yValue.FloatValue != null){\r\n                ctxData.data.push({x: xValue, y: yValue.FloatValue});\r\n                } else if (yValue.StringValue != null) {\r\n                  // delete Temperature unit, which is added in Openhab\r\n                  yValue.StringValue = yValue.StringValue.replace(' °C', '');\r\n                ctxData.data.push({x: xValue, y: Number(yValue.StringValue)});\r\n                }\r\n                //chart.data.labels.push(sensorDataModelY.Values[0].DateTime);\r\n                // add sensor data to the chartData.\r\n                console.log(\"data: \", ctxData.data);\r\n                chart.data.datasets.push(ctxData);\r\n                // set chart type\r\n                this.myChart.type = (this.isTimeBased)? \"line\" : \"scatter\";\r\n                chart.update();\r\n              });\r\n          },\r\n          err => {\r\n            console.log('Error requesting historic data from backend ', err);\r\n          });\r\n    }\r\n  }\r\n  // realtime data chart fill method // only pulls new data from backend if it is not available in list\r\n  updateRealtimeData(chart): void {\r\n    chart.options.scales.xAxes[0].scaleLabel.labelString = this.axesOptions.xLabel;\r\n    chart.options.scales.yAxes[0].scaleLabel.labelString = this.axesOptions.yLabel;\r\n    chart.options.scales.xAxes[0].scaleLabel.display = this.axesOptions.xLabelVisible;\r\n    chart.options.scales.yAxes[0].scaleLabel.display = this.axesOptions.yLabelVisible;\r\n    let cIndex = 0;\r\n    if (this.isTimeBased) {\r\n      // go through all selected sensors\r\n      for (const selected of this.dropdownList) {\r\n        // set saved sensor settings\r\n        let isAvailable = false;\r\n        const ctxData = {label: selected.deviceEntity.label + ' in ' + selected.deviceEntity.unit,\r\n          data: [], borderColor: selected.deviceEntity.color, backgroundColor: selected.deviceEntity.color, fill: selected.deviceEntity.fillArea, showLine: selected.deviceEntity.showLine,\r\n          borderDash: (selected.deviceEntity.lineType === 'solid')? []:[5,5]};\r\n\r\n        for (let dataset of chart.data.datasets) {\r\n          // check if dataset is in datasets\r\n          if (dataset.label === ctxData.label){\r\n            isAvailable = true;\r\n            // empty dataset until only one value is left.\r\n            while (dataset.data.length > 1) {\r\n              dataset.data.shift();\r\n            }\r\n            // updating other attributes\r\n            dataset.borderColor = selected.deviceEntity.color;\r\n            dataset.borderDash = (selected.deviceEntity.lineType === 'solid')? []:[5,5];\r\n            dataset.showLine = selected.deviceEntity.showLine;\r\n            dataset.fill = selected.deviceEntity.fillArea;\r\n            break;\r\n          }\r\n        }\r\n        if (!isAvailable) {\r\n          // get newest data value from the sensor.\r\n          this.visualmanager.getNowData(selected.deviceEntity.deviceId, selected.deviceEntity.entityId, this.user.id, this.project.id)\r\n            .subscribe((sensorDataModel: SensorDataModel) => {\r\n                const value = sensorDataModel.Values[0];\r\n                // fill sensor data field with one value\r\n                if (value.FloatValue != null) {\r\n                  ctxData.data.push({x: new Date(value.DateTime), y: value.FloatValue});\r\n                } else if (value.StringValue != null) {\r\n                  var yString = value.StringValue;\r\n                  // delete Temperature unit, which is added in Openhab\r\n                  yString = yString.replace(' °C', '');\r\n                  ctxData.data.push({x: new Date(value.DateTime), y: Number(yString)});\r\n                }\r\n                // one time the label of the data points has to be set if there is no label available\r\n                if (cIndex === 0 && chart.data.labels.length === 0) {\r\n                  //chart.data.labels.push(value.DateTime);\r\n                  cIndex++;\r\n                }\r\n                this.addDataset(chart, ctxData);\r\n                console.log(\"INITchartData: \", this.myChart.data.datasets);\r\n                // set chart type\r\n                this.myChart.type = (this.isTimeBased)? \"line\" : \"scatter\";\r\n              },\r\n              err => {\r\n                console.log('Error requesting data from backend: ', err);\r\n              });\r\n        }\r\n        // remove remaining datasets.\r\n        this.removeDatasets(chart);\r\n      }\r\n\r\n      // remove all datasets which where deleted\r\n    } else {\r\n      // value: value based\r\n      this.initRealtimeData(chart);\r\n    }\r\n  }\r\n\r\n  // historical data chart fill method\r\n  showChart(chart): void {\r\n    this.setChartOptions();\r\n    // set manually changeable chart options\r\n    chart.options.scales.xAxes[0].scaleLabel.labelString = this.axesOptions.xLabel;\r\n    chart.options.scales.yAxes[0].scaleLabel.labelString = this.axesOptions.yLabel;\r\n    chart.options.scales.xAxes[0].scaleLabel.display = this.axesOptions.xLabelVisible;\r\n    chart.options.scales.yAxes[0].scaleLabel.display = this.axesOptions.yLabelVisible;\r\n    // empty chart\r\n    chart.data.datasets = [];\r\n    chart.data.labels = [];\r\n    if (!this.isTimeBased){\r\n      // create a Data object\r\n      const ctxData = {label: this.xElem.deviceEntity.label + ' in ' + this.xElem.deviceEntity.unit,\r\n        data: [], borderColor: this.xElem.deviceEntity.color, backgroundColor: this.xElem.deviceEntity.color, fill: this.xElem.deviceEntity.fillArea, showLine: this.xElem.deviceEntity.showLine,\r\n        borderDash: (this.xElem.deviceEntity.lineType === 'solid')? []:[5,5]};\r\n      let xData = [{\"DateTime\": \"\", 'value': undefined}];\r\n      // fill data field\r\n      this.visualmanager.getTimeData(this.xElem.deviceEntity.deviceId, this.xElem.deviceEntity.entityId,\r\n        this.generateIsoDateTime(this.selectedStart), this.generateIsoDateTime(this.selectedEnd),\r\n        this.duration, this.user.id, this.project.id)\r\n        .subscribe((sensorDataModel: SensorDataModel) => {\r\n\r\n            for (const value of sensorDataModel.Values) {\r\n              if (value.FloatValue != null) {\r\n                xData.push({\"DateTime\": value.DateTime, 'value': value.FloatValue});\r\n              } else if (value.StringValue != null) {\r\n                var yString = value.StringValue;\r\n                // delete Temperature unit, which is added in Openhab\r\n                yString = yString.replace(' °C', '');\r\n                xData.push({\"DateTime\": value.DateTime, 'value': Number(yString)});\r\n              }\r\n            }\r\n            xData.shift();\r\n            // now get yElem Data\r\n            this.visualmanager.getTimeData(this.yElem.deviceEntity.deviceId, this.yElem.deviceEntity.entityId,\r\n                      this.generateIsoDateTime(this.selectedStart), this.generateIsoDateTime(this.selectedEnd),\r\n                      this.duration, this.user.id, this.project.id)\r\n                      .subscribe((sensorDataModel: SensorDataModel) => {\r\n                        let checkedXValues = 1;\r\n                        console.log(\"xdata length: \", xData.length);\r\n                        for (const yValue of sensorDataModel.Values) {\r\n                          for (const xValue of xData){\r\n                            if (yValue.DateTime === xValue.DateTime){\r\n                              // we found a match! -> save it in the chart Data ctx!\r\n                              console.log(\"i have found a match!\");\r\n                              if (yValue.FloatValue != null) {\r\n                                ctxData.data.push({x: xValue.value, y: yValue.FloatValue});\r\n                              } else if (yValue.StringValue != null) {\r\n                                var yString = yValue.StringValue;\r\n                                // delete Temperature unit, which is added in Openhab\r\n                                yString = yString.replace(' °C', '');\r\n                                ctxData.data.push({x: xValue.value, y: Number(yString)});\r\n                              }\r\n                              //chart.data.labels.push(yValue.DateTime);\r\n                              // delete all values in xData before the used one (not working)\r\n                              //xData.splice(0, checkedXValues);\r\n                              // reset checkedXValues\r\n                              checkedXValues = 0;\r\n                            }\r\n                            checkedXValues++;\r\n                          }\r\n                        }\r\n                        // add sensor data to the chartData.\r\n                        console.log(\"data: \", ctxData);\r\n                        chart.data.datasets.push(ctxData);\r\n                        // set chart type\r\n                        chart.type = (this.isTimeBased)? \"line\" : \"scatter\";\r\n                        console.log(\"data CHART: \", chart.data.datasets);\r\n                        console.log(\"chart type: \", chart.type);\r\n                        chart.update();\r\n                      });\r\n          },\r\n          err => {\r\n            console.log('Error requesting historic data from backend ', err);\r\n          });\r\n    } else {\r\n      // time-based Data\r\n        for (const selected of this.dropdownList) {\r\n          // when it is not the first sensor, add them:\r\n          const ctxData = {label: selected.deviceEntity.label + ' in ' + selected.deviceEntity.unit,\r\n            data: [], borderColor: selected.deviceEntity.color, backgroundColor: selected.deviceEntity.color, fill: selected.deviceEntity.fillArea, showLine: selected.deviceEntity.showLine,\r\n            borderDash: (selected.deviceEntity.lineType === 'solid')? []:[5,5]};\r\n          this.visualmanager.getTimeData(selected.deviceEntity.deviceId, selected.deviceEntity.entityId,\r\n            this.generateIsoDateTime(this.selectedStart), this.generateIsoDateTime(this.selectedEnd),\r\n            this.duration, this.user.id, this.project.id)\r\n            .subscribe((sensorDataModel: SensorDataModel) => {\r\n              let i = 0;\r\n                console.log(\"sensor values: \", sensorDataModel.Values);\r\n                for (const value of sensorDataModel.Values) {\r\n                  if (value.FloatValue != null) {\r\n                    ctxData.data.push({x: new Date(value.DateTime), y: value.FloatValue});\r\n                  } else if (value.StringValue != null) {\r\n                    var yString = value.StringValue;\r\n                    // delete Temperature unit, which is added in Openhab\r\n                    yString = yString.replace(' °C', '');\r\n                    ctxData.data.push({x: new Date(value.DateTime), y: Number(yString)});\r\n                  }\r\n                }\r\n                // add sensor data to the chartData.\r\n                chart.data.datasets.push(ctxData);\r\n                if (chart.data.datasets[0]['label'] === '') {\r\n                  chart.data.dataset.shift();\r\n                }\r\n                // set chart type\r\n                this.myChart.type = (this.isTimeBased)? \"line\" : \"scatter\";\r\n                chart.update();\r\n              },\r\n              err => {\r\n                console.log('Error requesting historic data from backend ', err);\r\n              });\r\n\r\n        }\r\n    }\r\n\r\n  }\r\n\r\n  // events\r\n  public chartClicked(e: any): void {\r\n    // console.log(e);\r\n  }\r\n\r\n  public chartHovered(e: any): void {\r\n    // console.log(e);\r\n  }\r\n\r\n  // add one Data value to each dataset of the chart as well as the label\r\n  addData(chart, entityLabel, label, data): void {\r\n    if (!this.isTimeBased){\r\n      chart.data.labels.push(new Date(label));\r\n    }\r\n    chart.data.datasets.forEach((dataset) => {\r\n      if (entityLabel === dataset.label) {\r\n        console.log(\"It is the entity label!\");\r\n        dataset.data.push({x: new Date(label), y: data});\r\n      } else {\r\n        // fill the other datasets with the latest data value\r\n        const elem = dataset.data.pop();\r\n        dataset.data.push(elem);\r\n        dataset.data.push({x: new Date(label), y: elem.y});\r\n      }\r\n\r\n    });\r\n    chart.update();\r\n  }\r\n\r\n  // add a new line / dataset to the chart\r\n  addDataset(chart, dataset): void {\r\n    chart.data.datasets.push(dataset);\r\n    chart.update();\r\n  }\r\n\r\n  // removes the oldest data value of all datasets in the chart\r\n  removeData(chart): void {\r\n    console.log(\"delete data because maximum is reached.\");\r\n    chart.data.labels.shift();\r\n\r\n    chart.data.datasets.forEach((dataset) => {\r\n      dataset.data.shift();\r\n    });\r\n    chart.update();\r\n  }\r\n\r\n  // removes all datasets which have mor then one data point\r\n  removeDatasets(chart): void {\r\n    chart.data.datasets.forEach((dataset) => {\r\n      if (dataset.data.lenght > 1) {\r\n        let removalIndex = chart.data.datasets.indexOf(dataset); //Locate index of dataset\r\n        if(removalIndex >= 0) { //make sure this element exists in the array\r\n          chart.data.datasets.splice(removalIndex, 1);\r\n        }\r\n      }\r\n    });\r\n    if (!this.isTimeBased){\r\n      // when it was the only data set, remove the labels as well.\r\n      if (chart.data.datasets.length === 0){\r\n        // for each label, remove one label.\r\n        chart.data.labels.forEach((label) => {\r\n          chart.data.labels.pop();\r\n        });\r\n      }\r\n    }\r\n\r\n\r\n    chart.update();\r\n  }\r\n\r\n  // updates an attribute of a chart (sub)object.\r\n  updateChartOption(chart, chartField, value): void {\r\n    chartField = value;\r\n    chart.update();\r\n  }\r\n\r\n\r\n  applySettings(): void {\r\n    this.displaySettings = false;\r\n    this.currentWidget.deviceEntities = [];\r\n    this.currentWidget.isMonoVis = this.isMonoVis;\r\n    this.currentWidget.isRealtime = this.isRealtime;\r\n    this.currentWidget.isTimeBased = this.isTimeBased;\r\n    this.chartType = (this.isTimeBased)? \"line\" : \"scatter\";\r\n    console.log(\"axes: \",this.axesOptions );\r\n    // updating data from dropdowns in current Widget\r\n    if (!this.isMonoVis && !this.isTimeBased){\r\n      this.currentWidget.deviceEntities.push(this.xElem.deviceEntity);\r\n      this.currentWidget.deviceEntities.push(this.yElem.deviceEntity);\r\n    } else {\r\n      if (this.isMonoVis){\r\n        this.currentWidget.deviceEntities.push(this.dropdownList[0].deviceEntity);\r\n      } else {\r\n        for (const entity of this.dropdownList) {\r\n          this.currentWidget.deviceEntities.push(entity.deviceEntity);\r\n        }\r\n      }\r\n    }\r\n    this.currentWidget.axesOptions = this.axesOptions;\r\n    // remove empty placeholder if neccessary\r\n    if (this.currentWidget.deviceEntities[0].deviceId === '') {\r\n      this.currentWidget.deviceEntities.shift();\r\n    }\r\n    this.saveInDatabase(this.currentWidget.deviceEntities, 'deviceEntities');\r\n    this.saveInDatabase(this.currentWidget.chartType, 'chartType');\r\n    this.saveInDatabase(this.currentWidget.isMonoVis, 'isMonoVis');\r\n    this.saveInDatabase(this.currentWidget.isRealtime, 'isRealtime');\r\n    this.saveInDatabase(this.currentWidget.isTimeBased, 'isTimeBased');\r\n    this.saveInDatabase(this.currentWidget.axesOptions, 'axesOptions');\r\n    console.log('deviceEntities after APPLY: ', this.currentWidget.deviceEntities);\r\n    console.log(\"realtime: \", this.isRealtime);\r\n\r\n    if (this.isRealtime){\r\n      this.currentWidget.numberOfValues = this.selectedNumberOfValues;\r\n      this.currentWidget.startDate = undefined;\r\n      this.currentWidget.endDate = undefined;\r\n      this.currentWidget.interval = undefined;\r\n      this.saveInDatabase(this.currentWidget.numberOfValues, 'numberOfValues');\r\n      this.saveInDatabase(this.currentWidget.interval, 'interval');\r\n      this.saveInDatabase(this.currentWidget.startDate, 'startDate');\r\n      this.saveInDatabase(this.currentWidget.endDate, 'endDate');\r\n      // get realtime data with new settings\r\n      if (this.currentWidget.chartType !== this.chartType){\r\n        this.setChartOptions();\r\n       // this.initRealtimeData(this.myChart);\r\n      }\r\n\r\n      this.initRealtimeData(this.myChart)\r\n      this.currentWidget.chartType = this.chartType;\r\n      //this.updateRealtimeData(this.myChart);\r\n    } else {\r\n      this.currentWidget.numberOfValues = undefined;\r\n      this.currentWidget.endDate = this.selectedEnd;\r\n      this.currentWidget.startDate = this.selectedStart;\r\n      console.log(\"apply: Date\", this.selectedStart);\r\n      this.currentWidget.interval = 'P3W';\r\n      this.saveInDatabase(this.currentWidget.numberOfValues, 'numberOfValues');\r\n      this.saveInDatabase(this.currentWidget.interval, 'interval');\r\n      this.saveInDatabase(this.generateIsoDateTime(this.currentWidget.startDate), 'startDate');\r\n      this.saveInDatabase(this.generateIsoDateTime(this.currentWidget.endDate), 'endDate');\r\n      // get historical data with new settings\r\n      this.showChart(this.myChart);\r\n    }\r\n  }\r\n\r\n  abortChanges(): void {\r\n    // reset changes\r\n    this.displaySettings = false;\r\n    this.chartType = this.currentWidget.chartType;\r\n    this.initRepresentationVariables();\r\n    this.chartType = (this.currentWidget.isTimeBased)? \"line\" : \"scatter\";\r\n    this.xElem = {deviceEntity: {deviceId: '', entityId: '', lineType: '', fillArea:true, showLine:true, color: '#1976D2', label: '', unit: '', axis: 'x'}, sensorList: []};\r\n    this.yElem = {deviceEntity: {deviceId: '', entityId: '', lineType: '', fillArea: true, showLine: true, color: '#1976D2', label: '', unit: '', axis: 'y'}, sensorList: []};\r\n    this.axesOptions = this.currentWidget.axesOptions;\r\n    this.dropdownList = [{deviceEntity: {deviceId: '', entityId: '', lineType: '', fillArea: true, showLine: true, color: '', label: '', unit: '', axis: ''}, sensorList: []}];\r\n    for (const entity of this.currentWidget.deviceEntities) {\r\n      this.dropdownList.push({deviceEntity: entity, sensorList: []});\r\n      this.setSensorDropdown(entity.deviceId);\r\n    }\r\n    if (this.dropdownList.length > 1){\r\n      this.dropdownList.shift();\r\n    }\r\n    if (this.isTimeBased && this.dropdownList.length > 0){\r\n      this.xElem = this.dropdownList[0];\r\n      this.xElem.deviceEntity.axis = \"x\";\r\n      if (!this.isMonoVis && this.dropdownList.length > 1){\r\n        this.yElem = this.dropdownList[1];\r\n        this.yElem.deviceEntity.axis = \"y\";\r\n      }\r\n    }\r\n    if (this.isRealtime){\r\n      this.selectedNumberOfValues = this.currentWidget.numberOfValues;\r\n    } else {\r\n      this.selectedEnd = this.currentWidget.endDate;\r\n      this.selectedStart = this.currentWidget.startDate;\r\n      //this.selectedInterval = this.currentWidget.interval;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method saves the selected options into the database.\r\n   * @param value the value\r\n   * @param field the field where to store\r\n   */\r\n  protected saveInDatabase(value, field: string): void {\r\n    this.databaseService.updateDocument(this.databaseService.WIDGETSCOLLECTION, this.currentWidget.id, new Fieldvalue(field, value))\r\n      .subscribe(result => {\r\n      }, error => {\r\n        console.log('Error updating database entry ', error);\r\n      });\r\n  }\r\n\r\n  protected addNewDropdowns() {\r\n    this.dropdownList.push({deviceEntity: {deviceId: '', entityId: '', lineType: '', fillArea: true, showLine: true, color: '', label: '', unit: '', axis: ''}, sensorList: []});\r\n    //this.chartData.push({label: '', data: [], borderColor: '', fill: false});\r\n  }\r\n\r\n  protected deleteDropdowns(group: ChartDeviceEntity) {\r\n    let i = 0;\r\n    this.chartData = [{label: '', data: [], borderColor: '#1976D2', fill: false, showLine: true}];\r\n    // console.log(\"Dropdownlist: \", this.dropdownList);\r\n    let dropdownListCopy = this.dropdownList;\r\n    for (let elem of this.dropdownList) {\r\n      if (elem.deviceEntity.deviceId === group.deviceId && elem.deviceEntity.entityId === group.entityId) {\r\n        dropdownListCopy.splice(i, 1);\r\n        // if the arrays have the same length, the chartData of the entity has to be deleted as well\r\n        if (this.dropdownList.length === (this.chartData.length) - 1) {\r\n         // this.chartData.splice(i, 1);\r\n        }\r\n        console.log('Dropdownlist after DELETE: ', this.dropdownList);\r\n      }\r\n      i++;\r\n    }\r\n    this.dropdownList = dropdownListCopy;\r\n\r\n  }\r\n\r\n  protected setSensorDropdown(deviceId: string): void {\r\n    // get list of all entities of the device\r\n    const sensorList = [];\r\n    console.log(\"chart: \", this.myChart.data.datasets);\r\n    this.devicemanager.getDeviceById(deviceId, this.user.id, this.project.id)\r\n      .subscribe((device: Device) => {\r\n          if (device.sensors !== null) {\r\n            for (const sensor of device.sensors) {\r\n              sensorList.push({label: sensor.name, value: sensor.id});\r\n            }\r\n          }\r\n          if (device.actions !== null) {\r\n            for (const action of device.actions) {\r\n              sensorList.push({label: action.name, value: action.id});\r\n            }\r\n          }\r\n\r\n          if (this.isTimeBased){\r\n            // go trhough dropdownlist and set sensorList to device\r\n            for (const dropdowngroup of this.dropdownList) {\r\n              if (dropdowngroup.deviceEntity.deviceId === deviceId) {\r\n                dropdowngroup.sensorList = sensorList;\r\n              }\r\n            }\r\n          } else {\r\n            if (this.xElem.deviceEntity.deviceId === deviceId) {\r\n              this.xElem.sensorList = sensorList;\r\n            } else if (this.yElem.deviceEntity.deviceId === deviceId) {\r\n              this.yElem.sensorList = sensorList;\r\n            }\r\n          }\r\n\r\n        },\r\n        error => {\r\n          console.log('Error requesting devices from backend ', error);\r\n        });\r\n  }\r\n\r\n  // Because Primeng is stupid and can only use string variables in radiobuttons, we have to set the boolean variables ourselves.\r\n  setIsMonoVis(value: string){\r\n    this.isMonoVis = (value === \"true\")? true : false;\r\n    if (value === \"true\") {\r\n      this.isTimeBased = true;\r\n      this.dataDependency = value;\r\n      this.axesOptions.xLabel = \"time\";\r\n      // if there is more then one element in the dropdownList, delete the unnecessary ones.\r\n      if (this.dropdownList.length > 1){\r\n        this.dropdownList = [this.dropdownList[0]];\r\n      }\r\n    } else {\r\n      if (!this.isTimeBased && this.xElem.deviceEntity.deviceId !== \"\" && this.dropdownList.length >0) {\r\n          this.xElem = this.dropdownList[0];\r\n        if (this.dropdownList.length > 1){\r\n          this.yElem = this.dropdownList[1];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  initRepresentationVariables():void {\r\n    if (this.currentWidget.isTimeBased !== undefined){\r\n      this.isTimeBased = this.currentWidget.isTimeBased;\r\n      this.dataDependency = (this.isTimeBased === true)? 'true':'false';\r\n    } else {\r\n      this.isTimeBased = true;\r\n      this.dataDependency = 'true';\r\n    }\r\n    this.setChartOptions();\r\n    if (this.currentWidget.isRealtime !== undefined){\r\n      this.isRealtime = this.currentWidget.isRealtime;\r\n      this.dataType = (this.isRealtime === true)? 'true':'false';\r\n    } else {\r\n      this.isRealtime = true;\r\n      this.dataType = 'true';\r\n    }\r\n    if (this.currentWidget.isMonoVis !== undefined){\r\n      this.isMonoVis = this.currentWidget.isMonoVis;\r\n      this.sensorNumber = (this.isMonoVis === true)? 'true':'false';\r\n    } else {\r\n      this.isMonoVis = true;\r\n      this.sensorNumber = 'true';\r\n    }\r\n  }\r\n\r\n  setIsRealtime(value: string){\r\n    this.isRealtime = (value === \"true\")? true : false;\r\n  }\r\n  setIsTimeBased(value: string){\r\n    this.isTimeBased = (value === \"true\")? true : false;\r\n    if (value === \"true\") {\r\n      this.axesOptions.xLabel = \"time\";\r\n    } else {\r\n      if (!this.isTimeBased && this.xElem.deviceEntity.deviceId === \"\" && this.dropdownList.length >0) {\r\n        this.xElem = this.dropdownList[0];\r\n        console.log(\"here\");\r\n        this.xElem.deviceEntity.axis = \"x\";\r\n        if (this.dropdownList.length > 1){\r\n          this.yElem = this.dropdownList[1];\r\n          this.yElem.deviceEntity.axis = \"y\";\r\n        } else {\r\n          this.yElem = {deviceEntity: {deviceId: '', entityId: '', lineType: '', fillArea: true, showLine: true, color: '#1976D2', label: '', unit: '', axis: 'y'}, sensorList: []};\r\n        }\r\n      } else {\r\n        this.xElem = {deviceEntity: {deviceId: '', entityId: '', lineType: '', fillArea: true, showLine: true, color: '#1976D2', label: '', unit: '', axis: 'x'}, sensorList: []};\r\n        this.yElem = {deviceEntity: {deviceId: '', entityId: '', lineType: '', fillArea: true, showLine: true, color: '#1976D2', label: '', unit: '', axis: 'y'}, sensorList: []};\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  setChartOptions(){console.log(\"setOptions\");\r\n    if (this.isTimeBased){\r\n      this.chartOptions = {\r\n        maintainAspectRatio: false,\r\n        responsive: true,\r\n        legend: {\r\n          display: true,\r\n          position: 'top'\r\n        },\r\n        scales: {\r\n          xAxes: [{\r\n            type: \"time\",\r\n            time: {\r\n              parser: this.timeFormat,\r\n              tooltipFormat: 'll',\r\n              displayFormats: {\r\n                'millisecond': 'HH:mm:ss',\r\n                'second': 'HH:mm:ss',\r\n                'minute': 'HH:mm:ss',\r\n                'hour': 'MMM DD YY',\r\n                'day': 'MMM DD YY',\r\n                'week': 'MMM DD YY',\r\n                'month': 'MMM DD YY',\r\n                'quarter': 'MMM DD YY',\r\n                'year': 'MMM DD YY',\r\n              }\r\n            },\r\n            display: true,\r\n            scaleLabel: {\r\n              display: true,\r\n              labelString: 'Date'\r\n            },\r\n          }],\r\n          yAxes: [{\r\n            ticks: {\r\n              beginAtZero: true,\r\n\r\n            },\r\n            scaleLabel: {\r\n              display: true,\r\n              labelString: ''\r\n            }\r\n          }]\r\n        }\r\n      };\r\n    } else {\r\n      this.chartOptions = {\r\n        maintainAspectRatio: false,\r\n        responsive: true,\r\n        legend: {\r\n          display: true,\r\n          position: 'top'\r\n        },\r\n        scales: {\r\n          xAxes: [{\r\n            display: true,\r\n            scaleLabel: {\r\n              display: true,\r\n              labelString: ''\r\n            },\r\n            type: 'linear',\r\n            position: 'bottom'\r\n          }],\r\n          yAxes: [{\r\n            ticks: {\r\n              beginAtZero: true,\r\n            },\r\n            scaleLabel: {\r\n              display: true,\r\n              labelString: ''\r\n            }\r\n          }]\r\n        },\r\n        onResize: function (chart, size) {\r\n          //chart.options.legend.display = size.width > 400;\r\n          //chart.options.legend.position = (size.width > size.height) ? 'right' : 'bottom';\r\n          //console.log();\r\n          //chart.update();\r\n        }\r\n      };\r\n    }\r\n    this.myChart.options = this.chartOptions;\r\n  }\r\n}\r\n","module.exports = \".widgetDesign {\\r\\n  position: relative;\\r\\n  width: 12vw;\\r\\n  height: 18vh;\\r\\n  float: left;\\r\\n  margin: 2vh 2vw 0 0;\\r\\n  background-color: white;\\r\\n  border-radius: 25px;\\r\\n  box-shadow: 3px 3px 2px lightgrey;\\r\\n  transition: all 0.3s;\\r\\n  border-color: #668BCC;\\r\\n  border-style: solid;\\r\\n  border-width: 0 0 0 5px;\\r\\n  padding-left: 1vw;\\r\\n  overflow: hidden;\\r\\n  -o-object-fit: scale-down;\\r\\n     object-fit: scale-down;\\r\\n}\\r\\n\\r\\n.widgetDesign:hover {\\r\\n  background-color: #eeeeee;\\r\\n  overflow: visible;\\r\\n}\\r\\n\\r\\n.ui-widget-overlay\\r\\n{\\r\\n  z-index: 0;\\r\\n}\\r\\n\\r\\n.ui-dialog{\\r\\n  z-index: 20;\\r\\n}\\r\\n\\r\\n.nameChanger {\\r\\n  width: 5vw;\\r\\n}\\r\\n\\r\\n.settingsDialog {\\r\\n  width: 500px !important;\\r\\n  height: 600px !important;\\r\\n}\\r\\n\\r\\n.ui-tieredmenu{\\r\\n  left: -200px !important;\\r\\n}\\r\\n\\r\\n.interval-input{\\r\\n  width: 60px;\\r\\n}\\r\\n\\r\\n.widgetContainer {\\r\\n  padding: 0 1vw 1vh 2vw;\\r\\n}\\r\\n\\r\\n.settings-button {\\r\\n  transition: all 0.5s;\\r\\n  position: absolute;\\r\\n  right: 75px;\\r\\n  top: 5px;\\r\\n}\\r\\n\\r\\n.realTimeFont{\\r\\n  /*font-size: 40px;*/\\r\\n}\\r\\n\\r\\n.graph-canvas{\\r\\n  width: 100%;\\r\\n  height: 95% !important;\\r\\n}\\r\\n\\r\\n.graph-button {\\r\\n  position: absolute;\\r\\n  top: 135px;\\r\\n  right: 0;\\r\\n}\\r\\n\\r\\n.device-select {\\r\\n  transition: all 0.5s;\\r\\n  position: absolute;\\r\\n  top: 55px;\\r\\n}\\r\\n\\r\\nhr {\\r\\n  display: block;\\r\\n  height: 1px;\\r\\n  border: 0;\\r\\n  border-top: 1px solid #ccc;\\r\\n  margin: 1em 0;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<p-dialog header=\\\"Doughnut Chart Settings\\\" [modal]=true appendTo=\\\"body\\\" [width]=\\\"700\\\"\\r\\n          [(visible)]=\\\"displaySettings\\\" [closable]=\\\"false\\\">\\r\\n  <div class=\\\"ui-g\\\">\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <h3>Input Data</h3>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">Distribution of</div>\\r\\n      <p-dropdown appendTo=\\\"body\\\" [options]=\\\"distributionList\\\"\\r\\n                  [filter]=\\\"true\\\" [(ngModel)]=\\\"this.selectedDistribution\\\"\\r\\n                  [style]=\\\"{'min-width':'200px'}\\\" (onChange)=\\\"setDistributionParameters()\\\" placeholder=\\\"Select a distribution\\\" (onClick)=\\\"$event.stopPropagation();$event.preventDefault();\\\">\\r\\n      </p-dropdown>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"(this.selectedDistribution === 'actuator')\\\" class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">Time Period:</div>\\r\\n      <div class=\\\"ui-g-2 grid-elem\\\">from</div>\\r\\n      <p-calendar [(ngModel)]=\\\"selectedStart\\\" [showTime]=\\\"true\\\" [showIcon]=\\\"true\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"1970:2020\\\" appendTo=\\\"body\\\"></p-calendar>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\" *ngIf=\\\"(this.selectedDistribution === 'actuator')\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\"></div>\\r\\n      <div class=\\\"ui-g-2 grid-elem\\\">to</div>\\r\\n      <p-calendar [(ngModel)]=\\\"selectedEnd\\\" [showTime]=\\\"true\\\" [showIcon]=\\\"true\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"1970:2020\\\" appendTo=\\\"body\\\"></p-calendar>\\r\\n    </div>\\r\\n    <p-accordion *ngIf=\\\"this.selectedDistribution === 'actuator'\\\">\\r\\n        <p-accordionTab  style=\\\"align-items: center; overflow: auto; width: 100%;\\\">\\r\\n          <p-header>\\r\\n            Device:\\r\\n            <p-dropdown appendTo=\\\"body\\\" [options]=\\\"devicesList\\\" (onChange)=\\\"setSensorDropdown(deviceEntities[0].deviceId)\\\"\\r\\n                        [filter]=\\\"true\\\" [(ngModel)]=\\\"deviceEntities[0].deviceId\\\"\\r\\n                        [style]=\\\"{'width':'200px'}\\\" placeholder=\\\"Select a device\\\" (onClick)=\\\"$event.stopPropagation();$event.preventDefault();\\\">\\r\\n            </p-dropdown>\\r\\n\\r\\n            Sensor:\\r\\n            <p-dropdown appendTo=\\\"body\\\" [options]=\\\"sensorList\\\" [filter]=\\\"true\\\" [(ngModel)]=\\\"deviceEntities[0].entityId\\\"\\r\\n                        [style]=\\\"{'width':'200px'}\\\" placeholder=\\\"Select a sensor\\\" (onClick)=\\\"$event.stopPropagation();$event.preventDefault();\\\">\\r\\n            </p-dropdown>\\r\\n\\r\\n          </p-header>\\r\\n          <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n            <div class=\\\"ui-g-4 grid-elem\\\">Data label:</div>\\r\\n            <input pInputText class=\\\"gridster-item-content\\\" [(ngModel)]=\\\"deviceEntities[0].label\\\"  style=\\\"width: 200px; padding-left: 0;\\\">\\r\\n          </div>\\r\\n          <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n            <div class=\\\"ui-g-4 grid-elem\\\">Data unit:</div>\\r\\n            <input pInputText class=\\\"gridster-item-content\\\" [(ngModel)]=\\\"deviceEntities[0].unit\\\"  style=\\\"width: 200px; padding-left: 0;\\\">\\r\\n          </div>\\r\\n        </p-accordionTab>\\r\\n    </p-accordion>\\r\\n\\r\\n    <div *ngIf=\\\"(this.selectedDistribution === 'device')\\\" class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">Devices:</div>\\r\\n      <div class=\\\"ui-g\\\">\\r\\n        <div class=\\\"ui-g-12 grid-elem\\\" *ngFor=\\\"let device of deviceEntities\\\">\\r\\n          <p-dropdown appendTo=\\\"body\\\" [options]=\\\"allDevicesList\\\"\\r\\n                      [filter]=\\\"true\\\" [(ngModel)]=\\\"device.deviceId\\\"\\r\\n                      [style]=\\\"{'min-width':'200px'}\\\" placeholder=\\\"Select a device\\\" (onClick)=\\\"$event.stopPropagation();$event.preventDefault();\\\">\\r\\n          </p-dropdown>\\r\\n          <button *ngIf=\\\"deviceEntities.length > 1\\\" style = \\\"margin-left: 10px;\\\" type=\\\"button\\\" pButton icon=\\\"fa fa-minus\\\" (click)=\\\"$event.stopPropagation();$event.preventDefault();deleteDropdowns(device);\\\"></button>\\r\\n        </div>\\r\\n        <div class=\\\"ui-g-12\\\">\\r\\n          <button type=\\\"button\\\" pButton icon=\\\"fa fa-plus\\\" (click)=\\\"addNewDropdowns()\\\"></button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <h3>Representation</h3>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">Doughnut circle:</div>\\r\\n      <div class=\\\"ui-g-4\\\"><p-radioButton name=\\\"isCircleFull\\\" value=\\\"true\\\" label=\\\"full circle\\\" [(ngModel)]=\\\"isCircleFull\\\" inputId=\\\"full\\\"></p-radioButton></div>\\r\\n      <div class=\\\"ui-g-4\\\"><p-radioButton name=\\\"isCircleFull\\\" value=\\\"false\\\" label=\\\"half circle\\\" [(ngModel)]=\\\"isCircleFull\\\" inputId=\\\"half\\\"></p-radioButton></div>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">Color family:</div>\\r\\n      <p-dropdown appendTo=\\\"body\\\" [options]=\\\"colorPaletteList\\\" [filter]=\\\"true\\\" [(ngModel)]=\\\"currentPalette\\\"\\r\\n                  [style]=\\\"{'width':'200px'}\\\" placeholder=\\\"Select a color family\\\" (onClick)=\\\"$event.stopPropagation();$event.preventDefault();\\\">\\r\\n      </p-dropdown>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"ui-g-12\\\" style=\\\"width:10px;\\\"></div>\\r\\n\\r\\n  </div>\\r\\n  <p-footer>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"fa-check\\\" (click)=\\\"applySettings();\\\" label=\\\"Apply\\\"></button>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"fa-close\\\" (click)=\\\"abortChanges()\\\" label=\\\"Cancel\\\"></button>\\r\\n  </p-footer>\\r\\n</p-dialog>\\r\\n<button pButton icon=\\\"fa fa-cog\\\" style=\\\"z-index: 6;\\\" class=\\\"settings-button transparentButton tbutton ui-button-secondary\\\"\\r\\n        (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" (click)=\\\"displaySettings=true;\\\"\\r\\n        [hidden]=\\\" !(loginStatus>1 && currentWidget.isDeveloped)\\\"></button>\\r\\n<!--*ngIf=\\\"myChart != undefined && myChart.data!= undefined && myChart.data.datasets != []\\\"-->\\r\\n<div  class=\\\"graph-canvas\\\">\\r\\n  <canvas #chart>{{myChart}}</canvas>\\r\\n</div>\\r\\n<div style=\\\"text-align: center;\\\">\\r\\n  <p-message *ngIf=\\\"isEmpty\\\" severity=\\\"info\\\" text=\\\"You selected device entities without historical data.\\\"></p-message>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","import {Component, EventEmitter, Input, OnInit, ViewChild, Output} from '@angular/core';\r\nimport {BaseChartDirective} from 'ng2-charts/ng2-charts';\r\nimport {DataService} from '../../../../../../../services/data.service';\r\nimport {Chart} from 'chart.js';\r\nimport {DeviceManagerService} from '../../../../../../../services/devicemanager.service';\r\nimport {VisualManagerService} from '../../../../../../../services/visualmanager.service';\r\nimport {Widget} from '../../../../../../../models/frontend/widget';\r\nimport {DatabaseService} from '../../../../../../../services/database.service';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport { forkJoin } from 'rxjs'\r\nimport 'rxjs/add/observable/interval';\r\nimport {MenuItem} from 'primeng/api';\r\nimport {SelectItem} from 'primeng/api';\r\nimport {Project} from '../../../../../../../models/frontend/project';\r\nimport {DoughnutChartDeviceEntity, Doughnutchartwidget} from '../../../../../../../models/frontend/doughnutchartwidget';\r\nimport {Fieldvalue} from '../../../../../../../models/frontend/fieldvalue';\r\nimport {User} from '../../../../../../../models/frontend/user';\r\nimport {Device} from '../../../../../../../models/backend/device';\r\nimport {SensorDataModel} from '../../../../../../../models/backend/sensordatamodel';\r\nimport {Calculation, Frequency} from '../../../../../../../models/frontend/barchartwidget';\r\nimport {ChartDeviceEntity} from \"../../../../../../../models/frontend/chartDeviceEntity\";\r\n\r\n@Component({\r\n  selector: 'doughnut-chart-visualization',\r\n  templateUrl: './doughnut-chart.component.html',\r\n  styleUrls: ['./doughnut-chart.component.css']\r\n})\r\nexport class DoughnutChartComponent implements OnInit {\r\n  @ViewChild('chart') private ctx;\r\n  @Input() currentWidget: Doughnutchartwidget;\r\n  @Output() resizeFont = new EventEmitter<HTMLElement>();\r\n\r\n  protected user: User;\r\n  protected project: Project;\r\n  protected loginStatus: number;\r\n  protected currentPalette: string;\r\n  // isMonoVis in string:\r\n  myChart: any;\r\n  protected devicesList: SelectItem[] = [];\r\n  protected allDevicesList: SelectItem[] = [];\r\n  protected sensorList: SelectItem[] = [];\r\n  protected colorPaletteList: SelectItem[] = [{label: \"warm\", value: \"warm\"}, {label: \"cool\", value: \"cool\"},\r\n    {label: \"neon\", value: \"neon\"}];\r\n  protected distributionList: SelectItem[] = [{label: \"the states of all devices\", value: \"all\"},\r\n    {label: \"the states of a single actuator (%)\", value: \"actuator\"},{label: \"device types\", value: \"device\"}];\r\n  protected isCircleFull: string;\r\n  selectedDistribution: string;\r\n  public deviceEntities = [{\r\n    deviceId: '',\r\n    entityId: '',\r\n    label: '',\r\n    unit: '',\r\n  }];\r\n\r\n  chartType: string;\r\n  displaySettings: boolean = false;\r\n  public chartLabels: Array<string>;\r\n  public chartData: [{ label: string, data: Array<number>, backgroundColor: Array<string>}];\r\n  public chartOptions: any;\r\n\r\n  selectedStart: Date;\r\n  selectedEnd: Date;\r\n\r\n  constructor(private dataService: DataService,\r\n              private databaseService: DatabaseService,\r\n              private devicemanager: DeviceManagerService,\r\n              private visualmanager: VisualManagerService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.devicesList = [];\r\n    this.allDevicesList = [];\r\n    this.sensorList = [];\r\n    this.chartType = 'doughnut';\r\n    this.chartOptions = {\r\n      maintainAspectRatio: false,\r\n      responsive: true,\r\n      legend: {\r\n        display: true,\r\n        position: 'top'\r\n      },\r\n      rotation : -Math.PI / 2,\r\n      circumference : 2*Math.PI,\r\n      onResize: function (chart, size) {\r\n        //chart.options.legend.display = size.width > 400;\r\n        //chart.options.legend.position = (size.width > size.height) ? 'right' : 'bottom';\r\n        //console.log();\r\n        //chart.update();\r\n      }\r\n    };\r\n    this.dataService.projectData\r\n      .subscribe(value => {\r\n        this.project = value;\r\n      });\r\n    this.dataService.userData\r\n      .subscribe(value => {\r\n        this.user = value;\r\n      });\r\n\r\n    this.dataService.currentLoginStatus.subscribe(value => this.loginStatus = value);\r\n\r\n    //if (this.currentWidget.interval !== undefined) {this.timeType = this.currentWidget.interval;}\r\n\r\n    // fill deviceList for dropdown\r\n    this.fillDevicesList();\r\n    let dte = new Date();\r\n    dte.setDate(dte.getDate() - 2);\r\n    this.selectedStart = (this.currentWidget.startDate !== undefined)? new Date(this.currentWidget.startDate) : dte;\r\n    this.selectedEnd = (this.currentWidget.endDate !== undefined)? new Date(this.currentWidget.endDate) : new Date();\r\n\r\n    if (this.currentWidget.deviceEntities[0] !== undefined && this.currentWidget.deviceEntities[0].deviceId !== '') {\r\n      this.deviceEntities = this.currentWidget.deviceEntities;\r\n      if (this.currentWidget.deviceEntities[0].deviceId !== undefined) {\r\n        this.setSensorDropdown(this.currentWidget.deviceEntities[0].deviceId);\r\n      }\r\n    };\r\n\r\n    this.currentPalette = (this.currentWidget.colorPalette !== undefined)? this.currentWidget.colorPalette : this.colorPaletteList[0].value;\r\n    this.selectedDistribution = (this.currentWidget.distribution !== undefined)? this.currentWidget.distribution : this.distributionList[0].value;\r\n    this.isCircleFull = (this.currentWidget.isCircleFull !== undefined)? this.currentWidget.isCircleFull : \"true\";\r\n    // init chart attributes and chart object\r\n    this.myChart = new Chart(this.ctx.nativeElement, {\r\n      type: this.chartType,\r\n      data: {\r\n        labels: [],\r\n        datasets: []\r\n      },\r\n      options: this.chartOptions\r\n    });\r\n    this.setDoughnutCircle();\r\n    this.showChart(this.myChart);\r\n  }\r\n\r\n  // generates a timestamp in ISO standard as defined for the backend\r\n  private generateIsoDateTime(date: Date): string {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() + 1;\r\n    const day = date.getDate();\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n    const seconds = date.getSeconds();\r\n\r\n    const yearString = year.toString();\r\n    let dayString = day.toString();\r\n    let monthString = month.toString();\r\n    let hoursString = hours.toString();\r\n    let minutesString = minutes.toString();\r\n    let secondsString = seconds.toString();\r\n\r\n    if (day < 10) {\r\n      dayString = '0' + dayString;\r\n    }\r\n    if (month < 10) {\r\n      monthString = '0' + monthString;\r\n    }\r\n    if (hours < 10) {\r\n      hoursString = '0' + hoursString;\r\n    }\r\n    if (minutes < 10) {\r\n      minutesString = '0' + minutesString;\r\n    }\r\n    if (seconds < 10) {\r\n      secondsString = '0' + secondsString;\r\n    }\r\n\r\n    return yearString + '-' + monthString + '-' + dayString + 'T' + hoursString + ':' + minutesString + ':' + secondsString;\r\n  }\r\n\r\n  showChart(chart): void {\r\n    chart.data.labels = [];\r\n    let statedata = {'deviceId': '', 'actionId': '', 'states': [{number: 0, description: '', value: 0}]};\r\n    //let color = [];\r\n    let cIndex = 0;\r\n    // go through all selected devices\r\n    switch(this.selectedDistribution){\r\n      case \"actuator\":\r\n        this.setSingleChart();\r\n        break;\r\n      case \"device\":\r\n        this.setDeviceDistributionChart();\r\n        break;\r\n      case \"all\":\r\n      default:\r\n        this.setAllChart();\r\n        break;\r\n    }\r\n  }\r\n\r\n  setSingleChart(): void {\r\n    this.devicemanager.getDeviceById(this.deviceEntities[0].deviceId, this.user.id, this.project.id).subscribe((result) => {\r\n      // for stateful data values, the states have to be prepared\r\n        let states = [];\r\n        for (const action of result.actions) {\r\n          // get the selected action's states\r\n          if (!action.valueable && action.id === this.deviceEntities[0].entityId) {\r\n            for (const state of action.states) {\r\n              states.push({number: state.state, description: state.description, value: 0});\r\n            }\r\n            break;\r\n          }\r\n      }\r\n      console.log(\"single states: \", states);\r\n      // get Data from Backend\r\n      this.visualmanager.getTimeData(this.deviceEntities[0].deviceId, this.deviceEntities[0].entityId,\r\n        this.generateIsoDateTime(this.selectedStart), this.generateIsoDateTime(this.selectedEnd),\r\n        'P5D', this.user.id, this.project.id)\r\n        .subscribe((sensorDataModel: SensorDataModel) => {\r\n            console.log(\"result: \", sensorDataModel);\r\n            if (sensorDataModel.Values.length > 0){\r\n              let valueCount = 0;\r\n              let dateStart: Date = new Date(sensorDataModel.Values[0].DateTime);\r\n              let dateEnd: Date = new Date(sensorDataModel.Values[sensorDataModel.Values.length - 1].DateTime);\r\n              // we have to divide the total time by 3600000 to get hours instead of milliseconds\r\n              let timeTotal = (dateEnd.getTime() - dateStart.getTime()) / 3600000;\r\n\r\n                for (const value of sensorDataModel.Values) {\r\n                  let entityValue: number;\r\n                  if (value.FloatValue !== null){\r\n                    entityValue = value.FloatValue;\r\n                  } else {\r\n                    var vString = value.StringValue;\r\n                    // delete Temperature unit, which is added in Openhab\r\n                    vString = vString.replace(' °C', '');\r\n                    entityValue = Number(vString);\r\n                  }\r\n                  let len = sensorDataModel.Values.length;\r\n                  for (const state of states) {\r\n                    if (sensorDataModel.Values.indexOf(value) < len - 1) {\r\n                      if (entityValue === state.number) {\r\n                        // count how often the state is represented in the data.\r\n                        let start: Date = new Date(value.DateTime);\r\n                        let end: Date = new Date(sensorDataModel.Values[sensorDataModel.Values.indexOf(value) + 1].DateTime);\r\n\r\n                        state.value = state.value + ((end.getTime() - start.getTime()) / 3600000);\r\n                      }\r\n                    }\r\n                  }\r\n                  //console.log(\"stateData: \", statedata);\r\n                }\r\n                let total = 0;\r\n                for (const state of states) {\r\n                  total = total + state.value;\r\n                }\r\n                // add sensor data to the chartData.\r\n                // create ctxData\r\n                let stateValues = [];\r\n                for (const state of states) {\r\n                  // change values of states to percentage\r\n                  stateValues.push(Math.round(state.value*100/total));\r\n                  if (state.decription !== undefined) {\r\n                    this.myChart.data.labels.push(\"state \" + state.number + \" (\" + state.decription +\")\");\r\n                  } else {\r\n                    this.myChart.data.labels.push(\"state \" + state.number);\r\n                  }\r\n\r\n                }\r\n                const ctxData = {\r\n                  data: stateValues,\r\n                };\r\n                console.log('ctxData: ', ctxData);\r\n                this.myChart.data.datasets =[ctxData];\r\n                console.log(\"single data: \", this.myChart.data.datasets);\r\n                this.setChartColors(this.currentPalette);\r\n                this.myChart.update();\r\n              }\r\n          },\r\n          err => {\r\n            console.log('Error requesting historic data from backend ', err);\r\n          });\r\n    }, error => {\r\n      console.log('Error requesting device data from backend ');\r\n    });\r\n  }\r\n\r\n  setDeviceDistributionChart(): void {\r\n    let chartdata = [0,0];\r\n    let labels = [\"actuators\", \"sensors\"];\r\n    let observables: Observable<any>[] = [];\r\n    for (const elem of this.deviceEntities) {\r\n      observables.push(this.devicemanager.getDeviceById(elem.deviceId, this.user.id, this.project.id))\r\n    }\r\n    const observeable = forkJoin(observables);\r\n    observeable.subscribe(dataArray => {\r\n        // All observables in `observables` array have resolved and `dataArray` is an array of result of each observable\r\n        console.log(\"array subscriptions: \", dataArray);\r\n        for (const elem of dataArray) {\r\n          chartdata[0] = chartdata[0] + elem.actions.length;\r\n          chartdata[1] = chartdata[1] + elem.sensors.length;\r\n        }\r\n        this.myChart.data.datasets = [{data: chartdata}];\r\n        this.myChart.data.labels = labels;\r\n        this.myChart.update();\r\n        this.setChartColors(this.currentPalette);\r\n      },err => {\r\n        console.log(err);\r\n      });\r\n\r\n  }\r\n\r\n  setAllChart(): void {\r\n    let chartdata = [0,0,0,0];\r\n    let labels = [\"offline\", \"online\", \"maintenance\", \"error\"];\r\n    this.devicemanager.getAllDevices(this.user.id, this.project.id)\r\n      .subscribe(devices => {\r\n          console.log(\"number of devices: \", devices.length);\r\n          for (const device of devices) {\r\n            chartdata[Number(device.status)] = chartdata[Number(device.status)] + 1;\r\n          }\r\n          console.log(\"all chartData: \", chartdata);\r\n          this.myChart.data.datasets = [{data: chartdata}];\r\n          this.myChart.data.labels = labels;\r\n          this.myChart.update();\r\n          this.setChartColors(this.currentPalette);\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        });\r\n  }\r\n\r\n  // events\r\n  public chartClicked(e: any): void {\r\n  }\r\n\r\n  public chartHovered(e: any): void {\r\n  }\r\n\r\n  // updates an attribute of a chart (sub)object.\r\n  updateChartOption(chart, chartField, value): void {\r\n    chartField = value;\r\n    chart.update();\r\n  }\r\n\r\n  applySettings(): void {\r\n    console.log(\"dropdown: \", this.selectedDistribution);\r\n    this.displaySettings = false;\r\n    this.currentWidget.deviceEntities = this.deviceEntities;\r\n    this.currentWidget.chartType = this.chartType;\r\n    this.currentWidget.isCircleFull = this.isCircleFull;\r\n    this.currentWidget.colorPalette = this.currentPalette;\r\n    this.setDoughnutCircle();\r\n    //this.currentWidget.interval = this.timeType;\r\n    this.currentWidget.endDate = this.selectedEnd;\r\n    this.currentWidget.startDate = this.selectedStart;\r\n    this.currentWidget.distribution = this.selectedDistribution;\r\n    this.saveInDatabase(this.currentWidget.deviceEntities, 'deviceEntities');\r\n    this.saveInDatabase(this.currentWidget.chartType, 'chartType');\r\n    this.saveInDatabase(this.currentWidget.isCircleFull, 'isCircleFull');\r\n    this.saveInDatabase(this.currentWidget.colorPalette, 'colorPalette');\r\n    this.saveInDatabase(this.currentWidget.distribution, 'distribution');\r\n    //this.saveInDatabase(this.currentWidget.interval, 'interval');\r\n    this.saveInDatabase(this.currentWidget.startDate, 'startDate');\r\n    this.saveInDatabase(this.currentWidget.endDate, 'endDate');\r\n    // get data with new settings\r\n    this.showChart(this.myChart);\r\n  }\r\n\r\n  abortChanges(): void {\r\n    this.displaySettings = false;\r\n    // this.chartType = this.currentWidget.chartType;\r\n    this.selectedEnd = this.currentWidget.endDate;\r\n    this.selectedStart = this.currentWidget.startDate;\r\n    this.isCircleFull = this.currentWidget.isCircleFull;\r\n    this.currentPalette = this.currentWidget.colorPalette;\r\n    this.selectedDistribution = this.currentWidget.distribution;\r\n    //this.timeType = this.currentWidget.interval;\r\n    this.deviceEntities = this.currentWidget.deviceEntities;\r\n    this.setSensorDropdown(this.currentWidget.deviceEntities[0].deviceId);\r\n  }\r\n\r\n  /**\r\n   * This method saves the selected options into the database.\r\n   * @param value the value\r\n   * @param field the field where to store\r\n   */\r\n  protected saveInDatabase(value, field: string): void {\r\n    this.databaseService.updateDocument(this.databaseService.WIDGETSCOLLECTION, this.currentWidget.id, new Fieldvalue(field, value))\r\n      .subscribe(result => {\r\n      }, error => {\r\n        console.log('Error updating database entry ', error);\r\n      });\r\n  }\r\n\r\n  protected setSensorDropdown(deviceId: string): void {\r\n    // get list of all entities of the device\r\n    this.sensorList = [];\r\n    this.devicemanager.getDeviceById(deviceId, this.user.id, this.project.id)\r\n      .subscribe((device: Device) => {\r\n          if (device.actions !== null) {\r\n            for (const action of device.actions){\r\n              // push actions only when they have states\r\n              if (action.states !== null && action.states.length > 0){\r\n                this.sensorList.push({label: action.name, value: action.id});\r\n              }\r\n            }\r\n          }\r\n          // if there is only one element in sensorlist, preselect it for the dropdown\r\n          if (this.sensorList.length === 1){\r\n            this.deviceEntities[0].entityId = this.sensorList[0].value;\r\n          }\r\n        },\r\n        error => {\r\n          console.log('Error requesting devices from backend ', error);\r\n        });\r\n  }\r\n\r\n  // to fill the multi device dropdowns with compatible devices\r\n  protected fillDevicesList(){\r\n    // reset lists:\r\n    this.devicesList = [];\r\n    this.allDevicesList = [];\r\n    // get all devices\r\n    this.devicemanager.getAllDevices(this.user.id, this.project.id)\r\n      .subscribe(devices => {\r\n          for (const device of devices) {\r\n            let isCompatible: boolean = false;\r\n            if (device.actions !== null) {\r\n              for (const action of device.actions) {\r\n                // only add devices with stateful actuators to the list\r\n                if (action.states.length > 0) {\r\n                  isCompatible = true;\r\n                  break;\r\n                }\r\n              }\r\n              if ( isCompatible ) { this.devicesList.push({label: device.name, value: device.deviceId}); }\r\n            }\r\n            this.allDevicesList.push({label: device.name, value: device.deviceId});\r\n          }\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        });\r\n  }\r\n\r\n  setDoughnutCircle(): void {\r\n    if (this.isCircleFull === \"true\") {\r\n      this.myChart.options.rotation = -Math.PI / 2;\r\n      this.myChart.options.circumference = 2*Math.PI;\r\n    } else {\r\n      this.myChart.options.rotation = -Math.PI;\r\n      this.myChart.options.circumference = Math.PI;\r\n    }\r\n  }\r\n\r\n  calculateStateDistribution(list: SensorDataModel['Values'], states, totalTime): void {\r\n  }\r\n\r\n  // function to set color-blinded-friendly colors to the doughnut\r\n  setChartColors(palette): void {\r\n    console.log(\"palette: \", palette);\r\n    if (!palette) palette = this.currentPalette;\r\n    this.currentPalette = palette;\r\n\r\n    /*Gradients\r\n      The keys are percentage and the values are the color in a rgba format.\r\n      You can have as many \"color stops\" (%) as you like.\r\n      0% and 100% is not optional.*/\r\n    var gradient;\r\n    switch (palette) {\r\n      case 'cool':\r\n        gradient = {\r\n          0: [255, 255, 255, 1],\r\n          20: [220, 237, 200, 1],\r\n          45: [66, 179, 213, 1],\r\n          65: [26, 39, 62, 1],\r\n          100: [0, 0, 0, 1]\r\n        };\r\n        break;\r\n      case 'warm':\r\n        gradient = {\r\n          0: [255, 255, 255, 1],\r\n          20: [254, 235, 101, 1],\r\n          45: [228, 82, 27, 1],\r\n          65: [77, 52, 47, 1],\r\n          100: [0, 0, 0, 1]\r\n        };\r\n        break;\r\n      case 'neon':\r\n      default:\r\n        gradient = {\r\n          0: [255, 255, 255, 1],\r\n          20: [255, 236, 179, 1],\r\n          45: [232, 82, 133, 1],\r\n          65: [106, 27, 154, 1],\r\n          100: [0, 0, 0, 1]\r\n        };\r\n        break;\r\n    }\r\n\r\n    //Get a sorted array of the gradient keys\r\n    var gradientKeys = Object.keys(gradient);\r\n    gradientKeys.sort(function(a, b) {\r\n      return +a - +b;\r\n    });\r\n\r\n    //Find datasets and length\r\n    var chartType = this.currentWidget.chartType;\r\n    switch (chartType) {\r\n      case \"pie\":\r\n      case \"doughnut\":\r\n        var datasets = this.myChart.config.data.datasets[0];\r\n        var setsCount = datasets.data.length;\r\n        break;\r\n      case \"bar\":\r\n      case \"line\":\r\n        var datasets = this.myChart.config.data.datasets;\r\n        var setsCount = datasets.length;\r\n        break;\r\n    }\r\n\r\n    //Calculate colors\r\n    var chartColors = [];\r\n    for (var i = 0; i < setsCount; i++) {\r\n      var gradientIndex = (i + 1) * (100 / (setsCount + 1)); //Find where to get a color from the gradient\r\n      for (var j = 0; j < gradientKeys.length; j++) {\r\n        var gradientKey = gradientKeys[j];\r\n        if (gradientIndex === +gradientKey) { //Exact match with a gradient key - just get that color\r\n          chartColors[i] = 'rgba(' + gradient[gradientKey].toString() + ')';\r\n          break;\r\n        } else if (gradientIndex < +gradientKey) { //It's somewhere between this gradient key and the previous\r\n          var prevKey = gradientKeys[j - 1];\r\n          var gradientPartIndex = (gradientIndex - Number(prevKey)) / (Number(gradientKey) - Number(prevKey)); //Calculate where\r\n          var color = [];\r\n          for (var k = 0; k < 4; k++) { //Loop through Red, Green, Blue and Alpha and calculate the correct color and opacity\r\n            color[k] = gradient[prevKey][k] - ((gradient[prevKey][k] - gradient[gradientKey][k]) * gradientPartIndex);\r\n            if (k < 3) color[k] = Math.round(color[k]);\r\n          }\r\n          chartColors[i] = 'rgba(' + color.toString() + ')';\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    //Copy colors to the chart\r\n    for (i = 0; i < setsCount; i++) {\r\n      switch (chartType) {\r\n        case \"pie\":\r\n        case \"polar\":\r\n        case \"doughnut\":\r\n          if (!datasets.backgroundColor) datasets.backgroundColor = [];\r\n          datasets.backgroundColor[i] = chartColors[i];\r\n          if (!datasets.borderColor) datasets.borderColor = [];\r\n          datasets.borderColor[i] = \"rgba(255,255,255,1)\";\r\n          break;\r\n        case \"bar\":\r\n          datasets[i].backgroundColor = chartColors[i];\r\n          datasets[i].borderColor = \"rgba(255,255,255,0)\";\r\n          break;\r\n        case \"line\":\r\n          datasets[i].borderColor = chartColors[i];\r\n          datasets[i].backgroundColor = \"rgba(255,255,255,0)\";\r\n          break;\r\n      }\r\n    }\r\n\r\n    //Update the chart to show the new colors\r\n    this.myChart.update();\r\n  }\r\n\r\n  setDistributionParameters(): void {\r\n    // if we have device type, we need to empty the entity parameter\r\n    if (this.selectedDistribution === \"device\"){\r\n      this.deviceEntities[0].entityId === undefined;\r\n    } else if (this.selectedDistribution === \"actuator\") {\r\n      // delete all deviceentities but the first\r\n      while(this.deviceEntities.length > 1) {\r\n        this.deviceEntities.pop();\r\n      }\r\n    } else if (this.selectedDistribution === \"all\") {\r\n      //this.deviceEntities = [];\r\n    }\r\n  }\r\n\r\n  protected addNewDropdowns() {\r\n    this.deviceEntities.push({deviceId: '', entityId: '', label: '', unit: ''});\r\n    //this.chartData.push({label: '', data: [], borderColor: '', fill: false});\r\n  }\r\n\r\n  protected deleteDropdowns(group: DoughnutChartDeviceEntity) {\r\n    let i = 0;\r\n    // console.log(\"Dropdownlist: \", this.dropdownList);\r\n    let dropdownListCopy = this.deviceEntities;\r\n    for (let elem of this.deviceEntities) {\r\n      if (elem.deviceId === group.deviceId) {\r\n        dropdownListCopy.splice(i, 1);\r\n        // if the arrays have the same length, the chartData of the entity has to be deleted as well\r\n        console.log('Dropdownlist after DELETE: ', dropdownListCopy);\r\n      }\r\n      i++;\r\n    }\r\n    this.deviceEntities = dropdownListCopy;\r\n    console.log('Dropdownlist final: ', this.deviceEntities);\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \".widgetDesign {\\r\\n  position: relative;\\r\\n  width: 12vw;\\r\\n  height: 18vh;\\r\\n  float: left;\\r\\n  margin: 2vh 2vw 0 0;\\r\\n  background-color: white;\\r\\n  border-radius: 25px;\\r\\n  box-shadow: 3px 3px 2px lightgrey;\\r\\n  transition: all 0.3s;\\r\\n  border-color: #668BCC;\\r\\n  border-style: solid;\\r\\n  border-width: 0 0 0 5px;\\r\\n  padding-left: 1vw;\\r\\n  overflow: hidden;\\r\\n  -o-object-fit: scale-down;\\r\\n     object-fit: scale-down;\\r\\n}\\r\\n\\r\\n.widgetDesign:hover {\\r\\n  background-color: #eeeeee;\\r\\n  overflow: visible;\\r\\n}\\r\\n\\r\\n.ui-widget-overlay\\r\\n{\\r\\n  z-index: 0;\\r\\n}\\r\\n\\r\\n.ui-dialog{\\r\\n  z-index: 20;\\r\\n}\\r\\n\\r\\n.nameChanger {\\r\\n  width: 5vw;\\r\\n}\\r\\n\\r\\n.settingsDialog {\\r\\n  width: 500px !important;\\r\\n  height: 600px !important;\\r\\n}\\r\\n\\r\\n.ui-tieredmenu{\\r\\n  left: -200px !important;\\r\\n}\\r\\n\\r\\n.interval-input{\\r\\n  width: 60px;\\r\\n}\\r\\n\\r\\n.widgetContainer {\\r\\n  padding: 0 1vw 1vh 2vw;\\r\\n}\\r\\n\\r\\n.settings-button {\\r\\n  transition: all 0.5s;\\r\\n  position: absolute;\\r\\n  right: 75px;\\r\\n  top: 5px;\\r\\n}\\r\\n\\r\\n.realTimeFont{\\r\\n  /*font-size: 40px;*/\\r\\n}\\r\\n\\r\\n.graph-canvas{\\r\\n  width: 100%;\\r\\n  height: 95% !important;\\r\\n}\\r\\n\\r\\n.graph-button {\\r\\n  position: absolute;\\r\\n  top: 135px;\\r\\n  right: 0;\\r\\n}\\r\\n\\r\\n.device-select {\\r\\n  transition: all 0.5s;\\r\\n  position: absolute;\\r\\n  top: 55px;\\r\\n}\\r\\n\\r\\nhr {\\r\\n  display: block;\\r\\n  height: 1px;\\r\\n  border: 0;\\r\\n  border-top: 1px solid #ccc;\\r\\n  margin: 1em 0;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<p-dialog header=\\\"Polar Area Chart Settings\\\" [modal]=true appendTo=\\\"body\\\" [width]=\\\"700\\\"\\r\\n          [(visible)]=\\\"displaySettings\\\" [closable]=\\\"false\\\">\\r\\n  <div class=\\\"ui-g\\\">\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <h3>Input Data</h3>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">Sensor Type:</div>\\r\\n      <p-dropdown appendTo=\\\"body\\\" [options]=\\\"deviceTypeList\\\"\\r\\n                  [(ngModel)]=\\\"this.selectedDeviceType\\\" [group]=\\\"true\\\"\\r\\n                  [style]=\\\"{'min-width':'200px'}\\\" (onChange)=\\\"calculateLocationNumber();\\\" placeholder=\\\"Select a device type\\\" (onClick)=\\\"$event.stopPropagation();$event.preventDefault();\\\">\\r\\n      </p-dropdown>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n     There is/are currently {{this.numberOfLocations}} device(s) with this type.\\r\\n    </div>\\r\\n    <!--div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">Location: </div>\\r\\n      <p-dropdown appendTo=\\\"body\\\" [options]=\\\"locationsList\\\"\\r\\n                  [filter]=\\\"true\\\" [(ngModel)]=\\\"this.selectedLocation\\\"\\r\\n                  [style]=\\\"{'min-width':'200px'}\\\" (onChange)=\\\"setDeviceList(this.selectedLocation)\\\" placeholder=\\\"Select a location\\\" (onClick)=\\\"$event.stopPropagation();$event.preventDefault();\\\">\\r\\n      </p-dropdown>\\r\\n    </div-->\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">Time Period:</div>\\r\\n      <div class=\\\"ui-g-2 grid-elem\\\">from</div>\\r\\n      <p-calendar [(ngModel)]=\\\"selectedStart\\\" [showTime]=\\\"true\\\" [showIcon]=\\\"true\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"1970:2020\\\" appendTo=\\\"body\\\"></p-calendar>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\"></div>\\r\\n      <div class=\\\"ui-g-2 grid-elem\\\">to</div>\\r\\n      <p-calendar [(ngModel)]=\\\"selectedEnd\\\" [showTime]=\\\"true\\\" [showIcon]=\\\"true\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"1970:2020\\\" appendTo=\\\"body\\\"></p-calendar>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">Calculation:</div>\\r\\n      <p-dropdown [autoWidth]=\\\"true\\\" [placeholder]=\\\"'Select a calculation type'\\\"\\r\\n                  [options]=\\\"calculationList\\\" [(ngModel)]=\\\"calculationType\\\"\\r\\n                  [style]=\\\"{'width':'200px'}\\\"  appendTo=\\\"body\\\">\\r\\n      </p-dropdown>\\r\\n      <div class=\\\"dropdown\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <h3>Representation</h3>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 grid-elem\\\">\\r\\n      <div class=\\\"ui-g-4 grid-elem\\\">Color family:</div>\\r\\n      <p-dropdown appendTo=\\\"body\\\" [options]=\\\"colorPaletteList\\\" [filter]=\\\"true\\\" [(ngModel)]=\\\"currentPalette\\\"\\r\\n                  [style]=\\\"{'width':'200px'}\\\" placeholder=\\\"Select a color family\\\" (onClick)=\\\"$event.stopPropagation();$event.preventDefault();\\\">\\r\\n      </p-dropdown>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"ui-g-12\\\" style=\\\"width:10px;\\\"></div>\\r\\n\\r\\n  </div>\\r\\n  <p-footer>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"fa-check\\\" (click)=\\\"applySettings();\\\" label=\\\"Apply\\\"></button>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"fa-close\\\" (click)=\\\"abortChanges()\\\" label=\\\"Cancel\\\"></button>\\r\\n  </p-footer>\\r\\n</p-dialog>\\r\\n<button pButton icon=\\\"fa fa-cog\\\" style=\\\"z-index: 6;\\\" class=\\\"settings-button transparentButton tbutton ui-button-secondary\\\"\\r\\n        (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" (click)=\\\"displaySettings=true;\\\"\\r\\n        [hidden]=\\\" !(loginStatus>1 && currentWidget.isDeveloped)\\\"></button>\\r\\n<!--*ngIf=\\\"myChart != undefined && myChart.data!= undefined && myChart.data.datasets != []\\\"-->\\r\\n<div  class=\\\"graph-canvas\\\">\\r\\n  <canvas #chart>{{myChart}}</canvas>\\r\\n</div>\\r\\n<!--div style=\\\"text-align: center;\\\">\\r\\n  <p-message *ngIf=\\\"isEmpty\\\" severity=\\\"info\\\" text=\\\"You selected device entities without historical data.\\\"></p-message>\\r\\n</div-->\\r\\n\\r\\n\\r\\n\"","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {Observable} from \"rxjs/Observable\";\r\nimport {forkJoin} from \"rxjs/index\";\r\nimport {Chart} from 'chart.js';\r\nimport {SensorDataModel} from \"../../../../../../../models/backend/sensordatamodel\";\r\nimport {DeviceManagerService} from \"../../../../../../../services/devicemanager.service\";\r\nimport {Device} from \"../../../../../../../models/backend/device\";\r\nimport {Project} from \"../../../../../../../models/frontend/project\";\r\nimport {DoughnutChartDeviceEntity, Doughnutchartwidget} from \"../../../../../../../models/frontend/doughnutchartwidget\";\r\nimport {SelectItem} from \"primeng/api\";\r\nimport {DataService} from \"../../../../../../../services/data.service\";\r\nimport {Fieldvalue} from \"../../../../../../../models/frontend/fieldvalue\";\r\nimport {DatabaseService} from \"../../../../../../../services/database.service\";\r\nimport {VisualManagerService} from \"../../../../../../../services/visualmanager.service\";\r\nimport {User} from \"../../../../../../../models/frontend/user\";\r\nimport { Router } from '@angular/router';\r\nimport {PolarAreaChartWidget, ActuatorType, SensorType, ISensorListElem, Calculation, Distribution, IPolarChartDeviceEntity} from \"../../../../../../../models/frontend/polarareachartwidget\";\r\n\r\n@Component({\r\n  selector: 'polar-area-chart-visualization',\r\n  templateUrl: './polar-area-chart-visualization.component.html',\r\n  styleUrls: ['./polar-area-chart-visualization.component.css']\r\n})\r\nexport class PolarAreaChartVisualizationComponent implements OnInit {\r\n  @ViewChild('chart') private ctx;\r\n  @Input() currentWidget: PolarAreaChartWidget;\r\n  @Output() resizeFont = new EventEmitter<HTMLElement>();\r\n\r\n  protected user: User;\r\n  protected project: Project;\r\n  protected loginStatus: number;\r\n  protected currentPalette: string;\r\n  protected calculationType: Calculation = Calculation.Avg;\r\n  myChart: any;\r\n  protected devicesList: SelectItem[] = [];\r\n  protected colorPaletteList: SelectItem[] = [{label: \"warm\", value: \"warm\"}, {label: \"cool\", value: \"cool\"},\r\n    {label: \"neon\", value: \"neon\"}];\r\n  protected calculationList: Array<SelectItem> = [{label: Calculation.Avg, value: Calculation.Avg},\r\n    {label: Calculation.Min, value: Calculation.Min}, {label: Calculation.Max, value: Calculation.Max}];\r\n  protected deviceTypeList : Array<any> = [];\r\n  selectedDeviceType: string;\r\n  protected locationsList: SelectItem[] = [];\r\n  selectedLocation: string;\r\n  protected numberOfLocations: number;\r\n\r\n  public deviceEntities: Array<IPolarChartDeviceEntity> = [];\r\n\r\n  chartType: string;\r\n  displaySettings: boolean = false;\r\n  //public chartLabels: Array<string>;\r\n  public chartData: [{ label: string, data: Array<number>, backgroundColor: Array<string>}];\r\n  public chartOptions: any;\r\n\r\n  selectedStart: Date;\r\n  selectedEnd: Date;\r\n\r\n  constructor(private dataService: DataService,\r\n              private databaseService: DatabaseService,\r\n              private devicemanager: DeviceManagerService,\r\n              private visualmanager: VisualManagerService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.devicesList = [];\r\n    this.chartType = 'polarArea';\r\n    this.chartOptions = {\r\n      maintainAspectRatio: false,\r\n      responsive: true,\r\n      legend: {\r\n        display: true,\r\n        position: 'top'\r\n      },\r\n      //rotation : -Math.PI / 2,\r\n      onResize: function (chart, size) {\r\n        //chart.options.legend.display = size.width > 400;\r\n        //chart.options.legend.position = (size.width > size.height) ? 'right' : 'bottom';\r\n        //console.log();\r\n        //chart.update();\r\n      }\r\n    };\r\n    this.dataService.projectData\r\n      .subscribe(value => {\r\n        this.project = value;\r\n      });\r\n    this.dataService.userData\r\n      .subscribe(value => {\r\n        this.user = value;\r\n      });\r\n\r\n    this.dataService.currentLoginStatus.subscribe(value => this.loginStatus = value);\r\n    let dte = new Date();\r\n    dte.setDate(dte.getDate() - 2);\r\n    this.selectedStart = (this.currentWidget.startDate !== undefined)? new Date(this.currentWidget.startDate) : dte;\r\n    this.selectedEnd = (this.currentWidget.endDate !== undefined)? new Date(this.currentWidget.endDate) : new Date();\r\n\r\n    this.currentPalette = (this.currentWidget.colorPalette !== undefined)? this.currentWidget.colorPalette : this.colorPaletteList[0].value;\r\n    // init chart attributes and chart object\r\n    this.myChart = new Chart(this.ctx.nativeElement, {\r\n      type: this.chartType,\r\n      data: {\r\n        labels: [],\r\n        datasets: []\r\n      },\r\n      options: this.chartOptions\r\n    });\r\n\r\n   //init devicetypelist\r\n    this.devicemanager.getAllSensorTypes(this.user.id, this.project.id).subscribe(result => {\r\n      let sensorItems = result.types.map(elem => {\r\n          return {label: elem.type, value: elem.type};\r\n        });\r\n      this.deviceTypeList = [{label: 'Types of sensors', value: 'sensorType', items: sensorItems}];\r\n        this.devicemanager.getAllActuatorTypes(this.user.id, this.project.id).subscribe(result2 => {\r\n            let actuatorItems = result2.map(elem => {\r\n              return {label: elem, value: elem};\r\n            });\r\n            let deviceTypelist2 = this.deviceTypeList.concat({label: 'Types of actuators', value: 'actuatorType', items: actuatorItems})\r\n            this.deviceTypeList = deviceTypelist2;\r\n          },\r\n          err => {\r\n            if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n              this.router.navigate(['unauthorized']); }\r\n            console.log(err);\r\n          });\r\n      },\r\n      err => {\r\n        if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n          this.router.navigate(['unauthorized']); }\r\n        console.log(err);\r\n      });\r\n\r\n    // init Devicetype\r\n    if (this.currentWidget.deviceType !== ''){\r\n      this.selectedDeviceType = this.currentWidget.deviceType;\r\n      this.calculateLocationNumber();\r\n      this.applySettings();\r\n      //this.setDevicesByTypeList(this.currentWidget.deviceType);\r\n    }\r\n  }\r\n\r\n  // generates a timestamp in ISO standard as defined for the backend\r\n  private generateIsoDateTime(date: Date): string {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() + 1;\r\n    const day = date.getDate();\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n    const seconds = date.getSeconds();\r\n\r\n    const yearString = year.toString();\r\n    let dayString = day.toString();\r\n    let monthString = month.toString();\r\n    let hoursString = hours.toString();\r\n    let minutesString = minutes.toString();\r\n    let secondsString = seconds.toString();\r\n\r\n    if (day < 10) {\r\n      dayString = '0' + dayString;\r\n    }\r\n    if (month < 10) {\r\n      monthString = '0' + monthString;\r\n    }\r\n    if (hours < 10) {\r\n      hoursString = '0' + hoursString;\r\n    }\r\n    if (minutes < 10) {\r\n      minutesString = '0' + minutesString;\r\n    }\r\n    if (seconds < 10) {\r\n      secondsString = '0' + secondsString;\r\n    }\r\n\r\n    return yearString + '-' + monthString + '-' + dayString + 'T' + hoursString + ':' + minutesString + ':' + secondsString;\r\n  }\r\n\r\n  showChart(chart): void {\r\n    console.log(\"showchart\");\r\n    chart.data.labels = [];\r\n    chart.data.datasets = [{data:[], backgroundColor:[]}];\r\n    console.log(\"chart at beginnung: \", chart.data);\r\n    console.log(\"deviceEntities at beginning: \", this.deviceEntities);\r\n    //let color = [];\r\n    let cIndex = 0;\r\n    let ctxData = {labels:[],data:[]};\r\n    let observables: Observable<any>[] = [];\r\n    for (const elem of this.deviceEntities) {\r\n      console.log(\"elem: \", elem);\r\n      observables.push(this.visualmanager.getTimeData(elem.deviceId, elem.entityId,\r\n        this.generateIsoDateTime(this.selectedStart), this.generateIsoDateTime(this.selectedEnd),\r\n        'P5D', this.user.id, this.project.id));\r\n    }\r\n    console.log(\"observebales length: \", observables.length);\r\n    const observeable = forkJoin(observables);\r\n    observeable.subscribe(dataArray => {\r\n      // All observables in `observables` array have resolved and `dataArray` is an array of result of each observable\r\n      console.log(\"array subscriptions: \", dataArray);\r\n      for (const elem of dataArray) {\r\n        console.log(\"elem dataArray: \", elem);\r\n        if (elem.Values.length > 0) {\r\n          let valueCount = 0;\r\n          let dateStart: Date = new Date(elem.Values[0].DateTime);\r\n          let dateEnd: Date = new Date(elem.Values[elem.Values.length - 1].DateTime);\r\n          // we have to divide the total time by 3600000 to get hours instead of milliseconds\r\n          let timeTotal = (dateEnd.getTime() - dateStart.getTime()) / 3600000;\r\n          let value = 0;\r\n          switch (this.calculationType) {\r\n            case Calculation.Avg:\r\n              value = this.calculateAverage(elem.Values, timeTotal);\r\n              break;\r\n            case Calculation.Max:\r\n              value = this.calculateMaximum(elem.Values);\r\n              break;\r\n            case Calculation.Min:\r\n            default:\r\n              value = this.calculateMinimum(elem.Values);\r\n              break;\r\n          }\r\n\r\n          // add sensor data to the chartData.\r\n          this.devicemanager.getDeviceById(this.deviceEntities[dataArray.indexOf(elem)].deviceId, this.user.id, this.project.id).subscribe(result => {\r\n            chart.data.labels.push(result.location);\r\n            chart.data.datasets[0].data.push(value);\r\n            if (chart.data.datasets[0].data.length >= chart.data.datasets[0].backgroundColor.length){\r\n              this.setChartColors(this.currentPalette);\r\n              chart.update();\r\n            }\r\n          });\r\n\r\n        }\r\n      }\r\n\r\n    },err => {\r\n      console.log(err);\r\n    });\r\n\r\n  }\r\n\r\n  // events\r\n  public chartClicked(e: any): void {\r\n  }\r\n\r\n  public chartHovered(e: any): void {\r\n  }\r\n\r\n  // updates an attribute of a chart (sub)object.\r\n  updateChartOption(chart, chartField, value): void {\r\n    chartField = value;\r\n    chart.update();\r\n  }\r\n\r\n  applySettings(): void {\r\n    this.displaySettings = false;\r\n    this.currentWidget.chartType = this.chartType;\r\n    this.currentWidget.colorPalette = this.currentPalette;\r\n    console.log(\"color: \", this.currentPalette);\r\n    //this.currentWidget.interval = this.timeType;\r\n    this.currentWidget.endDate = this.selectedEnd;\r\n    this.currentWidget.startDate = this.selectedStart;\r\n    this.currentWidget.calculationType = this.calculationType;\r\n    this.currentWidget.deviceType = this.selectedDeviceType;\r\n    this.currentWidget.location = this.selectedLocation;\r\n    this.saveInDatabase(this.currentWidget.chartType, 'chartType');\r\n    this.saveInDatabase(this.currentWidget.colorPalette, 'colorPalette');\r\n    this.saveInDatabase(this.currentWidget.calculationType, 'calculationType');\r\n    //this.saveInDatabase(this.currentWidget.interval, 'interval');\r\n    this.saveInDatabase(this.currentWidget.startDate, 'startDate');\r\n    this.saveInDatabase(this.currentWidget.endDate, 'endDate');\r\n    this.saveInDatabase(this.currentWidget.location, 'location');\r\n    this.saveInDatabase(this.currentWidget.deviceType, 'deviceType');\r\n    // get data with new settings\r\n    this.setDevicesByTypeList(this.selectedDeviceType);\r\n  }\r\n\r\n  abortChanges(): void {\r\n    this.displaySettings = false;\r\n    // this.chartType = this.currentWidget.chartType;\r\n    this.selectedEnd = this.currentWidget.endDate;\r\n    this.selectedStart = this.currentWidget.startDate;\r\n    this.currentPalette = this.currentWidget.colorPalette;\r\n    //this.timeType = this.currentWidget.interval;\r\n    this.selectedDeviceType = this.currentWidget.deviceType;\r\n    this.selectedLocation = this.currentWidget.location;\r\n    this.calculationType = this.currentWidget.calculationType;\r\n  }\r\n\r\n  /**\r\n   * This method saves the selected options into the database.\r\n   * @param value the value\r\n   * @param field the field where to store\r\n   */\r\n  protected saveInDatabase(value, field: string): void {\r\n    this.databaseService.updateDocument(this.databaseService.WIDGETSCOLLECTION, this.currentWidget.id, new Fieldvalue(field, value))\r\n      .subscribe(result => {\r\n      }, error => {\r\n        console.log('Error updating database entry ', error);\r\n      });\r\n  }\r\n\r\n  // when changing the location, the devicelist has to be renewed\r\n  protected setDeviceList(location: string) {\r\n    // get all devices\r\n    this.devicemanager.getDevicesByLocation(location, this.user.id, this.project.id)\r\n      .subscribe(devices => {\r\n        let newDeviceEntities: IPolarChartDeviceEntity[] = [];\r\n        // go through all devices of the location-based list\r\n        for (const device of devices) {\r\n          // go through all devices of the type-based list and filter the ones with the selected location\r\n          for (const device2 of this.deviceEntities) {\r\n            if (device.deviceId === device2.deviceId) {\r\n              newDeviceEntities.push(device2);\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        this.deviceEntities = newDeviceEntities;\r\n        console.log(\"endresult device list: \", this.deviceEntities);\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        });\r\n  }\r\n\r\n  protected calculateLocationNumber(): void {\r\n    // reset list:\r\n    this.locationsList = [];\r\n    // get all devices\r\n    this.devicemanager.getDevicesByEntityType(this.selectedDeviceType, this.user.id, this.project.id)\r\n      .subscribe(devices => {\r\n          let contains: boolean = false;\r\n          // go through all devices\r\n          for (const device of devices) {\r\n            // go through locationlist\r\n            for (const loc of this.locationsList){\r\n              // if location of this device is already in list, set boolean variable\r\n              if (loc['value'] === device.location) {\r\n                contains = true;\r\n                break;\r\n              }\r\n            }\r\n            // if this location is not yet in the list, add it to the list\r\n            if (contains === false){\r\n              this.locationsList.push({label: device.location, value: device.location});\r\n            }\r\n          }\r\n          this.numberOfLocations = this.locationsList.length;\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        });\r\n  }\r\n\r\n  // when changing the device type, the devicelist has to be cleared and renewed\r\n  protected setDevicesByTypeList(entityType: string) {\r\n    // reset list:\r\n    this.deviceEntities = [];\r\n    this.locationsList = [];\r\n    // get all devices\r\n    //let sensorType =\r\n    this.devicemanager.getDevicesByEntityType(entityType, this.user.id, this.project.id)\r\n      .subscribe(devices => {\r\n        console.log(\"devices \", devices);\r\n          let contains: boolean = false;\r\n          // go through all devices\r\n          for (const device of devices) {\r\n            // go through all sensors and actuators and add the sensors/actuators with the selected device type to the deviceEntities List\r\n            for (const sensor of device.sensors){\r\n\r\n              if (sensor.type === this.selectedDeviceType){\r\n                this.deviceEntities.push({deviceId: device.deviceId, entityId: sensor.id});\r\n              }\r\n            }\r\n            for (const action of device.actions){\r\n              if (action.type === this.selectedDeviceType){\r\n                this.deviceEntities.push({deviceId: device.deviceId, entityId: action.id});\r\n              }\r\n            }\r\n          }\r\n          // get Data from Devices\r\n          console.log(\"deviceEntities: \", this.deviceEntities);\r\n          if (this.deviceEntities.length > 0){\r\n            this.showChart(this.myChart);\r\n          }\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        });\r\n  }\r\n\r\n  // function to set color-blinded-friendly colors\r\n  protected setChartColors(palette): void {\r\n    console.log(\"palette: \", palette);\r\n    if (!palette) palette = this.currentPalette;\r\n    this.currentPalette = palette;\r\n\r\n    /*Gradients\r\n      The keys are percentage and the values are the color in a rgba format.\r\n      You can have as many \"color stops\" (%) as you like.\r\n      0% and 100% is not optional.*/\r\n    var gradient;\r\n    switch (palette) {\r\n      case 'cool':\r\n        gradient = {\r\n          0: [255, 255, 255, 1],\r\n          20: [220, 237, 200, 1],\r\n          45: [66, 179, 213, 1],\r\n          65: [26, 39, 62, 1],\r\n          100: [0, 0, 0, 1]\r\n        };\r\n        break;\r\n      case 'warm':\r\n        gradient = {\r\n          0: [255, 255, 255, 1],\r\n          20: [254, 235, 101, 1],\r\n          45: [228, 82, 27, 1],\r\n          65: [77, 52, 47, 1],\r\n          100: [0, 0, 0, 1]\r\n        };\r\n        break;\r\n      case 'neon':\r\n      default:\r\n        gradient = {\r\n          0: [255, 255, 255, 1],\r\n          20: [255, 236, 179, 1],\r\n          45: [232, 82, 133, 1],\r\n          65: [106, 27, 154, 1],\r\n          100: [0, 0, 0, 1]\r\n        };\r\n        break;\r\n    }\r\n\r\n    //Get a sorted array of the gradient keys\r\n    var gradientKeys = Object.keys(gradient);\r\n    gradientKeys.sort(function(a, b) {\r\n      return +a - +b;\r\n    });\r\n\r\n    //Find datasets and length\r\n    var chartType = this.currentWidget.chartType;\r\n    switch (chartType) {\r\n      case \"pie\":\r\n      case \"doughnut\":\r\n      case \"polarArea\":\r\n        var datasets = this.myChart.config.data.datasets[0];\r\n        var setsCount = datasets.data.length;\r\n        break;\r\n      case \"bubble\":\r\n      case \"bar\":\r\n      case \"line\":\r\n        var datasets = this.myChart.config.data.datasets;\r\n        var setsCount = datasets.length;\r\n        break;\r\n    }\r\n  console.log(\"setscount: \", setsCount);\r\n    //Calculate colors\r\n    var chartColors = [];\r\n    for (var i = 0; i < setsCount; i++) {\r\n      var gradientIndex = (i + 1) * (100 / (setsCount + 1)); //Find where to get a color from the gradient\r\n      for (var j = 0; j < gradientKeys.length; j++) {\r\n        var gradientKey = gradientKeys[j];\r\n        if (gradientIndex === +gradientKey) { //Exact match with a gradient key - just get that color\r\n          chartColors[i] = 'rgba(' + gradient[gradientKey].toString() + ')';\r\n          break;\r\n        } else if (gradientIndex < +gradientKey) { //It's somewhere between this gradient key and the previous\r\n          var prevKey = gradientKeys[j - 1];\r\n          var gradientPartIndex = (gradientIndex - Number(prevKey)) / (Number(gradientKey) - Number(prevKey)); //Calculate where\r\n          var color = [];\r\n          for (var k = 0; k < 4; k++) { //Loop through Red, Green, Blue and Alpha and calculate the correct color and opacity\r\n            color[k] = gradient[prevKey][k] - ((gradient[prevKey][k] - gradient[gradientKey][k]) * gradientPartIndex);\r\n            if (k < 3) color[k] = Math.round(color[k]);\r\n          }\r\n          chartColors[i] = 'rgba(' + color.toString() + ')';\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    //Copy colors to the chart\r\n    for (i = 0; i < setsCount; i++) {\r\n      switch (chartType) {\r\n        case \"pie\":\r\n        case \"polarArea\":\r\n        case \"doughnut\":\r\n          if (!datasets.backgroundColor) datasets.backgroundColor = [];\r\n          datasets.backgroundColor[i] = chartColors[i];\r\n          if (!datasets.borderColor) datasets.borderColor = [];\r\n          datasets.borderColor[i] = \"rgba(255,255,255,1)\";\r\n          break;\r\n        case \"bubble\":\r\n        case \"bar\":\r\n          datasets[i].backgroundColor = chartColors[i];\r\n          datasets[i].borderColor = \"rgba(255,255,255,0)\";\r\n          break;\r\n        case \"line\":\r\n          datasets[i].borderColor = chartColors[i];\r\n          datasets[i].backgroundColor = \"rgba(255,255,255,0)\";\r\n          break;\r\n      }\r\n    }\r\n\r\n    //Update the chart to show the new colors\r\n    this.myChart.update();\r\n  }\r\n\r\n  calculateAverage(list: SensorDataModel['Values'], totalTime): number {\r\n    let avg = 0;\r\n    let start: Date;\r\n    let end: Date;\r\n    let entityValue: number;\r\n    for (const value of list) {\r\n      if (list.indexOf(value) < (list.length - 1)){\r\n        start = new Date(value.DateTime);\r\n        end = new Date(list[list.indexOf(value) + 1].DateTime);\r\n        if (value.FloatValue !== null){\r\n          entityValue = value.FloatValue;\r\n        } else {\r\n          var vString = value.StringValue;\r\n          // delete Temperature unit, which is added in Openhab\r\n          vString = vString.replace(' °C', '');\r\n          entityValue = Number(vString);\r\n        }\r\n        avg = avg + ((end.getTime() - start.getTime()) / (totalTime * 3600000)) * entityValue;\r\n      }\r\n    }\r\n    return avg;\r\n  }\r\n\r\n  calculateMinimum(list: SensorDataModel['Values']): number {\r\n    let min: number;\r\n    if (list[0].FloatValue !== null){\r\n      min = list[0].FloatValue\r\n    } else {\r\n      var vString = list[0].StringValue;\r\n      // delete Temperature unit, which is added in Openhab\r\n      vString = vString.replace(' °C', '');\r\n      min = Number(vString);\r\n    }\r\n    for (const value of list) {\r\n      if (value.FloatValue !== null && value.FloatValue < min) {\r\n        min = value.FloatValue;\r\n      } else\r\n        var v2String = list[0].StringValue;\r\n      // delete Temperature unit, which is added in Openhab\r\n      v2String = v2String.replace(' °C', '');\r\n      if (value.StringValue !== null && Number(v2String) < min) {\r\n        min = Number(v2String);\r\n      }\r\n    }\r\n    return min;\r\n  }\r\n\r\n  calculateMaximum(list: SensorDataModel['Values']): number {\r\n    let max: number;\r\n    if (list[0].FloatValue !== null){\r\n      max = list[0].FloatValue\r\n    } else {\r\n      var vString = list[0].StringValue;\r\n      // delete Temperature unit, which is added in Openhab\r\n      vString = vString.replace(' °C', '');\r\n      max = Number(vString);\r\n    }\r\n    for (const value of list) {\r\n      if (value.FloatValue !== null && value.FloatValue > max) {\r\n        max = value.FloatValue;\r\n      } else\r\n        var v2String = list[0].StringValue;\r\n      // delete Temperature unit, which is added in Openhab\r\n      v2String = v2String.replace(' °C', '');\r\n      if (value.StringValue !== null && Number(v2String) > max) {\r\n        max = Number(v2String);\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n\r\n}\r\n\r\n","module.exports = \".angular-with-newlines {\\r\\n  white-space: nowrap;\\r\\n}\\r\\n\\r\\n.settings-button {\\r\\n  transition: all 0.5s;\\r\\n  position: absolute;\\r\\n  right: 75px;\\r\\n  top: 5px;\\r\\n}\\r\\n\\r\\n.realTimeFont{\\r\\n  /*font-size: 40px;*/\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \"<p-dialog header=\\\"Visualization Data Settings\\\" [modal]=true appendTo=\\\"body\\\" [width]=\\\"550\\\" [closable]=\\\"false\\\" [visible]= \\\"displaySettings\\\">\\r\\n  <div class=\\\"ui-g\\\">\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <h3>Representation settings</h3>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <div class=\\\"ui-g-4\\\">Real Time Type:</div>\\r\\n      <p-dropdown [autoWidth]=\\\"true\\\"\\r\\n                  [options]=\\\"preSelect\\\" placeholder=\\\"Select an entity\\\" [(ngModel)]=\\\"selectedEntityType\\\"\\r\\n                  [style]=\\\"{'width':'200px'}\\\" (onChange)=\\\"refreshDeviceDropdown()\\\" appendTo=\\\"body\\\">\\r\\n      </p-dropdown>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12\\\" style=\\\"width:10px;\\\"></div>\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <h3>Input settings</h3>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <div class=\\\"ui-g-4\\\">Device:</div>\\r\\n      <div class=\\\"ui-g-8\\\">\\r\\n        <p-dropdown appendTo=\\\"body\\\" [options]=\\\"devicesList\\\" placeholder=\\\"Select a device\\\" [(ngModel)]=\\\"selectedDevice\\\"\\r\\n                    (onChange)=\\\"updateDropdowns()\\\" [style]=\\\"{'width':'200px'}\\\">\\r\\n        </p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"selectedEntityType === valueType.sensor\\\" class=\\\"ui-g-12\\\">\\r\\n      <div class=\\\"ui-g-4\\\">Sensor:</div>\\r\\n      <div class=\\\"ui-g-8\\\">\\r\\n        <p-dropdown appendTo=\\\"body\\\" [options]=\\\"sensorList\\\" placeholder=\\\"Select a sensor\\\" [(ngModel)]=\\\"selectedEntity\\\"\\r\\n                    [style]=\\\"{'width':'200px'}\\\"(onChange)=\\\"this.setCompletedField(true);\\\">\\r\\n        </p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"selectedEntityType  === valueType.action\\\" class=\\\"ui-g-12\\\">\\r\\n      <div class=\\\"ui-g-4\\\">Action:</div>\\r\\n      <div class=\\\"ui-g-8\\\">\\r\\n        <p-dropdown [autoWidth]=\\\"true\\\"\\r\\n                    [options]=\\\"actionList\\\" placeholder=\\\"Select an action\\\" [(ngModel)]=\\\"selectedEntity\\\"\\r\\n                   [style]=\\\"{'width':'200px'}\\\" (onChange)=\\\"this.setCompletedField(true);\\\">\\r\\n        </p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <div class=\\\"ui-g-4\\\">Position:</div>\\r\\n      <div class=\\\"ui-g\\\">\\r\\n        <div class=\\\"ui-g-12\\\"><p-radioButton  name=\\\"positionGroup\\\" value=\\\"right\\\" label=\\\"right\\\" [(ngModel)]=\\\"selectedPosition\\\" ></p-radioButton></div>\\r\\n        <div class=\\\"ui-g-12\\\"><p-radioButton name=\\\"positionGroup\\\" value=\\\"bottom\\\" label=\\\"bottom\\\" [(ngModel)]=\\\"selectedPosition\\\" ></p-radioButton></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <p-footer>\\r\\n    <button type=\\\"'button\\\" pButton icon=\\\"fa-check\\\" (click)=\\\"applySettings()\\\" label=\\\"Apply\\\" [disabled]=\\\"!isCompletedField\\\"></button>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"fa-close\\\" (click)=\\\"abortChanges()\\\" label=\\\"Cancel\\\"></button>\\r\\n  </p-footer>\\r\\n</p-dialog>\\r\\n<button [hidden]=\\\"!(loginStatus>1 && currentWidget.isDeveloped)\\\" pButton icon=\\\"fa fa-cog\\\" style=\\\"z-index: 6;\\\" class=\\\"settings-button transparentButton tbutton ui-button-secondary\\\" (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" (click)=\\\"displaySettings=true;\\\"  ></button>\\r\\n\\r\\n<div *ngIf=\\\"selectedPosition === 'bottom'\\\">\\r\\n  <div style=\\\"display: flex; flex-direction:row; align-items: center; height:100%; width:100%;\\\">\\r\\n    <div>\\r\\n      <input pInputText *ngIf=\\\"currentWidget.isDeveloped\\\" style=\\\"width:100%; min-width:150px;\\\" [(ngModel)]=\\\"currentWidget.name\\\"\\r\\n             (ngModelChange)=\\\"saveInDatabase($event, 'name')\\\" class=\\\"gridster-item-content\\\"\\r\\n             (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\">\\r\\n      <h2 *ngIf=\\\"!currentWidget.isDeveloped\\\" style=\\\"margin: 0; width:100%;\\\">{{ currentWidget.name }}</h2>\\r\\n\\r\\n      <input pInputText *ngIf=\\\"currentWidget.isDeveloped\\\" [placeholder]=\\\"'Additional info'\\\" style=\\\"width:100%; min-width:150px; \\\" [(ngModel)]=\\\"currentWidget.additionalInfo\\\" (ngModelChange)=\\\"saveInDatabase($event, 'additionalInfo')\\\"\\r\\n             (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" class=\\\"gridster-item-content\\\">\\r\\n      <div *ngIf=\\\"!currentWidget.isDeveloped\\\" style=\\\"margin: 0; color: grey; width:100%;\\\">{{ currentWidget.additionalInfo }}</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"selectedEntityType === valueType.sensor\\\" #container4 style=\\\"width:100%; height:100%;\\\">\\r\\n    <div [fittext]=\\\"true\\\" [activateOnResize]=\\\"true\\\" [container]=\\\"container4\\\" [modelToWatch]=\\\"currentWidget.value\\\" class=\\\"angular-with-newlines\\\" style=\\\"text-align: center; vertical-align: middle;\\\">{{currentWidget.value}}\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div *ngIf=\\\"selectedEntityType === valueType.action\\\" #container3 style=\\\"width:100%; height:100%;\\\">\\r\\n    <div [fittext]=\\\"true\\\" [activateOnResize]=\\\"true\\\" [container]=\\\"container3\\\" [modelToWatch]=\\\"currentWidget.value\\\" class=\\\"angular-with-newlines\\\" style=\\\"text-align: center; vertical-align: middle;\\\">{{currentWidget.value}}\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"selectedPosition === 'right'\\\" style=\\\"display: flex; flex-direction:row; align-items: center; height:100%; width:100%; \\\">\\r\\n  <div>\\r\\n    <input pInputText *ngIf=\\\"currentWidget.isDeveloped\\\" style=\\\"width:100%; min-width:150px;\\\" [(ngModel)]=\\\"currentWidget.name\\\" (ngModelChange)=\\\"saveInDatabase($event, 'name')\\\"\\r\\n           (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" class=\\\"gridster-item-content\\\">\\r\\n    <h2 *ngIf=\\\"!currentWidget.isDeveloped\\\" style=\\\"margin: 0; width:100%;\\\">{{ currentWidget.name }}</h2>\\r\\n\\r\\n    <input pInputText *ngIf=\\\"currentWidget.isDeveloped\\\" style=\\\"width:100%; min-width:150px; \\\" [(ngModel)]=\\\"currentWidget.additionalInfo\\\" (ngModelChange)=\\\"saveInDatabase($event, 'additionalInfo')\\\"\\r\\n           (mousedown)=\\\"$event.stopPropagation()\\\" (touchstart)=\\\"$event.stopPropagation()\\\" class=\\\"gridster-item-content\\\">\\r\\n    <div *ngIf=\\\"!currentWidget.isDeveloped\\\" style=\\\"margin: 0; color: grey; width:100%;\\\">{{ currentWidget.additionalInfo }}</div>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"selectedEntityType === valueType.sensor\\\" #container1 style=\\\"padding-left: 15px; text-align: center; width:100%; height:100%;min-width: 39px\\\">\\r\\n    <div [fittext]=\\\"true\\\" [activateOnResize]=\\\"true\\\" [container]=\\\"container1\\\" [modelToWatch]=\\\"currentWidget.value\\\" class=\\\"angular-with-newlines\\\" style=\\\"text-align: center; vertical-align: middle;\\\">{{ currentWidget.value }}\\r\\n      <!--input display = \\\"!(this.currentWidget.graphType==='realtime')\\\"  width=\\\"auto\\\" type=\\\"text\\\" pInputText [(ngModel)]=\\\"realTimeUnit\\\"/-->\\r\\n  </div>\\r\\n\\r\\n  </div>\\r\\n  <div *ngIf=\\\"selectedEntityType === valueType.action\\\" #container2 style=\\\"width: 100%;height:100%;min-width: 39px;text-align: center; padding-left: 15px;\\\">\\r\\n    <div [fittext]=\\\"true\\\" [activateOnResize]=\\\"true\\\" [container]=\\\"container1\\\" [modelToWatch]=\\\"currentWidget.value\\\" class=\\\"angular-with-newlines\\\" style=\\\"text-align: center; vertical-align: middle;\\\">{{ currentWidget.value }}\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {DatabaseService} from '../../../../../../../services/database.service';\r\nimport {DataService} from '../../../../../../../services/data.service';\r\nimport {VisualManagerService} from '../../../../../../../services/visualmanager.service';\r\nimport {DeviceManagerService} from '../../../../../../../services/devicemanager.service';\r\nimport {User} from '../../../../../../../models/frontend/user';\r\nimport {Project} from '../../../../../../../models/frontend/project';\r\nimport {EntityType, ValueViewWidget} from '../../../../../../../models/frontend/valueviewwidget';\r\nimport {Device} from '../../../../../../../models/backend/device';\r\nimport {Fieldvalue} from '../../../../../../../models/frontend/fieldvalue';\r\nimport {SelectItem} from 'primeng/api';\r\nimport {SensorDataModel} from '../../../../../../../models/backend/sensordatamodel';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {matchOtherValidator} from \"../../../../../../../custom-validation\";\r\nimport { Router } from '@angular/router';\r\n\r\n/**\r\n * @author Janina Hüther, Chinaedu Onwukwe\r\n * This component processes a {@link WidgetType#realtimeValueVisualization} Widget. This type of widget is to represent\r\n * the status of an entity of a device. That means it handles the representation of e.g. a action of a switch\r\n * or the value of a sensor in realtime. It uses the {@link ValueViewWidget} model to represent a widget.\r\n */\r\n@Component({\r\n  selector: 'realtime-value-visualization',\r\n  templateUrl: './realtime-value-visualization.component.html',\r\n  styleUrls: ['./realtime-value-visualization.component.css']\r\n})\r\nexport class RealtimeValueVisualizationComponent implements OnInit {\r\n\r\n  constructor(private dataService: DataService,\r\n              private databaseService: DatabaseService,\r\n              private devicemanager: DeviceManagerService,\r\n              private visualmanager: VisualManagerService,\r\n              private fb: FormBuilder,\r\n              private router: Router) {\r\n  }\r\n\r\n  /**\r\n   * The current widget passed from {@link SheetContentComponent}\r\n   */\r\n  @Input() currentWidget: ValueViewWidget;\r\n\r\n  @Output() resizeFont = new EventEmitter<HTMLElement>();\r\n\r\n  /**\r\n   * Types for user's preselection which devices to display.\r\n   */\r\n  valueType = EntityType;\r\n\r\n  /**\r\n   * The current user\r\n   */\r\n  protected user: User;\r\n  /**\r\n   * The current project\r\n   */\r\n  protected project: Project;\r\n\r\n  /**\r\n   * The current value to display on the widget\r\n   */\r\n  protected value: string;\r\n\r\n  /**\r\n   * Indicates if the settings popup is visible or not\r\n   */\r\n  displaySettings = false;\r\n\r\n  /**\r\n   * Label of an entity value\r\n   */\r\n  label;\r\n  /**\r\n   * Unit of an entity value\r\n   */\r\n  unit;\r\n\r\n  /**\r\n   * The current login status of the user to decide wheter to display in\r\n   * developer or enduser mode.\r\n   */\r\n  protected loginStatus: number;\r\n\r\n  /**\r\n   * An array to represent the device selection dropdown\r\n   */\r\n  protected devicesList: Array<SelectItem> = [];\r\n  /**\r\n   * An array to represent the sensor selection dropdown\r\n   */\r\n  protected sensorList: Array<SelectItem> = [];\r\n  /**\r\n   * An array to represent the action selection dropdown\r\n   */\r\n  protected actionList: Array<SelectItem> = [];\r\n\r\n  /**\r\n   * Array for user's preselection if he want to display a sensor's or an action's entity.\r\n   */\r\n  protected preSelect: Array<SelectItem> = [];\r\n\r\n  protected isCompletedField;\r\n\r\n  selectedDevice: string;\r\n  selectedEntity: string;\r\n  selectedPosition: string;\r\n  selectedEntityType: string;\r\n\r\n  ngOnInit(): void {\r\n    this.dataService.currentLoginStatus.subscribe(value => this.loginStatus = value);\r\n    this.dataService.userData.subscribe(value => this.user = value);\r\n    this.dataService.projectData.subscribe(value => {\r\n      this.project = value;\r\n    });\r\n\r\n    this.initDeviceDropdown();\r\n\r\n    this.preSelect = [\r\n      {label: 'Sensor', value: EntityType.sensor},\r\n      {label: 'Action', value: EntityType.action}\r\n    ];\r\n\r\n    this.selectedPosition = this.currentWidget.controlPosition;\r\n    this.selectedEntityType = this.currentWidget.entityType;\r\n    if (this.currentWidget.entityId !== '' && this.currentWidget.deviceId !== '') {\r\n      this.selectedDevice = this.currentWidget.deviceId;\r\n      this.selectedEntity = this.currentWidget.entityId;\r\n      this.getRealtimeData();\r\n    }\r\n    this.checkCompletedField();\r\n\r\n  }\r\n\r\n\r\n  private initDeviceDropdown():void {\r\n    this.devicesList = [];\r\n    this.devicemanager.getAllDevices(this.user.id, this.project.id).subscribe(data => {\r\n        for (const device of data) {\r\n          this.devicesList.push({label: device.name, value: device.deviceId});\r\n        }\r\n        if (this.currentWidget.deviceId != undefined){\r\n          //init device\r\n          for (const listElem of this.devicesList){\r\n            if (listElem.value === this.currentWidget.deviceId) {\r\n              //set this device as selected in dropdown\r\n              console.log(\"set Selected Device: \", listElem.value);\r\n              this.selectedDevice = listElem.value;\r\n              //create Sensor/Action Lists\r\n              this.devicemanager.getDeviceById(this.selectedDevice, this.user.id, this.project.id)\r\n                .subscribe((device: Device) => {\r\n                    if(this.selectedEntityType === String(EntityType.sensor)) {\r\n                      this.sensorList = [];\r\n                      for (const sensor of device.sensors) {\r\n                        //push all sensor values to sensorList\r\n                        this.sensorList.push({label: sensor.name, value: sensor.id});\r\n                        this.setCompletedField(false);\r\n                      }\r\n                      // look for selected sensor\r\n                      for (let sensor of this.sensorList) {\r\n                        if (sensor.value === this.currentWidget.entityId) {\r\n                          //set selected sensor\r\n                          this.selectedEntity = sensor.value;\r\n                          this.getRealtimeData();\r\n                        }\r\n                      }\r\n                    } else if (this.selectedEntityType === String(EntityType.action)){\r\n                      this.actionList = [];\r\n                      for (const action of device.actions) {\r\n                        //push all sensor values to sensorList\r\n                        this.actionList.push({label: action.name, value: action.id});\r\n                        this.setCompletedField(false);\r\n                      }\r\n                      // look for selected sensor\r\n                      for (let action of this.actionList) {\r\n                        if (action.value === this.currentWidget.entityId) {\r\n                          //set selected sensor\r\n                          this.selectedEntity = action.value;\r\n                          this.getRealtimeData();\r\n                        }\r\n                      }\r\n                    }\r\n                  },\r\n                  error => {\r\n                    if (error['error'] === 'Session invalid' || error['error'] === 'No session found') {\r\n                      this.router.navigate(['unauthorized']); }\r\n                    console.log('Devices could not been pulled from backend: ', error);\r\n                  });\r\n            }\r\n          }\r\n        }\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * This method builds the device selection dropdown menu.\r\n   */\r\n  protected refreshDeviceDropdown(): void {\r\n    this.devicesList = [];\r\n    this.devicemanager.getAllDevices(this.user.id, this.project.id)\r\n      .subscribe((devices: Array<Device>) => {\r\n          for (const device of devices) { // TODO fehler, eine action kann auch ein valuetyp repräsentieren und ein sensor kann auch ein action haben\r\n            if (this.selectedEntityType === EntityType.sensor && device.sensors.length > 0) { // just add devices to dropdown that have a sensor\r\n              this.devicesList.push({label: device.name, value: device.deviceId});\r\n            } else if (this.selectedEntityType === EntityType.action && device.actions.length > 0) { // just add devices to dropdown that have an action\r\n              this.devicesList.push({label: device.name, value: device.deviceId});\r\n            }\r\n          }\r\n          this.setCompletedField(false);\r\n        },\r\n        err => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          console.log('error devicemanager');\r\n          console.log(err);\r\n        });\r\n\r\n  }\r\n\r\n  /**\r\n   * This method decides whether to build the sensor or the dropdown menu.\r\n   */\r\n  protected updateDropdowns(): void {\r\n    if (this.selectedEntityType === EntityType.action) {\r\n      this.updateActionDropdown();\r\n\r\n    } else {\r\n      this.updateSensorDropdown();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This metod builds the sensor selection dropdown.\r\n   */\r\n  protected updateSensorDropdown(): void {\r\n    this.devicemanager.getDeviceById(this.selectedDevice, this.user.id, this.project.id)\r\n      .subscribe((device: Device) => {\r\n          this.sensorList = [];\r\n          for (const sensor of device.sensors) {\r\n            this.sensorList.push({label: sensor.name, value: sensor.id});\r\n            this.setCompletedField(false);\r\n          }\r\n        },\r\n        error => {\r\n          if (error['error'] === 'Session invalid' || error['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          console.log('Devices could not been pulled from backend: ', error);\r\n        });\r\n\r\n  }\r\n\r\n  /** This method builds the action selection dropdown.\r\n   *\r\n   */\r\n  protected updateActionDropdown(): void {\r\n    this.devicemanager.getDeviceById(this.selectedDevice, this.user.id, this.project.id)\r\n      .subscribe((device: Device) => {\r\n          this.actionList = [];\r\n          for (const action of device.actions) {\r\n            this.actionList.push({label: action.name, value: action.id});\r\n            this.setCompletedField(false);\r\n          }\r\n        },\r\n        error => {\r\n          if (error['error'] === 'Session invalid' || error['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          console.log('Devices could not been pulled from backend: ', error);\r\n        });\r\n  }\r\n\r\n  // TODO make initMethode daraus, sonst websocket\r\n  /**\r\n   * This method pulls the realtime data from the backend once.\r\n   */\r\n  getRealtimeData(): void {\r\n    this.visualmanager.getNowData(this.selectedDevice, this.selectedEntity, this.user.id, this.project.id)\r\n      .subscribe((sensorDataModel: SensorDataModel) => {\r\n          if (sensorDataModel.Values[0].FloatValue !== null) {\r\n            this.currentWidget.value = sensorDataModel.Values[0].FloatValue.toString();\r\n            //this.triggerResizeFontEvent();\r\n          } else {\r\n            this.currentWidget.value = sensorDataModel.Values[0].StringValue;\r\n           //this.triggerResizeFontEvent();\r\n          }\r\n          this.unit = sensorDataModel.Unit;\r\n          this.label = sensorDataModel.Values[0].DateTime;\r\n\r\n        },\r\n        err => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          console.log('Error requesting data from backend: ', err);\r\n        });\r\n  }\r\n\r\n  /**\r\n   * This method gets called when the user applies his widget setttings.\r\n   */\r\n  applySettings(): void {\r\n    this.displaySettings = false;\r\n    this.currentWidget.deviceId = this.selectedDevice;\r\n    this.currentWidget.entityType = this.selectedEntityType;\r\n    this.currentWidget.entityId = this.selectedEntity;\r\n    this.currentWidget.controlPosition = this.selectedPosition;\r\n    this.getRealtimeData();\r\n    //this.triggerResizeFontEvent();\r\n\r\n    this.saveInDatabase(this.currentWidget.entityType, 'entityType');\r\n    this.saveInDatabase(this.currentWidget.deviceId, 'deviceId');\r\n    this.saveInDatabase(this.currentWidget.entityId, 'entityId');\r\n    this.saveInDatabase(this.currentWidget.controlPosition, 'controlPosition');\r\n  }\r\n\r\n  abortChanges():void{\r\n    this.displaySettings=false;\r\n    this.selectedEntityType = this.currentWidget.entityType;\r\n    this.selectedPosition = this.currentWidget.controlPosition;\r\n    this.selectedDevice = this.currentWidget.deviceId;\r\n    this.selectedEntity = this.currentWidget.entityId;\r\n  }\r\n  /**\r\n   * This method saves the selected options into the database.\r\n   * @param value the value\r\n   * @param field the field where to store\r\n   */\r\n  protected saveInDatabase(value, field: string): void {\r\n    this.databaseService.updateDocument(this.databaseService.WIDGETSCOLLECTION, this.currentWidget.id, new Fieldvalue(field, value))\r\n      .subscribe(result => {\r\n      }, error => {\r\n        if (error['error'] === 'Session invalid' || error['error'] === 'No session found') {\r\n          this.router.navigate(['unauthorized']); }\r\n        console.log('Error updating database entry ', error);\r\n      });\r\n  }\r\n\r\n  protected setCompletedField(bool: Boolean) {\r\n    this.isCompletedField = bool;\r\n  }\r\n\r\n  protected checkCompletedField(){\r\n    if (this.currentWidget.deviceId && this.currentWidget.entityType && this.currentWidget.entityId) {\r\n      this.setCompletedField(true);\r\n    } else {\r\n      this.setCompletedField(false);\r\n    }\r\n  }\r\n\r\n  // resize Font event to autoadjust font size of device value\r\n  protected triggerResizeFontEvent(){\r\n    // trigger dynamically resizefont event\r\n    const elements = document.getElementsByClassName('realTimeFont');\r\n    for (let i = 0; i < elements.length; i++) {\r\n      this.resizeFont.emit(elements[i] as HTMLElement);\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","module.exports = \".buttonSideMenu {\\r\\n  margin-top: 0.1em;\\r\\n  margin-bottom: 0.1em;\\r\\n  margin-right: 0;\\r\\n}\\r\\n\"","module.exports = \"<!-- Notifications-->\\r\\n<!-- Dialog for confirmation messages-->\\r\\n<p-confirmDialog></p-confirmDialog>\\r\\n<p-menu id=\\\"sidebarM\\\" [model]=\\\"\\\"></p-menu>\\r\\n<div style=\\\" position: absolute; left: 0; right: 0; top: 0; height: 100%\\\">\\r\\n\\r\\n  <!--div style=\\\"display: table-row; text-align: center; visibility: hidden\\\">\\r\\n    <button  class=\\\"buttonSideMenu\\\" pButton icon=\\\"fa fa-tint\\\"></button>\\r\\n    <button class=\\\"buttonSideMenu\\\" pButton icon=\\\"fa fa-eyedropper\\\"></button>\\r\\n    <button class=\\\"buttonSideMenu\\\" pButton icon=\\\"fa fa-object-ungroup\\\"></button>\\r\\n    <button class=\\\"buttonSideMenu\\\" pButton icon=\\\"fa fa-font\\\"></button>\\r\\n    <button class=\\\"buttonSideMenu\\\" pButton icon=\\\"fa fa-pie-chart\\\"></button>\\r\\n  </div-->\\r\\n  <div style=\\\"text-align: center; padding: 10px 10px 5px 10px;\\\">\\r\\n    <i (click)=\\\"op.toggle($event)\\\" style=\\\"text-align: center; cursor: pointer; font-size: 1.5em; margin-top: 5px; margin-bottom: 5px\\\" class=\\\"fa fa-th-large\\\"></i><br>\\r\\n    <!--<i style=\\\"cursor: pointer; font-size: 1.5em; margin-top: 5px; margin-bottom: 5px\\\" class=\\\"fa fa-eye\\\"></i><br>\\r\\n    <i style=\\\"cursor: pointer; font-size: 1.5em; margin-top: 5px; margin-bottom: 5px\\\"  class=\\\"fa fa-cart-plus\\\"></i!-->\\r\\n  </div>\\r\\n  <p-menu #menu [popup]=\\\"true\\\" [model]=\\\"itemsDelete\\\" appendTo=\\\"body\\\"></p-menu>\\r\\n  <div style=\\\" text-align: center; padding: 5px 10px 10px 10px; \\\">\\r\\n    <i (click)=\\\"menu.toggle($event)\\\" style=\\\"cursor: pointer;  font-size: 1.5em\\\" class=\\\"fa fa-trash\\\"></i>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<p-overlayPanel #op appendTo=\\\"body\\\">\\r\\n  <!--<div class=\\\"ui-inputgroup\\\">\\r\\n    <input id=\\\"input\\\" style=\\\"width: 100%;\\\" type=\\\"text\\\" pInputText placeholder=\\\"Widgetname\\\">\\r\\n    <button pButton type=\\\"button\\\" icon=\\\"fa fa-search\\\"></button>\\r\\n  </div>-->\\r\\n\\r\\n  <div>\\r\\n    <p-panelMenu [model]=\\\"items\\\" [style]=\\\"{'width':'300px'}\\\"></p-panelMenu>\\r\\n  </div>\\r\\n</p-overlayPanel>\\r\\n\\r\\n\"","/* tslint:disable */\r\nimport {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport {DataService} from '../../../services/data.service';\r\nimport {DatabaseService} from '../../../services/database.service';\r\nimport {ConfirmationService, MenuItem, Message} from 'primeng/api';\r\nimport { ProjectService } from '../../../services/project.service';\r\nimport {Project} from '../../../models/frontend/project';\r\nimport {Fieldvalue} from '../../../models/frontend/fieldvalue';\r\nimport uuidv4 from 'uuid/v4';\r\nimport {WidgetType} from \"../../../models/frontend/widget\";\r\nimport {RuleCreationService} from \"../rules/service/rule-creation.service\";\r\n\r\n@Component({\r\n  selector: 'app-sidebar-content',\r\n  providers: [ConfirmationService],\r\n  templateUrl: './sidebar-content.component.html',\r\n  styleUrls: ['./sidebar-content.component.css']\r\n})\r\n\r\nexport class SidebarContentComponent implements OnInit {\r\n\r\n  protected project: Project;\r\n  protected currentDashboardId: string;\r\n  protected currentSheetId: string;\r\n\r\n\r\n  protected items: Array<MenuItem>;\r\n  protected itemsDelete: Array<MenuItem>;\r\n  protected currentSheet: number;\r\n  protected dashboardID: number;\r\n  protected dialogOpened: boolean;\r\n  protected projectID: number;\r\n  msgs: Message[] = [];\r\n  @Output() messageEvent = new EventEmitter<any>();\r\n\r\n  displayRuleCreationDialog: boolean;\r\n\r\n  showRuleCreationDialog(): void {\r\n    this.displayRuleCreationDialog = true;\r\n    this.ruleCreationService.displayStatusUpdated.emit(this.displayRuleCreationDialog);\r\n    this.ruleCreationService.displayManagementStatusUpdated.emit(false);\r\n  }\r\n\r\n\r\n  constructor(private databaseService: DatabaseService,\r\n              private dataService: DataService,\r\n              private confirmationService: ConfirmationService,\r\n              private projectService: ProjectService,\r\n              private ruleCreationService: RuleCreationService,\r\n              private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dataService.projectData\r\n      .subscribe((project: Project) => this.project = project);\r\n\r\n    this.dataService.currentDashboardId\r\n      .subscribe(dashboardId => this.currentDashboardId = dashboardId);\r\n\r\n    this.dataService.currentSheetId\r\n      .subscribe(sheetId => this.currentSheetId = sheetId);\r\n\r\n\r\n    this.dataService.currentSheet.subscribe(cSheet => this.currentSheet = cSheet);\r\n    this.dataService.currentDashboardID.subscribe(id => this.dashboardID = id);\r\n    this.dataService.currentProjectID.subscribe(value => this.projectID = value);\r\n    const barDaughter: Element = document.getElementById('sidebarM').children.item(0);\r\n    (<HTMLElement>barDaughter).style.width = '50px';\r\n    (<HTMLElement>barDaughter).style.height = '100%';\r\n    (<HTMLElement>barDaughter).style.textAlign = 'center';\r\n\r\n    this.dialogOpened = false;\r\n    this.ruleCreationService.displayStatusUpdated.subscribe((response)=>{\r\n      this.displayRuleCreationDialog = response;\r\n    });\r\n\r\n    this.items = [\r\n      {\r\n        label: 'Device Management',\r\n        icon: 'fa fa-laptop',\r\n        items:\r\n          [\r\n            {\r\n              label: 'Add Device', command: (event: Event) => {\r\n                this.projectService.generateWidget(WidgetType.addDevice.toString());\r\n              }\r\n            },\r\n            {\r\n              label: 'Delete Device', command: (event: Event) => {\r\n                this.projectService.generateWidget(WidgetType.deleteDevice.toString());\r\n              }\r\n            }\r\n          ]\r\n      },\r\n      {\r\n        label: 'Device Control',\r\n        icon: 'fa fa-sliders',\r\n        items:\r\n          [\r\n            {\r\n              label: 'Slider',\r\n              command: (event: Event) => {\r\n                this.projectService.generateWidget(WidgetType.sliderDeviceControl.toString());\r\n              }\r\n            },\r\n            {\r\n              label: 'Toggle', command: (event: Event) => {\r\n                this.projectService.generateWidget(WidgetType.toggleDeviceControl.toString());\r\n              }\r\n            },\r\n            {\r\n              label: 'State Changer', command: (event: Event) => {\r\n                this.projectService.generateWidget(WidgetType.stateDeviceControl.toString());\r\n              }\r\n            }\r\n          ]\r\n      },\r\n      {\r\n        label: 'Device Visualization',\r\n        icon: 'fa fa-bar-chart',\r\n        items: [\r\n          {\r\n            label: 'Bar Chart', command: (event: Event) => {\r\n              this.projectService.generateWidget(WidgetType.barChartVisualization.toString());\r\n            }\r\n          },\r\n         /* {\r\n            label: 'Bubble Chart', command: (event: Event) => {\r\n              this.projectService.generateWidget(WidgetType.bubbleChartVisualization.toString());\r\n            }\r\n          },*/\r\n          {\r\n            label: 'Doughnut Chart', command: (event: Event) => {\r\n              this.projectService.generateWidget(WidgetType.doughnutChartVisualization.toString());\r\n            }\r\n          },\r\n          {\r\n            label: 'Line Chart', command: (event: Event) => {\r\n              this.projectService.generateWidget(WidgetType.lineChartVisualization.toString());\r\n            }\r\n          },\r\n          {\r\n            label: 'Polar Area Chart', command: (event: Event) => {\r\n              this.projectService.generateWidget(WidgetType.polarAreaChartVisualization.toString());\r\n            }\r\n          },\r\n          {\r\n            label: 'Realtime Value', command: (event: Event) => {\r\n              this.projectService.generateWidget(WidgetType.realtimeValueVisualization.toString());\r\n            }\r\n          }\r\n\r\n        ]\r\n      } ,\r\n      {\r\n        label: 'Anomaly Detection',\r\n        icon: 'fa fa-binoculars',\r\n        items: [\r\n          {\r\n            label: 'History Anomaly Detection', command: (event: Event) => {\r\n              this.projectService.generateWidget(WidgetType.historyAnomaly.toString());\r\n            }\r\n          },\r\n          {\r\n            label: 'Realtime Anomaly Detection', command: (event: Event) => {\r\n              this.projectService.generateWidget(WidgetType.realtimeAnomaly.toString());\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        label: 'Rules',\r\n        icon: 'fa fa-code-fork',\r\n        items: [\r\n          {label: 'Creation', command: (event: Event) => {this.showRuleCreationDialog()}},\r\n          {\r\n            label: 'Management', command: (event: Event) => {\r\n            this.projectService.generateWidget(WidgetType.ruleManagementView.toString());\r\n          }},\r\n          {label: 'Notification', command: (event: Event) => {\r\n            this.projectService.generateWidget(WidgetType.ruleNotificationView.toString());\r\n          }},\r\n          {label: 'Sharing', command: (event: Event) => {\r\n            this.projectService.generateWidget(WidgetType.ruleSharingViewWidget.toString());\r\n          }}\r\n        ]\r\n      }\r\n    ];\r\n\r\n    this.itemsDelete = [\r\n      {\r\n        label: 'Delete Dashboard',\r\n        command: event1 => this.deleteConfirmation()\r\n      },\r\n      {\r\n        label: 'Delete Project',\r\n        command: event1 => this.deleteProjectConfirmation()\r\n      }\r\n    ];\r\n\r\n  }\r\n\r\n  private deleteConfirmation() {\r\n    this.confirmationService.confirm({\r\n      message: 'Do you want to delete current dashboard ?',\r\n      header: 'Delete Dashboard',\r\n      icon: 'fa fa-trash',\r\n      accept: () => {\r\n        // delete sheet\r\n        this.projectService.deleteDashboard(this.currentDashboardId);\r\n        this.msgs = [{severity: 'success', summary: 'Confirmed', detail: 'Dashboard deleted'}];\r\n        this.msgs.push();\r\n      },\r\n      reject: () => {\r\n        this.msgs = [{severity: 'info', summary: 'Canceled', detail: 'Canceled deletion.'}];\r\n      }\r\n    });\r\n  }\r\n\r\n  private deleteProjectConfirmation() {\r\n    this.confirmationService.confirm({\r\n      message: 'Do you want to delete current project ?',\r\n      header: 'Delete Project',\r\n      icon: 'fa fa-trash',\r\n      accept: () => {\r\n        // delete sheet\r\n        this.projectService.deleteProject();\r\n        this.msgs = [{severity: 'success', summary: 'Confirmed', detail: 'Project deleted'}];\r\n        this.msgs.push();\r\n      },\r\n      reject: () => {\r\n        this.msgs = [{severity: 'info', summary: 'Canceled', detail: 'Canceled deletion.'}];\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \".clickDigitalLogo {\\r\\n  width: 124px;\\r\\n  position:absolute;\\r\\n  left:7px;\\r\\n  top: 7px;\\r\\n}\\r\\n\\r\\n::ng-deep .ui-menubar {\\r\\n  padding-left: 148px;\\r\\n}\\r\\n\\r\\n::ng-deep .ui-menuitem {\\r\\n  white-space: nowrap;\\r\\n}\\r\\n\\r\\n.ui-menuitem-text {\\r\\n  color: #222222 !important;\\r\\n}\\r\\n\\r\\n.ui-menuitem-icon {\\r\\n  color: #222222 !important;\\r\\n}\\r\\n\\r\\n@media only screen and (min-width: 840px){\\r\\n  .verticalMenu {\\r\\n    display: none !important;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media only screen and (max-width: 840px){\\r\\n  .horizontalMenu {\\r\\n    display: none !important;\\r\\n  }\\r\\n}\\r\\n\"","module.exports = \"<!--Main Menu Bar with User profile, Platforms, ...-->\\r\\n<div id=\\\"topBar\\\">\\r\\n\\r\\n\\r\\n  <p-overlayPanel #op>\\r\\n    <app-user-settings (messageEvent)=\\\"forwardMsgToDashboardComponent($event)\\\"></app-user-settings></p-overlayPanel>\\r\\n  <p-menubar [model]=\\\"items\\\" class=\\\"horizontalMenu\\\">\\r\\n    <p-menu #menuThemeHor [popup]=\\\"true\\\" [model]=\\\"itemsTheme\\\"></p-menu>\\r\\n    <app-notify-message></app-notify-message>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"fa fa-paint-brush\\\" (click)=\\\"menuThemeHor.toggle($event)\\\"></button>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"fa fa-user\\\" (click)=\\\"op.toggle($event)\\\"></button>\\r\\n    <img class=\\\"clickDigitalLogo\\\" src=\\\"assets/img/clickdigitallogo.svg\\\">\\r\\n  </p-menubar>\\r\\n\\r\\n\\r\\n  <p-menubar *ngIf=\\\"items !== undefined\\\" [model]=\\\"items\\\" class=\\\"verticalMenu\\\">\\r\\n    <p-menu #mobileMenuIcon [model]=\\\"items\\\" [popup]=\\\"true\\\"></p-menu>\\r\\n    <p-menu #menuTheme [popup]=\\\"true\\\" [model]=\\\"itemsTheme\\\"></p-menu>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"fa fa-paint-brush\\\" (click)=\\\"menuTheme.toggle($event)\\\"></button>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"fa fa-user\\\" (click)=\\\"op.toggle($event)\\\"></button>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"fa fa-bars\\\" (click)=\\\"mobileMenuIcon.toggle($event)\\\"></button>\\r\\n    <img class=\\\"clickDigitalLogo\\\" src=\\\"assets/img/clickdigitallogo.svg\\\">\\r\\n  </p-menubar>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { DatabaseService } from '../services/database.service';\r\nimport { DataService } from '../services/data.service';\r\nimport { UserManagerService } from '../services/usermanager.service';\r\nimport { DeviceManagerService } from '../services/devicemanager.service';\r\nimport { ProjectService } from '../services/project.service';\r\n\r\nimport { MenuItem } from 'primeng/api';\r\nimport { ProjectDB } from '../models/database/project';\r\nimport { User } from '../models/frontend/user';\r\nimport uuidv4 from 'uuid/v4';\r\nimport { SheetDB } from '../models/database/sheet';\r\nimport { DashboardDB } from '../models/database/dashboard';\r\nimport { Project } from '../models/frontend/project';\r\nimport { Fieldvalue } from '../models/frontend/fieldvalue';\r\nimport { Sheet } from '../models/frontend/sheet';\r\nimport { Dashboard } from '../models/frontend/dashboard';\r\nimport { Widget } from '../models/frontend/widget';\r\nimport { WidgetDB } from '../models/database/widget';\r\nimport {RuleCreationService} from \"./dashboard/rules/service/rule-creation.service\";\r\n\r\n@Component({\r\n  selector: 'main-menu',\r\n  templateUrl: './main-menu.component.html',\r\n  styleUrls: ['./main-menu.component.css']\r\n})\r\nexport class MainMenuComponent implements OnInit {\r\n  protected user: User;\r\n  protected project: Project;\r\n  protected currentDashboardId: string;\r\n  protected items: Array<MenuItem>;\r\n  protected itemsTheme: Array<MenuItem>;\r\n  projectMenue: Array<MenuItem> = [];\r\n\r\n  @Output() messageEvent = new EventEmitter<any>();\r\n\r\n  constructor(\r\n    private dataService: DataService,\r\n    private databaseService: DatabaseService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private usermanager: UserManagerService,\r\n    private devicemanager: DeviceManagerService,\r\n    private projectService: ProjectService,\r\n    private ruleCreationService: RuleCreationService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dataService.userData\r\n      .subscribe((user: User) => this.user = user);\r\n\r\n    this.dataService.projectData\r\n      .subscribe(value => this.project = value);\r\n\r\n    this.buildTopMenu();\r\n    this.onSetTheme(this.project.theme);\r\n    this.buildThemeMenu();\r\n\r\n    this.dataService.currentDashboardId\r\n      .subscribe(value => this.currentDashboardId = value);\r\n\r\n    this.dataService.refreshMenu\r\n      .subscribe(result => {\r\n        this.buildTopMenu();\r\n      });\r\n\r\n    // this.checkDevices();\r\n  }\r\n\r\n  protected forwardMsgToDashboardComponent($event): void {\r\n    this.messageEvent.emit($event);\r\n  }\r\n\r\n  public buildThemeMenu(): void {\r\n    this.itemsTheme = [\r\n      {\r\n        label: 'Omega',\r\n        command: (event: Event) => {\r\n          this.onSetTheme('omega');\r\n        }\r\n      },\r\n      {\r\n        label: 'Lightness',\r\n        command: (event: Event) => {\r\n          this.onSetTheme('lightness');\r\n        }\r\n      },\r\n      {\r\n        label: 'Bootstrap',\r\n        command: (event: Event) => {\r\n          this.onSetTheme('bootstrap');\r\n        }\r\n      },\r\n      {\r\n        label: 'Cruze',\r\n        command: (event: Event) => {\r\n          this.onSetTheme('cruze');\r\n        }\r\n      },\r\n      {\r\n        label: 'Cupertino',\r\n        command: (event: Event) => {\r\n          this.onSetTheme('cupertino');\r\n        }\r\n      },\r\n      {\r\n        label: 'Darkness',\r\n        command: (event: Event) => {\r\n          this.onSetTheme('darkness');\r\n        }\r\n      },\r\n      {\r\n        label: 'Flick',\r\n        command: (event: Event) => {\r\n          this.onSetTheme('flick');\r\n        }\r\n      },\r\n      {\r\n        label: 'Home',\r\n        command: (event: Event) => {\r\n          this.onSetTheme('home');\r\n        }\r\n      },\r\n      {\r\n        label: 'Kasper',\r\n        command: (event: Event) => {\r\n          this.onSetTheme('kasper');\r\n        }\r\n      },\r\n      {\r\n        label: 'Ludvig',\r\n        command: (event: Event) => {\r\n          this.onSetTheme('ludvig');\r\n        }\r\n      },\r\n      {\r\n        label: 'Pepper-Grinder',\r\n        command: (event: Event) => {\r\n          this.onSetTheme('pepper-grinder');\r\n        }\r\n      },\r\n      {\r\n        label: 'Redmond',\r\n        command: (event: Event) => {\r\n          this.onSetTheme('redmond');\r\n        }\r\n      },\r\n      {\r\n        label: 'Rocket',\r\n        command: (event: Event) => {\r\n          this.onSetTheme('rocket');\r\n        }\r\n      },\r\n      {\r\n        label: 'South-Street',\r\n        command: (event: Event) => {\r\n          this.onSetTheme('south-street');\r\n        }\r\n      },\r\n      {\r\n        label: 'Start',\r\n        command: (event: Event) => {\r\n          this.onSetTheme('start');\r\n        }\r\n      },\r\n      {\r\n        label: 'Trontastic',\r\n        command: (event: Event) => {\r\n          this.onSetTheme('trontastic');\r\n        }\r\n      },\r\n      {\r\n        label: 'Voclain',\r\n        command: (event: Event) => {\r\n          this.onSetTheme('voclain');\r\n        }\r\n      }\r\n\r\n    ];\r\n  }\r\n\r\n  public buildTopMenu(): void {\r\n    const projectMenue: Array<MenuItem> = new Array(this.user.projects.length); // TODO has to be length +1 when adding item to add new dashboard\r\n    this.databaseService.getDocuments(this.databaseService.PROJECTSCOLLECTION, this.user.projects)\r\n      .subscribe((value: Array<ProjectDB>) => {\r\n        this.ruleCreationService.projectsUpdate.emit(value);\r\n        for (let i = 0; i < value.length; i++) {\r\n          const menuItem: MenuItem = {};\r\n          menuItem['label'] = value[i].name;\r\n          menuItem['command'] = (event: Event) => {\r\n            this.projectService.loadNewProject(value[i].id, true);\r\n          };\r\n          projectMenue[i] = menuItem;\r\n        }\r\n        const menuItem: MenuItem = {};\r\n        menuItem['label'] = 'New project';\r\n        menuItem['command'] = (event: Event) => {\r\n          this.projectService.generateProject();\r\n        };\r\n        menuItem['icon'] = 'fa fa-plus';\r\n        // projectMenue[projectMenue.length - 1] = menuItem; // for the item to add a new project\r\n        this.projectMenue = projectMenue;\r\n\r\n        this.items = [\r\n          {\r\n            label: 'Projects',\r\n            items: this.projectMenue,\r\n            icon: 'fa fa-suitcase'\r\n          },\r\n          {\r\n            label: 'Dashboards',\r\n            items: this.getDashboards(),\r\n            icon: 'fa fa-dashboard'\r\n          },\r\n          {\r\n            label: 'Platforms',\r\n            routerLink: ['/platform-settings'],\r\n            icon: 'fa fa-connectdevelop'\r\n          }/*,\r\n          {\r\n            label: 'Share with client',\r\n            routerLink: ['/project-sharing'],\r\n            icon: 'fa fa-share-alt'\r\n          }*/\r\n        ];\r\n\r\n      });\r\n  }\r\n\r\n  public getDashboards(): Array<MenuItem> {\r\n    let dashboardMenue: Array<MenuItem>;\r\n    dashboardMenue = new Array(this.project.dashboards.length); // TODO has to be length +1 when adding item to add new dashboard\r\n\r\n    for (let i = 0; i < this.project.dashboards.length; i++) {\r\n      const menuItem: MenuItem = {};\r\n      menuItem.label = this.project.dashboards[i].name;\r\n      menuItem.command = (event: Event) => {\r\n        console.log(\"change Dashboard to: \", this.project.dashboards[i].id);\r\n        this.changeDashboard(this.project.dashboards[i].id);\r\n      };\r\n      dashboardMenue[i] = menuItem;\r\n    }\r\n\r\n    const menuItem: MenuItem = {};\r\n    menuItem['label'] = 'New dashboard';\r\n    menuItem['command'] = (event: Event) => {\r\n      this.generateDashboard();\r\n    };\r\n    menuItem['icon'] = 'fa fa fa-plus';\r\n    //dashboardMenue[dashboardMenue.length - 1] = menuItem; // for the item to add new dashboards\r\n\r\n    return dashboardMenue;\r\n  }\r\n\r\n  private generateDashboard(): void {\r\n    const newSheet: Sheet = new Sheet(uuidv4(), 'Sheet 1', []);\r\n    const newDashboard: Dashboard = new Dashboard(uuidv4(), `Dashboard ${this.project.dashboards.length + 1}`, [newSheet]);\r\n\r\n    this.databaseService.insertDocument(this.databaseService.SHEETSSCOLLECTION, new SheetDB(newSheet.id, newSheet.name, []))\r\n      .subscribe(result => {\r\n          this.databaseService.insertDocument(this.databaseService.DASHBOARDSCOLLECTION, new DashboardDB(newDashboard.id, newDashboard.name, [newDashboard.sheets[0].id]))\r\n            .subscribe(result => {\r\n                this.databaseService.pushToDocumentsList(this.databaseService.PROJECTSCOLLECTION, this.project.id, new Fieldvalue('dashboards', newDashboard.id))\r\n                  .subscribe(result => {\r\n                      this.project.dashboards.push(newDashboard);\r\n                      this.buildTopMenu();\r\n                      this.changeDashboard(newDashboard.id);\r\n                    },\r\n                    err => {\r\n                      if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n                        this.router.navigate(['unauthorized']); }\r\n                      console.log('Error while inserting into database ', err);\r\n                    });\r\n              },\r\n              err => {\r\n                if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n                  this.router.navigate(['unauthorized']); }\r\n                console.log('Error while inserting into database ', err);\r\n              });\r\n        },\r\n        err => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          console.log('Error while inserting into database ', err);\r\n        });\r\n  }\r\n\r\n\r\n  /**\r\n   * This method changes the theme of a project\r\n   * @param theme the theme to set to\r\n   */\r\n  onSetTheme(theme): void {\r\n    const themeLink: HTMLLinkElement = document.getElementById('theme-css') as HTMLLinkElement;\r\n    themeLink.href = './assets/resources/themes/' + theme + '/theme.css';\r\n\r\n    this.dataService.changeTheme(theme);\r\n    this.databaseService.updateDocument(this.databaseService.PROJECTSCOLLECTION, this.project.id, new Fieldvalue('theme', theme))\r\n      .subscribe(result => {\r\n        },\r\n        err => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          console.log('Error updating database', err);\r\n        });\r\n\r\n  }\r\n\r\n  /**\r\n   * This method changes the current displayed dashboard\r\n   * @param id the id of the dashboard to display\r\n   */\r\n  protected changeDashboard(id: string): void {\r\n    this.dataService.changeCurrentDashboardId(id);\r\n    this.dataService.changeCurrentSheetId(this.project.dashboards.find(x => x.id === id).sheets[0].id); // set the first sheet of the new dashboard\r\n  }\r\n\r\n\r\n  /*Tracking function for ngFor Directive in dashboard.component.html*/\r\n  protected trackDashboard(index, item): any {\r\n    return item;\r\n  }\r\n\r\n  protected trackProject(index, item): any {\r\n    return item;\r\n  }\r\n\r\n  checkDevices(): void {\r\n    this.devicemanager.getAllDevices(this.user.id, this.project.id)\r\n      .subscribe(result => {\r\n          // log result.message\r\n          console.log('Got all Devices');\r\n          console.log(result);\r\n          const devices = result;\r\n          this.updateDevices(devices);\r\n        },\r\n        err => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          console.log('Device could not been pulled from the backend server.');\r\n          console.log(err);\r\n        });\r\n  }\r\n\r\n  // Http Requests to the backendserver to check for updates\r\n  updateDevices(devices: any): void {\r\n    let report;\r\n    const successDevices: Array<string> = [];\r\n    let successCount = 0;\r\n    let failCount = 0;\r\n    const failDevices: Array<string> = [];\r\n    const failReports: Array<string> = [];\r\n    // request updates for all devices\r\n    for (const device of devices) {\r\n      this.devicemanager.UpdateDevice(device.deviceId, this.user.id, this.project.id)\r\n        .subscribe(result => {\r\n            // log result.message\r\n            console.log('Update checked successfully.');\r\n            report = result.status;\r\n            switch (report) {\r\n              // if update failed\r\n              case 0: {\r\n                failDevices.push(device.name);\r\n                failReports.push(result.errorReport);\r\n                failCount++;\r\n                break;\r\n              }\r\n              // if update succeeded\r\n              case 1: {\r\n                successDevices.push(device.name);\r\n                successCount++;\r\n                break;\r\n              }\r\n              // if there is no update\r\n              default:\r\n                break;\r\n            }\r\n          },\r\n          err => {\r\n            if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n              this.router.navigate(['unauthorized']); }\r\n            console.log('Update could not be checked.');\r\n            console.log(err);\r\n          });\r\n    }\r\n\r\n    // TODO PrimeNG popup\r\n    /*\r\n    const info: string = successCount + ' devices were updated and ' + failCount + ' devices failed to update.';\r\n    if (this.loginStatus > 0) {\r\n    this.snackBarRef = this.snackBar.open(info, 'more...', {\r\n      duration: 2000\r\n    }).onAction().subscribe(() => {\r\n      // Todo: here could be a dialog with all the devices and failReports.\r\n    });\r\n    }*/\r\n  }\r\n\r\n}\r\n","module.exports = \"#siteContainer {\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n  display: table-row;\\r\\n  background: white;\\r\\n  padding: 4px;\\r\\n}\\r\\n#menuContainer{\\r\\n  display: table-row;\\r\\n}\\r\\n.expansion-panel{\\r\\nposition: relative;\\r\\n  margin: 20px;\\r\\n  margin-top: 10px;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n.rightside {\\r\\n  position: absolute;\\r\\n  right: 20px;\\r\\n  bottom: 3px;\\r\\n}\\r\\n.bottom_toolbar {\\r\\n  position: fixed;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n}\\r\\n.devices{\\r\\n  text-align: right;\\r\\n}\\r\\n.edit-button {\\r\\n  position: absolute;\\r\\n  right: 50px;\\r\\n}\\r\\n.delete-button {\\r\\n  position: absolute;\\r\\n  right: 90px;\\r\\n}\\r\\n.add-sign{\\r\\n  color: gray;\\r\\n  font-size: 200px;\\r\\n}\\r\\n.button-circle-middle{\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n.textNoPlatforms{\\r\\n\\r\\n}\\r\\n.container-NoPlatforms{\\r\\n  position: absolute;\\r\\n  top:40%;\\r\\n  left: 35%;\\r\\n  text-align: center;\\r\\n}\\r\\n::ng-deep .ui-accordion-header{\\r\\n  overflow: auto;\\r\\n  align-items: center !important;\\r\\n  margin-top: auto !important;\\r\\n  margin-bottom: auto !important;\\r\\n  padding: 0 !important;\\r\\n}\\r\\n::ng-deep .ng-tns-c6-23 {\\r\\n  padding: 0;\\r\\n}\\r\\n\"","module.exports = \"<div id=\\\"siteWrapper\\\" style=\\\"min-height: 100%; width: 100%; display: table;\\\">\\r\\n  <div id=\\\"menuContainer\\\">\\r\\n    <main-menu></main-menu>\\r\\n  </div>\\r\\n\\r\\n  <div id=\\\"siteContainer\\\">\\r\\n<!-- Iot Platform Verwaltungsseite -->\\r\\n  <p-confirmDialog [closable]=\\\"false\\\"></p-confirmDialog>\\r\\n  <p-dialog [modal]=\\\"true\\\" header=\\\"Connect a Platform\\\" [(visible)]=\\\"displayEdit\\\" [closable]=\\\"false\\\">\\r\\n    <div class=\\\"center\\\">\\r\\n      <div class=\\\"ui-message ui-messages-info ui-corner-all\\\"><i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i> If you want to add a new platform over Aiotes, please make sure that the ip adress of Aiotes is configured in the config-file.</div>\\r\\n      <p>Please select the platform you want to add:</p>\\r\\n      <p-dropdown [autoWidth]=\\\"true\\\"\\r\\n                  [style]=\\\"{'width': '100%'}\\\" [options]=\\\"allPlatforms\\\" placeholder=\\\"Select a Platform\\\" [(ngModel)]=\\\"selectedPlatform\\\"></p-dropdown>\\r\\n      <p>Please enter the connection data for the platform:</p>\\r\\n\\r\\n        <input type=\\\"text\\\" style=\\\"margin-bottom : 0.9em;\\\" size=\\\"20\\\" pInputText [(ngModel)]=\\\"name\\\" placeholder = 'Name'>\\r\\n   <br>\\r\\n        <input type=\\\"text\\\" style=\\\"margin-bottom : 0.9em;\\\" size=\\\"20\\\" pInputText [(ngModel)]=\\\"ip\\\" placeholder = 'IP Adress'>\\r\\n      <br>\\r\\n         <input type=\\\"number\\\" style=\\\"margin-bottom : 0.9em;\\\" size=\\\"20\\\" pInputText [(ngModel)]=\\\"port\\\" placeholder = 'Port'>\\r\\n       <!--<br><input type=\\\"text\\\" style=\\\"margin-bottom : 0.9em;\\\" size=\\\"20\\\" pInputText [(ngModel)]=\\\"username\\\" placeholder = 'Username'>\\r\\n     <br>\\r\\n        <input type=\\\"password\\\" style=\\\"margin-bottom : 0.9em;\\\" size=\\\"20\\\" pInputText [(ngModel)]=\\\"password\\\" placeholder = 'Password'>-->\\r\\n\\r\\n    </div>\\r\\n    <p-footer>\\r\\n      <button type=\\\"button\\\" pButton icon=\\\"fa-check\\\" (click)=\\\"addPlatform();\\\" label=\\\"Connect\\\"></button>\\r\\n      <button type=\\\"button\\\" pButton icon=\\\"fa-close\\\" (click)=\\\"displayEdit=false;\\\" label=\\\"Cancel\\\"></button>\\r\\n    </p-footer>\\r\\n  </p-dialog>\\r\\n   <div style=\\\"padding: 5px;\\\">\\r\\n  <h3>Setup Aiotes Bridge to SIL</h3>\\r\\n     <input type=\\\"text\\\" style=\\\"margin-bottom : 0.9em; margin-right: 0.9em;\\\" size=\\\"20\\\" pInputText [(ngModel)]=\\\"systemIp\\\" placeholder = 'Local System IP Adress'>\\r\\n     <input type=\\\"number\\\" style=\\\"margin-bottom : 0.9em; margin-right: 0.9em;\\\" size=\\\"20\\\" pInputText [(ngModel)]=\\\"clickdigitalPort\\\" placeholder = 'Local ClickDigital Port'>\\r\\n    <input type=\\\"text\\\" style=\\\"margin-bottom : 0.9em; margin-right: 0.9em;\\\" size=\\\"20\\\" pInputText [(ngModel)]=\\\"bridgeIp\\\" placeholder = 'Aiotes IP Adress'>\\r\\n    <input type=\\\"number\\\" style=\\\"margin-bottom : 0.9em; margin-right: 0.9em;\\\" size=\\\"20\\\" pInputText [(ngModel)]=\\\"bridgePort\\\" placeholder = 'Aiotes Port'>\\r\\n    <p-button style=\\\"padding-top: 0.5em;\\\" *ngIf=\\\"loginStatus > 0\\\" label = \\\"Connect to Aiotes\\\" (onClick)=\\\"changeBridge()\\\">\\r\\n    </p-button>\\r\\n    <h3>Platforms</h3>\\r\\n    <div *ngIf=\\\" connectedPlatforms.length != 0;\\\">\\r\\n       <p-accordion [multiple]=\\\"true\\\">\\r\\n        <div *ngFor=\\\"let platform of connectedPlatforms\\\">\\r\\n          <p-accordionTab  style=\\\"align-items: center; overflow: auto;\\\">\\r\\n            <p-header>\\r\\n                  {{ platform['name'] }}\\r\\n              <span style=\\\" position: absolute; right: 0;\\\">\\r\\n                <p-button *ngIf=\\\"loginStatus > 0\\\"  icon=\\\"fa fa-pencil-square-o\\\" (onClick)=\\\"showEditDialog()\\\">\\r\\n                  </p-button>\\r\\n                <p-button *ngIf=\\\"loginStatus > 0\\\" icon=\\\"fa fa-trash\\\"  (onClick)=\\\"deletePlatform(platform)\\\">\\r\\n                  </p-button>\\r\\n              </span>\\r\\n            </p-header>\\r\\n           <p>IP: {{ platform['ip'] }}</p>\\r\\n           <p> Username : {{ platform['username'] }}</p>\\r\\n         </p-accordionTab>\\r\\n        </div>\\r\\n       </p-accordion>\\r\\n    </div>\\r\\n    <p-button style=\\\"padding-top: 0.5em;\\\" *ngIf=\\\"loginStatus > 0\\\"  icon=\\\"fa fa-plus\\\" label = \\\"New Platform\\\" (onClick)=\\\"showEditDialog()\\\">\\r\\n    </p-button>\\r\\n   </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, HostBinding, OnInit} from '@angular/core';\r\nimport {DataService} from '../../services/data.service';\r\nimport {OverlayContainer} from '@angular/cdk/overlay';\r\nimport {DeviceManagerService} from '../../services/devicemanager.service';\r\nimport {ConfirmationService, Message, SelectItem} from 'primeng/api';\r\nimport {Project} from '../../models/frontend/project';\r\nimport {Platform} from '../../models/backend/platform';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-platform-settings',\r\n  providers: [ConfirmationService],\r\n  templateUrl: './platform-settings.component.html',\r\n  styleUrls: ['./platform-settings.component.css']\r\n})\r\nexport class PlatformSettingsComponent implements OnInit {\r\n  @HostBinding('class') componentCssClass;\r\n  protected project: Project;\r\n\r\n  protected connectedPlatforms = [];\r\n  protected allPlatforms: SelectItem[] = [];\r\n  protected loginStatus: number;\r\n  displayEdit: boolean = false;\r\n  protected name: string;\r\n  protected userId: string;\r\n  protected ip: string;\r\n  protected port: number;\r\n  protected username: string;\r\n  protected password: string;\r\n  protected selectedPlatform: Platform;\r\n  protected newPlatform;\r\n  protected bridgeIp: string;\r\n  protected bridgePort: number;\r\n  protected systemIp: string;\r\n  protected clickdigitalPort: number;\r\n  msgs: Message[] = [];\r\n\r\n  constructor(private dataService: DataService, private overlayContainer: OverlayContainer, private devicemanager: DeviceManagerService, private confirmService: ConfirmationService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dataService.projectData\r\n      .subscribe(value => {\r\n        this.project = value;\r\n      });\r\n    this.displayEdit = false;\r\n    this.dataService.currentLoginStatus.subscribe(status => this.loginStatus = status);\r\n    console.log('CURRYLS ', this.loginStatus);\r\n    this.dataService.currentTheme.subscribe(value => this.changeTheme(value));\r\n    this.dataService.currentLoginUUID.subscribe(uid => this.userId = uid);\r\n    this.devicemanager.getAllPlatforms(this.userId, this.project.id)\r\n      .subscribe(result => {\r\n          this.connectedPlatforms = result;\r\n        },\r\n        err => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          console.log(err);\r\n        });\r\n\r\n    this.refreshPlatformDropdown();\r\n\r\n  }\r\n\r\n  /*Function to add a new Platform*/\r\n  protected addPlatform(): void {\r\n    const platform: Platform = new Platform(this.name, this.ip, String(this.port), this.username, this.password, this.selectedPlatform.platformId, this.userId, this.project.id, this.selectedPlatform.externalPlatformId);\r\n    console.log('Platform: ' , platform);\r\n    this.devicemanager.connectPlatform(platform)\r\n      .subscribe(result => {\r\n          // log result.message\r\n          //console.log('SLP: ' + this.selectedPlatform);\r\n          console.log(result);\r\n\r\n          this.refreshPlatformList();\r\n        },\r\n        err => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          console.log(err);\r\n        });\r\n    this.refreshPlatformDropdown();\r\n    this.displayEdit = false;\r\n  }\r\n\r\n  protected changeBridge(): void {\r\n    this.devicemanager.changeAiotesBridge(this.bridgeIp, this.bridgePort,this.systemIp, this.clickdigitalPort, this.userId, this.project.id)\r\n      .subscribe(result => {\r\n          // log result.message\r\n          console.log(result);\r\n          this.msgs = [{severity: 'info', summary: 'Confirmed', detail: 'Updated Aiotes Bridge.'}];\r\n          this.msgs.push();\r\n          this.refreshPlatformDropdown();\r\n        },\r\n        err => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          console.log(err);\r\n        });\r\n  }\r\n\r\n\r\n  // selected Platform gets deleted\r\n  protected deletePlatform(platform): void {\r\n    this.confirmService.confirm({\r\n      message: 'Do you want to delete this platform?',\r\n      header: 'Delete Platform',\r\n      icon: 'fa fa-trash',\r\n      accept: () => {\r\n\r\n        // delete platform\r\n        this.devicemanager.deletePlatform(platform['platformId'], this.userId, this.project.id).subscribe(result => {\r\n            // log result.message\r\n            console.log('DeletePlatform was sent to backend server');\r\n            console.log(result);\r\n\r\n            this.refreshPlatformList();\r\n            this.msgs = [{severity: 'info', summary: 'Confirmed', detail: 'Platform deleted'}];\r\n            this.msgs.push();\r\n          },\r\n          err => {\r\n            if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n              this.router.navigate(['unauthorized']); }\r\n            console.log('DeleteDevice could not been sent to backend server');\r\n            console.log(err);\r\n          });\r\n      },\r\n      reject: () => {\r\n        this.msgs = [{severity: 'info', summary: 'Canceled', detail: 'Canceled deletion.'}];\r\n        this.msgs.push();\r\n      }\r\n    });\r\n\r\n    this.refreshPlatformDropdown();\r\n  }\r\n\r\n  showEditDialog(): void {\r\n    this.displayEdit = true;\r\n    this.refreshPlatformDropdown();\r\n  };\r\n\r\n\r\n  changeTheme(theme): void {\r\n    if (theme !== undefined) {\r\n      this.overlayContainer.getContainerElement().classList.add(theme);\r\n      this.componentCssClass = theme;\r\n    } else {\r\n      this.router.navigate(['dashboard']);\r\n    }\r\n  }\r\n\r\n  private refreshPlatformList(): void {\r\n    this.devicemanager.getAllPlatforms(this.userId, this.project.id).subscribe(result => {\r\n        this.connectedPlatforms = result;\r\n        console.log('Platform request success');\r\n      },\r\n      err => {\r\n        if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n          this.router.navigate(['unauthorized']); }\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  private refreshPlatformDropdown(): void {\r\n    console.log(\"refreh Platform Dropdown\");\r\n    this.allPlatforms = [];\r\n    this.devicemanager.searchForPlatforms(this.userId, this.project.id)\r\n      .subscribe(result => {\r\n          this.allPlatforms = result.map(elem => {\r\n            return {label: elem['name'], value: elem};\r\n          });\r\n          console.log(\"refreh Platform Dropdown2\");\r\n        },\r\n        err => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          console.log(err);\r\n        });\r\n  }\r\n}\r\n","module.exports = \"#siteContainer {\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n  display: table-row;\\r\\n  background: white;\\r\\n}\\r\\n#menuContainer{\\r\\n  display: table-row;\\r\\n}\\r\\n\"","module.exports = \"<div id=\\\"siteWrapper\\\" style=\\\"min-height: 100%; width: 100%; display: table;\\\">\\r\\n  <div id=\\\"menuContainer\\\">\\r\\n<main-menu></main-menu>\\r\\n  </div>\\r\\n\\r\\n  <div id=\\\"siteContainer\\\">\\r\\n    <!-- Notifications-->\\r\\n    <div *ngIf=\\\"loginStatus > 0\\\">\\r\\n    <div class=\\\"text ui-grid-row\\\">\\r\\n    <p style=\\\"text-align: center\\\">In this tool you're able to export a existing project.ts into enduser accounts.</p>\\r\\n    <p style=\\\"text-align: center\\\">The enduser account must be created by the <strong>enduser</strong> because you should not able to see or set the password!</p>\\r\\n    <p style=\\\"text-align: center\\\">Exporting a project to a enduser may <strong>overwrites</strong> existing exports in the enduser account.</p><br>\\r\\n    <p style=\\\"text-align: center\\\">Please enter email of enduser account: </p>\\r\\n    </div>\\r\\n    <div style=\\\"text-align: center\\\" class=\\\"ui-grid-row\\\">\\r\\n    <div class=\\\"ui-inputgroup\\\" style=\\\"margin: auto\\\">\\r\\n      <input style=\\\"margin-left: auto\\\" #email type=\\\"text\\\" pInputText placeholder=\\\"Client E-Mail\\\">\\r\\n      <button style=\\\"margin-right: auto\\\" (click)=\\\"searchUser(email.value)\\\" pButton type=\\\"button\\\" label=\\\"Search\\\"></button>\\r\\n    </div><br>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"resultStatus\\\">\\r\\n      <div class=\\\"text\\\" style=\\\"text-align: center\\\">\\r\\n      <p style=\\\"text-align: center\\\">User <strong>{{ result }}</strong> found.</p>\\r\\n      <p style=\\\"text-align: center\\\">Please choose project to export to {{ result }}</p>\\r\\n      </div>\\r\\n      <div style=\\\"text-align: center;\\\">\\r\\n        <p-dropdown>\\r\\n        </p-dropdown>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"selectedID>0\\\">\\r\\n      <button pButton (click)=\\\"exportProject()\\\">Export project.ts</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, HostBinding, OnInit} from '@angular/core';\r\nimport{Router} from \"@angular/router\";\r\nimport {DatabaseService} from '../../services/database.service';\r\nimport {DataService} from '../../services/data.service';\r\nimport {OverlayContainer} from '@angular/cdk/overlay';\r\nimport {Widget} from \"../../models/frontend/widget\";\r\nimport {Project} from \"../../models/frontend/project\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-management',\r\n  templateUrl: './project-sharing.component.html',\r\n  styleUrls: ['./project-sharing.component.css']\r\n})\r\n\r\nexport class ProjectSharingComponent implements OnInit {\r\n  @HostBinding('class') componentCssClass;\r\n\r\n  protected exportSuccess: boolean;\r\n  protected loginStatus: number;\r\n  protected projects: Array<Project>;\r\n  protected resultStatus: boolean;\r\n  protected result: string;\r\n  protected selectedID: number;\r\n  protected targetUUID: string;\r\n\r\n  constructor(private router: Router, private dataService: DataService, private databaseService: DatabaseService, private overlayContainer: OverlayContainer) {}\r\n\r\n  ngOnInit(): void {\r\n    this.dataService.currentLoginStatus.subscribe(value => this.loginStatus = value);\r\n    this.dataService.currentTheme.subscribe(value => this.changeTheme(value));\r\n    console.log(\"login statzus: \", this.loginStatus);\r\n  }\r\n\r\n  changeTheme(theme): void {\r\n    if (theme !== undefined) {\r\n      this.overlayContainer.getContainerElement().classList.add(theme);\r\n      this.componentCssClass = theme;\r\n    } else {\r\n      this.router.navigate(['dashboard']);\r\n    }}\r\n\r\n    protected searchUser(email: string): void {\r\n    /*this.databaseService.searchMail(email).subscribe(res => {\r\n      if (res['docs'].length === 1) {\r\n        this.resultStatus = true;\r\n        this.result = res['docs'][0]['email'];\r\n        this.targetUUID = res['docs'][0]['_id'];\r\n        console.log(this.result);\r\n      }\r\n    });*/\r\n    }\r\n\r\n    protected exportProject(): void {\r\n      console.log(this.selectedID);\r\n      let tempWidgets: Array<Widget> = [];\r\n      let tempProject: Array<Project> = [];\r\n      //todo\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport {DashboardComponent} from './dashboard/dashboard.component';\r\nimport {PlatformSettingsComponent} from './platform-settings/platform-settings.component';\r\nimport {ProjectSharingComponent} from './project-sharing/project-sharing.component';\r\nimport {UserSettingsComponent} from './user-profile/user-settings/user-settings.component';\r\n\r\nconst routes2: Routes = [\r\n  {path: '', component: DashboardComponent},\r\n  {path: 'project-sharing', component: ProjectSharingComponent},\r\n  {path: 'platform-settings', component: PlatformSettingsComponent},\r\n  {path: 'user-profile',component: UserSettingsComponent}\r\n  ];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes2)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SkeletonRoutingModule { }\r\n","// Angular Modules\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport {Ng2FittextModule} from \"ng2-fittext\";\r\n// Our created Modules\r\nimport { SharedModule } from '../models/shared.module';\r\nimport { SkeletonRoutingModule } from './skeleton-routing.module';\r\n// imported Modules\r\nimport {ChartsModule} from 'ng2-charts/ng2-charts';\r\n\r\nimport {GridsterModule} from 'angular-gridster2';\r\n\r\n// Our Components\r\nimport {AddDeviceComponent} from './dashboard/sheet-content/widgets/devices/management/add-device/add-device.component';\r\nimport {DashboardComponent} from './dashboard/dashboard.component';\r\nimport {DeleteDeviceComponent} from './dashboard/sheet-content/widgets/devices/management/delete-device/delete-device.component';\r\nimport {SliderControlDeviceComponent} from './dashboard/sheet-content/widgets/devices/control/slider/slider-control-device.component';\r\nimport {SheetContentComponent} from './dashboard/sheet-content/sheet-content.component';\r\nimport {PlatformSettingsComponent} from './platform-settings/platform-settings.component';\r\nimport {MainMenuComponent} from './main-menu.component';\r\nimport {SidebarContentComponent} from './dashboard/sidebar-content/sidebar-content.component';\r\nimport {ProjectSharingComponent} from './project-sharing/project-sharing.component';\r\nimport {UserSettingsComponent} from './user-profile/user-settings/user-settings.component';\r\nimport {RealtimeValueVisualizationComponent} from './dashboard/sheet-content/widgets/visualization/value-visualization/realtime/realtime-value-visualization.component';\r\nimport {BarChartVisualizationComponent} from './dashboard/sheet-content/widgets/visualization/chart-visualization/BarChart/bar-chart-visualization.component';\r\n\r\nimport {HistoryAnomalyComponent} from './dashboard/sheet-content/widgets/anomaly/history-anomaly/history-anomaly.component';\r\nimport {RealtimeAnomalyComponent} from './dashboard/sheet-content/widgets/anomaly/realtime-anomaly/realtime-anomaly.component';\r\nimport {UserPrivacySettingsComponent} from './user-profile/user-privacy-settings/user-privacy-settings.component';\r\n\r\n// primeng modules\r\nimport {AccordionModule} from 'primeng/accordion';\r\nimport {CardModule} from 'primeng/card';\r\nimport {ButtonModule} from 'primeng/button';\r\nimport {TabViewModule} from 'primeng/tabview';\r\nimport {ToolbarModule} from 'primeng/toolbar';\r\nimport {MenubarModule} from 'primeng/menubar';\r\nimport {PanelMenuModule} from 'primeng/panelmenu';\r\nimport {DropdownModule} from 'primeng/primeng';\r\nimport {SliderModule} from 'primeng/slider';\r\nimport {InputSwitchModule} from 'primeng/inputswitch';\r\nimport {TooltipModule} from 'primeng/tooltip';\r\nimport {OverlayPanelModule} from 'primeng/overlaypanel';\r\nimport {PanelModule} from 'primeng/panel';\r\nimport {GrowlModule} from 'primeng/growl';\r\nimport {DialogModule} from 'primeng/dialog';\r\nimport {MenuModule} from 'primeng/menu';\r\nimport {SidebarModule} from 'primeng/sidebar';\r\nimport {ConfirmDialogModule} from 'primeng/confirmdialog';\r\nimport {ScrollPanelModule} from 'primeng/scrollpanel';\r\nimport {TieredMenuModule} from 'primeng/tieredmenu';\r\nimport {CalendarModule} from 'primeng/calendar';\r\nimport {SelectButtonModule} from 'primeng/selectbutton';\r\nimport {RadioButtonModule} from 'primeng/radiobutton';\r\nimport {ToggleControlDeviceComponent} from './dashboard/sheet-content/widgets/devices/control/toggle/toggle-control-device.component';\r\nimport {StateControlDeviceComponent} from './dashboard/sheet-content/widgets/devices/control/state/state-control-device.component';\r\nimport {LineChartVisualizationComponent} from './dashboard/sheet-content/widgets/visualization/chart-visualization/LineChart/line-chart-visualization.component';\r\nimport {ChartModule} from \"primeng/primeng\";\r\nimport {AutoCompleteModule} from 'primeng/autocomplete';\r\nimport {CheckboxModule} from 'primeng/checkbox';\r\nimport {MultiSelectModule} from 'primeng/multiselect';\r\nimport {ColorPickerModule} from 'primeng/colorpicker';\r\nimport {MessageModule} from 'primeng/message';\r\nimport {TabMenuModule} from 'primeng/tabmenu';\r\n\r\n// rule components\r\nimport {CreateRuleComponent} from './dashboard/rules/creation/rule-creation.component';\r\nimport {TriggerComponent} from './dashboard/rules/creation/trigger/trigger.component';\r\nimport {ActionComponent} from './dashboard/rules/creation/action/action.component';\r\nimport {TriggerCombineComponent} from './dashboard/rules/creation/trigger-combine/trigger-combine.component';\r\nimport {SelectItemPipe} from './dashboard/rules/pipes/select-item.pipe';\r\nimport {RuleCreationService} from './dashboard/rules/service/rule-creation.service';\r\nimport {RuleManagementService} from './dashboard/rules/service/rule-management.service';\r\nimport {ActionCombineComponent} from './dashboard/rules/creation/action-combine/action-combine.component';\r\nimport {SelectedTriggerPipe} from './dashboard/rules/pipes/selected-trigger.pipe';\r\nimport {ManagementComponent} from './dashboard/rules/management/management.component';\r\nimport {TableModule} from 'primeng/table';\r\nimport {SplitButtonModule} from 'primeng/splitbutton';\r\nimport {DataViewModule} from 'primeng/dataview';\r\nimport {MessagesModule} from 'primeng/messages';\r\nimport {FieldsetModule} from 'primeng/primeng';\r\nimport { SharingComponent } from './dashboard/rules/sharing/sharing.component';\r\nimport { NotificationComponent } from './dashboard/rules/notification/notification.component';\r\nimport { NotifyMessageComponent } from './dashboard/rules/notify-message/notify-message.component';\r\nimport { RuleNotificationService } from './dashboard/rules/service/rule-notification.service';\r\nimport { PlatformDeviceManagementService } from './dashboard/rules/service/platform-device-management.service';\r\nimport { DoughnutChartComponent } from './dashboard/sheet-content/widgets/visualization/chart-visualization/doughnut-chart/doughnut-chart.component';\r\nimport { BubbleChartVisualizationComponent } from './dashboard/sheet-content/widgets/visualization/chart-visualization/BubbleChart/bubble-chart-visualization.component';\r\nimport { PolarAreaChartVisualizationComponent } from './dashboard/sheet-content/widgets/visualization/chart-visualization/polar-area-chart-visualization/polar-area-chart-visualization.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    ScrollPanelModule,\r\n    SidebarModule,\r\n    TieredMenuModule,\r\n    ConfirmDialogModule,\r\n    MenuModule,\r\n    AccordionModule,\r\n    PanelModule,\r\n    GrowlModule,\r\n    OverlayPanelModule,\r\n    TooltipModule,\r\n    InputSwitchModule,\r\n    SliderModule,\r\n    DropdownModule,\r\n    PanelMenuModule,\r\n    MenubarModule,\r\n    ToolbarModule,\r\n    TabViewModule,\r\n    ButtonModule,\r\n    CardModule,\r\n    CommonModule,\r\n    SkeletonRoutingModule,\r\n    ChartsModule,\r\n    FormsModule,\r\n    GridsterModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    SharedModule,\r\n    DialogModule,\r\n    CalendarModule,\r\n    SelectButtonModule,\r\n    RadioButtonModule,\r\n    CheckboxModule,\r\n    AutoCompleteModule,\r\n    MultiSelectModule,\r\n    TableModule,\r\n    SplitButtonModule,\r\n    FieldsetModule,\r\n    DataViewModule,\r\n    MessagesModule,\r\n    ColorPickerModule,\r\n    MessageModule,\r\n    TabMenuModule,\r\n    Ng2FittextModule\r\n  ],\r\n  providers: [\r\n    RuleCreationService,\r\n    RuleManagementService,\r\n    RuleNotificationService,\r\n    PlatformDeviceManagementService\r\n  ],\r\n  declarations: [\r\n    MainMenuComponent,\r\n    AddDeviceComponent,\r\n    DashboardComponent,\r\n    SliderControlDeviceComponent,\r\n    ToggleControlDeviceComponent,\r\n    StateControlDeviceComponent,\r\n    DeleteDeviceComponent,\r\n    SidebarContentComponent,\r\n    LineChartVisualizationComponent,\r\n    SheetContentComponent,\r\n    PlatformSettingsComponent,\r\n    ProjectSharingComponent,\r\n    UserSettingsComponent,\r\n    RealtimeValueVisualizationComponent,\r\n    BarChartVisualizationComponent,\r\n    ManagementComponent,\r\n    SelectedTriggerPipe,\r\n    ActionCombineComponent,\r\n    SelectItemPipe,\r\n    TriggerCombineComponent,\r\n    ActionComponent,\r\n    TriggerComponent,\r\n    CreateRuleComponent,\r\n    SharingComponent,\r\n    NotificationComponent,\r\n    NotifyMessageComponent,\r\n    RealtimeAnomalyComponent,\r\n    HistoryAnomalyComponent,\r\n    DoughnutChartComponent,\r\n    UserPrivacySettingsComponent,\r\n    UserSettingsComponent,\r\n    BubbleChartVisualizationComponent,\r\n    PolarAreaChartVisualizationComponent,\r\n  ],\r\n  entryComponents: [\r\n    AddDeviceComponent,\r\n    DeleteDeviceComponent\r\n  ]\r\n})\r\nexport class SkeletonModule { }\r\n","module.exports = \"\\r\\n#mainContent {\\r\\n  position: absolute;\\r\\n  left: 50px;\\r\\n  right: 0;\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n}\\r\\n\\r\\n.middlecardSheet {\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"\\r\\n<p-growl [(value)]=\\\"msgs\\\"></p-growl>\\r\\n<div *ngIf=\\\"status == 0\\\">\\r\\n\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"status == 1\\\">\\r\\n  <p-card title=\\\"Error!\\\" [style]=\\\"{width: '360px'}\\\" styleClass=\\\"ui-card-shadow\\\">\\r\\n    <p>You're not authorized to be here. Maybe you just need to login? </p>\\r\\n    <p-footer>\\r\\n      <button pButton (click)=\\\"toLogin()\\\">Login</button>\\r\\n    </p-footer>\\r\\n  </p-card>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"status == 2\\\">\\r\\n  <p-card title=\\\"Error!\\\" [style]=\\\"{width: '360px'}\\\" styleClass=\\\"ui-card-shadow\\\">\\r\\n    <p>Your Session has expired or your account has been logged in from another device. Please log in again.</p>\\r\\n    <p-footer>\\r\\n      <button pButton (click)=\\\"toLogin()\\\">Login</button>\\r\\n    </p-footer>\\r\\n  </p-card>\\r\\n</div>\\r\\n\"","/**\r\n * @author Philipp Grenz\r\n * This component allows to recover a session when the page is reloaded or reopened\r\n */\r\n\r\nimport { Component, HostBinding, OnInit, ViewChild } from '@angular/core';\r\nimport { DatabaseService } from '../../services/database.service';\r\nimport { DataService } from '../../services/data.service';\r\nimport { OverlayContainer } from '@angular/cdk/overlay';\r\n\r\nimport { ConfirmationService, MenuItem, Message } from 'primeng/api';\r\nimport { TabPanel, TabView } from 'primeng/primeng';\r\nimport { User } from '../../models/frontend/user';\r\nimport { ProjectService } from '../../services/project.service';\r\nimport { Project } from '../../models/frontend/project';\r\nimport { EntityStatechangeResponse } from '../../models/backend/entitystatechangeresponse';\r\nimport { ValueViewWidget } from '../../models/frontend/valueviewwidget';\r\nimport { WidgetType } from '../../models/frontend/widget';\r\nimport { ThingStatusChangeResponse } from '../../models/backend/thingstatuschangedresponse';\r\nimport { DeviceManagerService } from '../../services/devicemanager.service';\r\nimport { Device } from '../../models/backend/device';\r\nimport { DeviceDiscoveredResponse } from '../../models/backend/devicediscoveredresponse';\r\nimport { SessionService } from '../../services/session.service';\r\nimport { FORBIDDEN, UNAUTHORIZED } from 'http-status-codes';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-unauthorized',\r\n  providers: [ConfirmationService],\r\n  templateUrl: './unauthorized.component.html',\r\n  styleUrls: ['./unauthorized.component.css']\r\n})\r\nexport class UnauthorizedComponent implements OnInit {\r\n  @HostBinding('class') componentCssClass;\r\n\r\n  public msgs: Array<Message> = [];\r\n\r\n  protected status = 0;\r\n\r\n  constructor(private sessionService: SessionService, private databaseService: DatabaseService,\r\n              private dataService: DataService, private projectService: ProjectService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.checkForSession();\r\n  }\r\n\r\n  protected notifyOfEvent(event): void {\r\n    this.msgs.push(event);\r\n  }\r\n  /**\r\n   * this method restores the users session if one is present\r\n   */\r\n  checkForSession(): any {\r\n    this.sessionService.restoreSession()\r\n      .subscribe(result => {\r\n        const userId = result['userId'];\r\n        this.databaseService.getDocument(this.databaseService.USERSCOLLECTION , userId)\r\n          .subscribe((user: User) => {\r\n              if (user.role === 'developer') {\r\n                this.dataService.changeLoginStatus(2);\r\n              } else if (user.role === 'enduser') {\r\n                this.dataService.changeLoginStatus(1);\r\n              }\r\n              console.log(user.projects[0]);\r\n              this.dataService.changeLoginUUID(user.id);\r\n              this.dataService.changeUserData(user);\r\n              this.projectService.loadNewProject(user.projects[0], true);\r\n            },\r\n            err => {\r\n              this.status = 1;\r\n            });\r\n      }, err => {\r\n        if (err['error'] === 'Session invalid') {\r\n          this.status = 2;\r\n        } else {\r\n          console.log(err.status);\r\n          this.status = 1;\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * this method routes the user to the login page\r\n   */\r\n  toLogin(): any {\r\n    this.router.navigate(['']);\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 25);\r\n  }\r\n}\r\n","module.exports = \"\\r\\n\\r\\n\\r\\n\"","module.exports = \"<p-growl [sticky]=\\\"false\\\" [(value)]=\\\"this.msgs\\\"></p-growl>\\r\\n<p-dialog header=\\\"Privacy Settings\\\" [modal]=true appendTo=\\\"body\\\" [width]=\\\"550\\\" [(visible)]=\\\"privacySettings\\\">\\r\\n\\r\\n  <form [formGroup]=\\\"policyForm\\\" (ngSubmit)=\\\"saveSettings(policyForm.value)\\\" *ngIf=\\\"policyForm != null\\\">\\r\\n    <div class=\\\"ui-g\\\">\\r\\n      <div class=\\\"ui-g-12\\\">\\r\\n        <h3>Change privacy settings</h3>\\r\\n      </div>\\r\\n\\r\\n      <div *ngFor=\\\"let currID of sequenceList; let i=index\\\">\\r\\n        <div style=\\\"width: 475px;\\\">\\r\\n          <p-fieldset [toggleable]=\\\"true\\\" [collapsed]=\\\"true\\\">\\r\\n            <p-header>\\r\\n              <div style=\\\"border:none\\\" class=\\\"ui-message\\\" *ngIf=\\\"policyForm.controls[currID].valid\\\">\\r\\n                {{availableElements[currID].title}}\\r\\n                <div style=\\\"border:none\\\" class=\\\"ui-message\\\" *ngIf=\\\"!availableElements[currID].consentRequired\\\">\\r\\n                  [OPTIONAL]\\r\\n                </div>\\r\\n              </div>\\r\\n              <div style=\\\"border:none; color: red; font-weight: bold;\\\" class=\\\"ui-message\\\" *ngIf=\\\"!policyForm.controls[currID].valid\\\">\\r\\n                <i style=\\\"color:red\\\" class=\\\"fa fa-exclamation-circle\\\"></i>\\r\\n                {{availableElements[currID].title}} <br/>\\r\\n              </div>\\r\\n            </p-header>\\r\\n\\r\\n            <div class=\\\"ui-g-12\\\">\\r\\n              <p>\\r\\n                {{availableElements[currID].descriptions.before}}\\r\\n              </p>\\r\\n              <div *ngFor=\\\"let child of availableElements[currID].children; let i=index\\\">\\r\\n                <div style=\\\"width: 400px;\\\">\\r\\n                  <p-fieldset [toggleable]=\\\"true\\\" [collapsed]=\\\"true\\\">\\r\\n                    <p-header>\\r\\n                      <div style=\\\"border: none\\\" class=\\\"ui-message\\\" *ngIf=\\\"policyForm.controls[child.id].valid\\\">\\r\\n                        {{child.title}}\\r\\n                        <div style=\\\"border: none\\\" class=\\\"ui-message\\\" *ngIf=\\\"!child.consentRequired\\\">\\r\\n                          [OPTIONAL]\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div style=\\\"border: none; color: red; font-weight: bold;\\\" class=\\\"ui-message\\\" *ngIf=\\\"!policyForm.controls[child.id].valid\\\">\\r\\n                        <i style=\\\"color: red\\\" class=\\\"fa fa-exclamation-circle\\\"></i>\\r\\n                        {{child.title}} <br/>\\r\\n                      </div>\\r\\n                    </p-header>\\r\\n                    <div class=\\\"ui-g-12\\\">\\r\\n                      <p>\\r\\n                        {{child.descriptions.before}}\\r\\n                      </p>\\r\\n                    </div>\\r\\n                    <div class=\\\"ui-g-12\\\">\\r\\n                      <p-checkbox label=\\\"{{child.descriptions.submit}}\\\" [formControl]=\\\"policyForm.controls[child.id]\\\"\\r\\n                                  binary=\\\"true\\\"></p-checkbox>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"ui-g-5\\\">\\r\\n                      <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\"\\r\\n                           *ngIf=\\\"child.validFrom.getTime() > currTime && child.consentRequired && !policyForm.controls[child.id].value\\\">\\r\\n                        required till {{child.validFrom.getDate()}}.{{child.validFrom.getMonth() + 1}}.{{child.validFrom.getFullYear()}}\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                  </p-fieldset>\\r\\n                </div>\\r\\n                <br>\\r\\n              </div>\\r\\n              <p>\\r\\n                {{availableElements[currID].descriptions.after}}\\r\\n              </p>\\r\\n              <div class=\\\"ui-g-12\\\">\\r\\n                <p-checkbox label=\\\"{{availableElements[currID].descriptions.submit}}\\\"\\r\\n                            [formControl]=\\\"policyForm.controls[currID]\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n              </div>\\r\\n            </div>\\r\\n          </p-fieldset>\\r\\n          <div class=\\\"ui-g-5\\\">\\r\\n            <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\"\\r\\n                 *ngIf=\\\"availableElements[currID].validFrom.getTime() > currTime && availableElements[currID].consentRequired && !policyForm.controls[currID].value\\\">\\r\\n              required till {{availableElements[currID].validFrom.getDate()}}.{{availableElements[currID].validFrom.getMonth() + 1}}.{{availableElements[currID].validFrom.getFullYear()}}\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-4\\\"></div>\\r\\n      <div class=\\\"ui-g-4\\\">\\r\\n        <button pButton type=\\\"submit\\\" label=\\\"Submit\\\" [disabled]=\\\"policyForm.invalid\\\"></button>\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-4\\\"></div>\\r\\n    </div>\\r\\n  </form>\\r\\n</p-dialog>\\r\\n\\r\\n\\r\\n\\r\\n<p-dialog header=\\\"Changed Terms of Use\\\" [modal]=true [closeOnEscape]=\\\"false\\\" [closable]=\\\"false\\\"\\r\\n          appendTo=\\\"body\\\" [width]=\\\"550\\\" [(visible)]=\\\"popup\\\">\\r\\n  <form [formGroup]=\\\"this.policyFormPopup\\\" (ngSubmit)=\\\"this.editPartOfSettings(policyFormPopup.value)\\\" *ngIf=\\\"this.policyFormPopup != null\\\">\\r\\n    <div class=\\\"ui-g\\\">\\r\\n      <div class=\\\"ui-g-12\\\">\\r\\n        The terms of use have changed, if you want to continue using this service you have to accept the new terms.\\r\\n        Otherwise you have to delete your account.\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-12\\\">\\r\\n\\r\\n        <div *ngFor=\\\"let elem of this.uncheckedElements; let i=index\\\">\\r\\n          <div style=\\\"width: 475px;\\\">\\r\\n            <p-fieldset [toggleable]=\\\"true\\\">\\r\\n              <p-header>\\r\\n                <div style=\\\"border:none\\\" class=\\\"ui-message\\\" *ngIf=\\\"policyFormPopup.controls[elem.id].valid\\\">\\r\\n                  {{elem.title}}\\r\\n                </div>\\r\\n                <div style=\\\"border:none; color: red; font-weight: bold;\\\" class=\\\"ui-message\\\" *ngIf=\\\"!policyFormPopup.controls[elem.id].valid\\\">\\r\\n                  <i style=\\\"color:red\\\" class=\\\"fa fa-exclamation-circle\\\"></i>\\r\\n                  {{elem.title}} <br/>\\r\\n                  <div style=\\\"border: none\\\" class=\\\"ui-message\\\" *ngIf=\\\"!elem.consentRequired\\\">\\r\\n                    [OPTIONAL]\\r\\n                  </div>\\r\\n                </div>\\r\\n              </p-header>\\r\\n              <div class=\\\"ui-g-12\\\">\\r\\n                <p>\\r\\n                  {{elem.descriptions.before}}\\r\\n                </p>\\r\\n                <div *ngFor=\\\"let child of elem.children; let i=index\\\">\\r\\n                  <div style=\\\"width: 400px;\\\">\\r\\n                    <p-fieldset>\\r\\n                      <p-header>\\r\\n                        <div style=\\\"border:none\\\" class=\\\"ui-message\\\" *ngIf=\\\"policyFormPopup.controls[child.id].valid\\\">\\r\\n                          {{child.title}}\\r\\n                          <div style=\\\"border: none\\\" class=\\\"ui-message\\\" *ngIf=\\\"!child.consentRequired\\\">\\r\\n                            [OPTIONAL]\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div style=\\\"border:none; color: red; font-weight: bold;\\\" class=\\\"ui-message\\\" *ngIf=\\\"!policyFormPopup.controls[child.id].valid\\\">\\r\\n                          <i style=\\\"color:red\\\" class=\\\"fa fa-exclamation-circle\\\"></i>\\r\\n                          {{child.title}} <br/>\\r\\n                        </div>\\r\\n\\r\\n                      </p-header>\\r\\n                      <div class=\\\"ui-g-12\\\">\\r\\n                        <p>\\r\\n                          {{child.descriptions.before}}\\r\\n                        </p>\\r\\n                      </div>\\r\\n                      <div class=\\\"ui-g-12\\\">\\r\\n                        <p-checkbox label=\\\"{{child.descriptions.submit}}\\\" [formControl]=\\\"this.policyFormPopup.controls[child.id]\\\"\\r\\n                                    binary=\\\"true\\\"></p-checkbox>\\r\\n                      </div>\\r\\n\\r\\n                    </p-fieldset>\\r\\n                  </div>\\r\\n                  <br>\\r\\n                </div>\\r\\n                <p>\\r\\n                  {{elem.descriptions.after}}\\r\\n                </p>\\r\\n                <div class=\\\"ui-g-12\\\">\\r\\n                  <p-checkbox label=\\\"{{elem.descriptions.submit}}\\\"\\r\\n                              [formControl]=\\\"this.policyFormPopup.controls[elem.id]\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n                </div>\\r\\n              </div>\\r\\n            </p-fieldset>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <p-footer>\\r\\n        <button pButton type=\\\"submit\\\" label=\\\"Submit\\\" [disabled]=\\\"policyFormPopup.invalid\\\" (click)=\\\"editPartOfSettings(policyFormPopup)\\\"></button>\\r\\n        <button (click)=\\\"this.deleteAccountPopup = true\\\" class=\\\"ui-button-danger\\\" type=\\\"button\\\" pButton label=\\\"Delete Account\\\"></button>\\r\\n      </p-footer>\\r\\n    </div>\\r\\n  </form>\\r\\n</p-dialog>\\r\\n\\r\\n<p-dialog header=\\\"Account deletion\\\" [responsive]=\\\"true\\\" [modal]=true appendTo=\\\"body\\\" [width]=\\\"550\\\"\\r\\n          [(visible)]=\\\"deleteAccountPopup\\\">\\r\\n  <p-growl [(value)]=\\\"msgs\\\"></p-growl>\\r\\n  <div class=\\\"ui-g-12\\\">\\r\\n    <span>You are about to delete your account. This can not be undone.</span><br>\\r\\n    <span>Please confirm with your password.</span>\\r\\n  </div>\\r\\n  <form [formGroup]=\\\"passwordForm\\\" >\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <input formControlName=\\\"Password\\\" pInputText placeholder=\\\"Enter password\\\" type=\\\"password\\\">\\r\\n    </div>\\r\\n\\r\\n  <p-footer>\\r\\n    <button [disabled]=\\\"!passwordForm.valid\\\" (click)=\\\"deleteAccount(passwordForm.value)\\\" class=\\\"ui-button-danger\\\" type=\\\"button\\\" pButton label=\\\"Delete\\\"></button>\\r\\n    <button  (click)=\\\"deleteAccountPopup =false\\\" class=\\\"ui-button-secondary\\\" type=\\\"button\\\" pButton label=\\\"Cancel\\\"></button>\\r\\n  </p-footer>\\r\\n  </form>\\r\\n</p-dialog>\\r\\n\\r\\n<p-dialog header=\\\"Reminder\\\" appendTo=\\\"body\\\" [width]=\\\"550\\\" [(visible)]=\\\"reminderPopup\\\">\\r\\n  <div class=\\\"ui-g-12\\\">\\r\\n    You haven't agreed to our new terms of use. Check the Privacy Settings to view the new terms.<br/>\\r\\n    If you don't want to agree to the new terms till the given date in the Privacy Settings, you will have to delete your account.<br/>\\r\\n    <br/>\\r\\n  </div>\\r\\n  <div class=\\\"ui-g-12\\\">\\r\\n    The new terms consist of:\\r\\n    <ul>\\r\\n      <div *ngFor=\\\"let title of remindElements\\\">\\r\\n        <li>\\r\\n          {{title}}\\r\\n        </li>\\r\\n      </div>\\r\\n    </ul>\\r\\n  </div>\\r\\n  <p-footer>\\r\\n    <button  (click)=\\\"showSettings(); reminderPopup = false\\\" class=\\\"ui-button\\\" type=\\\"button\\\" pButton label=\\\"Open Privacy Settings\\\"></button>\\r\\n  </p-footer>\\r\\n</p-dialog>\\r\\n\"","import { Component, EventEmitter, HostBinding, Input, OnInit, Output } from '@angular/core';\r\nimport { DatabaseService } from '../../../services/database.service';\r\nimport { UserManagerService } from '../../../services/usermanager.service';\r\nimport { OverlayContainer } from '@angular/cdk/overlay';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { DataService } from '../../../services/data.service';\r\nimport { User } from '../../../models/frontend/user';\r\nimport { DataPrivacyManagerService } from '../../../services/dataprivacymanager.service';\r\nimport { DataPrivacyElementBackend } from '../../../models/backend/dataprivacyelementbackend';\r\nimport { Message } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-user-privacy-settings',\r\n  templateUrl: './user-privacy-settings.component.html',\r\n  styleUrls: ['./user-privacy-settings.component.css']\r\n})\r\nexport class UserPrivacySettingsComponent implements OnInit {\r\n  @HostBinding('class') componentCssClass;\r\n  protected policyForm: FormGroup;\r\n  protected availableElements = {};\r\n  protected sequenceList; //--- hinzugef�gt am 22.03.2019 12:50 ---\r\n  protected userCheckedElements: Array<string> = [];\r\n  protected privacySettings = false;\r\n  protected user: User;\r\n  public currTime: number;\r\n  @Output() messageEvent = new EventEmitter<any>();\r\n  protected msgs: Array<Message> = [];\r\n\r\n  // Changed use terms dialog\r\n  @Output() delete: EventEmitter<void> = new EventEmitter<void>();\r\n  deleteAccountPopup: boolean;\r\n  @Input() passwordForm: FormGroup;\r\n  protected policyFormPopup: FormGroup;\r\n  protected uncheckedElements: Array<DataPrivacyElementBackend>;\r\n  protected popup = false;\r\n  intervalID;\r\n\r\n  // Remind to check Elements\r\n  reminderPopup: boolean;\r\n  remindElements: Array<string>;\r\n\r\n  constructor(private databaseService: DatabaseService, private dataService: DataService, private overlayContainer: OverlayContainer,\r\n              private usermanager: UserManagerService, private router: Router, private fb: FormBuilder,\r\n              private dataprivacymanager: DataPrivacyManagerService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.currTime = Date.now();\r\n    this.sequenceList = [];\r\n    this.dataService.userData.subscribe((user: User) => {\r\n      this.user = user;\r\n\r\n      const formControls = {};\r\n      this.dataprivacymanager.getPrivacySettings(this.user.id)\r\n        .subscribe(result => {\r\n          this.userCheckedElements = result;\r\n          // get all privacy elements and make formcontrols and fill availableElements\r\n          this.dataprivacymanager.getAllRootElements().subscribe(result => {\r\n            result.forEach(function(root) {\r\n              const item = new DataPrivacyElementBackend(root);\r\n              this.availableElements[root.id] = item;\r\n              this.sequenceList.push([root.id]);\r\n              formControls[root.id] = new FormControl(this.userCheckedElements.indexOf(root.id) !== -1,\r\n                (root.consentRequired && root.validFrom <= this.currTime) ?\r\n                  Validators.requiredTrue : Validators.nullValidator);\r\n              formControls[root.id].valueChanges.subscribe(val => {\r\n                if (val) {\r\n                  const c = this.availableElements[root.id].children;\r\n                  const changes = {};\r\n                  for (let i = 0; i < c.length; i++) {\r\n                    if (formControls[c[i].id] !== val) { changes[c[i].id] = val; }\r\n                  }\r\n                  this.policyForm.patchValue(changes);\r\n                }\r\n              });\r\n            }.bind(this));\r\n\r\n            this.dataprivacymanager.getAllLeafElements().subscribe(result => {\r\n              result.forEach(function (leaf) {\r\n                let item = new DataPrivacyElementBackend(leaf);\r\n                this.availableElements[leaf.id] = item;\r\n                this.availableElements[leaf.contextID].addChild(item);\r\n\r\n                formControls[leaf.id] = new FormControl(this.userCheckedElements.indexOf(leaf.id) !== -1,\r\n                  (leaf.consentRequired && leaf.validFrom <= this.currTime) ?\r\n                    Validators.requiredTrue : Validators.nullValidator);\r\n                formControls[leaf.id].valueChanges.subscribe(val => {\r\n                  const changes = {};\r\n                  if (!val && formControls[leaf.contextID]) {\r\n                    changes[leaf.contextID] = false;\r\n                    this.policyForm.patchValue(changes);\r\n                  }\r\n                });\r\n              }.bind(this));\r\n              this.policyForm = this.fb.group(formControls);\r\n            });\r\n\r\n            // check if the reminder has to pop up\r\n            this.checkForRemindingElements();\r\n\r\n            // set intervals\r\n            // interval for getting current time\r\n            setInterval(() => {\r\n              this.currTime = Date.now();\r\n            }, 10000);\r\n\r\n            // interval for checking if privacy elements got valid\r\n            this.intervalID = this.checkPrivacyelementsInterval();\r\n\r\n            // interval for getting new dataprivacyelements\r\n            setInterval(() => {\r\n              this.ngOnInit();\r\n            }, 86400000);\r\n          });\r\n        });\r\n\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * This method sets up an interval that checks if any privacyelements have gotten valid.\r\n   * If elements have gotten valid, a popup pops up\r\n   */\r\n  private checkPrivacyelementsInterval(): any {\r\n    return setInterval(() => {\r\n      if (!this.popup && this.getUncheckedConsentRequiredElements().length > 0) {\r\n        this.uncheckedElements = this.getUncheckedConsentRequiredElements();\r\n        const formControls = {};\r\n        let obj;\r\n        for (obj of this.uncheckedElements) {\r\n          formControls[obj.id] = new FormControl(this.userCheckedElements.indexOf(obj.id) !== -1,\r\n            obj.consentRequired ? Validators.requiredTrue : Validators.nullValidator);\r\n          for (const child of obj.children) {\r\n            formControls[child.id] = new FormControl(this.userCheckedElements.indexOf(child.id) !== -1,\r\n              child.consentRequired ? Validators.requiredTrue : Validators.nullValidator);\r\n          }\r\n        }\r\n\r\n        this.uncheckedElements.forEach(item => {\r\n          formControls[item.id].valueChanges.subscribe(val => {\r\n            if (val) {\r\n              const c = item.children;\r\n              const changes = {};\r\n              for (let i = 0; i < c.length; i++) {\r\n                if (formControls[c[i].id] !== val) { changes[c[i].id] = val; }\r\n              }\r\n              this.policyFormPopup.patchValue(changes);\r\n            }\r\n          });\r\n          for (const child of item.children) {\r\n            formControls[child.id].valueChanges.subscribe(val => {\r\n              const changes = {};\r\n              if (!val && formControls[child.contextID]) {\r\n                changes[child.contextID] = false;\r\n                this.policyFormPopup.patchValue(changes);\r\n              }\r\n            });\r\n          }\r\n        });\r\n\r\n        this.policyFormPopup = this.fb.group(formControls);\r\n        this.popup = true;\r\n        clearInterval(this.intervalID);\r\n      }\r\n    }, 5000);\r\n  }\r\n\r\n  /**\r\n   * Accepts formvalues and saves the settings to the backend database\r\n   *\r\n   * @param formValues the values from the form\r\n   */\r\n  private saveSettings(formValues): void {\r\n    // check if all necessary settings have been chosen\r\n    let checkedAll = true;\r\n    for (const id in this.availableElements) {\r\n      const item = this.availableElements[id];\r\n      if (item.children.length > 0) {\r\n        for (const child of item.children) {\r\n          if (child.consentRequired && !formValues[child.id] && child.validFrom.getTime() <= this.currTime) {\r\n            this.messageEvent.emit({severity: 'error', summary: 'Conflict', detail: 'Not all necessary settings have been chosen.'});\r\n            checkedAll = false;\r\n          }\r\n        }\r\n      }\r\n      if (item.consentRequired && !formValues[id] && item.validFrom.getTime() <= this.currTime) {\r\n        this.messageEvent.emit({severity: 'error', summary: 'Conflict', detail: 'Not all necessary settings have been chosen.'});\r\n        checkedAll = false;\r\n      }\r\n    }\r\n    // if all necessary settings have been chosen, send request to backend\r\n    if (checkedAll) {\r\n      this.dataprivacymanager.editPrivacySettings(this.user.id, formValues).subscribe(result => {\r\n        // load settings\r\n        this.loadUserSettingsAndDo(() => {\r\n          if (this.popup) {\r\n            this.intervalID = this.checkPrivacyelementsInterval();\r\n            this.popup = false;\r\n          }\r\n          this.privacySettings = false;\r\n        });\r\n        this.messageEvent.emit({\r\n            severity: 'success',\r\n            summary: '',\r\n            detail: ''\r\n        });\r\n        },\r\n        err => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          this.messageEvent.emit({\r\n            severity: 'error',\r\n            summary: 'Error',\r\n            detail: 'Error while changing settings.Please try again later or contact the administrator.'\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method loads the users settings and sets the privacy settings to visible\r\n   */\r\n  public showSettings(): void {\r\n    // load user settings\r\n    this.loadUserSettingsAndDo(() => {\r\n      this.privacySettings = true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This method gets the user settings from the database, sets the policyform and calls func\r\n   * @param func function that is being called after the settings were loaded\r\n   */\r\n  private loadUserSettingsAndDo(func: Function): void {\r\n    this.dataprivacymanager.getPrivacySettings(this.user.id)\r\n      .subscribe(result => {\r\n        this.userCheckedElements = result;\r\n        const newValues = {};\r\n        let index;\r\n        for (index in this.availableElements) {\r\n          newValues[index] = false;\r\n        }\r\n        // if user has checked old privacy elements, we have to ignore them\r\n        let id;\r\n        for (id of this.userCheckedElements) {\r\n          if (this.availableElements[id] !== undefined) {\r\n            newValues[id] = true;\r\n          }\r\n        }\r\n        this.policyForm.setValue(newValues);\r\n        func();\r\n      });\r\n  }\r\n\r\n  /**\r\n   * This method returns an array of the privacy elements that are not checked by the user but are valid and require consent\r\n   *\r\n   * @return array of valid, unchecked, consent required data privacy elements\r\n   */\r\n  public getUncheckedConsentRequiredElements(): Array<DataPrivacyElementBackend> {\r\n    const ret = Array<DataPrivacyElementBackend>();\r\n    let temp;\r\n    let id;\r\n    let elem;\r\n    let child;\r\n    let isFirstChild = true;\r\n    for (id in this.availableElements) {\r\n      elem = this.availableElements[id];\r\n      if(elem.contextID !== '')\r\n        continue;\r\n      if (this.isUncheckedValidConsentRequired(elem)) {\r\n        ret.push(elem);\r\n      } else {\r\n        isFirstChild = true;\r\n        for (child of elem.children) {\r\n          if (this.isUncheckedValidConsentRequired(child)) {\r\n            if (isFirstChild) {\r\n              temp = JSON.parse(JSON.stringify(elem));\r\n              temp.children = [];\r\n              ret.push(temp);\r\n              isFirstChild = false;\r\n            }\r\n            ret[ret.length - 1].children.push(child);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * This method checks if elem is valid, unchecked by the user and consent required\r\n   *\r\n   * @param elem the data privacy element that is checked\r\n   */\r\n  private isUncheckedValidConsentRequired(elem: DataPrivacyElementBackend): boolean {\r\n    return elem.validFrom.getTime() < this.currTime && this.userCheckedElements.indexOf(elem.id) === -1 && elem.consentRequired;\r\n  }\r\n\r\n  /**\r\n   * This method sends changed settings to the backend\r\n   *\r\n   * @param formValuesChange\r\n   */\r\n  public editPartOfSettings(formValuesChange): void {\r\n    this.loadUserSettingsAndDo(() => {\r\n      const fv = this.policyForm.value;\r\n      for (const id in formValuesChange) {\r\n        fv[id] = formValuesChange[id];\r\n      }\r\n      this.saveSettings(fv);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This method checks if there are any consent required, unchecked data privacy elements that aren't valid yet\r\n   * and lets a reminder pop up if it finds anything\r\n   */\r\n  public checkForRemindingElements(): void {\r\n    const ret = Array<string>();\r\n    let id;\r\n    let currElem;\r\n    let child;\r\n    for (id in this.availableElements) {\r\n      currElem = this.availableElements[id];\r\n      if (currElem.contextID !== '')\r\n        continue;\r\n      if (this.isNotValidRequiredNotChosen(currElem)) {\r\n        ret.push(currElem.title);\r\n      }\r\n      if (currElem.children.length > 0 && !currElem.consentRequired) {\r\n        for (child of currElem.children) {\r\n          // if (child.validFrom.getTime() > this.currTime && child.consentRequired && !this.policyForm.controls[child.id].value) {\r\n          if (this.isNotValidRequiredNotChosen(child)) {\r\n            ret.push(currElem.title);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.remindElements = ret;\r\n    if (ret.length > 0) {\r\n      this.reminderPopup = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  This method checks if a dataprivacyelement is not valid, required and not chosen by the user\r\n   * @param elem\r\n   */\r\n  private isNotValidRequiredNotChosen(elem: DataPrivacyElementBackend): boolean {\r\n    return elem.validFrom.getTime() > this.currTime && elem.consentRequired && !this.userCheckedElements.includes(elem.id, 0);\r\n  }\r\n\r\n  /**\r\n   *  This method sends a delete request to the backend\r\n   * @param formValue\r\n   */\r\n  protected deleteAccount(formValue): void {\r\n    // this.messageEvent.emit({severity: 'error', summary: 'Deletion failed', detail: 'Please contact the system administrator.'});\r\n    // user löschen ans backend senden\r\n    this.usermanager.deleteUser(this.user.id, formValue['Password'])\r\n      .subscribe(result => {\r\n          this.dataService.changeLoginStatus(0);\r\n          this.dataService.changeUserData(undefined);\r\n          this.dataService.changeProjectData(undefined);\r\n          this.router.navigate(['']);\r\n          window.location.reload();\r\n        },\r\n        err => {\r\n          this.msgs.push({\r\n            severity: 'error',\r\n            summary: 'Error',\r\n            detail: err['error']\r\n          });\r\n        });\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n\\r\\n\\r\\n\"","module.exports = \"\\r\\n<p-dialog  header=\\\"User Settings\\\" [modal]=true appendTo=\\\"body\\\" [width]=\\\"550\\\"\\r\\n          [(visible)]=\\\"userSettings\\\" [closable]=\\\"false\\\">\\r\\n  <form [formGroup]=\\\"userform\\\" (ngSubmit)=\\\"saveNewPassword(userform.value)\\\">\\r\\n  <div class=\\\"ui-g\\\">\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <h3>Change Password</h3>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <div class=\\\"ui-g-4\\\">Old Password:</div>\\r\\n      <input pInputText type=\\\"password\\\" formControlName=\\\"OldPassword\\\" placeholder=\\\"Enter old password\\\">\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <div class=\\\"ui-g-4\\\">New Password:</div>\\r\\n      <input pInputText type=\\\"password\\\" formControlName=\\\"Password\\\" placeholder=\\\"Enter new password\\\">\\r\\n      <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!userform.controls['Password'].valid&&userform.controls['Password'].dirty\\\">\\r\\n        <span *ngIf=\\\"userform.controls['Password'].errors['required']\\\">Password is required</span>\\r\\n        <span *ngIf=\\\"userform.controls['Password'].errors['minlength']\\\">Must be longer than 6 characters</span>\\r\\n        <span *ngIf=\\\"userform.controls['Password'].errors['notMatchOther']\\\">Has to be different from the old password</span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <div class=\\\"ui-g-4\\\">Password repetition:</div>\\r\\n      <input pInputText type=\\\"password\\\" formControlName=\\\"PasswordRepetition\\\" placeholder=\\\"Renter new password\\\">\\r\\n      <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!userform.controls['PasswordRepetition'].valid&&userform.controls['PasswordRepetition'].dirty\\\">\\r\\n        <span>Passwords do not match</span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <button [disabled]=\\\"!userform.valid\\\" type=\\\"submit\\\" pButton icon=\\\"fa-check\\\"  label=\\\"Submit\\\"></button>\\r\\n    </div>\\r\\n  </div>\\r\\n  </form>\\r\\n\\r\\n  <!--form [formGroup]=\\\"emailform\\\" (ngSubmit)=\\\"saveNewEmail(emailform.value)\\\">\\r\\n  <div class=\\\"ui-g\\\">\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <h3>Change E-Mail address</h3>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12\\\" style=\\\"width:10px;\\\"></div>\\r\\n\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <div class=\\\"ui-g-4\\\">New E-Mail:</div>\\r\\n      <input formControlName=\\\"email\\\" pInputText placeholder=\\\"Enter new E-Mail address\\\">\\r\\n      <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!emailform.controls['email'].valid&&emailform.controls['email'].dirty\\\">\\r\\n        E-Mail Address is not valid\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <div class=\\\"ui-g-4\\\">Password:</div>\\r\\n      <input formControlName=\\\"password\\\" type=\\\"password\\\" pInputText placeholder=\\\"Enter Password\\\">\\r\\n      <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!emailform.controls['password'].valid&&emailform.controls['password'].dirty\\\">\\r\\n        Password is required\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"ui-g-12\\\">\\r\\n      <button [disabled]=\\\"!emailform.valid\\\"  type=\\\"submit\\\" pButton icon=\\\"fa-check\\\"  label=\\\"Submit\\\"></button>\\r\\n    </div>\\r\\n    </div>\\r\\n  </form-->\\r\\n\\r\\n  <form [formGroup]=\\\"usernameform\\\" (ngSubmit)=\\\"saveNewUsername(usernameform.value)\\\">\\r\\n    <div class=\\\"ui-g\\\">\\r\\n      <div class=\\\"ui-g-12\\\" style=\\\"width:10px;\\\"></div>\\r\\n\\r\\n      <div class=\\\"ui-g-12\\\">\\r\\n        <h3>Change Username</h3>\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-12\\\">\\r\\n        <div class=\\\"ui-g-4\\\">New Username:</div>\\r\\n        <input formControlName=\\\"username\\\" pInputText placeholder=\\\"Enter new Username\\\">\\r\\n        <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!usernameform.controls['username'].valid&&usernameform.controls['username'].dirty && asciiTest(usernameform.controls['username'].value)\\\">\\r\\n         required\\r\\n        </div>\\r\\n        <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!asciiTest(usernameform.controls['username'].value)\\\">\\r\\n          <div class=\\\"fa fa-info-circle\\\"></div> Username must be at least 6 characters using A-Z, a-z, 0-9, and these characters: ! # $ % ' * + - . / = ? ^ _ &#123; &#125; !  ~ @\\r\\n         </div>\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-12\\\">\\r\\n        <div class=\\\"ui-g-4\\\">Password:</div>\\r\\n        <input formControlName=\\\"password\\\" type=\\\"password\\\" pInputText placeholder=\\\"Enter Password\\\">\\r\\n        <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!usernameform.controls['password'].valid&&usernameform.controls['password'].dirty\\\">\\r\\n          Password is required\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-12\\\">\\r\\n        <button [disabled]=\\\"!usernameform.valid\\\"  type=\\\"submit\\\" pButton icon=\\\"fa-check\\\"  label=\\\"Submit\\\"></button>\\r\\n      </div>\\r\\n      </div>\\r\\n   </form>\\r\\n\\r\\n\\r\\n  <form [formGroup]=\\\"userfirstform\\\" (ngSubmit)=\\\"saveNewFirstname(userfirstform.value)\\\">\\r\\n      <div class=\\\"ui-g\\\">\\r\\n        <div class=\\\"ui-g-12\\\" style=\\\"width:10px;\\\"></div>\\r\\n\\r\\n        <div class=\\\"ui-g-12\\\">\\r\\n          <h3>Change Firstname</h3>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"ui-g-12\\\">\\r\\n          <div class=\\\"ui-g-4\\\">New Firstname:</div>\\r\\n          <input formControlName=\\\"firstname\\\" pInputText placeholder=\\\"Enter new Firstname\\\">\\r\\n          <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!userfirstform.controls['firstname'].valid&&userfirstform.controls['firstname'].dirty\\\">\\r\\n           required\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"ui-g-12\\\">\\r\\n          <div class=\\\"ui-g-4\\\">Password:</div>\\r\\n          <input formControlName=\\\"password\\\" type=\\\"password\\\" pInputText placeholder=\\\"Enter Password\\\">\\r\\n          <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!userfirstform.controls['password'].valid&&userfirstform.controls['password'].dirty\\\">\\r\\n            Password is required\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"ui-g-12\\\">\\r\\n          <button [disabled]=\\\"!userfirstform.valid\\\"  type=\\\"submit\\\" pButton icon=\\\"fa-check\\\"  label=\\\"Submit\\\"></button>\\r\\n        </div>\\r\\n        </div>\\r\\n  </form>\\r\\n\\r\\n\\r\\n  <form [formGroup]=\\\"usersurform\\\" (ngSubmit)=\\\"saveNewSurname(usersurform.value)\\\">\\r\\n    <div class=\\\"ui-g\\\">\\r\\n      <div class=\\\"ui-g-12\\\" style=\\\"width:10px;\\\"></div>\\r\\n\\r\\n      <div class=\\\"ui-g-12\\\">\\r\\n            <h3>Change Lastname</h3>\\r\\n          </div>\\r\\n      <div class=\\\"ui-g-12\\\">\\r\\n            <div class=\\\"ui-g-4\\\">New Lastname:</div>\\r\\n            <input formControlName=\\\"surname\\\" pInputText placeholder=\\\"Enter new Lastname\\\">\\r\\n            <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!usersurform.controls['surname'].valid&&usersurform.controls['surname'].dirty\\\">\\r\\n              required\\r\\n            </div>\\r\\n          </div>\\r\\n      <div class=\\\"ui-g-12\\\">\\r\\n        <div class=\\\"ui-g-4\\\">Password:</div>\\r\\n        <input formControlName=\\\"password\\\" type=\\\"password\\\" pInputText placeholder=\\\"Enter Password\\\">\\r\\n        <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!usersurform.controls['password'].valid&&usersurform.controls['password'].dirty\\\">\\r\\n              Password is required\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-12\\\">\\r\\n            <button [disabled]=\\\"!usersurform.valid\\\"  type=\\\"submit\\\" pButton icon=\\\"fa-check\\\"  label=\\\"Submit\\\"></button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n  <p-footer>\\r\\n    <button class=\\\"ui-button-danger\\\" type=\\\"button\\\" pButton (click)=\\\"deleteAccountPopup = true\\\" label=\\\"Delete Account\\\"></button>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"fa-close\\\" (click)=\\\"userSettings=false;\\\" label=\\\"Cancel\\\"></button>\\r\\n  </p-footer>\\r\\n</p-dialog>\\r\\n\\r\\n<p-dialog *ngIf=\\\"dataloaded\\\" header=\\\"Account deletion\\\" [responsive]=\\\"true\\\" [modal]=true appendTo=\\\"body\\\" [width]=\\\"550\\\"\\r\\n          [(visible)]=\\\"deleteAccountPopup\\\">\\r\\n  <!--p-growl [(value)]=\\\"msgs\\\"></p-growl-->\\r\\n  <div class=\\\"ui-g-12\\\">\\r\\n  <span>You are about to delete your account. This can not be undone.</span><br>\\r\\n  <span>Please confirm with your password.</span>\\r\\n  </div>\\r\\n  <form [formGroup]=\\\"passwordform\\\" >\\r\\n  <div class=\\\"ui-g-12\\\">\\r\\n    <input formControlName=\\\"Password\\\" pInputText type=\\\"password\\\" placeholder=\\\"Enter password\\\" type=\\\"password\\\">\\r\\n  </div>\\r\\n  </form>\\r\\n  <p-footer>\\r\\n    <button [disabled]=\\\"!passwordform.valid\\\" (click)=\\\"deleteAccount(passwordform.value)\\\" class=\\\"ui-button-danger\\\" type=\\\"button\\\" pButton label=\\\"Delete\\\"></button>\\r\\n    <button  (click)=\\\"deleteAccountPopup =false\\\" class=\\\"ui-button-secondary\\\" type=\\\"button\\\" pButton label=\\\"Cancel\\\"></button>\\r\\n  </p-footer>\\r\\n\\r\\n</p-dialog>\\r\\n\\r\\n<div *ngIf=\\\"dataloaded == true\\\" style=\\\"display: table; width: max-content\\\">\\r\\n <div style=\\\"background: transparent; display: table-row\\\">\\r\\n    <span style=\\\"font-size: 1.5em; display: table-row\\\">{{ userBackend.username }}</span>\\r\\n    <span style=\\\"font-size:0.75em; display: table-row\\\">{{ userBackend.email }}</span>\\r\\n    <span style=\\\"font-size:0.75em; display: table-row\\\">{{ user.role.charAt(0).toUpperCase() + user.role.slice(1) }}</span>\\r\\n </div>\\r\\n    <div style=\\\"display: table-row\\\">\\r\\n      <span style=\\\"display: table-cell\\\">\\r\\n        <button pButton type=\\\"button\\\" icon=\\\"fa fa-pencil\\\" (click)=\\\"this.userSettings = true;\\\" label=\\\"Settings\\\">\\r\\n      </button>\\r\\n      </span>\\r\\n      <span style=\\\"display: table-cell\\\">\\r\\n          <button  (click)=\\\"logout()\\\" icon=\\\"fa fa-sign-out\\\" class=\\\"ui-button-primary\\\" type=\\\"button\\\" label=\\\"Logout\\\" pButton></button>\\r\\n      </span>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- Platz für mehrere Knöpfe in User Menü-->\\r\\n\\r\\n\"","import { matchOtherValidator, notMatchOtherValidator } from '../../../custom-validation';\r\nimport { Component, EventEmitter, HostBinding, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { DatabaseService } from '../../../services/database.service';\r\nimport { UserManagerService } from '../../../services/usermanager.service';\r\nimport { OverlayContainer } from '@angular/cdk/overlay';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { DataService } from '../../../services/data.service';\r\nimport { User } from '../../../models/frontend/user';\r\nimport { UserBackend } from '../../../models/backend/user';\r\nimport { MenuItem, Message } from 'primeng/api';\r\nimport { CONFLICT } from 'http-status-codes';\r\nimport { UserPrivacySettingsComponent } from '../user-privacy-settings/user-privacy-settings.component';\r\n\r\n@Component({\r\n  selector: 'app-user-settings',\r\n  templateUrl: './user-settings.component.html',\r\n  styleUrls: ['./user-settings.component.css']\r\n})\r\nexport class UserSettingsComponent implements OnInit {\r\n  @HostBinding('class') componentCssClass;\r\n  protected items: Array<MenuItem>;\r\n\r\n  @ViewChild(UserPrivacySettingsComponent) privacySettings: UserPrivacySettingsComponent;\r\n  protected user: User;\r\n  protected userBackend: UserBackend;\r\n  protected userSettings;\r\n  protected deleteAccountPopup;\r\n  userform: FormGroup;\r\n  emailform: FormGroup;\r\n  passwordform: FormGroup;\r\n  usernameform: FormGroup;\r\n  usersurform: FormGroup;\r\n  userfirstform: FormGroup;\r\n  dataloaded = false;\r\n  emailPattern = '^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$';\r\n  @Output() messageEvent = new EventEmitter<any>();\r\n\r\n  constructor(private databaseService: DatabaseService, private dataService: DataService, private overlayContainer: OverlayContainer,\r\n              private usermanager: UserManagerService, private router: Router, private fb: FormBuilder) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataService.userData.subscribe((user: User) => {\r\n      this.user = user;\r\n        this.usermanager.getUser(this.user.id)\r\n          .subscribe((userBackend: UserBackend) => {\r\n            this.userBackend = userBackend;\r\n            this.dataloaded = true;\r\n            this.passwordform = this.fb.group({\r\n              Password: new FormControl('', Validators.required)\r\n            });\r\n          });\r\n\r\n    });\r\n    this.userSettings = false;\r\n    this.deleteAccountPopup = false;\r\n\r\n    this.emailform = this.fb.group({\r\n      email: new FormControl('', Validators.compose([Validators.required, Validators.pattern(this.emailPattern)])),\r\n      password: new FormControl('', Validators.required)\r\n    });\r\n    this.usernameform = this.fb.group({\r\n      username: new FormControl('', Validators.required),\r\n      password: new FormControl('', Validators.required)\r\n    });\r\n    this.userfirstform = this.fb.group({\r\n      firstname: new FormControl('', Validators.required),\r\n      password: new FormControl('', Validators.required)\r\n    });\r\n    this.usersurform = this.fb.group({\r\n      surname: new FormControl('', Validators.required),\r\n      password: new FormControl('', Validators.required)\r\n    });\r\n    this.userform = this.fb.group({\r\n      OldPassword: new FormControl('', Validators.required),\r\n      Password: new FormControl('', Validators.compose([Validators.required, Validators.minLength(6), notMatchOtherValidator('OldPassword')])),\r\n      PasswordRepetition: new FormControl('', Validators.compose([Validators.required, matchOtherValidator('Password')]))\r\n    });\r\n\r\n  }\r\n\r\n\r\n  protected asciiTest(username) {\r\n    return (/^[\\x00-\\x1F\\x21-\\x7F]*$/.test(username));\r\n  }\r\n\r\n  /**\r\n   * This method saves a new password to the frontend and backend database.\r\n   * @param formValues the values from the form\r\n   */\r\n  protected saveNewPassword(formValues): void {\r\n      this.usermanager.editUserPassword(this.user.id, formValues['Password'], formValues['OldPassword'])\r\n\t  // muss entsprechend bearbeitet werden, da zum jetzigen Zeitpunkt mir nicht genau bewusst íst, welche Keys sich\r\n\t  // hinter formValues befinden\r\n        .subscribe(res => {\r\n\r\n            this.usermanager.getUser(this.user.id)\r\n              .subscribe((userBackend: UserBackend) => {\r\n                this.userBackend = userBackend;\r\n                this.messageEvent.emit({severity: 'success', summary: 'Changed password', detail: 'Your new password was successfully set'});\r\n                this.userSettings = false;\r\n              });\r\n          },\r\n          err => {\r\n            if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n              this.router.navigate(['unauthorized']); }\r\n            this.messageEvent.emit({\r\n                severity: 'error',\r\n                summary: 'Password change failed',\r\n                detail: 'Error occurd saving the password. Please try again later.'\r\n              });\r\n          });\r\n\r\n  }\r\n\r\n  /**\r\n   * This method saves a new Email address to the frontend and backend database.\r\n   * @param formValues the values from the form\r\n   */\r\n  protected saveNewEmail(formValues): void {\r\n    this.usermanager.editUserMail(this.user.id, formValues['email'], formValues['password'])\r\n      .subscribe(result => {\r\n          this.messageEvent.emit({\r\n            severity: 'success',\r\n            summary: 'Changed email address',\r\n            detail: 'Your new email address was successfully set'\r\n          });\r\n          this.userSettings = false;\r\n          this.logout();\r\n\r\n        },\r\n        err => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          if (err.status === CONFLICT) {\r\n            this.messageEvent.emit({severity: 'error', summary: 'Conflict', detail: 'Email address is already registered.'});\r\n          } else {\r\n            this.messageEvent.emit({\r\n              severity: 'error',\r\n              summary: 'Error',\r\n              detail: 'Error while changing email address. Please try again later or contact the administrator.'\r\n            });\r\n          }\r\n        });\r\n  }\r\n\r\n  //**\r\n   /**\r\n   * This method saves a new Username to the frontend and backend database.\r\n   * @param formValues the values from the form\r\n   */\r\n  protected saveNewUsername(formValues): void {\r\n    this.usermanager.editUsername(this.user.id, formValues['username'], formValues['password'])\r\n      .subscribe(result => {\r\n          this.messageEvent.emit({\r\n            severity: 'success',\r\n            summary: 'Changed Username',\r\n            detail: 'Your new Username was successfully set'\r\n          });\r\n         // this.userSettings = false;\r\n          //this.logout();\r\n\r\n        },\r\n        err => {\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']); }\r\n          if (err.status === CONFLICT) {\r\n            this.messageEvent.emit({severity: 'error', summary: 'Conflict', detail: 'Username already exists.'});\r\n          } else {\r\n            this.messageEvent.emit({\r\n              severity: 'error',\r\n              summary: 'Error',\r\n              detail: 'Error while changing email address.Please try again later or contact the administrator.'\r\n            });\r\n          }\r\n        });\r\n  }\r\n\r\n  /**\r\n   * This method saves a new Firstname to the frontend and backend database.\r\n   * @param formValues the values from the form\r\n   */\r\n  protected saveNewFirstname(formValues): void {\r\n    this.usermanager.editFirstname(this.user.id, formValues['firstname'], formValues['password'])\r\n      .subscribe(result => {\r\n          this.messageEvent.emit({\r\n            severity: 'success',\r\n            summary: 'Changed Firstname',\r\n            detail: 'Your new Firstname was successfully set'\r\n          });\r\n         // this.userSettings = false;\r\n          //this.logout();\r\n\r\n        },\r\n        err => {\r\n          /* if (err.status === CONFLICT) {\r\n            this.messageEvent.emit({severity: 'error', summary: 'Conflict', detail: 'Username is already existed.'});\r\n            console.log('Error saving in backend database ', err);\r\n          }\r\n          else {*/\r\n          if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n            this.router.navigate(['unauthorized']);\r\n          }\r\n            this.messageEvent.emit({\r\n              severity: 'error',\r\n              summary: 'Error',\r\n              detail: 'Error while changing firstname. Please try again later or contact the administrator.'\r\n            });\r\n          //}\r\n        });\r\n  }\r\n\r\n  /**\r\n   * This method saves a new Surname to the frontend and backend database.\r\n   * @param formValues the values from the form\r\n   */\r\n  protected saveNewSurname(formValues): void {\r\n    this.usermanager.editSurname(this.user.id, formValues['surname'], formValues['password'])\r\n      .subscribe(result => {\r\n          this.messageEvent.emit({\r\n            severity: 'success',\r\n            summary: 'Changed Surname',\r\n            detail: 'Your new Surname was successfully set'\r\n          });\r\n         // this.userSettings = false;\r\n          //this.logout();\r\n\r\n        },\r\n\r\n         err => {\r\n       /*   if (err.status === CONFLICT) {\r\n            this.messageEvent.emit({severity: 'error', summary: 'Conflict', detail: 'Username is already existed.'});\r\n            console.log('Error saving in backend database ', err);\r\n          }\r\n           else {*/\r\n           if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n             this.router.navigate(['unauthorized']); }\r\n            this.messageEvent.emit({\r\n              severity: 'error',\r\n              summary: 'Error',\r\n              detail: 'Error while changing email address.Please try again later or contact the administrator.'\r\n            });\r\n         // }\r\n        });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  protected deleteAccount(formValue): void {\r\n    // TODO user löschen ans backend senden, in der forntend db alle dokumente löschen die dem user zugeordnet sind in Users, Projects, Dashboards, Sheets, Widgets\r\n    // this.messageEvent.emit({severity: 'error', summary: 'Deletion failed', detail: 'Please contact the system administrator.'});\r\n\r\n    // this.messageEvent.emit({severity: 'error', summary: 'Deletion failed', detail: 'Please contact the system administrator.'});\r\n\r\n    // user löschen ans backend senden\r\n    this.usermanager.deleteUser(this.user.id, formValue['Password'])\r\n      .subscribe(result => {\r\n        console.log('User was deleted successfully');\r\n        this.dataService.changeLoginStatus(0);\r\n        this.dataService.changeUserData(undefined);\r\n        this.dataService.changeProjectData(undefined);\r\n        this.router.navigate(['']);\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 100);\r\n      },\r\n      err => {\r\n        if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n          this.router.navigate(['unauthorized']); }\r\n        this.messageEvent.emit({\r\n          severity: 'error',\r\n          summary: 'Error',\r\n          detail: err['error']\r\n        });\r\n      });\r\n\r\n  }\r\n\r\n  /**\r\n   * This method logs out the user and navigates back to the login page\r\n   */\r\n  protected logout(): void {\r\n    this.sendLogoutToBackend(this.user.id);\r\n    this.dataService.changeLoginStatus(0);\r\n    this.dataService.changeUserData(undefined);\r\n    this.dataService.changeProjectData(undefined);\r\n    this.router.navigate(['']);\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 25);\r\n    // window.location.reload();\r\n\r\n  }\r\n\r\n  /**\r\n   * This method sends a logout request to the backend. So the user can be disconnected from his platform sessions.\r\n   * @param {string} id\r\n   */\r\n  sendLogoutToBackend(id: string): void {\r\n    this.usermanager.logoutUser(id).subscribe(result => {\r\n        // log result.message\r\n        console.log('Userlogout was sent to backend server');\r\n        console.log(result);\r\n      },\r\n      err => {\r\n        if (err['error'] === 'Session invalid' || err['error'] === 'No session found') {\r\n          this.router.navigate(['unauthorized']); }\r\n        console.log('Userlogout could not been sent to backend server');\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n<div style=\\\"text-align: center\\\" class=\\\"ui-grid-row\\\">\\r\\n  <span style=\\\"color: white; margin: auto\\\">Please click the Button to confirm your E-Mail</span><br><br>\\r\\n</div>\\r\\n\\r\\n  <!-- login button -->\\r\\n  <div class=\\\"ui-g\\\">\\r\\n    <div class=\\\"ui-g-12\\\" style=\\\"text-align: center\\\">\\r\\n      <button style=\\\"margin: auto;background-color: #2B9E81; border: none;\\\" class=\\\"button\\\" pButton type=\\\"submit\\\" label=\\\"Confirm Email\\\" (click)=\\\"confirmMail()\\\">\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n\"","module.exports = \".containerHomePage {\\n  width: 100%;\\n  height: 100%;\\n  background-image: url('bcklogin.jpg');\\n  background-size: cover; }\\n\\n.home-card {\\n  align-content: center;\\n  width: auto;\\n  height: auto;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  margin: 40px;\\n  background: rgba(96, 191, 161, 0.6);\\n  border: 0.5px;\\n  border-style: solid;\\n  border-color: rgba(255, 255, 255, 0.3);\\n  padding: 15px; }\\n\\n.ui-tabmenu {\\n  background-color: rgba(0, 0, 0, 0.25); }\\n\\n.ui-tabmenu .ui-tabmenu-nav {\\n  display: flex;\\n  justify-content: center;\\n  border-bottom: 0px !important;\\n  border-radius: 5px !important; }\\n\\n.ui-tabmenuitem {\\n  background: #14B404 !important;\\n  border-color: green !important; }\\n\\n.ui-tabmenuitem.ui-state-active {\\n  background: #01DF21 !important;\\n  border-color: #088A08 !important; }\\n\\n.ui-menuitem-text {\\n  color: #FFFFFF !important; }\\n\\n.ui-menuitem-icon {\\n  color: #FAFAFA !important; }\\n\"","/**\r\n * @author Philipp Grenz\r\n * This component allows a user to confirm their email address\r\n */\r\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DatabaseService } from '../../services/database.service';\r\nimport { DataService } from '../../services/data.service';\r\nimport { UserManagerService } from '../../services/usermanager.service';\r\nimport { ProjectService } from '../../services/project.service';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-confirm',\r\n  templateUrl: './confirm.component.html',\r\n  styleUrls: ['./confirm.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ConfirmComponent implements OnInit {\r\n  private token: string;\r\n\r\n  constructor(private router: Router, private databaseService: DatabaseService,\r\n              private dataService: DataService, private usermanager: UserManagerService, private projectService: ProjectService,\r\n              private fb: FormBuilder, private route: ActivatedRoute) {\r\n\r\n    this.route.fragment.subscribe(fragment => {\r\n      fragment = fragment.split('?')[1];\r\n      let params = new URLSearchParams(fragment);\r\n      this.token = params.get('token');\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  /**\r\n   * Sends the token to the backend to verify confirmation\r\n   */\r\n  confirmMail(): void {\r\n    this.usermanager.confirmEmail(this.token)\r\n      .subscribe(result => {\r\n        console.log(result);\r\n        setTimeout(() => {\r\n              this.router.navigate(['']);\r\n            },\r\n            3000);\r\n      }\r\n      , err => {\r\n        console.log('Error. ', err['error']);\r\n      });\r\n  }\r\n}\r\n","module.exports = \"<script\\r\\n  src=\\\"../../../../../../Desktop/ClickDigital1.1.0/app/user-management/create-user/create-user.component.ts\\\"></script>\\r\\n<p-growl [value]=\\\"msgs\\\" [sticky]=\\\"true\\\"></p-growl>\\r\\n\\r\\n<!--<img style=\\\"width: 35%; padding-bottom: 15px\\\" src=\\\"assets/img/clickdigitallogo_white.svg\\\">-->\\r\\n\\r\\n<div *ngIf=\\\"this.policyForm === null\\\">\\r\\n\\tERROR - Cannot connect to server\\r\\n</div>\\r\\n\\r\\n<form [formGroup]=\\\"userform\\\" (ngSubmit)=\\\"checkUserInput(userform.value['email'], userform.value['username'], userform.value['password'], userform.value['passwordrepetition'], userform.value['firstname'], userform.value['lastname'], userform.value['role'])\\\" *ngIf=\\\"this.currentPage == 0 && this.policyForm != null\\\">\\r\\n  <div class=\\\"ui-g\\\">\\r\\n    <div class=\\\"ui-g-12 vertical-align\\\" style=\\\"margin-bottom: -10px;\\\">\\r\\n      <div class=\\\"ui-g-2 textInputDescription\\\">First name:</div>\\r\\n      <div class=\\\"ui-inputgroup ui-g-5\\\">\\r\\n        <!--span style=\\\"background: transparent; border: none;\\\" class=\\\"ui-inputgroup-addon\\\"><i style=\\\"color: white\\\" class=\\\"fa fa-user\\\"></i></span-->\\r\\n        <input style=\\\"width:100%;\\\" type=\\\"text\\\" pInputText formControlName=\\\"firstname\\\" placeholder=\\\"First name\\\">\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-5\\\">\\r\\n        <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!userform.controls['firstname'].valid&&userform.controls['firstname'].dirty\\\">\\r\\n          required\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 vertical-align\\\" style=\\\"margin-bottom: -10px;\\\">\\r\\n      <div class=\\\"ui-g-2 textInputDescription\\\">Last name:</div>\\r\\n      <div class=\\\"ui-inputgroup ui-g-5\\\">\\r\\n        <!--span-- style=\\\"background: transparent; border: none;\\\" class=\\\"ui-inputgroup-addon\\\"><i style=\\\"color: white\\\" class=\\\"fa fa-user\\\"></i></span-->\\r\\n        <input style=\\\"width:100%;\\\" type=\\\"text\\\" pInputText formControlName=\\\"lastname\\\" placeholder=\\\"Last name\\\">\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-5\\\">\\r\\n        <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!userform.controls['lastname'].valid&&userform.controls['lastname'].dirty\\\">\\r\\n          required\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 vertical-align\\\">\\r\\n      <div class=\\\"ui-g-2 textInputDescription\\\">User name:</div>\\r\\n      <div class=\\\"ui-inputgroup ui-g-5\\\">\\r\\n        <!--span style=\\\"background: transparent; border: none;\\\" class=\\\"ui-inputgroup-addon\\\"><i style=\\\"color: white\\\" class=\\\"fa fa-user\\\"></i></span-->\\r\\n        <input style=\\\"width:100%;\\\" type=\\\"text\\\" pInputText formControlName=\\\"username\\\" placeholder=\\\"Username\\\">\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-5\\\">\\r\\n        <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!userform.controls['username'].valid&&userform.controls['username'].dirty && asciiTest(userform.controls['username'].value)\\\">\\r\\n          required\\r\\n        </div>\\r\\n        <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!asciiTest(userform.controls['username'].value)\\\">\\r\\n         <div class=\\\"fa fa-info-circle\\\"></div> Username must be at least 6 characters using A-Z, a-z, 0-9, and these characters: ! # $ % ' * + - . / = ? ^ _ &#123; &#125; !  ~ @>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 vertical-align\\\" style=\\\"margin-bottom: -10px;\\\">\\r\\n      <div class=\\\"ui-g-2 textInputDescription\\\">Email address:</div>\\r\\n      <div class=\\\"ui-inputgroup ui-g-5\\\">\\r\\n        <!--span style=\\\"background: transparent; border: none;\\\" class=\\\"ui-inputgroup-addon\\\"><i style=\\\"color: white\\\" class=\\\"fa fa-envelope\\\"></i></span-->\\r\\n        <input  style=\\\"width:100%;\\\"type=\\\"email\\\" pInputText formControlName=\\\"email\\\" placeholder=\\\"E-Mail Address\\\">\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-5\\\">\\r\\n        <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!userform.controls['email'].valid&&userform.controls['email'].dirty\\\">\\r\\n          invalid email adress\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 vertical-align\\\" style=\\\"margin-bottom: -10px;\\\">\\r\\n      <div class=\\\"ui-g-2 textInputDescription\\\">Password:</div>\\r\\n      <div class=\\\"ui-inputgroup ui-g-5\\\">\\r\\n        <!--span style=\\\"background: transparent; border: none;\\\" class=\\\"ui-inputgroup-addon\\\"><i style=\\\"color: white\\\" class=\\\"fa fa-lock\\\"></i></span-->\\r\\n        <input style=\\\"width:100%;\\\" type=\\\"password\\\" pInputText formControlName=\\\"password\\\" placeholder=\\\"Password\\\">\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-5\\\">\\r\\n        <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!userform.controls['password'].valid&&userform.controls['password'].dirty\\\">\\r\\n          <span *ngIf=\\\"userform.controls['password'].errors['required']\\\">required</span>\\r\\n          <span *ngIf=\\\"userform.controls['password'].errors['minlength']\\\">password has to be longer</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 vertical-align\\\" style=\\\"margin-bottom: -10px;\\\">\\r\\n      <div class=\\\"ui-g-2 textInputDescription\\\">Confirm password:</div>\\r\\n      <div class=\\\"ui-inputgroup ui-g-5\\\">\\r\\n        <!--span style=\\\"background: transparent; border: none;\\\" class=\\\"ui-inputgroup-addon\\\"><i style=\\\"color: white\\\" class=\\\"fa fa-lock\\\"></i></span-->\\r\\n        <input style=\\\"width:100%;\\\" type=\\\"password\\\" pInputText formControlName=\\\"passwordrepetition\\\" placeholder=\\\"Password repetition\\\">\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-5\\\">\\r\\n        <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!userform.controls['passwordrepetition'].valid&&userform.controls['passwordrepetition'].dirty\\\">\\r\\n          <span>non-matching passwords</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12 vertical-align\\\" style=\\\"margin-bottom: -10px;\\\">\\r\\n      <div class=\\\"ui-g-2 textInputDescription\\\">Role:</div>\\r\\n      <div class=\\\"ui-g-5 ui-fluid\\\">\\r\\n        <p-dropdown placeholder=\\\"Select a role\\\" [options]=\\\"role\\\" formControlName=\\\"role\\\" [autoWidth]=\\\"false\\\"></p-dropdown>\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-5\\\">\\r\\n        <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!userform.controls['role'].valid&&userform.controls['role'].dirty\\\">\\r\\n          required\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"this.dropdown != null && this.dropdown.selectedOption !== null && this.dropdown.selectedOption.value === ROLEDEVELOPER\\\" class=\\\"ui-g-12 vertical-align\\\">\\r\\n      <div class=\\\"ui-g-2 textInputDescription\\\">PIN:</div>\\r\\n      <div class=\\\"ui-inputgroup ui-g-5\\\">\\r\\n        <!--span style=\\\"background: transparent; border: none;\\\" class=\\\"ui-inputgroup-addon\\\"><i style=\\\"color: white\\\" class=\\\"fa fa-key\\\"></i></span-->\\r\\n        <input pInputText type=\\\"password\\\" placeholder=\\\"PIN\\\" [(ngModel)]=\\\"pin\\\" [ngModelOptions]=\\\"{standalone: true}\\\" required>\\r\\n      </div>\\r\\n      <div class=\\\"ui-g-5\\\">\\r\\n        <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!userform.controls['role'].valid&&userform.controls['role'].dirty\\\">\\r\\n          required\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"ui-g-12\\\" style=\\\"margin-bottom: -10px;\\\">\\r\\n      <div class=\\\"ui-g-6\\\">\\r\\n        <button pButton style = \\\"background-color: #297E60; border: none; text-color: #FFFFFF;\\\" type=\\\"submit\\\" label=\\\"Continue to Privacy Policies\\\" [disabled]=\\\"!userform.valid\\\"></button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n\\r\\n\\t<form [formGroup]=\\\"policyForm\\\" (ngSubmit)=\\\"createUser(policyForm.value)\\\" *ngIf=\\\"this.currentPage == 1 && this.policyForm != null\\\">\\r\\n\\t\\t<div *ngFor=\\\"let currID of sequenceList; let i=index\\\">\\r\\n\\t\\t\\t<div class=\\\"vertical-align\\\">\\r\\n\\t\\t\\t\\t<p-fieldset [toggleable]=\\\"true\\\" [collapsed]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t<p-header>\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"border: none\\\" class=\\\"ui-message\\\" *ngIf=\\\"policyForm.controls[currID].valid\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t{{availableElements[currID].title}}\\r\\n\\t\\t\\t\\t\\t\\t\\t<div style=\\\"border: none\\\" class=\\\"ui-message\\\" *ngIf=\\\"!availableElements[currID].consentRequired\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t[OPTIONAL]\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"border: none; color: red; font-weight: bold;\\\" class=\\\"ui-message\\\" *ngIf=\\\"!policyForm.controls[currID].valid\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<i style=\\\"color: red\\\" class=\\\"fa fa-exclamation-circle \\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t{{availableElements[currID].title}}\\r\\n\\t\\t\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</p-header>\\r\\n\\t\\t\\t\\t\\t<div style=\\\"width: 700px;\\\">\\r\\n\\t\\t\\t\\t\\t\\t{{availableElements[currID].descriptions.before}}\\r\\n\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let child of availableElements[currID].children; let i=index\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<p-fieldset>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-header>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div style=\\\"border: none\\\" class=\\\"ui-message\\\"  *ngIf=\\\"policyForm.controls[child.id].valid\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{availableElements[child.id].title}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div style=\\\"border: none\\\" class=\\\"ui-message\\\" *ngIf=\\\"!availableElements[child.id].consentRequired\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i>[OPTIONAL]</i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div style=\\\"border: none; color: red; font-weight: bold;\\\" class=\\\"ui-message\\\" *ngIf=\\\"!policyForm.controls[child.id].valid\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i style=\\\"color: red\\\" class=\\\"fa fa-exclamation-circle \\\"></i> {{availableElements[child.id].title}}<br/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</p-header>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div style=\\\"width: 600px;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{child.descriptions.before}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-g-25\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p-checkbox label=\\\"{{child.descriptions.submit}}\\\" [formControl]=\\\"policyForm.controls[child.id]\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</p-fieldset>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t{{availableElements[currID].descriptions.after}}\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"ui-g-25\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<p-checkbox label=\\\"{{availableElements[currID].descriptions.submit}}\\\" [formControl]=\\\"policyForm.controls[currID]\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</p-fieldset>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n    <div style=\\\"text-align: center; padding-bottom: 20px;\\\">\\r\\n      By clicking \\\"Submit\\\", you accept our policies.\\r\\n    </div>\\r\\n\\t\\t<div style=\\\"text-align: center;\\\">\\r\\n\\t\\t\\t<button pButton (click)=\\\"this.currentPage = 0\\\" type=\\\"button\\\" label=\\\"Back\\\" style=\\\"margin-right: 5px;background-color: #297e60; border: none;\\\"></button>\\r\\n\\t\\t\\t<button pButton type=\\\"submit\\\" label=\\\"Submit\\\" style=\\\"background-color: #297E60; border: none;\\\" [disabled]=\\\"policyForm.invalid\\\"></button>\\r\\n\\t\\t</div>\\r\\n\\t</form>\\r\\n\\r\\n\"","module.exports = \".center {\\n  width: 100%;\\n  height: 100%;\\n  background-image: url('bcklogin.jpg');\\n  background-size: cover; }\\n\\n.form {\\n  width: 75%;\\n  margin: auto; }\\n\\n.input-form {\\n  margin: auto;\\n  width: 75%; }\\n\\n.back-button {\\n  display: table-cell; }\\n\\n.submit-button {\\n  display: table-cell; }\\n\\n.cardregister {\\n  align-content: center;\\n  width: 45vh;\\n  height: -webkit-fit-content;\\n  height: -moz-fit-content;\\n  height: fit-content;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  margin: auto;\\n  background: rgba(96, 191, 161, 0.6);\\n  border: 0.5px;\\n  border-style: solid;\\n  border-color: rgba(255, 255, 255, 0.3);\\n  padding: 15px; }\\n\\n.inputgroup {\\n  opacity: 0.5;\\n  width: 100%;\\n  margin-top: 4px;\\n  margin-bottom: 4px; }\\n\\n.textInputDescription {\\n  color: white; }\\n\\n.textInputStyle {\\n  background: transparent;\\n  border-color: white; }\\n\"","/**\r\n * @author Chinaedu Onwukwe, Janina Hüther\r\n * This component helps to create a new user. It validates the input data and registers\r\n * the user in the backend database as well as in the frontend database\r\n */\r\nimport {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {DatabaseService} from '../../services/database.service';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {UserManagerService} from '../../services/usermanager.service';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {matchOtherValidator} from '../../custom-validation';\r\nimport {Message, SelectItem} from 'primeng/api';\r\nimport {Dropdown} from 'primeng/primeng';\r\nimport uuidv4 from 'uuid/v4';\r\nimport {ProjectDB} from '../../models/database/project';\r\nimport {DashboardDB} from '../../models/database/dashboard';\r\nimport {SheetDB} from '../../models/database/sheet';\r\nimport {User} from '../../models/frontend/user';\r\nimport {CONFLICT} from 'http-status-codes';\r\nimport {Widget} from '../../models/frontend/widget';\r\nimport {WidgetDB} from '../../models/database/widget';\r\n\r\n/*@*/\r\nimport {DataPrivacyElementBackend} from '../../models/backend/dataprivacyelementbackend';\r\nimport {DataPrivacyManagerService} from '../../services/dataprivacymanager.service';\r\n\r\n@Component({\r\n  selector: 'app-create-user',\r\n  templateUrl: './create-user.component.html',\r\n  styleUrls: ['./create-user.component.scss'],\r\n})\r\nexport class CreateUserComponent implements OnInit {\r\n  protected pin: string;\r\n  protected userform: FormGroup;\r\n  protected role: Array<SelectItem>;\r\n  protected srole: SelectItem;\r\n  private PIN = '1234';\r\n  protected ROLEDEVELOPER = 'developer';\r\n  private ROLEENDUSER = 'enduser';\r\n  protected msgs: Array<Message> = [];\r\n//**\r\n  protected usernameExist: boolean;\r\n\r\n  /*@*/\r\n  protected currentPage: number;\r\n  protected policyForm: FormGroup = undefined;\r\n  protected availableElements;\r\n  protected sequenceList;\r\n  private userData;\r\n  /*@*/\r\n\r\n  @ViewChild(Dropdown) dropdown: Dropdown;\r\n  emailPattern = '^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$';\r\n\r\n  constructor(private http: HttpClient,\r\n              private  router: Router,\r\n              private databaseService: DatabaseService,\r\n              private usermanager: UserManagerService,\r\n              private fb: FormBuilder,\r\n              private dpManager: DataPrivacyManagerService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    /*@*/\r\n    this.currentPage = 0;\r\n    this.availableElements = {};\r\n    this.sequenceList = [];\r\n\r\n\r\n    // initialize the form validation\r\n    this.userform = this.fb.group({\r\n      username : new FormControl('', Validators.compose([Validators.required, Validators.minLength(6), Validators.pattern(/^[\\x00-\\x1F\\x21-\\x7F]*$/)])),\r\n      firstname: new FormControl('', Validators.compose([Validators.required, Validators.minLength(2), Validators.maxLength(32)])),\r\n      lastname: new FormControl('', Validators.compose([Validators.required, Validators.minLength(2), Validators.maxLength(64)])),\r\n      email: new FormControl('', Validators.compose([Validators.required, Validators.pattern(this.emailPattern)])),\r\n      password: new FormControl('', Validators.compose([Validators.required, Validators.minLength(6)])),\r\n      passwordrepetition: new FormControl('', Validators.compose([Validators.required, matchOtherValidator('password')])),\r\n      role: new FormControl('', Validators.required)\r\n    });\r\n\r\n    // initialize the role dropdown\r\n    this.role = [];\r\n    this.role.push({label: 'Developer', value: 'developer'});\r\n    this.role.push({label: 'Enduser', value: 'enduser'});\r\n\r\n    /*@*/\r\n    let formControls = {};\r\n\r\n\tthis.dpManager.getAllRootElements().subscribe(result => {\r\n\t  result.forEach(function (root) {\r\n\t    let item = new DataPrivacyElementBackend(root);\r\n        this.availableElements[root.id] = item;\r\n\t\tthis.sequenceList.push([root.id]);\r\n\r\n\t\tformControls[root.id] = new FormControl(root.preChecked, (root.consentRequired) ? Validators.requiredTrue : Validators.nullValidator);\r\n\t  }.bind(this));\r\n\r\n\t  this.dpManager.getAllLeafElements().subscribe(result => {\r\n        result.forEach(function (leaf) {\r\n\r\n          let item = new DataPrivacyElementBackend(leaf);\r\n          this.availableElements[leaf.id] = item;\r\n          this.availableElements[leaf.contextID].addChild(item);\r\n\r\n\t\t  formControls[leaf.id] = new FormControl(leaf.preChecked, (leaf.consentRequired) ? Validators.requiredTrue : Validators.nullValidator);\r\n\t\t  formControls[leaf.id].valueChanges.subscribe(val => {\r\n            if (this.availableElements[leaf.id].consentRequired) {\r\n              if (!val) {\r\n                this.policyForm.patchValue({[leaf.contextID]: false});\r\n              }\r\n            }\r\n          });\r\n\t\t}.bind(this));\r\n\t\tthis.policyForm = this.fb.group(formControls);\r\n\t  });\r\n\t}, err => {\r\n\t  this.policyForm = null;\r\n\t});\r\n  }\r\n\r\n  protected asciiTest(username) {\r\n    return (/^[\\x00-\\x1F\\x21-\\x7F]*$/.test(username));\r\n  }\r\n\r\n  protected checkUserInput(email: string, username: string, password: string, password2: string, firstname: string, surname: string, role: SelectItem): void {\r\n    let notification = '';\r\n\r\n    if (username === '' || username.length < 2 || username.length > 32) {\r\n      notification = 'invalid username';\r\n    } else if (firstname === '' || firstname.length < 2 || firstname.length > 32) {\r\n      notification = 'invalid firstname';\r\n    } else if (surname === '' || surname.length < 2 || surname.length > 64) {\r\n      surname = 'invalid surname';\r\n    } else if (!email.match(/^[\\w\\.-]+@[\\w\\.-]+\\.[\\w]{2,4}$/)) {\r\n      notification = 'invalid email adress';\r\n    } else if (password.length < 6) {\r\n      notification = 'password has to be longer';\r\n    } else if (password !== password2) {\r\n      notification = 'non-matching passwords';\r\n    } else if (this.role.filter(r => r.value === role.toString()).length == 0) {\r\n      notification = 'invalid role';\r\n    } else if (role.toString() === this.ROLEDEVELOPER && this.pin !== this.PIN) {\r\n      notification = 'Wrong pin, please try again or contact the administrator.';\r\n    } else if (notification === '') {\r\n      this.userData = {\r\n        username: username,\r\n        firstname: firstname,\r\n        surname: surname,\r\n        email: email,\r\n        password: password,\r\n        role: role\r\n      }\r\n      this.currentPage = 1;\r\n    } else {\r\n\r\n      this.msgs.push({\r\n        severity: 'error',\r\n        summary: 'Error',\r\n        detail: notification\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method is called when the user tries to register. The data are already validated. It sends them to the backend.\r\n   * If the user is successfully saved in the backend database, it is saved to the frontend database with a default new project\r\n   * @param email the email address of a user\r\n   * @param password the password of a user\r\n   * @param firstname the user's firstname\r\n   * @param surname the user's surname\r\n   * @param role the role of a user\r\n   */\r\n  protected createUser(items: object): void {\r\n    let checkedAll:boolean = true;\r\n    let checkedIDs = [];\r\n\r\n    for (let id in this.availableElements) {\r\n      let item = this.availableElements[id];\r\n\t  if (item.consentRequired) {\r\n        if (!items[id]) {\r\n          this.msgs.push({\r\n            severity: 'error',\r\n            summary: 'Error',\r\n            detail: id + ' unchecked'\r\n          });\r\n          checkedAll = false;\r\n        } else {\r\n\t\t  checkedIDs.push(id);\r\n\t\t}\r\n\t  } else if (items[id]) checkedIDs.push(id);\r\n    }\r\n    if (this.userData == null) {\r\n      this.msgs.push({\r\n        severity: 'error',\r\n        summary: 'Error',\r\n        detail: 'Internal Error'\r\n      });\r\n    } else if (checkedAll) {\r\n      this.usermanager.createUser(this.userData.role.toString(), this.userData.username, this.userData.email, this.userData.firstname, this.userData.surname, this.userData.password, checkedIDs)\r\n        .subscribe(result => {\r\n            // user creation in backend successful\r\n            const sheetId = uuidv4();\r\n            const dashboardId = uuidv4();\r\n            const projectId = uuidv4();\r\n            const startSheet: SheetDB = new SheetDB(sheetId, 'Sheet 1', []);\r\n            const startDashboard: DashboardDB = new DashboardDB(dashboardId, 'Dashboard 1', [sheetId]);\r\n\r\n            this.databaseService.insertDocument(this.databaseService.USERSCOLLECTION, new User(result['userId'], this.userData.role.toString(), projectId))\r\n              .subscribe(resultUser => {\r\n                  this.databaseService.insertDocument(this.databaseService.PROJECTSCOLLECTION, new ProjectDB(projectId, 'Project 1', 'omega', [dashboardId]))\r\n                    .subscribe(result => {\r\n                      }\r\n                      , err => {\r\n                        console.log('Error saving empty Project into database', err);\r\n                      });\r\n\r\n                  this.databaseService.insertDocument(this.databaseService.DASHBOARDSCOLLECTION, startDashboard)\r\n                    .subscribe(result => {\r\n                      }\r\n                      , err => {\r\n                        console.log('Error saving empty Project into database', err);\r\n                      });\r\n\r\n\r\n                  this.databaseService.insertDocument(this.databaseService.SHEETSSCOLLECTION, startSheet)\r\n                    .subscribe(result => {\r\n                      }\r\n                      , err => {\r\n                        console.log('Error saving empty Project into database', err);\r\n                      });\r\n\r\n                  this.msgs.push({\r\n                    severity: 'success',\r\n                    summary: 'Success',\r\n                    detail: 'Registration was successful'\r\n                  });\r\n                  setTimeout(() => {\r\n                    this.router.navigate(['/'], {fragment: 'login'});\r\n                  }, 2000);\r\n                },\r\n                err => {\r\n                  this.msgs.push({\r\n                    severity: 'error',\r\n                    summary: 'Error',\r\n                    detail: 'Error while creating user.Please try again later or contact the administrator.'\r\n                  });\r\n                  console.log('Error saving in frontend database ', err);\r\n                });\r\n          },\r\n          err => {\r\n            this.msgs.push({\r\n              severity: 'error',\r\n              summary: 'Error',\r\n              detail: err['error']\r\n            });\r\n            console.log('Error saving in frontend database ', err);\r\n          });\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n  <p-growl [(value)]=\\\"msgs\\\"></p-growl>\\r\\n  <div class=\\\"containerForgotPasswordPage\\\">\\r\\n    <div class=\\\"forgot-card ui-grid ui-grid-responsive\\\">\\r\\n      <h1 style=\\\"color:white; text-align:center;\\\">Forgot password</h1>\\r\\n      <div style=\\\"text-align: center\\\" class=\\\"ui-grid-row\\\">\\r\\n        <span style=\\\"color: white; margin: auto\\\">Please enter your Email Address</span><br><br>\\r\\n      </div>\\r\\n      <div style=\\\"text-align: center\\\" id=\\\"form\\\" class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\">\\r\\n        <!-- login input fields -->\\r\\n        <div style=\\\"text-align: center\\\" class=\\\"ui-grid-row\\\">\\r\\n          <div style=\\\"margin: auto\\\" class=\\\"inputgroup ui-inputgroup ui-grid-col-6\\\">\\r\\n            <span style=\\\"background: transparent; border-color: white; margin-left: auto\\\" class=\\\"ui-inputgroup-addon\\\"><i style=\\\"color: white\\\" class=\\\"fa fa-user\\\"></i></span>\\r\\n            <input style=\\\"margin-right: auto\\\" #email type=\\\"text\\\" pInputText placeholder=\\\"E-Mail\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- login button -->\\r\\n        <div style=\\\"text-align: center\\\" class=\\\"ui-grid-row\\\">\\r\\n          <button style=\\\"margin: auto;background-color: #297E60; border: none\\\" class=\\\"button\\\" pButton type=\\\"submit\\\" label=\\\"Request Reset Link\\\" (click)=\\\"requestReset(email.value)\\\">\\r\\n          </button><br><br><br>\\r\\n        </div>\\r\\n        <!--<div style=\\\"text-align: center\\\" class=\\\"ui-grid-row\\\">\\r\\n          <button style=\\\"margin: auto\\\" class=\\\"button\\\" pButton label=\\\"Back to Login\\\" [routerLink]=\\\"['']\\\">\\r\\n          </button>\\r\\n        </div>-->\\r\\n        <br><br><br><br><br>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \".containerForgotPasswordPage {\\n  width: 100%;\\n  height: 100%;\\n  background-image: url('bcklogin.jpg');\\n  background-size: cover; }\\n\\n.forgot-card {\\n  align-content: center;\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  height: -webkit-fit-content;\\n  height: -moz-fit-content;\\n  height: fit-content;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  margin: auto;\\n  background: rgba(96, 191, 161, 0.6);\\n  border: 0.5px;\\n  border-style: solid;\\n  border-color: rgba(255, 255, 255, 0.3);\\n  padding: 15px; }\\n\\n.inputgroup {\\n  opacity: 0.5;\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  margin-top: 4px;\\n  margin-bottom: 4px; }\\n\\n.button {\\n  margin: auto;\\n  width: -webkit-fit-content !important;\\n  width: -moz-fit-content !important;\\n  width: fit-content !important; }\\n\\n.forgot-card .ui-widget-content {\\n  background-color: transparent;\\n  border: none; }\\n\"","/**\r\n * @author Philipp Grenz\r\n * this component allows the user to request a reset link\r\n */\r\nimport { Component, EventEmitter, OnInit, Output, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DatabaseService } from '../../services/database.service';\r\nimport { DataService } from '../../services/data.service';\r\nimport { UserManagerService } from '../../services/usermanager.service';\r\nimport { ProjectService } from '../../services/project.service';\r\nimport { Message } from 'primeng/api';\r\nimport { UNAUTHORIZED } from 'http-status-codes';\r\nimport { Project } from '../../models/frontend/project';\r\n\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  userId: string;\r\n  protected msgs: Array<Message> = [];\r\n  private ROLEDEVELOPER = 'developer';\r\n  private ROLEENDUSER = 'enduser';\r\n  private project: Project;\r\n\r\n  constructor(private  router: Router, private databaseService: DatabaseService,\r\n              private dataService: DataService, private usermanager: UserManagerService, private projectService: ProjectService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  /**\r\n   * sends the email the user entered to the backend\r\n   * @param email the email address of the user\r\n   */\r\n  requestReset(email: string): void {\r\n    this.usermanager.requestResetLinkUser(email)\r\n      .subscribe(result => {\r\n          this.msgs.push(\r\n          {severity: 'success', summary: 'Sent Email', detail: 'A reset Link has been sent to your email address. You will be redirected to the login page'});\r\n          setTimeout(() => {\r\n            this.router.navigate(['']);\r\n          },\r\n            5000);\r\n        }\r\n        , err => {\r\n          if (err.status === UNAUTHORIZED) {\r\n            this.msgs.push({\r\n              severity: 'error',\r\n              summary: 'Error',\r\n              detail: err['error']\r\n            });\r\n          } else {\r\n            this.msgs.push({\r\n              severity: 'error',\r\n              summary: 'Error',\r\n              detail: 'Error sending email. Please contact the system administrator.'\r\n            });\r\n          }\r\n          console.log('Error while login. ', err['error']);\r\n        });\r\n  }\r\n}\r\n","module.exports = \"<p-growl [value]=\\\"homeMsgs\\\" [sticky]=\\\"true\\\"></p-growl>\\r\\n<cookie-law learnMore=\\\"/#privacyPolicy\\\" position=\\\"top\\\"></cookie-law>\\r\\n\\r\\n<div class=\\\"containerHomePage\\\">\\r\\n\\t<div id=\\\"logincard\\\" class=\\\"home-card ui-grid ui-grid-responsive\\\">\\r\\n    <h1 style=\\\"text-align: center;\\\">Welcome to</h1>\\r\\n\\t\\t<a href=\\\"\\\">\\r\\n\\t\\t\\t<img style=\\\"text-align: center; padding-bottom: 25px; width: 35%; margin: auto\\\" class=\\\"ui-grid-row\\\" src=\\\"assets/img/clickdigitallogo_white.svg\\\">\\r\\n\\t\\t</a>\\r\\n    <p-tabMenu id=\\\"tabMenu\\\" #tabMenu></p-tabMenu>\\r\\n\\r\\n\\t\\t<br/>\\r\\n    <p-scrollPanel [style]=\\\"{height: '70%'}\\\">\\r\\n      <ng-container #tab></ng-container>\\r\\n    </p-scrollPanel>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".containerHomePage {\\n  width: 100vw;\\n  height: 100vh;\\n  background-image: url('bcklogin.jpg');\\n  background-size: cover;\\n  background-attachment: fixed; }\\n\\n.home-card {\\n  align-content: center;\\n  width: available;\\n  height: available;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  margin: 40px;\\n  background: rgba(96, 191, 161, 0.6);\\n  border: none;\\n  padding: 15px; }\\n\\n#logincard {\\n  color: #FFFFFF !important; }\\n\\n.home-card .ui-tabmenu .ui-tabmenu-nav {\\n  display: flex;\\n  justify-content: center;\\n  background-color: transparent; }\\n\\n.home-card .ui-widget-content {\\n  background-color: transparent;\\n  border: none; }\\n\\n.home-card .ui-tabmenuitem {\\n  background: #297E60 !important;\\n  border-color: #297E60 !important; }\\n\\n.home-card .ui-tabmenuitem.ui-state-active {\\n  background: #297E60 !important;\\n  border-color: #FFFFFF !important; }\\n\\n.home-card .ui-confirmdialog {\\n  top: 50% !important;\\n  left: 50% !important; }\\n\"","import { Component, OnInit, ViewEncapsulation, ViewContainerRef, ComponentFactoryResolver, ViewChild} from '@angular/core';\r\nimport { Message, MenuItem, ConfirmationService} from 'primeng/api';\r\nimport { TabMenuModule } from 'primeng/tabmenu';\r\nimport { ActivatedRoute, Router, NavigationStart} from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { CookieLawModule } from 'angular2-cookie-law';\r\n\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { CreateUserComponent } from '../create-user/create-user.component';\r\nimport { PrivacyPolicyComponent } from '../privacyPolicy/privacyPolicy.component';\r\nimport { ForgotPasswordComponent } from '../forgot-password/forgot-password.component';\r\nimport { ResetPasswordComponent } from '../reset-password/reset-password.component';\r\nimport { ConfirmComponent } from '../confirm/confirm.component';\r\nimport { ImprintComponent } from '../imprint/imprint.component';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [ConfirmationService, CookieService]\r\n})\r\n\r\n/**\r\n*\tadd new menu item:\r\n*\tstep 1: declare method (for menu items), important the suffix \"MI\" must be included in the method name\r\n*\tstep 2: return an object in the properties similar to MenuModule (attributes not contained in MenuModule, e.g. \"component\", must be specified)\r\n*\r\n*   forwarding: if you do not want to display a page, but want to be redirected to one, you must set \"component\" to null and adjust \"navigateTo\" accordingly\r\n*/\r\n\r\nexport class HomeComponent implements OnInit {\r\n  @ViewChild('cookieLaw') cookieLaw;\r\n  @ViewChild('tabMenu') tabMenu;\r\n  @ViewChild('tab', {read: ViewContainerRef}) tab: ViewContainerRef;\r\n  protected homeMsgs: Array<Message> = [];\r\n  private availableMenuItems = {};\r\n\r\n  constructor(private cookieService: CookieService, private confirmationService: ConfirmationService, private router: Router, private componentFactoryResolver: ComponentFactoryResolver, private viewContainerRef: ViewContainerRef, private route: ActivatedRoute) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initTabMenu();\r\n    this.initMenuItem();\r\n    this.initCookiepopup();\r\n  }\r\n\r\n  /**\r\n   * this method returns an object which is responsible for creating the menu item \"Login\"\r\n   *\r\n   * @return object\r\n   */\r\n  private loginMI() {\r\n    return {\r\n      'key': 'login',\r\n      'label': ' Login',\r\n      'icon': 'fa fa-sign-in',\r\n      'component': LoginComponent\r\n    }\r\n  }\r\n\r\n  /**\r\n   * this method returns an object which is responsible for creating the menu item \"Create User\"\r\n   *\r\n   * @return object\r\n   */\r\n  private createUserMI() {\r\n    return {\r\n      'key': 'createUser',\r\n      'label': ' Create User',\r\n      'icon': 'fa fa-user',\r\n      'component': CreateUserComponent\r\n    }\r\n  }\r\n\r\n  /**\r\n   * this method returns an object which is responsible for creating the menu item \"Data Privacy Policy\"\r\n   *\r\n   * @return object\r\n   */\r\n  private privacyPolicyMI() {\r\n    return {\r\n      'key': 'privacyPolicy',\r\n      'label': ' Data Privacy Policy',\r\n      'icon': 'fa fa-info-circle',\r\n      'component': PrivacyPolicyComponent\r\n    }\r\n  }\r\n\r\n   /**\r\n   * this method returns an object that is responsible for forwarding to the \"/acp\" page\r\n   *\r\n   * @return object\r\n   */\r\n  private privacyPolicyMgmtMI() {\r\n    return {\r\n      'key': 'acp',\r\n      'label': ' Privacy Policy Management Tools',\r\n      'icon': 'fa fa-plus',\r\n      'visible': false,\r\n      'navigateTo': '/acp'\r\n    }\r\n  }\r\n\r\n  /**\r\n   * this method returns an object which is responsible for creating the menu item \"Imprint\"\r\n   *\r\n   * @return object\r\n   */\r\n  private ImprintMI() {\r\n    return {\r\n      'key': 'imprint',\r\n      'label': ' Imprint',\r\n      'icon': 'far fa-info-circle',\r\n      'component': ImprintComponent\r\n    }\r\n  }\r\n\r\n  /**\r\n   * this method ensures that the \"Forgot Password\" page is only visible via the \"/#forgotPassword\" link\r\n   *\r\n   * @return object\r\n   */\r\n  private forgotPasswordMI() {\r\n    return {\r\n      'key': 'forgotPassword',\r\n      'label': ' Forgot Password',\r\n      'visible': false,\r\n      'component': ForgotPasswordComponent\r\n    }\r\n  }\r\n\r\n  /**\r\n   * this method ensures that the \"Reset Password\" page is only visible via the \"/#resetPassword\" link\r\n   *\r\n   * @return object\r\n   */\r\n  private resetPasswordMI() {\r\n    return {\r\n      'key': 'resetPassword',\r\n      'label': ' Reset Password',\r\n      'visible': false,\r\n      'component': ResetPasswordComponent\r\n    }\r\n  }\r\n\r\n  /**\r\n   * this method ensures that the \"Confirm Email\" page is only visible via the \"/#confirmEmail\" link\r\n   *\r\n   * @return object\r\n   */\r\n  private confirmEmailMI() {\r\n    return {\r\n      'key': 'confirmEmail',\r\n      'label': ' Confirm Email',\r\n      'visible': false,\r\n      'component': ConfirmComponent\r\n    }\r\n  }\r\n\r\n  /**\r\n   * URL content is adapted so that further processing of the fragments can function without problems\r\n   *\r\n   * @return string url without parameters\r\n   */\r\n  private getPreparedURL():string {\r\n    let url = this.route.snapshot.fragment;\r\n    if (url == null) url = '';\r\n    url = url.split('?')[0]; //Parameterangaben abschneiden\r\n    return url;\r\n  }\r\n\r\n\r\n  /**\r\n   * in this method, any method that has a suffix \"MI\" is called and its return values are stored in the variable \"availableMenuItems\"\r\n   * in addition, for each menu item and sub-item an event listener is declared which ensures that the corresponding component is loaded and the URL is adjusted accordingly\r\n   */\r\n  private initTabMenu() {\r\n    var prototypes = Object.getPrototypeOf(this);\r\n    for (var funcName in prototypes) {\r\n      if (funcName.substr(-2) === 'MI') {\r\n        const item = this[funcName]();\r\n        if (typeof(item) === 'object') {\r\n          this.availableMenuItems[item.key] = item;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.tabMenu.model = [];\r\n    for (var obj in this.availableMenuItems) {\r\n      var item = this.availableMenuItems[obj];\r\n\r\n      //Eventdeklaration\r\n      item.command = (function(key){\r\n        return function() {\r\n          this.loadComponent(key);\r\n        }\r\n      })(obj).bind(this);\r\n\r\n      this.tabMenu.model.push(item);\r\n    }\r\n  }\r\n\r\n  private initMenuItem() {\r\n    this.setMenuItem(this.getPreparedURL());\r\n\r\n    this.route.fragment.subscribe(\r\n      (fragments) => this.setMenuItem(this.getPreparedURL())\r\n    );\r\n  }\r\n\r\n  /**\r\n   * processing options when user accepting the cookie hint\r\n   */\r\n  private initCookiepopup() {\r\n    if (this.cookieService.get('acquiesced') === '') {\r\n    }\r\n  }\r\n\r\n /**\r\n   * sets the currently viewed menu item and loads the corresponding component\r\n   *\r\n   * @param key which MenuItem is to be loaded\r\n   */\r\n  private setMenuItem(key:string) {\r\n    const menuItem = this.getMenuItem(key == '' ? Object.keys(this.availableMenuItems)[0] : key);\r\n\r\n    if (menuItem != null) {\r\n      this.tabMenu.activeItem = menuItem;\r\n      this.loadComponent(menuItem.key);\r\n    } else {\r\n      this.homeMsgs.push({\r\n        severity: 'error',\r\n        summary: 'Error',\r\n        detail: 'key <b>' + key + '</b> is invalid'\r\n      });\r\n    }\r\n  }\r\n\r\n  private getMenuItem(key:string) {\r\n    return this.availableMenuItems[key];\r\n  }\r\n\r\n  /**\r\n   * this method ensures that the content of the component is displayed or that you are redirected to a specific page\r\n   *\r\n   * @param key which MenuItem is to be loaded\r\n   */\r\n  private loadComponent(key:string) {\r\n    this.tab.remove(this.tab.length);\r\n\r\n    const menuItem = this.getMenuItem(key);\r\n    const component = menuItem.component;\r\n    if (component != null) {\r\n      const factory = this.componentFactoryResolver.resolveComponentFactory(component);\r\n      const componentRef = this.tab.createComponent(factory);\r\n    } else {\r\n      if (menuItem.navigateTo != null) {\r\n        this.router.navigateByUrl(menuItem.navigateTo);\r\n      } else {\r\n        this.homeMsgs.push({\r\n          severity: 'error',\r\n          summary: 'Error',\r\n          detail: 'component of <b>' + key + '</b> is undefined'\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"<div style=\\\"white-space:  pre-line; color: white;\\\">\\r\\n<div style=\\\"background: rgba(0, 0, 0, 0.5); font-weight: bold\\\">Editorial Notes</div>\\r\\nThe Fraunhofer Institute for Fraunhofer-Institut für Graphische Datenverarbeitung (Fraunhoferstraße 5, 64283 Darmstadt).<br/>\\r\\nis a constituent entity of the Fraunhofer-Gesellschaft, and as such has no separate legal status.\\r\\n\\r\\nFraunhofer-Gesellschaft \\r\\nzur Förderung der angewandten Forschung e.V.\\r\\nHansastraße 27 c\\r\\n80686 München\\r\\nPhone: +49 89 1205- 0\\r\\nFax: +49 89 1205-7531 \\r\\nwww.fraunhofer.de\\r\\n<br/>\\r\\n<b>VAT Identification Number</b> in accordance with §27 a VAT Tax Act: DE 129515865\\r\\n<br/>\\r\\n<div style=\\\"background: rgba(0, 0, 0, 0.5); font-weight: bold\\\">Court of jurisdiction</div>\\r\\nAmtsgericht  München (district court)\\r\\nRegistered nonprofit association \\r\\nRegistration no. VR 4461 \\r\\n<br/>\\r\\nResponsible editor: XXX\\r\\nxxx@xxx.fraunhofer.de\\r\\n<br/>\\r\\n<div style=\\\"background: rgba(0, 0, 0, 0.5); font-weight: bold\\\">Executive Board</div>\\r\\nProf. Dr.-Ing. Reimund Neugebauer, President, Corporate Policy and Research, Technology Marketing and Business Models Management\\r\\nProf. Dr. Alexander Kurz, Human Resources, Legal Affairs and IP Management\\r\\nDipl.-Kfm. Andreas Meuer, Controlling and Digital Business Processes\\r\\n<br/>\\r\\n<div style=\\\"background: rgba(0, 0, 0, 0.5); font-weight: bold\\\">Usage Rights</div>\\r\\nCopyright © by\\r\\nFraunhofer-Gesellschaft\\r\\nAll rights reserved. \\r\\nAll copyright for this Web site are owned in full by the Fraunhofer-Gesellschaft. \\r\\n<br/>\\r\\nPermission is granted to download or print material published on this site for personal use only. Its use for any other purpose, and in particular its commercial use or distribution, are strictly forbidden in the absence of prior written approval. Please address your requests for approval to:<br/>\\r\\n<br/>\\r\\nFraunhofer Institute for Fraunhofer-Institut für Graphische Datenverarbeitung<br/>\\r\\nFraunhoferstraße 5<br/>\\r\\n64283 Darmstadt\\r\\n<br/>\\r\\nNotwithstanding this requirement, material may be downloaded or printed for use in connection with press reports on the activities of the Fraunhofer-Gesellschaft and its constituent institutes, on condition that the following terms are complied with:\\r\\n<br/>\\r\\nNo alterations may be made to pictorial content, with the exception of framing modifications to emphasize the central motif. The source must be quoted and two free reference copies must be sent to the above-mentioned address. Such usage is free of charge.\\r\\n<br/>\\r\\n<div style=\\\"background: rgba(0, 0, 0, 0.5); font-weight: bold\\\">Disclaimer</div>\\r\\nWe cannot assume any liability for the content of external pages. Solely the operators of those linked pages are responsible for their content.\\r\\nWe make every reasonable effort to ensure that the content of this Web site is kept up to date, and that it is accurate and complete. Nevertheless, the possibility of errors cannot be entirely ruled out. We do not give any warranty in respect of the timeliness, accuracy or completeness of material published on this Web site, and disclaim all liability for (material or non-material) loss or damage incurred by third parties arising from the use of content obtained from the Web site.\\r\\nRegistered trademarks and proprietary names, and copyrighted text and images, are not generally indicated as such on our Web pages. But the absence of such indications in no way implies that these names, images or text belong to the public domain in the context of trademark or copyright law.\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit, ViewEncapsulation} from '@angular/core';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-imprint',\r\n  templateUrl: './imprint.component.html',\r\n  styleUrls: ['./imprint.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\n\r\nexport class ImprintComponent implements OnInit { \r\n  \r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\t\r\n  }\r\n}","module.exports = \" <p-growl [(value)]=\\\"msgs\\\"></p-growl>\\r\\n\\r\\n  <div style=\\\"text-align: center\\\" class=\\\"ui-grid-row\\\">\\r\\n    <span style=\\\"color: white; margin: auto\\\">Please enter your Credentials</span><br><br>\\r\\n  </div>\\r\\n  <div style=\\\"text-align: center\\\" id=\\\"form\\\" class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\">\\r\\n      <!-- login input fields -->\\r\\n      <div style=\\\"text-align: center\\\" class=\\\"ui-grid-row\\\">\\r\\n        <div style=\\\"margin: auto\\\" class=\\\"inputgroup ui-inputgroup ui-grid-col-6\\\">\\r\\n          <span style=\\\"background: transparent; border: none; margin-left: auto\\\" class=\\\"ui-inputgroup-addon\\\"><i style=\\\"color: white\\\" class=\\\"fa fa-user\\\"></i></span>\\r\\n          <input style=\\\"margin-right: auto\\\" #username type=\\\"text\\\" pInputText placeholder=\\\"Username\\\" (keyup.enter)=\\\"login(username.value, password.value)\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n    <div style=\\\"text-align: center\\\" class=\\\"ui-grid-row\\\">\\r\\n    <div style=\\\"margin: auto\\\" class=\\\"inputgroup ui-inputgroup ui-grid-col-6\\\">\\r\\n      <span style=\\\"background: transparent; border: none; margin-left: auto\\\" class=\\\"ui-inputgroup-addon\\\"><i style=\\\"color: white\\\" class=\\\"fa fa-lock\\\"></i></span>\\r\\n      <input style=\\\"margin-right: auto\\\"  #password type=\\\"password\\\" pInputText placeholder=\\\"Password\\\" (keyup.enter)=\\\"login(username.value, password.value)\\\">\\r\\n    </div>\\r\\n    </div>\\r\\n      <!-- login button -->\\r\\n      <div class=\\\"ui-g\\\">\\r\\n      <div class=\\\"ui-g-12\\\" style=\\\"text-align: center\\\">\\r\\n      <button style=\\\"margin: auto; background-color: #297E60; border: none\\\" class=\\\"button\\\" pButton type=\\\"submit\\\" label=\\\"Login\\\" (click)=\\\"login(username.value, password.value)\\\"(keyup.enter)=\\\"login(username.value, password.value)\\\" [disabled]=\\\"this.loginsLeft <= 0\\\">\\r\\n      </button>\\r\\n    </div>\\r\\n      <div class=\\\"ui-g-12\\\" style=\\\"text-align: center\\\">\\r\\n      <button style=\\\"margin: auto;background-color: #297E60; border: none\\\" class=\\\"button\\\" pButton type=\\\"submit\\\" label=\\\"Forgot Password?\\\" *ngIf=\\\"this.loginsLeft <= 0\\\" (click)=\\\"this.router.navigate(['/'], {fragment: 'forgotPassword'})\\\">\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"loading-indicator\\\" style=\\\"text-align: center;\\\" *ngIf=\\\"isLoading\\\">\\r\\n      <p-progressSpinner [style]=\\\"{width: '50px', height: '50px'}\\\" strokeWidth=\\\"8\\\"></p-progressSpinner>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\"","module.exports = \".containerLoginPage {\\n  width: 100%;\\n  height: 100%;\\n  background-image: url('bcklogin.jpg');\\n  background-size: cover; }\\n\\n.card-login {\\n  align-content: center;\\n  width: 45vh;\\n  height: -webkit-fit-content;\\n  height: -moz-fit-content;\\n  height: fit-content;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  margin: auto;\\n  background: rgba(96, 191, 161, 0.6);\\n  border: 0.5px;\\n  border-style: solid;\\n  border-color: rgba(255, 255, 255, 0.3);\\n  padding: 15px; }\\n\\n.inputgroup {\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  margin-top: 4px;\\n  margin-bottom: 4px; }\\n\\n.button {\\n  margin: auto;\\n  width: -webkit-fit-content !important;\\n  width: -moz-fit-content !important;\\n  width: fit-content !important; }\\n\\n.loading-indicator {\\n  position: fixed;\\n  z-index: 999;\\n  height: 2em;\\n  width: 2em;\\n  overflow: show;\\n  margin: auto;\\n  top: 0;\\n  left: 0;\\n  bottom: 0;\\n  right: 0; }\\n\\n/* Transparent Overlay */\\n\\n.loading-indicator:before {\\n  content: '';\\n  display: block;\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  background-color: rgba(0, 0, 0, 0.53); }\\n\\n@-webkit-keyframes ui-progress-spinner-color {\\n  100%,\\n  0% {\\n    stroke: #60bfa1; } }\\n\\n@keyframes ui-progress-spinner-color {\\n  100%,\\n  0% {\\n    stroke: #60bfa1; } }\\n\"","/**\r\n * @author Chinaedu Onwukwe, Janina Hüther\r\n * This component helps to login a user. It sends the data to the backend and handles the exceptions.\r\n * If none it requests te data for the specific user and binds it to the models.\r\n */\r\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DatabaseService } from '../../services/database.service';\r\nimport { DataService } from '../../services/data.service';\r\nimport { UserManagerService } from '../../services/usermanager.service';\r\nimport { ProjectService } from '../../services/project.service';\r\nimport { Message } from 'primeng/api';\r\nimport { UNAUTHORIZED } from 'http-status-codes';\r\nimport { User } from '../../models/frontend/user';\r\nimport { ProjectDB } from '../../models/database/project';\r\nimport { DashboardDB } from '../../models/database/dashboard';\r\nimport { SheetDB } from '../../models/database/sheet';\r\nimport { Project } from '../../models/frontend/project';\r\nimport { Dashboard } from '../../models/frontend/dashboard';\r\nimport { Sheet } from '../../models/frontend/sheet';\r\nimport { Widget, WidgetType} from '../../models/frontend/widget';\r\n\r\nimport { ToggleWidget } from \"../../models/frontend/togglewidget\";\r\nimport { SliderWidget } from \"../../models/frontend/sliderwidget\";\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  userId: string;\r\n  protected msgs: Array<Message> = [];\r\n  private ROLEDEVELOPER = 'developer';\r\n  private ROLEENDUSER = 'enduser';\r\n  private project: Project;\r\n  public loginsLeft: number;\r\n  protected isLoading: boolean;\r\n  constructor(private  router: Router, private databaseService: DatabaseService,\r\n              private dataService: DataService, private usermanager: UserManagerService, private projectService: ProjectService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loginsLeft = 2;\r\n    this.isLoading = false;\r\n  }\r\n\r\n  /**\r\n   * This method is called when the user clicks on the login button.\r\n   * It requests the backend to validate the user login data. It receives the {@link User#id}\r\n   * @param email the email address of the user\r\n   * @param password the password of the user\r\n   */\r\n  login(username: string, password: string): void {\r\n    if (this.loginsLeft <= 0) {\r\n    return; }\r\n    this.isLoading = true;\r\n    this.usermanager.loginUser(username, password)\r\n      .subscribe(result => {\r\n          this.userId = result['userId'];\r\n          this.loadUserData();\r\n        }\r\n        , err => {\r\n        this.isLoading = false;\r\n        console.log(this.loginsLeft);\r\n        this.loginsLeft -= 1;\r\n        if (err.status === UNAUTHORIZED) {\r\n            this.msgs.push({\r\n              severity: 'error',\r\n              summary: 'Error',\r\n              detail: err['error']\r\n            });\r\n          } else {\r\n            this.msgs.push({\r\n              severity: 'error',\r\n              summary: 'Error',\r\n              detail: 'Error while login. Please contact the system administrator.'\r\n            });\r\n          }\r\n        console.log('Error while login. ', err['error']);\r\n        });\r\n  }\r\n\r\n  /**\r\n   * This method loads the specific user data from the database.\r\n   */\r\n  private loadUserData(): void {\r\n    this.databaseService.getDocument(this.databaseService.USERSCOLLECTION , this.userId)\r\n      .subscribe((user: User) => {\r\n          if (user.role === this.ROLEDEVELOPER) {\r\n            this.dataService.changeLoginStatus(2);\r\n          } else if (user.role === this.ROLEENDUSER) {\r\n            this.dataService.changeLoginStatus(1);\r\n          }\r\n          console.log(user.projects[0]);\r\n          this.dataService.changeLoginUUID(user.id);\r\n          this.dataService.changeUserData(user);\r\n          this.projectService.loadNewProject(user.projects[0], true); // TODO zuletzt bearbeitetes projekt laden\r\n        },\r\n        err => {\r\n          console.log('Error loading user data from database ', err);\r\n        });\r\n\r\n  }\r\n\r\n  /**\r\n   * This method loads all project specific data and maps it to a global observable variable.\r\n   * @param projectId the id to load\r\n   */\r\n\r\n}\r\n","module.exports = \"<div class=\\\"containerPolicyPage\\\">\\r\\n\\t<object data=\\\"assets/GDPR_Compliance_Statement_Template.pdf\\\" width=\\\"100%\\\" height=\\\"100%\\\" type='application/pdf'>\\r\\n\\t</object>\\r\\n</div>\\r\\n\"","module.exports = \".containerPolicyPage {\\n  color: white;\\n  height: 100%;\\n  text-align: center; }\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-privacy',\r\n  templateUrl: './privacyPolicy.component.html',\r\n  styleUrls: ['./privacyPolicy.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class PrivacyPolicyComponent implements OnInit {\r\n\r\n  constructor() {\r\n   \r\n  }\r\n\r\n  ngOnInit(): void {\r\n\t\r\n  }\r\n  \r\n}\r\n","module.exports = \"\\r\\n  <p-growl [(value)]=\\\"msgs\\\"></p-growl>\\r\\n  <div class=\\\"containerResetPasswordPage\\\">\\r\\n    <div class=\\\"reset-card ui-grid ui-grid-responsive\\\">\\r\\n      <h1 style=\\\"color:white; text-align:center;\\\">Reset password</h1>\\r\\n    <form [formGroup]=\\\"resetform\\\" (ngSubmit)=\\\"setNewPassword(resetform.value['password'])\\\">\\r\\n\\r\\n      <div style=\\\"text-align: center\\\" class=\\\"ui-grid-row\\\">\\r\\n        <span style=\\\"color: white; margin: auto\\\">Please enter your new Password</span><br><br>\\r\\n      </div>\\r\\n      <div style=\\\"text-align: center\\\" id=\\\"form\\\" class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\">\\r\\n        <!-- login input fields -->\\r\\n        <div style=\\\"text-align: center\\\" class=\\\"ui-grid-row\\\">\\r\\n          <div style=\\\"margin: auto\\\" class=\\\"inputgroup ui-inputgroup ui-grid-col-6\\\">\\r\\n            <span style=\\\"background: transparent; border-color: white; margin-left: auto\\\" class=\\\"ui-inputgroup-addon\\\"><i style=\\\"color: white\\\" class=\\\"fa fa-lock\\\"></i></span>\\r\\n            <input style=\\\"margin-right: auto\\\" formControlName=\\\"password\\\" #password type=\\\"password\\\" pInputText placeholder=\\\"new Password\\\">\\r\\n            <div>\\r\\n              <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!resetform.controls['password'].valid&&resetform.controls['password'].dirty\\\">\\r\\n                <span *ngIf=\\\"resetform.controls['password'].errors['required']\\\">required</span>\\r\\n                <span *ngIf=\\\"resetform.controls['password'].errors['minlength']\\\">password has to be longer</span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div style=\\\"text-align: center\\\" class=\\\"ui-grid-row\\\">\\r\\n          <div style=\\\"margin: auto\\\" class=\\\"inputgroup ui-inputgroup ui-grid-col-6\\\">\\r\\n            <span style=\\\"background: transparent; border-color: white; margin-left: auto\\\" class=\\\"ui-inputgroup-addon\\\"><i style=\\\"color: white\\\" class=\\\"fa fa-lock\\\"></i></span>\\r\\n            <input style=\\\"margin-right: auto\\\" formControlName=\\\"passwordrepetition\\\" type=\\\"password\\\" pInputText placeholder=\\\"repeat new Password\\\">\\r\\n            <div>\\r\\n              <div style=\\\"width: fit-content\\\" class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!resetform.controls['passwordrepetition'].valid&&resetform.controls['passwordrepetition'].dirty\\\">\\r\\n                <span>non-matching passwords</span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- login button -->\\r\\n        <div style=\\\"text-align: center\\\" class=\\\"ui-grid-row\\\">\\r\\n          <button style=\\\"margin: auto; background-color: #2B9E81; border: none\\\" class=\\\"button\\\" pButton type=\\\"submit\\\" label=\\\"Confirm\\\" [disabled]=\\\"!resetform.valid\\\">\\r\\n          </button><br><br><br>\\r\\n        </div>\\r\\n          <div style=\\\"text-align: center\\\" class=\\\"ui-grid-row\\\">\\r\\n          </div>\\r\\n      </div>\\r\\n    </form>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\"","module.exports = \".containerResetPasswordPage {\\n  width: 100%;\\n  height: 100%;\\n  background-image: url('bcklogin.jpg');\\n  background-size: cover; }\\n\\n.reset-card {\\n  align-content: center;\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  height: -webkit-fit-content;\\n  height: -moz-fit-content;\\n  height: fit-content;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  margin: auto;\\n  background: rgba(96, 191, 161, 0.6);\\n  border: 0.5px;\\n  border-style: solid;\\n  border-color: rgba(255, 255, 255, 0.3);\\n  padding: 15px; }\\n\\n.inputgroup {\\n  opacity: 0.5;\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  margin-top: 4px;\\n  margin-bottom: 4px; }\\n\\n.button {\\n  margin: auto;\\n  width: -webkit-fit-content !important;\\n  width: -moz-fit-content !important;\\n  width: fit-content !important; }\\n\\n.reset-card .ui-widget-content {\\n  background-color: transparent;\\n  border: none; }\\n\"","/**\r\n * @author Philipp Grenz\r\n * This component allows the user to reset their password\r\n */\r\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DatabaseService } from '../../services/database.service';\r\nimport { DataService } from '../../services/data.service';\r\nimport { UserManagerService } from '../../services/usermanager.service';\r\nimport { ProjectService } from '../../services/project.service';\r\nimport { Message } from 'primeng/api';\r\nimport { UNAUTHORIZED } from 'http-status-codes';\r\nimport { Project } from '../../models/frontend/project';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { matchOtherValidator } from '../../custom-validation';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n  userId: string;\r\n  protected msgs: Array<Message> = [];\r\n  private ROLEDEVELOPER = 'developer';\r\n  private ROLEENDUSER = 'enduser';\r\n  private project: Project;\r\n  protected resetform: FormGroup;\r\n  private token: string;\r\n\r\n  constructor(private router: Router, private databaseService: DatabaseService,\r\n              private dataService: DataService, private usermanager: UserManagerService, private projectService: ProjectService,\r\n              private fb: FormBuilder, private route: ActivatedRoute) {\r\n   \r\n\tthis.route.fragment.subscribe(fragment => {\r\n\t  fragment = fragment.split('?')[1];\r\n      var params = new URLSearchParams(fragment);\r\n\t  this.token = params.get('token');\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.resetform = this.fb.group({\r\n      password: new FormControl('', Validators.compose([Validators.required, Validators.minLength(6)])),\r\n      passwordrepetition: new FormControl('', Validators.compose([Validators.required, matchOtherValidator('password')]))\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This method sends the new password the user entered to the backend\r\n   * @param password the users new password\r\n   */\r\n  setNewPassword(password: string): void {\r\n    this.usermanager.resetPassword(password, this.token)\r\n      .subscribe(result => {\r\n          this.msgs.push(\r\n          {severity: 'success', summary: 'Password reset', detail: 'Your Password has been reset successfully. You will be redirected to the login page.'});\r\n          setTimeout(() => {\r\n              this.router.navigate(['']);\r\n            },\r\n            5000);\r\n        }\r\n        , err => {\r\n          if (err.status === UNAUTHORIZED) {\r\n            this.msgs.push({\r\n              severity: 'error',\r\n              summary: 'Error',\r\n              detail: err['error']\r\n            });\r\n          } else {\r\n            this.msgs.push({\r\n              severity: 'error',\r\n              summary: 'Error',\r\n              detail: err['error']\r\n            });\r\n          }\r\n          console.log('Error while resetting Password. ', err['error']);\r\n        });\r\n  }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  websocketProtocol: 'ws://',\r\n  // environment variables set in assets/env.js\r\n  httpMode: window['env']['httpMode'],\r\n  baseUrl: window['env']['baseUrl'],\r\n  contextRoot:  window['env']['contextRoot'],\r\n  // keycloak configuration\r\n  keycloakUrl: window['env']['keycloakUrl'] ,\r\n  keycloakRealm:  window['env']['keycloakRealm'] ,\r\n  addressedKeycloakClientId: window['env']['addressedKeycloakClientId']\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { Keycloak } from 'keycloak-angular';\r\n\r\nimport 'hammerjs';\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\n// keycloak init options\r\nconst initOptions = {\r\n  // url: 'https://aiotes.igd.fraunhofer.de:8081/auth', realm: 'activage', clientId: 'tools-user-login'\r\n  url: environment.keycloakUrl, realm: environment.keycloakRealm, clientId: environment.addressedKeycloakClientId\r\n}\r\n\r\nconst keycloak = Keycloak(initOptions);\r\n\r\n// tslint:disable-next-line:newline-per-chained-call\r\nkeycloak.init({ onLoad: 'login-required' }).success(auth => {\r\n  if (!auth) {\r\n    window.location.reload();\r\n  } else {\r\n    console.log('Authenticated');\r\n  }\r\n\r\n  // bootstrap after authentication is successful.\r\n  platformBrowserDynamic()\r\n    .bootstrapModule(AppModule)\r\n    .then(success => console.log(success))\r\n    .catch(err => console.error(err));\r\n\r\n  localStorage.setItem('ang-token', keycloak.token);\r\n  localStorage.setItem('ang-refresh-token', keycloak.refreshToken);\r\n\r\n  setInterval(() => {\r\n    keycloak.updateToken(5)\r\n      .success(refreshed => {\r\n      if (refreshed) {\r\n        console.log('Token refreshed', refreshed);\r\n      } else {\r\n        console.warn('Token not refreshed, valid for ',\r\n           Math.round(keycloak.tokenParsed.exp + keycloak.timeSkew - new Date().getTime() / 1000) + ' seconds');\r\n      }\r\n    })\r\n      .error(() => {\r\n      console.error('Failed to refresh token');\r\n    });\r\n  }, 300000);\r\n})\r\n  .error(() => {\r\n  console.error('Keycloak Authentication Failed');\r\n});\r\n"],"sourceRoot":""}